<Type Name="EventProviderTraceListener" FullName="System.Diagnostics.Eventing.EventProviderTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8e0e01f146bafc3357be1843abdd97ae1a957a1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30398887" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventProviderTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProviderTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProviderTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventProviderTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a81d3-101">ETW 하위 시스템에 이벤트를 쓰는 <see cref="T:System.Diagnostics.TraceSource" />에 대한 수신기입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a81d3-101">A listener for <see cref="T:System.Diagnostics.TraceSource" /> that writes events to the ETW subsytem.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a81d3-102">원본 이벤트에서 모든 이벤트 데이터 (trace 또는 debug)을 문자열로 ETW 하위 시스템에 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-102">All event data (trace or debug) from the source event is written to the ETW subsystem as a string.</span></span> <span data-ttu-id="a81d3-103">쉼표를 사용 하 여 데이터 요소 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-103">The data elements are delimited using a comma.</span></span> <span data-ttu-id="a81d3-104">서로 다른 구분 기호를 지정 하려면 사용 된 <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-104">To specify a different delimiter, use the <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> property.</span></span>  
  
 <span data-ttu-id="a81d3-105">수신기를 추가 <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> ETW 하위 시스템 공급자를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-105">Adding the listener to <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registers the provider with the ETW subsystem.</span></span> <span data-ttu-id="a81d3-106">ETW 추적 세션을 로그 파일에는 이벤트를 쓸 Logman.exe 실행 가능한 프로그램 (또는 이와 유사한)를 사용 하 여 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-106">You must create an ETW trace session using the Logman.exe executable program (or something similar) to write the events to a log file.</span></span>  
  
 <span data-ttu-id="a81d3-107">이벤트 데이터는 단일 문자열 때문에 이벤트 수신기를 사용 하 여 매니페스트가 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-107">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="a81d3-108">호출 하는 경우는 <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> 전달 하면 이벤트를 기록 하는 메서드는 <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> 열거형 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-108">When you call the <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> methods to write events, you pass a <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration value.</span></span> <span data-ttu-id="a81d3-109">열거형에는 수준과 키워드 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-109">The enumeration contains both level and keyword values.</span></span> <span data-ttu-id="a81d3-110">ETW 세션에서 추적 수신기 공급자를 사용 하도록 설정 하면 사용자가 지정한 수준 값 값일 수는 다음 중 하 나와 연결 된 <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> 열거형 값:</span><span class="sxs-lookup"><span data-stu-id="a81d3-110">When you enable a trace listener provider from an ETW session, the level value that you specify can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="a81d3-111">중요 한 (값 = 1)</span><span class="sxs-lookup"><span data-stu-id="a81d3-111">Critical (value is 1)</span></span>  
  
-   <span data-ttu-id="a81d3-112">오류 (값은 2)</span><span class="sxs-lookup"><span data-stu-id="a81d3-112">Error (value is 2)</span></span>  
  
-   <span data-ttu-id="a81d3-113">(값은 8) 정보</span><span class="sxs-lookup"><span data-stu-id="a81d3-113">Information (value is 8)</span></span>  
  
-   <span data-ttu-id="a81d3-114">자세한 정보 (값은 16)</span><span class="sxs-lookup"><span data-stu-id="a81d3-114">Verbose (value is 16)</span></span>  
  
-   <span data-ttu-id="a81d3-115">경고 (값은 4)</span><span class="sxs-lookup"><span data-stu-id="a81d3-115">Warning (value is 4)</span></span>  
  
 <span data-ttu-id="a81d3-116">세션에는 다음 중 하 나와 연결 된 값 수에 대해 지정 하는 키워드 값 <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> 열거형 값:</span><span class="sxs-lookup"><span data-stu-id="a81d3-116">The keyword value that you specify for the session can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="a81d3-117">다시 시작 (값 2, 048은 하는 데 사용)</span><span class="sxs-lookup"><span data-stu-id="a81d3-117">Resume (value is 2,048)</span></span>  
  
-   <span data-ttu-id="a81d3-118">시작 (값이 256)</span><span class="sxs-lookup"><span data-stu-id="a81d3-118">Start (value is 256)</span></span>  
  
-   <span data-ttu-id="a81d3-119">중지 (값은 512)</span><span class="sxs-lookup"><span data-stu-id="a81d3-119">Stop (value is 512)</span></span>  
  
-   <span data-ttu-id="a81d3-120">일시 중단 (값 1, 024은 하는 데 사용)</span><span class="sxs-lookup"><span data-stu-id="a81d3-120">Suspend (value is 1,024)</span></span>  
  
-   <span data-ttu-id="a81d3-121">전송 (값은 4, 096)</span><span class="sxs-lookup"><span data-stu-id="a81d3-121">Transfer (value is 4,096)</span></span>  
  
   
  
## Examples  
  
```  
private static Guid providerId = new Guid("{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}");  
  
    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), "Test Listener", "::");  
  
    // You should use the All default level and control the level using the  
    // ETW session; otherwise, you may not log all the events requested by the  
    // session.  
    TraceSource source = new TraceSource("MyProvider", SourceLevels.All);  
  
    source.Listeners.Add(listener);  
  
    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { "abc", "def", true, 123 });  
  
    source.TraceEvent(TraceEventType.Warning, 12, "Provider guid: {0}", new object[] { providerId });  
  
    source.TraceInformation("string {0}, bool {1}, int {2}, ushort {3}", new object[] { "abc", false, 123, (UInt32)5 });  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a81d3-122">
            <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-122">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="a81d3-123">공급자를 식별하는 고유 문자열 <see cref="T:System.Guid" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-123">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-124">지정된 공급자 식별자를 사용하여 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-124">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="a81d3-125">공급자를 식별하는 고유 문자열 <see cref="T:System.Guid" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-125">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="a81d3-126">수신기의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-126">Name of the listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-127">지정된 공급자 식별자 및 수신기 이름을 사용하여 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-127">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier and name of the listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String, delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name, System::String ^ delimiter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId">
          <span data-ttu-id="a81d3-128">공급자를 식별하는 고유 문자열 <see cref="T:System.Guid" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-128">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="a81d3-129">수신기의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-129">Name of the listener.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="a81d3-130">이벤트 데이터를 구분하는 데 사용되는 구분 기호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-130">Delimiter used to delimit the event data.</span>
          </span>
          <span data-ttu-id="a81d3-131">자세한 내용은 <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> 속성을 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-131">(For more details, see the <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> property.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-132">지정된 공급자 식별자, 수신기 이름 및 구분 기호를 사용하여 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier, name of the listener, and delimiter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a81d3-133">더 이상 추적 또는 디버깅 출력을 받지 않도록 출력 스트림을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-133">Closes the output stream so it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a81d3-134">ETW 하위 시스템에 기록된 이벤트 데이터를 구분하는 데 사용되는 구분 기호를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-134">Gets and sets the delimiter used to delimit the event data that is written to the ETW subsystem.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a81d3-135">이벤트 데이터를 구분하는 데 사용되는 구분 기호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-135">The delimiter used to delimit the event data.</span>
          </span>
          <span data-ttu-id="a81d3-136">기본 구분 기호는 쉼표입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-136">The default delimiter is a comma.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a81d3-137">수신기는 데이터 요소를 문자열로 변환한 다음 연결 문자열을 지정된 된 구분 기호를 사용 하 여 문자열의 각 데이터 요소 구분 합니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-137">The listener converts the data elements to strings and then concatenates the strings together, using the specified delimiter to delimit each data element in the string.</span></span> <span data-ttu-id="a81d3-138">그런 다음 문자열은 ETW 하위 시스템의 이벤트 데이터를로 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-138">The string is then written as the event data in the ETW subsystem.</span></span>  
  
 <span data-ttu-id="a81d3-139">문자열을 성공적으로 구문 분석 하려면 소비자는 데 사용 된 구분 기호를 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-139">To successfully parse the string, the consumer must know the delimiter that was used.</span></span>  
  
 <span data-ttu-id="a81d3-140">포함 되 면 데이터는 다음에 쉼표를 포함할 수 있는 이벤트 데이터를 올바르게 구문 분석할 수 있도록 적절 한 구분 기호를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-140">If the data contains a string that may contain a comma, specify an appropriate delimiter, so that the event data can be correctly parsed.</span></span>  
  
 <span data-ttu-id="a81d3-141">이벤트 데이터는 단일 문자열 때문에 이벤트 수신기를 사용 하 여 매니페스트가 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a81d3-141">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="a81d3-142">구분 기호를 사용 하 여 기록 된 이벤트 데이터에 적용 된 <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a81d3-142">The delimiter applies to event data written using the <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a81d3-143">내보낼 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-143">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="a81d3-144">내보낼 자세한 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-144">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-145">
            <see cref="T:System.Diagnostics.TraceListener" /> 클래스를 구현할 때 만든 수신기에 오류 메시지 및 자세한 오류 메시지를 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-145">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override sealed void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a81d3-146">출력 버퍼를 플러시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-146">Flushes the output buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a81d3-147">추적 수신기에서 지원하는 사용자 지정 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-147">Gets the custom attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a81d3-148">추적 수신기에서 지원하는 사용자 지정 특성의 이름을 지정하는 문자열 배열을 반환하며, 사용자 지정 특성이 없으면 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-148">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override sealed bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadSafe { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a81d3-149">추적 수신기가 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-149">Gets a value indicating whether the trace listener is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a81d3-150">추적 수신기가 스레드로부터 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-150">
              <see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a81d3-151">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a81d3-152">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-152">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a81d3-153">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-153">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a81d3-154">추적을 발생시킨 이벤트의 형식을 지정하는 <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-154">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a81d3-155">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-155">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a81d3-156">내보낼 추적 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-156">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-157">추적 정보, 데이터 개체 및 이벤트 정보를 수신기별 출력에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-157">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a81d3-158">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-158">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a81d3-159">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-159">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a81d3-160">추적을 발생시킨 이벤트의 형식을 지정하는 <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-160">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a81d3-161">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-161">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="a81d3-162">데이터로 내보낼 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-162">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-163">추적 정보, 데이터 개체 및 이벤트 정보를 수신기별 출력에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-163">Writes trace information, a data object and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a81d3-164">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-164">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a81d3-165">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-165">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a81d3-166">추적을 발생시킨 이벤트의 형식을 지정하는 <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-166">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a81d3-167">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-167">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-168">추적 및 이벤트 정보를 수신기별 출력에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-168">Writes trace and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a81d3-169">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-169">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a81d3-170">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-170">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a81d3-171">추적을 발생시킨 이벤트의 형식을 지정하는 <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-171">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a81d3-172">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-172">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="a81d3-173">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-173">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-174">추적 정보, 메시지 및 이벤트 정보를 수신기별 출력에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-174">Writes trace information, a message, and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a81d3-175">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-175">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a81d3-176">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-176">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="a81d3-177">추적을 발생시킨 이벤트의 형식을 지정하는 <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-177">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a81d3-178">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-178">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="a81d3-179">
            <c>args</c> 배열에 들어 있는 개체에 해당하는 0개 이상의 서식 항목이 포함된 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-179">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="a81d3-180">형식을 지정할 개체가 0개 이상 포함된 <see langword="object" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-180">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-181">추적 정보, 서식 지정된 개체 배열 및 이벤트 정보를 수신기별 출력에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-181">Writes trace information, a formatted array of objects and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="a81d3-182">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-182">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="a81d3-183">출력을 식별하는 데 사용되는 이름이며 일반적으로 추적 이벤트를 생성한 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-183">A name used to identify the output, typically the name of the application that generated the trace event.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="a81d3-184">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-184">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="a81d3-185">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-185">A message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="a81d3-186">관련 작업을 식별하는 <see cref="T:System.Guid" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-186">A <see cref="T:System.Guid" /> object identifying a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-187">추적 정보, 메시지, 관련 작업 ID 및 이벤트 정보를 수신기별 출력에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-187">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override sealed void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a81d3-188">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-188">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-189">파생 클래스에서 재정의되는 경우 지정된 메시지를 파생 클래스에서 만든 수신기에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-189">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override sealed void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a81d3-190">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-190">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a81d3-191">파생 클래스에서 재정의되는 경우 파생 클래스에서 만든 수신기에 메시지를 쓴 다음 줄 종결자를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a81d3-191">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>