<Type Name="IListContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IListContract&lt;C&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6692cfcfb27a1b3fd98eac28b64ae843b5d07169" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53232498" /></Metadata><TypeSignature Language="C#" Value="public interface IListContract&lt;C&gt; : System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;, System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt; where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.Collections.ICollectionContract`1&lt;!C&gt;, class System.AddIn.Contract.Collections.IEnumerableContract`1&lt;!C&gt;, class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of C)&#xA;Implements ICollectionContract(Of C), IEnumerableContract(Of C)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IListContract : System::AddIn::Contract::Collections::ICollectionContract&lt;C&gt;, System::AddIn::Contract::Collections::IEnumerableContract&lt;C&gt;" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface ICollectionContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IEnumerableContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C"><span data-ttu-id="42f66-101">목록에 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-101">The type of objects in the list.</span></span> <span data-ttu-id="42f66-102"><paramref name="C" />는 <see cref="T:System.AddIn.Contract.IContract" /> 인터페이스를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-102"><paramref name="C" /> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span></span></typeparam>
    <summary><span data-ttu-id="42f66-103">인덱스별로 각각 액세스할 수 있는 <see cref="T:System.AddIn.Contract.IContract" /> 개체의 제네릭 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-103">Represents a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that can be individually accessed by index.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public C GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'C" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="42f66-104">가져올 요소의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-104">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="42f66-105">지정한 인덱스의 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-105">Returns the element at the specified index.</span></span></summary>
        <returns><span data-ttu-id="42f66-106">지정한 인덱스의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-106">The element at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42f66-107"><xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> 메서드는 지정된 된 인덱스에 있는 요소를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-107">The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index.</span></span> <span data-ttu-id="42f66-108">요소를 제거 하는 <xref:System.AddIn.Contract.Collections.IListContract%601>를 사용 하 여를 <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="42f66-108">To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="42f66-109"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-109"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="42f66-110">또는</span><span class="sxs-lookup"><span data-stu-id="42f66-110">-or-</span></span> 
 <span data-ttu-id="42f66-111"><paramref name="index" />가 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-111"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As C) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(C item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'C -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="42f66-112"><see cref="T:System.AddIn.Contract.IContract" />에서 찾을 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-112">The <see cref="T:System.AddIn.Contract.IContract" /> to locate in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></param>
        <summary><span data-ttu-id="42f66-113"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" />에서 특정 요소의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-113">Returns the index of a specific element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></summary>
        <returns><span data-ttu-id="42f66-114">목록에 있으면 <paramref name="item" />의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-114">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, C item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'C -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="42f66-115"><paramref name="item" />를 삽입할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-115">The zero-based index at which to insert <paramref name="item" />.</span></span></param>
        <param name="item"><span data-ttu-id="42f66-116"><see cref="T:System.AddIn.Contract.IContract" />에 삽입할 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-116">The <see cref="T:System.AddIn.Contract.IContract" /> to insert in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span></span></param>
        <summary><span data-ttu-id="42f66-117"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" />의 지정한 인덱스에 요소를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-117">Inserts an element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42f66-118">호출한 후 <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, 삽입 지점 다음에 오는 요소는 새 요소를 수용 하기 위해 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-118">After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element.</span></span> <span data-ttu-id="42f66-119">이동 되는 요소의 인덱스도 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-119">The indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="42f66-120">지정된 된 인덱스에서 요소를 대체 하려면 사용 된 <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="42f66-120">To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="42f66-121">결정할 여부를 <xref:System.AddIn.Contract.Collections.IListContract%601> 읽기 전용인 지를 호출 합니다 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="42f66-121">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="42f66-122"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-122"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="42f66-123">또는</span><span class="sxs-lookup"><span data-stu-id="42f66-123">-or-</span></span> 
 <span data-ttu-id="42f66-124"><paramref name="index" />가 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-124"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="42f66-125"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-125">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="42f66-126">제거할 요소의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-126">The index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="42f66-127">지정된 인덱스에 있는 요소를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-127">Removes the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42f66-128">호출한 후 <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, 제거 된 요소 다음에 오는 요소 이동 하 여 빈된 지점을 차지 합니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-128">After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot.</span></span> <span data-ttu-id="42f66-129">이동 되는 요소의 인덱스도 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-129">The indexes of the elements that are moved are also updated.</span></span>  
  
 <span data-ttu-id="42f66-130">결정할 여부를 <xref:System.AddIn.Contract.Collections.IListContract%601> 읽기 전용인 지를 호출 합니다 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="42f66-130">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="42f66-131"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-131"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="42f66-132">또는</span><span class="sxs-lookup"><span data-stu-id="42f66-132">-or-</span></span> 
 <span data-ttu-id="42f66-133"><paramref name="index" />가 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-133"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="42f66-134"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-134">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, C value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !C value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, value As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, C value);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'C -&gt; unit" Usage="iListContract.SetItem (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="C" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="42f66-135">요소를 설정할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-135">The zero-based index at which to set the element.</span></span></param>
        <param name="value"><span data-ttu-id="42f66-136">지정된 인덱스에 설정할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-136">The element to set at the specified index.</span></span></param>
        <summary><span data-ttu-id="42f66-137">지정한 인덱스에 있는 요소를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-137">Replaces the element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42f66-138"><xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> 메서드는 지정된 된 인덱스에 요소를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="42f66-138">The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index.</span></span> <span data-ttu-id="42f66-139">요소를 추가 하는 <xref:System.AddIn.Contract.Collections.IListContract%601>를 사용 하 여를 <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="42f66-139">To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="42f66-140">결정할 여부를 <xref:System.AddIn.Contract.Collections.IListContract%601> 읽기 전용인 지를 호출 합니다 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="42f66-140">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="42f66-141"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-141"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="42f66-142">또는</span><span class="sxs-lookup"><span data-stu-id="42f66-142">-or-</span></span> 
 <span data-ttu-id="42f66-143"><paramref name="index" />가 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-143"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="42f66-144"><see cref="T:System.AddIn.Contract.Collections.IListContract`1" />이 읽기 전용인 경우</span><span class="sxs-lookup"><span data-stu-id="42f66-144">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>