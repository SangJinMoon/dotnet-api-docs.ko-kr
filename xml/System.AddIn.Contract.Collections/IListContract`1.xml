<Type Name="IListContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IListContract&lt;C&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb3f2725c055be9beaaddcc82e425f12e583a83b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36716216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListContract&lt;C&gt; : System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;, System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt; where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.Collections.ICollectionContract`1&lt;!C&gt;, class System.AddIn.Contract.Collections.IEnumerableContract`1&lt;!C&gt;, class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of C)&#xA;Implements ICollectionContract(Of C), IEnumerableContract(Of C)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IListContract : System::AddIn::Contract::Collections::ICollectionContract&lt;C&gt;, System::AddIn::Contract::Collections::IEnumerableContract&lt;C&gt;" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'C (requires 'C :&gt; IContract)&gt; = interface&#xA;    interface ICollectionContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IEnumerableContract&lt;'C (requires 'C :&gt; IContract)&gt;&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">
      <span data-ttu-id="8b842-101">목록에 있는 개체의 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b842-101">The type of objects in the list.</span>
      </span>
      <span data-ttu-id="8b842-102">
        <c>C</c> 구현 해야 합니다는 <see cref="T:System.AddIn.Contract.IContract" /> 인터페이스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b842-102">
          <c>C</c> must implement the <see cref="T:System.AddIn.Contract.IContract" /> interface.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="8b842-103">Represents a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that can be individually accessed by index.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b842-103">Represents a generic collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that can be individually accessed by index.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public C GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'C" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="8b842-104">The zero-based index of the element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-104">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b842-105">Returns the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-105">Returns the element at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b842-106">The element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-106">The element at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b842-107"><xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> 메서드는 지정된 된 인덱스에 있는 요소를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="8b842-107">The <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> method does not remove the element at the specified index.</span></span> <span data-ttu-id="8b842-108">요소를 제거 하는 <xref:System.AddIn.Contract.Collections.IListContract%601>를 사용 하 여는 <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b842-108">To remove an element from the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="8b842-109">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-109">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="8b842-110">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-110">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As C) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(C item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'C -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="8b842-111">The <see cref="T:System.AddIn.Contract.IContract" /> to locate in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-111">The <see cref="T:System.AddIn.Contract.IContract" /> to locate in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b842-112">Returns the index of a specific element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-112">Returns the index of a specific element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8b842-113">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-113">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, C item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'C -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="8b842-114">The zero-based index at which to insert <c>item</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-114">The zero-based index at which to insert <c>item</c>.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="8b842-115">The <see cref="T:System.AddIn.Contract.IContract" /> to insert in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-115">The <see cref="T:System.AddIn.Contract.IContract" /> to insert in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b842-116">Inserts an element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-116">Inserts an element in the <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b842-117">호출한 후 <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, 삽입 지점 다음에 오는 이동 하 여 새 요소로 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="8b842-117">After you call <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, the elements that follow the insertion point move to accommodate the new element.</span></span> <span data-ttu-id="8b842-118">이동 되는 요소의 인덱스도 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b842-118">The indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="8b842-119">지정된 된 인덱스에 있는 요소를 대체 하려면 사용 하 여는 <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b842-119">To replace an element at a specified index, use the <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="8b842-120">확인 하려면 여부는 <xref:System.AddIn.Contract.Collections.IListContract%601> 는 읽기 전용 호출에서 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b842-120">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="8b842-121">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-121">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="8b842-122">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-122">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b842-123">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-123">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="8b842-124">The index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-124">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b842-125">Removes the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-125">Removes the element at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b842-126">호출한 후 <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, 제거 된 요소 다음에 오는 이동 하 여 빈된 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="8b842-126">After you call <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, the elements that follow the removed element move to occupy the vacated spot.</span></span> <span data-ttu-id="8b842-127">이동 되는 요소의 인덱스도 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8b842-127">The indexes of the elements that are moved are also updated.</span></span>  
  
 <span data-ttu-id="8b842-128">확인 하려면 여부는 <xref:System.AddIn.Contract.Collections.IListContract%601> 는 읽기 전용 호출에서 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b842-128">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="8b842-129">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-129">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="8b842-130">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-130">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b842-131">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-131">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, C value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !C value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, value As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, C value);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'C -&gt; unit" Usage="iListContract.SetItem (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="C" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="8b842-132">The zero-based index at which to set the element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-132">The zero-based index at which to set the element.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8b842-133">The element to set at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-133">The element to set at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b842-134">Replaces the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-134">Replaces the element at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b842-135"><xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> 메서드는 지정된 된 인덱스에 요소를 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="8b842-135">The <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> method replaces the element at the specified index.</span></span> <span data-ttu-id="8b842-136">요소를 추가 하는 <xref:System.AddIn.Contract.Collections.IListContract%601>를 사용 하 여는 <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b842-136">To add an element to the <xref:System.AddIn.Contract.Collections.IListContract%601>, use the <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="8b842-137">확인 하려면 여부는 <xref:System.AddIn.Contract.Collections.IListContract%601> 는 읽기 전용 호출에서 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8b842-137">To determine whether an <xref:System.AddIn.Contract.Collections.IListContract%601> is read-only, call the <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="8b842-138">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-138">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="8b842-139">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-139">-or-  <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8b842-140">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b842-140">The <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>