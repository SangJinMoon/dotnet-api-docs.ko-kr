<Type Name="IListContract&lt;C&gt;" FullName="System.AddIn.Contract.Collections.IListContract&lt;C&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bbcd03e45af027ede0ff7d474b85c97490be981d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30359337" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListContract&lt;C&gt; : System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;, System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt; where C : IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;(class System.AddIn.Contract.IContract) C&gt; implements class System.AddIn.Contract.Collections.ICollectionContract`1&lt;!C&gt;, class System.AddIn.Contract.Collections.IEnumerableContract`1&lt;!C&gt;, class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Collections.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of C)&#xA;Implements ICollectionContract(Of C), IEnumerableContract(Of C)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename C&gt;&#xA; where C : IContractpublic interface class IListContract : System::AddIn::Contract::Collections::ICollectionContract&lt;C&gt;, System::AddIn::Contract::Collections::IEnumerableContract&lt;C&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="C">
      <Constraints>
        <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.ICollectionContract&lt;C&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.AddIn.Contract.Collections.IEnumerableContract&lt;C&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="C">목록에 있는 개체의 형식입니다. <c>C</c> 구현 해야 합니다는 <see cref="T:System.AddIn.Contract.IContract" /> 인터페이스입니다.</typeparam>
    <summary>인덱스별로 각각 액세스할 수 있는 <see cref="T:System.AddIn.Contract.IContract" /> 개체의 제네릭 컬렉션을 나타냅니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public C GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !C GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As C" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; C GetItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>C</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">가져올 요소의 0부터 시작하는 인덱스입니다.</param>
        <summary>지정한 인덱스의 요소를 반환합니다.</summary>
        <returns>지정한 인덱스의 요소입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AddIn.Contract.Collections.IListContract%601.GetItem%2A> 메서드는 지정된 된 인덱스에 있는 요소를 제거 하지 않습니다. 요소를 제거 하는 <xref:System.AddIn.Contract.Collections.IListContract%601>를 사용 하 여는 <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" />가 0보다 작은 경우  
  
 또는  
  
 <paramref name="index" />가 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As C) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(C item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.AddIn.Contract.IContract" />에서 찾을 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />입니다.</param>
        <summary>
          <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />에서 특정 요소의 인덱스를 반환합니다.</summary>
        <returns>목록에 있으면 <paramref name="item" />의 인덱스이고, 그렇지 않으면 -1입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, C item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !C item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, C item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="C" />
      </Parameters>
      <Docs>
        <param name="index">
          <c>항목</c>을 삽입할 인덱스(0부터 시작)입니다.</param>
        <param name="item">
          <see cref="T:System.AddIn.Contract.IContract" />에 삽입할 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />입니다.</param>
        <summary>
          <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />의 지정한 인덱스에 요소를 삽입합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출한 후 <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A>, 삽입 지점 다음에 오는 이동 하 여 새 요소로 적용 합니다. 이동 되는 요소의 인덱스도 업데이트 됩니다. 지정된 된 인덱스에 있는 요소를 대체 하려면 사용 하 여는 <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> 메서드.  
  
 확인 하려면 여부는 <xref:System.AddIn.Contract.Collections.IListContract%601> 는 읽기 전용 호출에서 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" />가 0보다 작은 경우  
  
 또는  
  
 <paramref name="index" />가 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />이 읽기 전용인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">제거할 요소의 인덱스입니다.</param>
        <summary>지정된 인덱스에 있는 요소를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출한 후 <xref:System.AddIn.Contract.Collections.IListContract%601.RemoveAt%2A>, 제거 된 요소 다음에 오는 이동 하 여 빈된 자리를 채웁니다. 이동 되는 요소의 인덱스도 업데이트 됩니다.  
  
 확인 하려면 여부는 <xref:System.AddIn.Contract.Collections.IListContract%601> 는 읽기 전용 호출에서 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" />가 0보다 작은 경우  
  
 또는  
  
 <paramref name="index" />가 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />이 읽기 전용인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, C value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !C value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, value As C)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, C value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="C" />
      </Parameters>
      <Docs>
        <param name="index">요소를 설정할 인덱스(0부터 시작)입니다.</param>
        <param name="value">지정된 인덱스에 설정할 요소입니다.</param>
        <summary>지정한 인덱스에 있는 요소를 바꿉니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AddIn.Contract.Collections.IListContract%601.SetItem%2A> 메서드는 지정된 된 인덱스에 요소를 바꿉니다. 요소를 추가 하는 <xref:System.AddIn.Contract.Collections.IListContract%601>를 사용 하 여는 <xref:System.AddIn.Contract.Collections.IListContract%601.Insert%2A> 메서드.  
  
 확인 하려면 여부는 <xref:System.AddIn.Contract.Collections.IListContract%601> 는 읽기 전용 호출에서 <xref:System.AddIn.Contract.Collections.ICollectionContract%601.GetIsReadOnly%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="index" />가 0보다 작은 경우  
  
 또는  
  
 <paramref name="index" />가 <see cref="M:System.AddIn.Contract.Collections.ICollectionContract`1.GetCount" />의 반환 값보다 크거나 같은 경우</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.AddIn.Contract.Collections.IListContract`1" />이 읽기 전용인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>