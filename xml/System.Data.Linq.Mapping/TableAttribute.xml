<Type Name="TableAttribute" FullName="System.Data.Linq.Mapping.TableAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bac18b077e2a113bda817def056a591fab7a1e3c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30385377" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.TableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TableAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2f57f-101">클래스를 데이터베이스 테이블과 연결된 엔터티 클래스로 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f57f-101">Designates a class as an entity class that is associated with a database table.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f57f-102">클래스를 데이터베이스 테이블 또는 데이터베이스 뷰와 연결된 엔터티 클래스로 지정하려면 이 특성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-102">Use this attribute to designate a class as an entity class that is associated with a database table or view.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="2f57f-103"> 클래스에서는 처리는 <xref:System.Data.Linq.Mapping.TableAttribute> 영구 클래스로 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-103"> treats classes that have the <xref:System.Data.Linq.Mapping.TableAttribute> attribute as persistent classes.</span></span>  
  
 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="2f57f-104"> 단일 테이블 매핑만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-104"> supports only single-table mapping.</span></span> <span data-ttu-id="2f57f-105">즉, 정확히 하나의 데이터베이스 테이블에 엔터티 클래스 매핑되어야 하 고 동시에 여러 클래스를 데이터베이스 테이블을 매핑할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-105">That is, an entity class must be mapped to exactly one database table, and you cannot map a database table to multiple classes at the same time.</span></span>  
  
 <span data-ttu-id="2f57f-106">사용할 수 있습니다는 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> 의 속성은 <xref:System.Data.Linq.Mapping.TableAttribute> 테이블에 대 한 이름을 지정 하는 특성 및 테이블 이름을 정규화 할 스키마 이름을 선택적으로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-106">You can use the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property of the <xref:System.Data.Linq.Mapping.TableAttribute> attribute to specify a name for the table, and you can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="2f57f-107">사용 하 여 이름을 지정 하지 않는 경우는 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> 속성을 테이블 이름은 클래스 이름과 동일 하 게 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-107">If you do not specify a name by using the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> property, the table name is assumed to be the same as the class name.</span></span>  
  
## <a name="schema-qualified-names"></a><span data-ttu-id="2f57f-108">이름 스키마 한정</span><span class="sxs-lookup"><span data-stu-id="2f57f-108">Schema-qualified Names</span></span>  
 <span data-ttu-id="2f57f-109">필요에 따라 테이블 이름을 정규화 할 스키마 이름을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-109">You can optionally use the schema name to qualify a table name.</span></span> <span data-ttu-id="2f57f-110">기본적으로 첫 번째 기간의 왼쪽에 토큰의 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> 문자열은 스키마 이름이 될 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-110">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name.</span></span> <span data-ttu-id="2f57f-111">이름의 나머지 부분에서는 테이블 이름이 될 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-111">The remainder of the name is considered to be the table name.</span></span> <span data-ttu-id="2f57f-112">공급자는 적절 하 게 테이블 이름을 따옴표로합니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-112">The provider quotes the table name as appropriate.</span></span> <span data-ttu-id="2f57f-113">예를 들어는 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] SQL Server 용 공급자 대괄호가 사용 이상 필요할 경우에 있게 합니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-113">For example, the [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] provider for SQL Server makes sure that brackets are used at least where they are needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f57f-114">경우에 따라 SQL Server 공급자 없습니다 자동 견적 때문에 특성을 명시적으로 인용 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-114">In some cases, you must explicitly quote attributes because the SQL Server provider cannot auto-quote.</span></span> <span data-ttu-id="2f57f-115">다음 표에서 몇 가지 예를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-115">The following table shows some examples.</span></span>  
  
|<span data-ttu-id="2f57f-116">Case</span><span class="sxs-lookup"><span data-stu-id="2f57f-116">Case</span></span>|<span data-ttu-id="2f57f-117">예: 식별자 이름</span><span class="sxs-lookup"><span data-stu-id="2f57f-117">Example: Identifier Name</span></span>|<span data-ttu-id="2f57f-118">예: 특성에 필요한 문자열</span><span class="sxs-lookup"><span data-stu-id="2f57f-118">Example: Expected String in Attributes</span></span>|<span data-ttu-id="2f57f-119">그렇지 않은 경우...</span><span class="sxs-lookup"><span data-stu-id="2f57f-119">Otherwise…</span></span>|  
|----------|------------------------------|--------------------------------------------|----------------|  
|<span data-ttu-id="2f57f-120">스키마 이름에 마침표가</span><span class="sxs-lookup"><span data-stu-id="2f57f-120">Schema name contains a period</span></span>|<span data-ttu-id="2f57f-121">스키마: "A.B"</span><span class="sxs-lookup"><span data-stu-id="2f57f-121">Schema: "A.B"</span></span><br /><br /> <span data-ttu-id="2f57f-122">Table: "C"</span><span class="sxs-lookup"><span data-stu-id="2f57f-122">Table: "C"</span></span>|<span data-ttu-id="2f57f-123">"[A.B].C"</span><span class="sxs-lookup"><span data-stu-id="2f57f-123">"[A.B].C"</span></span>|<span data-ttu-id="2f57f-124">첫 번째 기간 테이블 이름을 스키마 이름 구분으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-124">The first period is assumed to separate the schema name from the table name.</span></span>|  
|<span data-ttu-id="2f57f-125">스키마/테이블 이름으로 시작 `@`</span><span class="sxs-lookup"><span data-stu-id="2f57f-125">Schema/Table name starts with `@`</span></span>|<span data-ttu-id="2f57f-126">"@SomeName"</span><span class="sxs-lookup"><span data-stu-id="2f57f-126">"@SomeName"</span></span>|<span data-ttu-id="2f57f-127">"[@SomeName]"</span><span class="sxs-lookup"><span data-stu-id="2f57f-127">"[@SomeName]"</span></span>|<span data-ttu-id="2f57f-128">매개 변수 이름으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-128">Assumed to be a parameter name.</span></span>|  
|<span data-ttu-id="2f57f-129">스키마로 시작 `[` 종료 `]`</span><span class="sxs-lookup"><span data-stu-id="2f57f-129">Schema starts with `[` and ends with `]`</span></span>|<span data-ttu-id="2f57f-130">"[Schema.Table]"</span><span class="sxs-lookup"><span data-stu-id="2f57f-130">"[Schema.Table]"</span></span>|<span data-ttu-id="2f57f-131">"[[Schema].[Table]]]"</span><span class="sxs-lookup"><span data-stu-id="2f57f-131">"[[Schema].[Table]]]"</span></span>|<span data-ttu-id="2f57f-132">따옴표가 없는 식별자에 따옴표 붙은 식별자와 유사합니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-132">The unquoted identifier resembles a quoted identifier.</span></span>|  
|<span data-ttu-id="2f57f-133">표도 시작 `[` 종료 `]`</span><span class="sxs-lookup"><span data-stu-id="2f57f-133">Table starts with `[` and ends with `]`</span></span>|<span data-ttu-id="2f57f-134">"[Table]"</span><span class="sxs-lookup"><span data-stu-id="2f57f-134">"[Table]"</span></span>|<span data-ttu-id="2f57f-135">"[[Table]]]"</span><span class="sxs-lookup"><span data-stu-id="2f57f-135">"[[Table]]]"</span></span>|<span data-ttu-id="2f57f-136">따옴표가 없는 식별자에 따옴표 붙은 식별자와 유사합니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-136">The unquoted identifier resembles a quoted identifier.</span></span>|  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.TableAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TableAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f57f-137">
            <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f57f-137">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.TableAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.TableAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f57f-138">테이블 또는 뷰의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f57f-138">Gets or sets the name of the table or view.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f57f-139">기본적으로 이 값은 클래스 이름과 동일합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f57f-139">By default, the value is the same as the name of the class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f57f-140">사용 하 여 이름을 지정 하지 않는 경우 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, 테이블 이름은 클래스 이름과 동일 하 게 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-140">If you do not specify a name by using <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A>, the table name is assumed to be the same as the class name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2f57f-141">필요에 따라 (예: Schema3.Table5) 테이블 이름을 정규화 하는 스키마 이름을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-141">You can optionally use a schema name to qualify the table name (for example, Schema3.Table5).</span></span> <span data-ttu-id="2f57f-142">기본적으로 첫 번째 기간의 왼쪽에 토큰의 <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> 스키마 이름과 테이블 이름에 나머지 문자열 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-142">By default, the token to the left of the first period in the <xref:System.Data.Linq.Mapping.TableAttribute.Name%2A> string is considered to be the schema name, and the rest to be the table name.</span></span>  
  
 <span data-ttu-id="2f57f-143">다음 예제에서는 기본 테이블 이름에에서 `Customer`를로 변경 `Customers`합니다.</span><span class="sxs-lookup"><span data-stu-id="2f57f-143">In the following example, the default table name, `Customer`, is changed to `Customers`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCustomize#1](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCustomize/cs/Program.cs#1)]
 [!code-vb[DLinqCustomize#1](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCustomize/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>