<Type Name="MetaDataMember" FullName="System.Data.Linq.Mapping.MetaDataMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fda3e3a9bfe9bcd6a7d6ef6f3f07f643270362e" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52613568" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetaDataMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaDataMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaDataMember" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaDataMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaDataMember abstract" />
  <TypeSignature Language="F#" Value="type MetaDataMember = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e5d25-101">도메인 개체의 필드 또는 속성과 데이터베이스 테이블 열 사이의 매핑을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5d25-101">Represents the mapping between a field or a property of a domain object into a column of a database table.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaDataMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaDataMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-102">
            <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Association">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAssociation Association" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Association As MetaAssociation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAssociation ^ Association { System::Data::Linq::Mapping::MetaAssociation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Association : System.Data.Linq.Mapping.MetaAssociation" Usage="System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAssociation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-103">이 멤버에 해당하는 <see cref="T:System.Data.Linq.Mapping.MetaAssociation" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-103">Gets the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-104">해당 <see cref="T:System.Data.Linq.Mapping.MetaAssociation" />이 있는 경우 이 항목이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-104">The corresponding <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> if one exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-105">이 속성에는 기본 키 관계에 외래 키와 같은 데이터베이스 연결을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-105">This property represents a database association like a foreign-key to primary-key relationship.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync" Usage="System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-106">이 멤버의 삽입 및 업데이트 작업과 관련된 다시 읽기 동작을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-106">Gets the read-back behavior for this member for insert and update operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-107">
            <see cref="T:System.Data.Linq.Mapping.AutoSync" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-107">An <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public abstract bool CanBeNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanBeNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-108">이 멤버의 값에 <see langword="null" /> 값을 할당할 수 있는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-108">Gets whether the value of this member can be assigned the <see langword="null" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-109">이 멤버에 <see langword="true" /> 값을 할당할 수 있으면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-109">
              <see langword="true" /> if this member can be assigned the <see langword="null" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-110">이 속성에 따라 다릅니다.는 <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> 속성인 편의 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-110">This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public abstract string DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DbType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string" Usage="System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-111">해당 데이터베이스 열의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-111">Gets the type of the corresponding database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-112">데이터베이스 열의 형식을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-112">The type of the database column as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-113">정확한 텍스트는 TRANSACT-SQL 테이블 선언 명령에서 열을 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-113">This will be the exact text used to define the column in a Transact-SQL table declaration command.</span></span> <span data-ttu-id="e5d25-114">그렇게 하지 정의 된 데이터베이스 열 형식 멤버 형식에서 유추 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-114">If not so defined, the database column type is inferred from the member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ DeclaringType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Data.Linq.Mapping.MetaType" Usage="System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-115">이 데이터 멤버가 들어 있는 <see cref="T:System.Data.Linq.Mapping.MetaType" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-115">Gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> that contains this data member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-116">현재 멤버가 들어 있는 메타 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-116">The meta-type that contains the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredSourceAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredSourceAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredSourceAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferredSourceAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-117">이 멤버의 지연된 소스를 가져오고 설정하는 데 사용되는 접근자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-117">Gets the accessor that is used to get and set the deferred source of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-118">이 멤버의 지연된 소스에 액세스하는 데 사용되는 접근자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-118">The accessor used to access the deferred source for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredValueAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredValueAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredValueAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferredValueAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-119">페치를 발생시키지 않고 이 멤버의 지연된 값을 가져오고 설정하는 데 사용되는 접근자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-119">Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-120">이 멤버의 지연된 값에 액세스하는 데 사용되는 접근자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-120">The accessor used to access the deferred value for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string" Usage="System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-121">계산된 열을 정의하는 식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-121">Gets the expression that defines a computed column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-122">계산된 열의 식을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-122">The expression for the computed column as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssociation">
      <MemberSignature Language="C#" Value="public abstract bool IsAssociation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssociation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAssociation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAssociation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssociation : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-123">이 멤버가 연결 관계를 정의하는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-123">Gets whether this member defines an association relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-124">이 멤버가 연결 관계를 정의하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-124">
              <see langword="true" /> if this member defines an association relationship; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public abstract bool IsDbGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDbGenerated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-125">이 멤버가 데이터베이스에서 자동으로 생성되는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-125">Gets whether this member is automatically generated by the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-126">이 멤버가 데이터베이스에서 자동으로 생성되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-126">
              <see langword="true" /> if this member is automatically generated by the database; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-127">자동으로 생성 된 멤버는 해당 데이터 행을 삽입 한 후에 즉시 동기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-127">Automatically generated members are synchronized immediately after the corresponding data row is inserted.</span></span> <span data-ttu-id="e5d25-128">값이 지원 되지 트리거에 의해 생성 키를 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-128">Insert trigger-generated key values are not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaredBy">
      <MemberSignature Language="C#" Value="public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclaredBy(class System.Data.Linq.Mapping.MetaType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDeclaredBy (type As MetaType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDeclaredBy(System::Data::Linq::Mapping::MetaType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsDeclaredBy : System.Data.Linq.Mapping.MetaType -&gt; bool" Usage="metaDataMember.IsDeclaredBy type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Linq.Mapping.MetaType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e5d25-129">확인할 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-129">The type to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d25-130">이 멤버가 지정된 형식으로 선언되는지 여부를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-130">Specifies whether this member is declared by the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d25-131">이 멤버가 지정된 형식으로 선언되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-131">
              <see langword="true" /> if this member is declared by the specified type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public abstract bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDeferred { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeferred : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-132">이 멤버를 지연 기준으로 로드하는 것이 기본 동작인지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-132">Gets whether the default behavior is to load this member on a deferred basis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-133">이 멤버가 기본적으로 지연 기준으로 로드되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-133">
              <see langword="true" /> if this member loaded on a deferred basis by default; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public abstract bool IsDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDiscriminator { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-134">이 멤버가 상속 판별자를 나타내는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-134">Gets whether this member represents the inheritance discriminator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-135">이 멤버가 상속 판별자를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-135">
              <see langword="true" /> if this member represents the inheritance discriminator; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-136">이 속성 수 `true` 멤버에 대 한 최대 하나의 최상위 클래스 계층 구조에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-136">This property can be `true` for at most one member of the topmost mapped class in a hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public abstract bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPersistent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-137">이 멤버가 열 또는 제약 조건에 매핑되는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-137">Gets whether this member is mapped to a column (or constraint).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-138">이 멤버가 열 또는 제약 조건에 매핑되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-138">
              <see langword="true" /> if this member is mapped to a column (or constraint); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-139">클래스에는 영구 및 비영구적 멤버 조합이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-139">A class may have a combination of persistent and non-persistent members.</span></span> <span data-ttu-id="e5d25-140">영구 멤버는 비 영구적인 멤버 매핑되지 않은 동안에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-140">Persistent members are mapped while non-persistent members are not mapped.</span></span> <span data-ttu-id="e5d25-141">매핑된 클래스에는 하나 이상의 영구 멤버가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-141">A mapped class must have at least one persistent member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-142">이 멤버가 형식 ID의 일부인지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-142">Gets whether this member is part of the type's identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-143">이 멤버가 형식 ID의 일부이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-143">
              <see langword="true" /> if this member is part of the type's identity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-144">이 속성이 `true`, 클래스 멤버 테이블의 고유 키의 일부인 열을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-144">If this property is `true`, the class member represents a column that is part of the table's unique key.</span></span> <span data-ttu-id="e5d25-145">클래스의 둘 이상의 멤버로이 속성을 지정할 수 있습니다 `true` 연관 된 열의 복합 키에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-145">More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns.</span></span> <span data-ttu-id="e5d25-146">엔터티 클래스를 하나 이상의 멤버에이 특성이 있어야 합니다 및 기본 키 또는 고유 키에 해당 테이블 또는 뷰에 매핑해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-146">For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="e5d25-147">그렇지 않은 경우 LINQ to SQL 데이터베이스에 변경 내용을 전송 하기 위해 읽기 전용으로 클래스의 인스턴스를 고려 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-147">Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.</span></span>  
  
 <span data-ttu-id="e5d25-148">사용 하 여 식별 된 열 집합이 <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> 기본 키 일 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-148">The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key.</span></span> <span data-ttu-id="e5d25-149">이러한 엔터티를 고유 하 게 식별 하는 집합을 단순히 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-149">They simply denote a set that uniquely identifies the entity.</span></span> <span data-ttu-id="e5d25-150">일반적인 대안 클러스터링 인덱스 열 또는 다른 고유 키 열을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-150">Common alternatives include clustering index columns or other unique key columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public abstract bool IsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsVersion { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool" Usage="System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-151">이 멤버가 행 버전이나 타임스탬프를 나타내는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-151">Gets whether this member represents the row version or timestamp.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-152">이 멤버가 행 버전이나 타임스탬프를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-152">
              <see langword="true" /> if this member represents the row version or timestamp; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-153">버전 번호가 증가 하 고 타임 스탬프 열에 연결 된 행이 업데이트 될 때마다 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-153">Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo LoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo LoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LoadMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ LoadMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadMethod : System.Reflection.MethodInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-154">로드 작업을 수행하는 데 사용되는 <see cref="T:System.Data.Linq.DataContext" /> 메서드를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-154">Gets the <see cref="T:System.Data.Linq.DataContext" /> method that is used to perform load operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-155">
            <see cref="T:System.Reflection.MethodInfo" />로 나타낸 로드 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-155">The load method as <see cref="T:System.Reflection.MethodInfo" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MappedName : string" Usage="System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-156">데이터베이스에 있는 열 또는 제약 조건의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-156">Gets the name of the column (or constraint) in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-157">문자열로 된 열 또는 제약 조건의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-157">The name of the column (or constraint) as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Member : System.Reflection.MemberInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-158">기본 <see cref="T:System.Reflection.MemberInfo" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-158">Gets the underlying <see cref="T:System.Reflection.MemberInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-159">멤버 특성 및 메타데이터 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-159">Member attribute and metadata information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor MemberAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ MemberAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-160">이 멤버의 값을 가져오거나 설정하는 데 사용되는 접근자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-160">Gets the accessor that is used to get or set the value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-161">접근자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-161">The accessor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-162">
            <see cref="T:System.Reflection.MemberInfo" /> 이름과 동일한 멤버의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-162">Gets the name of the member, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-163">
            <see cref="T:System.Reflection.MemberInfo" /> 이름과 동일한 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-163">The name, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public abstract int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-164">쿼리 결과의 기본 레이아웃에 있는 이 멤버의 서수 위치를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-164">Gets the ordinal position of this member in the default layout of query results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-165">서수 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-165">The ordinal position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor StorageAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ StorageAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageAccessor : System.Data.Linq.Mapping.MetaAccessor" Usage="System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-166">이 멤버의 저장소 값을 가져오거나 설정하는 데 사용되는 접근자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-166">Gets the accessor that is used to get or set the storage value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-167">이 멤버의 저장소 값에 대한 접근자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-167">The accessor for the storage value of this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo StorageMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo StorageMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ StorageMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageMember : System.Reflection.MemberInfo" Usage="System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-168">이 멤버에 대한 데이터를 저장하는 멤버를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-168">Gets the member that stores the data for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-169">저장소 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-169">The storage member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-170">이 멤버의 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-170">Gets the type of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-171">현재 멤버의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-171">The type of the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck" Usage="System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5d25-172">이 멤버의 낙관적 동시성 검사 정책을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-172">Gets the optimistic concurrency check policy for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5d25-173">
            <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d25-173">An <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> enum.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d25-174">버전 멤버 클래스에 없는 경우 (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> 로 설정 `true`), 검색은 현재 데이터베이스 상태를 사용 하 여 원래 멤버 값을 비교 하 여 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-174">If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.</span></span>  
  
 <span data-ttu-id="e5d25-175"><xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> 속성 LINQ to SQL에서 낙관적 동시성 충돌 감지를 구현 하는 방법을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-175">The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.</span></span> <span data-ttu-id="e5d25-176">이 속성을 사용 하 여 멤버만 <xref:System.Data.Linq.Mapping.UpdateCheck.Always> 또는 <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> 충돌 감지 하는 동안 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5d25-176">Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>