<Type Name="ColumnAttribute" FullName="System.Data.Linq.Mapping.ColumnAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8a4624d9da40123e3b355e2db0ee0c58fdbaded" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48687786" /></Metadata><TypeSignature Language="C#" Value="public sealed class ColumnAttribute : System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColumnAttribute extends System.Data.Linq.Mapping.DataAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ColumnAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColumnAttribute&#xA;Inherits DataAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColumnAttribute sealed : System::Data::Linq::Mapping::DataAttribute" />
  <TypeSignature Language="F#" Value="type ColumnAttribute = class&#xA;    inherit DataAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Linq.Mapping.DataAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b75a8-101">클래스를 데이터베이스 테이블의 열과 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-101">Associates a class with a column in a database table.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-102">엔터티 클래스의 멤버가 데이터베이스 테이블의 열을 나타내도록 지정하려면 이 특성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-102">Use this attribute to designate a member of an entity class to represent a column in a database table.</span></span> <span data-ttu-id="b75a8-103">모든 필드 또는 속성에이 특성을 적용할 수 있습니다 `public`, `private`, 또는 `internal`합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-103">You can apply this attribute to any field or property that is `public`, `private`, or `internal`.</span></span>  
  
 <span data-ttu-id="b75a8-104">열이 지속형 열은으로 식별 되는 해당 엔터티 클래스 멤버만 때 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] 데이터베이스에 변경 내용을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-104">Only those entity class members identified as columns are persisted when [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] saves changes to the database.</span></span>  
  
 <span data-ttu-id="b75a8-105">특성의 여러 속성을 구분 하려면 쉼표를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-105">Use commas to separate multiple properties on the attribute.</span></span>  
  
   
  
## Examples  
  
```vb  
<Table(Name:="Employees")>  _  
Public Class Employees  
    Private _LastName As String  
    ' …  
    <Column(Storage:="_LastName", DbType:="NVarChar(20) NOT NULL", _  
        CanBeNull:=false)> _  
    Public Property LastName() As String  
        Get  
            Return Me._LastName  
        End Get  
        Set  
            If ((Me._LastName = value) _  
                = false) Then  
                Me.OnPropertyChanging("LastName")  
                Me._LastName = value  
                Me.OnPropertyChanged("LastName")  
            End If  
        End Set  
    End Property  
End Class  
```  
  
```csharp  
[Table(Name="Employees")]  
public class Employees  
{  
    private string _LastName;      
    // …  
    [Column(Storage="_LastName", DbType="NVarChar(20) NOT NULL",   
        CanBeNull=false)]  
    public string LastName  
    {  
        get  
        {  
            return this._LastName;  
        }  
        set  
        {  
            if ((this._LastName != value))  
            {  
                this.OnPropertyChanging("LastName");  
                this._LastName = value;  
                this.OnPropertyChanged("LastName");  
            }  
        }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColumnAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColumnAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b75a8-106"><see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-106">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.AutoSync AutoSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); void set(System::Data::Linq::Mapping::AutoSync value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSync : System.Data.Linq.Mapping.AutoSync with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.AutoSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-107"><see cref="T:System.Data.Linq.Mapping.AutoSync" /> 열거형을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-107">Gets or sets the <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="b75a8-108"><see cref="T:System.Data.Linq.Mapping.AutoSync" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-108">The <see cref="T:System.Data.Linq.Mapping.AutoSync" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public bool CanBeNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanBeNull : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.CanBeNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-109">열이 null 값을 포함할 수 있는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-109">Gets or sets whether a column can contain null values.</span></span></summary>
        <value><span data-ttu-id="b75a8-110">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-110">Default = <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-111">이 값을 설정 하는 경우 `false`, 해당 열의 데이터는 null이 아닌 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-111">If you set this value to `false`, the data in the corresponding column is assumed to be non-null.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b75a8-112">이 속성에서 중복 되는 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> 편의 위해 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-112">This property is duplicated from the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property for convenience.</span></span> <span data-ttu-id="b75a8-113"><xref:System.Data.Linq.DataContext.CreateDatabase%2A> 메서드 사용은 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-113">The <xref:System.Data.Linq.DataContext.CreateDatabase%2A> method uses only the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property.</span></span> <span data-ttu-id="b75a8-114">열에 null 값을 포함할 수 있는지 여부를 지정 해야 이러한 이유로 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> 속성도 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-114">For this reason, you must specify whether a column can contain null values in the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property also.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public string DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DbType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-115">데이터베이스 열의 형식을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-115">Gets or sets the type of the database column.</span></span></summary>
        <value><span data-ttu-id="b75a8-116">TRANSACT-SQL 테이블 선언에는 열을 정의 하는 정확한 텍스트를 지정 하는 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-116">String value that specifies the exact text that defines the column in a Transact-SQL table declaration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-117">이 속성을 사용 하 여 Transact SQL 테이블 선언에는 열을 정의 하는 정확한 텍스트를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-117">Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.</span></span> <span data-ttu-id="b75a8-118">지정 합니다 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> 속성을 사용 하려는 경우에 <xref:System.Data.Linq.DataContext.CreateDatabase%2A> 데이터베이스의 인스턴스를 만들려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-118">Specify the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property only if you plan to use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to create an instance of the database.</span></span>  
  
 <span data-ttu-id="b75a8-119">기본값은 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> 멤버 형식에서 유추 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-119">The default value of <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> is inferred from the member type.</span></span> <span data-ttu-id="b75a8-120">자세한 내용은 [SQL-CLR 형식 매핑](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-120">For more information, see [SQL-CLR Type Mapping](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#4)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-121">열이 데이터베이스에서 계산된 열인지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-121">Gets or sets whether a column is a computed column in a database.</span></span></summary>
        <value><span data-ttu-id="b75a8-122">기본값은 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-122">Default = empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-123">사용 하는 경우이 속성을 사용 하 여 <xref:System.Data.Linq.DataContext.CreateDatabase%2A> 으로 계산 된 값이 포함 된 열을 정의 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-123">Use this property when you use <xref:System.Data.Linq.DataContext.CreateDatabase%2A> to define a column as containing computed values.</span></span>  
  
 <span data-ttu-id="b75a8-124">예를 들어도 SQL에 정의 된 열을 만들려는 `InventoryVal AS UnitPrice * UnitsInStock`, 다음 사용 하 여 *식을* 문자열: `"UnitPrice * UnitsInStock"`합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-124">For example, if you want to create a column defined in SQL as `InventoryVal AS UnitPrice * UnitsInStock`, use the following *expression* string: `"UnitPrice * UnitsInStock"`.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="b75a8-125">에서는 기본 키로 계산된 열을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-125">does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#5)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public bool IsDbGenerated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDbGenerated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDbGenerated : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-126">열에 데이터베이스가 자동으로 생성하는 값이 포함되는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-126">Gets or sets whether a column contains values that the database auto-generates.</span></span></summary>
        <value><span data-ttu-id="b75a8-127">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-127">Default = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> 데이터의 행을 삽입 하 고 팀 원들은 후 사용 가능한 멤버 즉시 동기화 됩니다 <xref:System.Data.Linq.DataContext.SubmitChanges%2A> 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-128"><xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> members are synchronized immediately after the row of data is inserted, and the members are available after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b75a8-129">열의 기본 키 값을 보유 하 고 지정 하는 경우 <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> 으로 `true`도 추가 해야 합니다 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> 를 사용 하 여 속성을 `IDENTITY` 한정자.</span><span class="sxs-lookup"><span data-stu-id="b75a8-129">If the column holds primary key values and you designate <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> as `true`, you should also add the <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> property by using the `IDENTITY` modifier.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#6)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public bool IsDiscriminator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDiscriminator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDiscriminator : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-130">열에 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] 상속 계층 구조에 대한 판별자 값이 포함되는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-130">Gets or sets whether a column contains a discriminator value for a [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="b75a8-131">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-131">Default = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-132">때 `true`,이 속성은 상속 계층 구조에 대 한 판별자 값을 보유 하는 클래스 멤버를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-132">When `true`, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.</span></span>  
  
 <span data-ttu-id="b75a8-133">이 속성을 설정할 수 `true` 없는 최상위에 속해야 하는 둘 이상의 멤버를 클래스 계층 구조에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-133">You can set this property to `true` for no more than one member, which must belong to the topmost mapped class in the hierarchy.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#7)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-134">이 클래스 멤버가 테이블의 기본 키 중 일부 또는 전부인 열을 나타내는지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-134">Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</span></span></summary>
        <value><span data-ttu-id="b75a8-135">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-135">Default = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-136">엔터티 클래스를 가정 하 고이 특성을 사용 하 여 하나 이상의 멤버를 제공 해야 및 기본 키 또는 고유 키에 해당 테이블 또는 뷰에 매핑해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-136">Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="b75a8-137">이 프롬프트를 이렇게 하지 않으면 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] 데이터베이스 변경 내용을 전송 하는 것에 대 한 읽기 전용으로 클래스의 인스턴스를 고려해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-137">Failure to do this prompts [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] to consider instances of the class as read-only for submitting changes to the database.</span></span>  
  
 <span data-ttu-id="b75a8-138">이 속성을 사용 하 여 클래스의 둘 이상의 멤버를 지정 하는 경우 연결된 된 열의 복합 키 이라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-138">If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="b75a8-139">에서는 기본 키로 계산된 열을 지원하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-139">does not support computed columns as primary keys.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#8)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public bool IsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVersion { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsVersion : bool with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-140">멤버의 열 형식이 데이터베이스 타임스탬프 또는 버전 번호인지 여부를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-140">Gets or sets whether the column type of the member is a database timestamp or version number.</span></span></summary>
        <value><span data-ttu-id="b75a8-141">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-141">Default value = <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-142">버전 번호가 증가 하 고 타임 스탬프 열에는 연결 된 행이 업데이트 될 때마다 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-142">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="b75a8-143">(이 속성은 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] 는 새 버전에는 표시할 열을 업데이트할지; 업데이트를 변경한 사용자와 같은 정보를 기록 하려고 하지 않습니다.)</span><span class="sxs-lookup"><span data-stu-id="b75a8-143">(This property tells [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)</span></span>  
  
 <span data-ttu-id="b75a8-144">다음을 유의 하십시오 때 `IsVersion` 그렇습니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-144">Note the following when `IsVersion` is true:</span></span>  
  
-   <span data-ttu-id="b75a8-145">사용 하 여 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> 버전 번호 또는 타임 스탬프 열을 지정 하려면 올바른 한정자를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-145">Use <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A> to specify the correct modifiers to designate a version number or timestamp column.</span></span> <span data-ttu-id="b75a8-146">지정 하지 않는 경우 <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] 올바른 한정자를 유추 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-146">If you do not specify <xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A>, [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] infers the correct modifiers.</span></span>  
  
 <span data-ttu-id="b75a8-147">버전 번호가 증가 하 고 타임 스탬프 열에는 연결 된 행이 업데이트 될 때마다 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-147">Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</span></span> <span data-ttu-id="b75a8-148">사용 하 여 멤버 `IsVersion=true` 데이터 행이 업데이트 후에 즉시 동기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-148">Members with `IsVersion=true` are synchronized immediately after the data row is updated.</span></span> <span data-ttu-id="b75a8-149">새 값이 표시 됩니다 <xref:System.Data.Linq.DataContext.SubmitChanges%2A> 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-149">The new values are visible after <xref:System.Data.Linq.DataContext.SubmitChanges%2A> finishes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#9)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); void set(System::Data::Linq::Mapping::UpdateCheck value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCheck : System.Data.Linq.Mapping.UpdateCheck with get, set" Usage="System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b75a8-150">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]에서 낙관적 동시성 충돌 감지에 접근하는 방법을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-150">Gets or sets how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] approaches the detection of optimistic concurrency conflicts.</span></span></summary>
        <value><span data-ttu-id="b75a8-151">멤버에 대해 <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />이 <see langword="true" />가 아니면 기본값은 <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-151">Default = <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" />, unless <see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /> is <see langword="true" /> for a member.</span></span>  
  
<span data-ttu-id="b75a8-152">다른 값은 <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> 및 <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />입니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-152">Other values are <see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /> and <see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b75a8-153">이 속성은 세 가지 열거형 중 하나를 사용 하 여 사용 하는 경우를 결정 하는 방법을 [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] 동시성 충돌을 감지 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-153">When this property is used with one of three enums, it determines how [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] detects concurrency conflicts.</span></span>  
  
 <span data-ttu-id="b75a8-154">멤버가 없는으로 설계 된 경우 `IsVersion=true`, 원래 멤버 값이 현재 데이터베이스 상태와 비교 됩니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-154">If no member is designed as `IsVersion=true`, original member values are compared with the current database state.</span></span>  
  
 <span data-ttu-id="b75a8-155">다음 열거형은 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-155">The following enums are available:</span></span>  
  
-   <span data-ttu-id="b75a8-156">`Always` 충돌 검색에 항상이 열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-156">`Always` Always use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="b75a8-157">`Never` 충돌 검색에 대 한이 열을 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-157">`Never` Never use this column for conflict detection.</span></span>  
  
-   <span data-ttu-id="b75a8-158">`WhenChanged` 멤버가 응용 프로그램에서 변경 된 경우에이 열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b75a8-158">`WhenChanged` Use this column only when the member has been changed by the application.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/cs/northwind.cs#10)]
 [!code-vb[System.Data.Linq.Mapping.ColumnAttribute#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.ColumnAttribute/vb/northwind.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>