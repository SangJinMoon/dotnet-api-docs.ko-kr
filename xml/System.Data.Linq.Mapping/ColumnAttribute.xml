<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ColumnAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5434bdeafe85ec70ee665c0143c4b57306fd46422.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">434bdeafe85ec70ee665c0143c4b57306fd46422</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Mapping.ColumnAttribute">
          <source>Associates a class with a column in a database table.</source>
          <target state="translated">클래스를 데이터베이스 테이블의 열과 연결합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.ColumnAttribute">
          <source>Use this attribute to designate a member of an entity class to represent a column in a database table.</source>
          <target state="translated">엔터티 클래스의 멤버가 데이터베이스 테이블의 열을 나타내도록 지정하려면 이 특성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.ColumnAttribute">
          <source>You can apply this attribute to any field or property that is <ph id="ph1">`public`</ph>, <ph id="ph2">`private`</ph>, or <ph id="ph3">`internal`</ph>.</source>
          <target state="translated">모든 필드 또는 속성에이 특성을 적용할 수 <ph id="ph1">`public`</ph>, <ph id="ph2">`private`</ph>, 또는 <ph id="ph3">`internal`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.ColumnAttribute">
          <source>Only those entity class members identified as columns are persisted when <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> saves changes to the database.</source>
          <target state="translated">열은 지속형으로 표시 되는 엔터티 클래스 구성원만 때 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 변경 내용을 데이터베이스에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Mapping.ColumnAttribute">
          <source>Use commas to separate multiple properties on the attribute.</source>
          <target state="translated">쉼표를 사용 하 여 특성에 여러 속성을 구분 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Mapping.ColumnAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.ColumnAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.AutoSync" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.AutoSync" /&gt;</ph> 열거형을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.AutoSync">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.AutoSync" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.AutoSync" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull">
          <source>Gets or sets whether a column can contain null values.</source>
          <target state="translated">열이 null 값을 포함할 수 있는지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull">
          <source>Default = <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull">
          <source>If you set this value to <ph id="ph1">`false`</ph>, the data in the corresponding column is assumed to be non-null.</source>
          <target state="translated">이 값을 설정 하는 경우 <ph id="ph1">`false`</ph>, 데이터를 해당 열에는 null이 아닌 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull">
          <source>This property is duplicated from the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> property for convenience.</source>
          <target state="translated">이 속성에서 중복 된 <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> 편의 위해 속성입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt;</ph> method uses only the <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt;</ph> 메서드만 사용 하 여는 <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.CanBeNull">
          <source>For this reason, you must specify whether a column can contain null values in the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> property also.</source>
          <target state="translated">열에 null 값을 포함할 수 있는지 여부를 지정 해야 이러한 이유로 <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> 속성도 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.DbType">
          <source>Gets or sets the type of the database column.</source>
          <target state="translated">데이터베이스 열의 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.DbType">
          <source>String value that specifies the exact text that defines the column in a Transact-SQL table declaration.</source>
          <target state="translated">Transact SQL 테이블 선언에는 열을 정의 하는 정확한 텍스트를 지정 하는 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.DbType">
          <source>Use this property to specify the exact text that defines the column in a Transact-SQL table declaration.</source>
          <target state="translated">Transact SQL 테이블 선언에는 열을 정의 하는 정확한 텍스트를 지정 하려면이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.DbType">
          <source>Specify the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> property only if you plan to use <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt;</ph> to create an instance of the database.</source>
          <target state="translated">지정 된 <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> 사용 하려는 경우에 속성 <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt;</ph> 데이터베이스의 인스턴스를 만드는 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.DbType">
          <source>The default value of <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> is inferred from the member type.</source>
          <target state="translated">기본값 <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> 멤버 형식에서 유추 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.DbType">
          <source>For more information, see <bpt id="p1">[</bpt>SQL-CLR Type Mapping<ept id="p1">](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>SQL-CLR 형식 매핑<ept id="p1">](~/docs/framework/data/adonet/sql/linq/sql-clr-type-mapping.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.Expression">
          <source>Gets or sets whether a column is a computed column in a database.</source>
          <target state="translated">열이 데이터베이스에서 계산된 열인지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.Expression">
          <source>Default = empty.</source>
          <target state="translated">기본값은 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.Expression">
          <source>Use this property when you use <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt;</ph> to define a column as containing computed values.</source>
          <target state="translated">사용 하는 경우이 속성을 사용 하 여 <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateDatabase%2A&gt;</ph> 계산 된 값을 포함 한 것으로 열을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.Expression">
          <source>For example, if you want to create a column defined in SQL as <ph id="ph1">`InventoryVal AS UnitPrice * UnitsInStock`</ph>, use the following <bpt id="p1">*</bpt>expression<ept id="p1">*</ept> string: <ph id="ph2">`"UnitPrice * UnitsInStock"`</ph>.</source>
          <target state="translated">SQL에 정의 된 열을 만들려는 경우 등 <ph id="ph1">`InventoryVal AS UnitPrice * UnitsInStock`</ph>, 다음을 사용 하 여 <bpt id="p1">*</bpt>식<ept id="p1">*</ept> 문자열: <ph id="ph2">`"UnitPrice * UnitsInStock"`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.Expression">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support computed columns as primary keys.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>에서는 기본 키로 계산된 열을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated">
          <source>Gets or sets whether a column contains values that the database auto-generates.</source>
          <target state="translated">열에 데이터베이스가 자동으로 생성하는 값이 포함되는지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated">
          <source>Default = <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A&gt;</ph> members are synchronized immediately after the row of data is inserted, and the members are available after <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A&gt;</ph> 데이터의 행이 삽입 및 멤버는 이후에 사용 가능 멤버 즉시 동기화 됩니다 <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated">
          <source>If the column holds primary key values and you designate <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A&gt;</ph> as <ph id="ph2">`true`</ph>, you should also add the <ph id="ph3">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> property by using the <ph id="ph4">`IDENTITY`</ph> modifier.</source>
          <target state="translated">열의 기본 키 값을 보유 하 고 지정 하는 경우 <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A&gt;</ph> 으로 <ph id="ph2">`true`</ph>도 추가 해야는 <ph id="ph3">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> 사용 하 여 속성의 <ph id="ph4">`IDENTITY`</ph> 한정자입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator">
          <source>Gets or sets whether a column contains a discriminator value for a <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> inheritance hierarchy.</source>
          <target state="translated">열에 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 상속 계층 구조에 대한 판별자 값이 포함되는지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator">
          <source>Default = <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator">
          <source>When <ph id="ph1">`true`</ph>, this property identifies the class member as holding the discriminator value for an inheritance hierarchy.</source>
          <target state="translated">때 <ph id="ph1">`true`</ph>,이 속성은 클래스 멤버가 상속 계층 구조에 대 한 판별자 값을 보유 하는 것으로 식별 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsDiscriminator">
          <source>You can set this property to <ph id="ph1">`true`</ph> for no more than one member, which must belong to the topmost mapped class in the hierarchy.</source>
          <target state="translated">이 속성 설정할 수 있습니다 <ph id="ph1">`true`</ph> no 고 최상위에 속해야 하는 둘 이상의 멤버 클래스 계층 구조에 매핑.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey">
          <source>Gets or sets whether this class member represents a column that is part or all of the primary key of the table.</source>
          <target state="translated">이 클래스 멤버가 테이블의 기본 키 중 일부 또는 전부인 열을 나타내는지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey">
          <source>Default = <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey">
          <source>Assuming an entity class, you must provide at least one member with this attribute, and it must be mapped to the primary key or a unique key in the corresponding table or view.</source>
          <target state="translated">엔터티 클래스를 가정할 때 구성원을 하나 이상이 특성을 제공 해야 하 고 기본 키 또는 고유 키에 해당 테이블 또는 뷰의에 매핑되어야 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey">
          <source>Failure to do this prompts <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> to consider instances of the class as read-only for submitting changes to the database.</source>
          <target state="translated">이 표시 되는이 메시지를 작업에 실패 하면 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 데이터베이스에 변경 내용을 전송 하는 것에 대 한 읽기 전용으로 클래스의 인스턴스를 고려해 야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey">
          <source>If you designate more than one member of the class by using this property, the key is said to be a composite of the associated columns.</source>
          <target state="translated">이 속성을 사용 하 여 클래스의 여러 멤버를 지정 하는 경우 연결된 된 열의의 복합 키 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsPrimaryKey">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support computed columns as primary keys.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>에서는 기본 키로 계산된 열을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>Gets or sets whether the column type of the member is a database timestamp or version number.</source>
          <target state="translated">멤버의 열 형식이 데이터베이스 타임스탬프 또는 버전 번호인지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>Default value = <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</source>
          <target state="translated">버전 번호가 증가 하 고 타임 스탬프 열에 연결 된 행이 업데이트 될 때마다 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>(This property tells <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> that a column should be updated to show that it is a new version; it is not meant to record information such as who made the update.)</source>
          <target state="translated">(이 속성은 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 새 버전을 표시 하도록 업데이트 해야 하는 열; 업데이트를 변경한 사용자와 같은 정보를 기록으로 다루지는지 않습니다.)</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>Note the following when <ph id="ph1">`IsVersion`</ph> is true:</source>
          <target state="translated">다음에 유의 때 <ph id="ph1">`IsVersion`</ph> 그렇습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>Use <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> to specify the correct modifiers to designate a version number or timestamp column.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph> 버전 번호 또는 타임 스탬프 열을 지정 하려면 올바른 한정자를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>If you do not specify <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph>, <ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> infers the correct modifiers.</source>
          <target state="translated">지정 하지 않으면 <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.DbType%2A&gt;</ph>, <ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 올바른 한정자를 유추 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>Version numbers are incremented and timestamp columns are updated every time that the associated row is updated.</source>
          <target state="translated">버전 번호가 증가 하 고 타임 스탬프 열에 연결 된 행이 업데이트 될 때마다 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>Members with <ph id="ph1">`IsVersion=true`</ph> are synchronized immediately after the data row is updated.</source>
          <target state="translated">구성원과 <ph id="ph1">`IsVersion=true`</ph> 데이터 행이 업데이트 후에 즉시 동기화 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion">
          <source>The new values are visible after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> finishes.</source>
          <target state="translated">새 값이 표시 됩니다 <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> 완료 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source>Gets or sets how <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> approaches the detection of optimistic concurrency conflicts.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>에서 낙관적 동시성 충돌 감지에 접근하는 방법을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source>Default = <ph id="ph1">&lt;see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" /&gt;</ph>, unless <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph> for a member.</source>
          <target state="translated">멤버에 대해 <ph id="ph1">&lt;see cref="F:System.Data.Linq.Mapping.UpdateCheck.Always" /&gt;</ph>이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>가 아니면 기본값은 <ph id="ph2">&lt;see cref="P:System.Data.Linq.Mapping.ColumnAttribute.IsVersion" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source>Other values are <ph id="ph1">&lt;see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" /&gt;</ph>.</source>
          <target state="translated">다른 값은 <ph id="ph1">&lt;see cref="F:System.Data.Linq.Mapping.UpdateCheck.Never" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="F:System.Data.Linq.Mapping.UpdateCheck.WhenChanged" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source>When this property is used with one of three enums, it determines how <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> detects concurrency conflicts.</source>
          <target state="translated">이 속성은 세 가지 열거형 중 하나에 사용 하는 경우를 결정 방법을 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 동시성 충돌을 감지 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source>If no member is designed as <ph id="ph1">`IsVersion=true`</ph>, original member values are compared with the current database state.</source>
          <target state="translated">로 디자인 된 멤버가 없는 경우 <ph id="ph1">`IsVersion=true`</ph>, 원래 멤버 값이 현재 데이터베이스 상태와 비교 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source>The following enums are available:</source>
          <target state="translated">다음 열거형에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source><ph id="ph1">`Always`</ph> Always use this column for conflict detection.</source>
          <target state="translated"><ph id="ph1">`Always`</ph> 충돌 검색에 항상이 열을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source><ph id="ph1">`Never`</ph> Never use this column for conflict detection.</source>
          <target state="translated"><ph id="ph1">`Never`</ph> 충돌 감지에 대 한이 열을 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck">
          <source><ph id="ph1">`WhenChanged`</ph> Use this column only when the member has been changed by the application.</source>
          <target state="translated"><ph id="ph1">`WhenChanged`</ph> 멤버가 응용 프로그램에 의해 변경 된 경우에이 열을 사용 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>