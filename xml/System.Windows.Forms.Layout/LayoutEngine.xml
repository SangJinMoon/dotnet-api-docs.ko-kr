<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LayoutEngine.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cbcf9160e00fd47f90172cb1689854afaa2ca867.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cbcf9160e00fd47f90172cb1689854afaa2ca867</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Layout.LayoutEngine">
          <source>Provides the base class for implementing layout engines.</source>
          <target state="translated">레이아웃 엔진을 구현하기 위한 기본 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Layout.LayoutEngine">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine&gt;</ph> class when you want to create custom layout behavior at run time.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine&gt;</ph> 런타임 시 사용자 지정 레이아웃 동작을 만들려고 할 때 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Layout.LayoutEngine">
          <source>Derive your own class from the <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine&gt;</ph> class and override the <ph id="ph2">&lt;xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A&gt;</ph> method to define your custom layout behavior.</source>
          <target state="translated">고유한 클래스를 파생는 <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine&gt;</ph> 클래스 및 재정의 <ph id="ph2">&lt;xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A&gt;</ph> 메서드를 사용자 지정 레이아웃 동작을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Layout.LayoutEngine">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine&gt;</ph> class to implement custom layout behavior.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine&gt;</ph> 사용자 지정 레이아웃 동작을 구현 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.#ctor">
          <source>Layout behavior should be the same for any instance of your layout engine's associated container class.</source>
          <target state="translated">레이아웃 동작 레이아웃 엔진의 연결 된 컨테이너 클래스의 모든 인스턴스에 대해 동일 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.#ctor">
          <source>For this reason, consider declaring your layout engine's constructor <ph id="ph1">&lt;see langword="protected" /&gt;</ph> or <ph id="ph2">&lt;see langword="private" /&gt;</ph>, and implementing your layout engine as a singleton class.</source>
          <target state="translated">이러한 이유로 레이아웃 엔진의 생성자 선언 것이 좋습니다 <ph id="ph1">&lt;see langword="protected" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="private" /&gt;</ph>, 및 레이아웃 엔진으로 단일 항목 클래스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
          <source>The container on which the layout engine will operate.</source>
          <target state="translated">레이아웃 엔진이 작업할 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
          <source>The bounds defining the container's size and position.</source>
          <target state="translated">컨테이너의 크기와 위치를 정의하는 범위입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
          <source>Initializes the layout engine.</source>
          <target state="translated">레이아웃 엔진을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
          <source>Optionally provide initialization logic in the <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A&gt;</ph> method.</source>
          <target state="translated">필요에 따라 초기화 논리에 제공 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
          <source><ph id="ph1">&lt;paramref name="child" /&gt;</ph> is not a type on which <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> can perform layout.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="child" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph>이 레이아웃을 수행할 수 없는 형식인 경우</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method to provide your custom initialization behavior.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> 메서드를 사용자 지정 초기화 동작을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>The container on which the layout engine will operate.</source>
          <target state="translated">레이아웃 엔진이 작업할 컨테이너입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>An event argument from a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> 이벤트에서 가져온 이벤트 인수입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>Requests that the layout engine perform a layout operation.</source>
          <target state="translated">레이아웃 엔진에서 레이아웃 작업을 수행하도록 요청합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if layout should be performed again by the parent of <ph id="ph2">&lt;paramref name="container" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="container" /&gt;</ph>의 부모가 레이아웃을 다시 수행해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>This method is called when the layout engine is to perform a layout operation on the <ph id="ph1">`container`</ph> parameter.</source>
          <target state="translated">이 메서드는 레이아웃 엔진에서 레이아웃 작업을 수행 하는 것은 <ph id="ph1">`container`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>You can check the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> properties on <ph id="ph4">`layoutEventArgs`</ph> to decide if a layout operation is necessary.</source>
          <target state="translated">값을 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A&gt;</ph> 속성에 <ph id="ph4">`layoutEventArgs`</ph> 레이아웃 작업은 필요 하는 경우를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A&gt;</ph> method to implement custom layout behavior.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A&gt;</ph> 메서드를 사용자 지정 레이아웃 동작을 구현 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Forms.Layout.LayoutEngine&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source><ph id="ph1">&lt;paramref name="container" /&gt;</ph> is not a type on which <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph> can perform layout.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="container" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Layout.LayoutEngine" /&gt;</ph>이 레이아웃을 수행할 수 없는 형식인 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> method to provide your custom layout behavior.</source>
          <target state="translated">재정의 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /&gt;</ph> 메서드를 사용자 지정 레이아웃 동작을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>When laying out the contents of the <ph id="ph1">&lt;paramref name="container" /&gt;</ph> parameter, be sure to check the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> property of each child control.</source>
          <target state="translated">내용을 레이아웃 하는 경우는 <ph id="ph1">&lt;paramref name="container" /&gt;</ph> 매개 변수를 반드시 확인는 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Control.Visible" /&gt;</ph> 각 자식 컨트롤의 속성입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>Return <ph id="ph1">&lt;see langword="true" /&gt;</ph> if your layout engine logic determines that layout should be performed again by the parent of the container.</source>
          <target state="translated">반환 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 경우 레이아웃 엔진 논리 결정 컨테이너의 부모 레이아웃을 다시 수행 해야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
          <source>This might occur, for example, when the layout engine resizes child controls and determines that the container must be increased in size to accommodate the new layout.</source>
          <target state="translated">이 발생할 수 있으며, 예를 들어 레이아웃 엔진 자식 컨트롤의 크기를 조정 하 고 컨테이너에 새 레이아웃에 맞게 증가 시켜 해야 결정 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>