<Type Name="ArrangedElementCollection" FullName="System.Windows.Forms.Layout.ArrangedElementCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88e3fd0d3da30a972609777bec599c74ee8712ae" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52242928" /></Metadata><TypeSignature Language="C#" Value="public class ArrangedElementCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ArrangedElementCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.ArrangedElementCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrangedElementCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrangedElementCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrangedElementCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ae1a4-101">개체의 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-101">Represents a collection of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-102">합니다 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 클래스는 부모 내의 디자인 화면에서 정렬할 개체의 컬렉션을 나타냅니다 <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-102">The <xref:System.Windows.Forms.Layout.ArrangedElementCollection> class represents a collection of objects arranged on a design surface or inside a parent <xref:System.Windows.Forms.ContainerControl?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ae1a4-103">공개적으로 정의 된 생성자 없음 <xref:System.Windows.Forms.Layout.ArrangedElementCollection> 에서 내부적 으로만 사용할으로 설계 되었으므로 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-103">There are no publicly defined constructors in <xref:System.Windows.Forms.Layout.ArrangedElementCollection> because it is designed to be used only internally within the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="ae1a4-104">클래스에서 파생 되는 반면 <xref:System.Windows.Forms.Layout.ArrangedElementCollection>와 같은 <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, 개발자에 게 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-104">However, classes derived from <xref:System.Windows.Forms.Layout.ArrangedElementCollection>, such as <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>, are available to the developer.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ae1a4-105">공용 <see langword="static" /> (<see langword="Shared" /> Visual Basic의)이 형식의 멤버는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-105">Public <see langword="static" /> (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="ae1a4-106">인스턴스 멤버는 스레드로부터의 안전성이 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-106">Instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="ae1a4-107"><see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> 지원할 수 있습니다 여러 판독기 동시에 따라 컬렉션을 수정 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-107">An <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="ae1a4-108">합니다 <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> 메서드가 반환 되는 <see cref="T:System.Collections.IEnumerator" /> 요소에 액세스 하려면 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-108">The <see cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" /> method returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to access elements.</span></span>  
  
<span data-ttu-id="ae1a4-109">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-109">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ae1a4-110">컬렉션이 동기화 된 경우 다른 스레드 수 수정할 하면 열거자가 예외를 throw 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-110">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ae1a4-111">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-111">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
    <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrangedElementCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ae1a4-112">현재 컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current collection.</span></span> <span data-ttu-id="ae1a4-113">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-113">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="ae1a4-114"><paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-114">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="ae1a4-115">대상 배열의 지정된 인덱스에서 시작하여 이 컬렉션의 전체 콘텐츠를 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-115">Copies the entire contents of this collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-116">지정 된 배열 형식에는 소스 컬렉션을 사용 하 여 호환 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-116">The type of the specified array must be compatible with the source collection.</span></span>  
  
 <span data-ttu-id="ae1a4-117">이 메서드는 사용 된 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 요소를 복사 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-117">This method uses the <xref:System.Array.Copy%2A?displayProperty=nameWithType> method to copy the elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ae1a4-118"><paramref name="array" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="ae1a4-118"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ae1a4-119"><paramref name="index" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-119"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ae1a4-120"><paramref name="array" />가 다차원 배열인 경우</span><span class="sxs-lookup"><span data-stu-id="ae1a4-120"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="ae1a4-121">또는</span><span class="sxs-lookup"><span data-stu-id="ae1a4-121">-or-</span></span> 
<span data-ttu-id="ae1a4-122">소스 컬렉션의 요소 수가 <paramref name="index" />와 <paramref name="array" /> 끝 사이의 사용 가능한 공간보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="ae1a4-122">The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ae1a4-123">소스 요소 형식을 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="ae1a4-123">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
        <altmember cref="Overload:System.Collections.ArrayList.CopyTo" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae1a4-124">컬렉션의 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-124">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="ae1a4-125">컬렉션에 현재 포함된 요소 수입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-125">The number of elements currently contained in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-126">필요한 경우 더 많은 요소에 적용할 컬렉션의 용량 동적으로 증가 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-126">When required, the capacity of the collection will dynamically increase to accept more elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="arrangedElementCollection.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ae1a4-127">현재 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />과 비교할 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-127">The <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> to compare with the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></param>
        <summary><span data-ttu-id="ae1a4-128">두 개의 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> 인스턴스가 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-128">Determines whether two <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="ae1a4-129">지정된 <see langword="true" />가 현재<see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />와 같으면 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-129"><see langword="true" /> if the specified <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is equal to the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrangedElementCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ae1a4-130">전체 컬렉션에 대한 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-130">Returns an enumerator for the entire collection.</span></span></summary>
        <returns><span data-ttu-id="ae1a4-131">전체 컬렉션에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-131">An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-132">일반적으로 열거자 없는 컬렉션에 대 한 배타적 액세스 따라서 컬렉션을 열거 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-132">Typically the enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ae1a4-133">컬렉션이 동기화 된 경우 다른 스레드 수 수정할 하면 열거자가 예외를 throw 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-133">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ae1a4-134">을 열거 하는 동안 스레드로부터 안전을 보장 하기 위해 다음 전략 중 하나를 따를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-134">To guarantee thread safety during enumeration, you can follow one of the following strategies:</span></span>  
  
-   <span data-ttu-id="ae1a4-135">사용 하 여 전체 열거 동안 컬렉션을 잠글는 <xref:System.Threading.Monitor>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-135">Lock the collection during the entire enumeration using a <xref:System.Threading.Monitor>.</span></span>  
  
-   <span data-ttu-id="ae1a4-136">Catch 하 고 다른 스레드에서 변경에서 발생 하는 예외를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-136">Catch and handle the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="Overload:System.Collections.ArrayList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="arrangedElementCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ae1a4-137">이 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-137">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="ae1a4-138">현재 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-138">A hash code for the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae1a4-139">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-139">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="ae1a4-140">컬렉션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-140"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ae1a4-141">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-141">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-142">읽기 전용 컬렉션을 없도록 추가, 제거 또는 수정 요소의 컬렉션을 만든 후 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-142">A read-only collection does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="ae1a4-143">읽기 전용 컬렉션은 컬렉션을 수정 하지 못하도록 하는 래퍼를 사용 하 여 컬렉션 하기만 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-143">A read-only collection is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="ae1a4-144">기본 컬렉션이 변경 되 면 읽기 전용 컬렉션을 해당 변경 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-144">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae1a4-145">이 멤버에 대한 설명을 보려면 <see cref="P:System.Collections.ICollection.IsSynchronized" /> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-145">For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</span></span></summary>
        <value><span data-ttu-id="ae1a4-146"><see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-146"><see langword="true" /> if access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-147">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-147">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-148"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-148">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae1a4-149">이 멤버에 대한 설명을 보려면 <see cref="P:System.Collections.ICollection.SyncRoot" /> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-149">For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span></span></summary>
        <value><span data-ttu-id="ae1a4-150"><see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-150">An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-151">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-151">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-152"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-152">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ae1a4-153"><see cref="T:System.Object" />에 추가할 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-153">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="ae1a4-154">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IList.Add(System.Object)" /> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-154">For a description of this member, see the <see cref="M:System.Collections.IList.Add(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="ae1a4-155">새 요소가 삽입된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-155">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-156">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-156">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-157"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-157">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ae1a4-158">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IList.Clear" /> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-158">For a description of this member, see the <see cref="M:System.Collections.IList.Clear" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-159">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-159">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-160"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-160">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ae1a4-161"><see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-161">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="ae1a4-162">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IList.Contains(System.Object)" /> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-162">For a description of this member, see the <see cref="M:System.Collections.IList.Contains(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="ae1a4-163"><see cref="T:System.Object" />가 <see cref="T:System.Collections.IList" />에 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-163"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-164">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-164">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-165"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-165">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ae1a4-166"><see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-166">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="ae1a4-167">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-167">For a description of this member, see the <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="ae1a4-168">목록에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-168">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-169">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-169">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-170"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-170">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ae1a4-171"><paramref name="value" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-171">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="ae1a4-172"><see cref="T:System.Collections.IList" />에 삽입할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-172">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="ae1a4-173">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-173">For a description of this member, see the <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-174">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-174">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-175"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-175">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae1a4-176">이 멤버에 대한 설명을 보려면 <see cref="P:System.Collections.IList.IsFixedSize" /> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-176">For a description of this member, see the <see cref="P:System.Collections.IList.IsFixedSize" /> property.</span></span></summary>
        <value><span data-ttu-id="ae1a4-177"><see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Collections.IList" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-177"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-178">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-178">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-179"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-179">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ae1a4-180">가져올 요소의 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-180">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="ae1a4-181">이 멤버에 대한 설명을 보려면 <see cref="P:System.Collections.IList.Item(System.Int32)" /> 속성을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-181">For a description of this member, see the <see cref="P:System.Collections.IList.Item(System.Int32)" /> property.</span></span></summary>
        <value><span data-ttu-id="ae1a4-182">지정한 인덱스의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-182">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-183">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-183">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-184"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-184">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ae1a4-185"><see cref="T:System.Object" />에서 제거할 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-185">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="ae1a4-186">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IList.Remove(System.Object)" /> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-186">For a description of this member, see the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-187">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-187">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-188"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-188">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="ae1a4-189">제거할 항목의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-189">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="ae1a4-190">이 멤버에 대한 설명을 보려면 <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> 메서드를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-190">For a description of this member, see the <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1a4-191">이 메서드는 명시적 인터페이스 멤버 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-191">This method is an explicit interface member implementation.</span></span> <span data-ttu-id="ae1a4-192"><xref:System.Windows.Forms.Layout.ArrangedElementCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae1a4-192">It can be used only when the <xref:System.Windows.Forms.Layout.ArrangedElementCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>