<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8155c578ca3a365629ee4d705a95789ebfd67428" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719827" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>XML Serialization 및 Deserialization에 대한 사용자 지정 서식을 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스를 구현 하는 방법은 두 가지가 있습니다. 첫 번째 개체 serialize 되거나 deserialize 방법을 제어 하는 것은 <xref:System.Xml.Serialization.XmlSerializer>합니다. 예를 들어 데이터를 큰 데이터 집합을 버퍼링 하는 대신 바이트로 청크 있고 Base64 인코딩을 사용 하 여 데이터를 인코딩할 때 발생 하는 확장을 피해 야 합니다. Serialization을 제어 하기 위해 구현는 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> 및 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> 제어 하는 메서드는 <xref:System.Xml.XmlReader> 및 <xref:System.Xml.XmlWriter> 읽고 XML을 작성 하는 데 사용 되는 클래스입니다. 이 예제를 보려면 [하는 방법: 직렬화 된 데이터 청크](~/docs/standard/serialization/how-to-chunk-serialized-data.md)합니다.  
  
 스키마를 제어할 수는 두 번째 이유입니다. 이 작업이 가능 하려면 적용 해야는 <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> 는 순차 가능으로 입력 한 스키마를 반환 하는 정적 멤버의 이름을 지정 합니다. 참조는 <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> 예에 대 한 합니다.  
  
 인터페이스를 구현 하는 클래스에는 매개 변수가 없는 생성자를 있어야 합니다. 이 작업은 필요는 <xref:System.Xml.Serialization.XmlSerializer> 클래스입니다.  
  
   
  
## Examples  
 다음 예제 코드의 구현을 보여 줍니다.는 <xref:System.Xml.Serialization.IXmlSerializable> 전용 필드를 serialize 하는 인터페이스입니다.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 예약되어 있으므로 사용해서는 안 됩니다. <see langword="IXmlSerializable" /> 인터페이스를 구현할 때 이 메서드에서 <see langword="null" />(Visual Basic에서는 <see langword="Nothing" />)을 반환해야 하지만 사용자 지정 스키마를 지정해야 하는 경우에는 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />를 클래스에 적용합니다.</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" /> 메서드에 의해 생성되고 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 메서드가 사용하는 개체의 XML 표현을 설명하는 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 직렬화 또는 역직렬화 되는 개체로 때는 <xref:System.Xml.Serialization.XmlSerializer> 클래스는 XML 유효성 검사를 수행 하지 않습니다. 이러한 이유로 종종 안전 여부가 스키마 정보를 반환 하 여 예를 들어이 방법의 간단한 구현을 제공 하 여 생략 `null` (`Nothing` Visual basic에서).  
  
 사용 해야 필요한 경우에 스키마 정보를 제공 하는 <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> 특성입니다. `GetSchema` 메서드 반환 해야 `null` (또는 `Nothing`).  
  
 일부 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 형식으로 구현 하는 레거시 사용자 지정 형식에서 `IXmlSerializable` 인터페이스를 사용 중일 수 `GetSchema` 대신 `XmlSchemaProvider`합니다. 이 경우 메서드가 반환 정확 하 게 XML 스키마에 의해 생성 된 개체의 XML 표현을 설명 하는 <xref:System.Data.DataSet.WriteXml%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">개체가 deserialize되는 <see cref="T:System.Xml.XmlReader" /> 스트림입니다.</param>
        <summary>개체의 XML 표현에서 개체를 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> 메서드 정보에 의해 작성 되었으므로 사용 하 여 개체를 다시 구성 해야 합니다는 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> 메서드.  
  
 이 메서드를 호출할 때 유형에 대 한 정보를 래핑하는 시작 태그에 판독기가 있습니다. 즉, 시작 태그에 직접 serialize 된 개체의 시작 부분을 나타내는입니다. 이 메서드가 반환 될 때 읽기 갖고 있어야 전체 요소를 종료 하려면 처음부터 모든 콘텐츠를 포함 합니다. 와 달리는 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> 메서드를 프레임 워크 래퍼 요소를 자동으로 처리 하지 않습니다. 구현 해야 합니다. 같은 위치 지정 규칙을 준수 하지 않음으로 예기치 않은 런타임 예외 또는 손상 된 데이터가 생성 하기 위해 코드를 발생할 수 있습니다.  
  
 이 메서드를 구현할 때에 가능성을 고려해 야 악의적인 사용자가 사용 하지 않도록 설정 하거나 그렇지 않으면 응용 프로그램의 동작을 변경 하려면 올바른 형식 이지만 잘못 된 XML 표시를 제공할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> 메서드.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를이 개체를 역직렬화 합니다.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">개체가 serialize되는 <see cref="T:System.Xml.XmlWriter" /> 스트림입니다.</param>
        <summary>개체를 XML 표현으로 변환합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> 구현을 제공 하는 개체의 XML 표현을 작성 해야 합니다. 프레임 워크는 래퍼 요소를 쓰고 시작 후 XML 작성기를 배치 합니다. 구현에는 자식 요소를 포함 하 여 해당 콘텐츠를 쓸 수 있습니다. 그런 다음 프레임 워크 래퍼 요소를 닫습니다.  
  
 충분 한 정보를 쓸는 <xref:System.Xml.XmlWriter> 스트림을 허용 하는 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> 메서드를 사용자 개체를 다시 구성 합니다.  
  
 예를 들어 배열 변수를 포함 하는 개체 상태 수는 배열의 길이 작성 해야 하거나 개체가 재구성 될 때 읽을 값의 개수를 알 수 있도록 배열 값을 설명 하는 요소를 포함 하는 부모 요소를 사용 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> 메서드.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 클래스를이 개체를 역직렬화 합니다.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>