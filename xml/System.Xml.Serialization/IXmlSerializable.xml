<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IXmlSerializable.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58155c578ca3a365629ee4d705a95789ebfd67428.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8155c578ca3a365629ee4d705a95789ebfd67428</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>Provides custom formatting for XML serialization and deserialization.</source>
          <target state="translated">XML Serialization 및 Deserialization에 대한 사용자 지정 서식을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>There are two reasons to implement this interface.</source>
          <target state="translated">이 인터페이스를 구현 하는 방법은 두 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>The first is to control how your object is serialized or deserialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">첫 번째 개체 serialize 되거나 deserialize 방법을 제어 하는 것은 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>For example, you can chunk data into bytes instead of buffering large data sets, and also avoid the inflation that occurs when the data is encoded using Base64 encoding.</source>
          <target state="translated">예를 들어 데이터를 큰 데이터 집합을 버퍼링 하는 대신 바이트로 청크 있고 Base64 인코딩을 사용 하 여 데이터를 인코딩할 때 발생 하는 확장을 피해 야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>To control the serialization, implement the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> methods to control the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph> classes used to read and write the XML.</source>
          <target state="translated">Serialization을 제어 하기 위해 구현는 <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> 제어 하는 메서드는 <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph> 읽고 XML을 작성 하는 데 사용 되는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>For an example of this, see <bpt id="p1">[</bpt>How to: Chunk Serialized Data<ept id="p1">](~/docs/standard/serialization/how-to-chunk-serialized-data.md)</ept>.</source>
          <target state="translated">이 예제를 보려면 <bpt id="p1">[</bpt>하는 방법: 직렬화 된 데이터 청크<ept id="p1">](~/docs/standard/serialization/how-to-chunk-serialized-data.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>The second reason is to be able to control the schema.</source>
          <target state="translated">스키마를 제어할 수는 두 번째 이유입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>To enable this, you must apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> to the serializable type, and specify the name of the static member that returns the schema.</source>
          <target state="translated">이 작업이 가능 하려면 적용 해야는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> 는 순차 가능으로 입력 한 스키마를 반환 하는 정적 멤버의 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> for an example.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> 예에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>A class that implements the interface must have a parameterless constructor.</source>
          <target state="translated">인터페이스를 구현 하는 클래스에는 매개 변수가 없는 생성자를 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>This is a requirement of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class.</source>
          <target state="translated">이 작업은 필요는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.IXmlSerializable">
          <source>The following example code shows an implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface that serializes a private field.</source>
          <target state="translated">다음 예제 코드의 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> 전용 필드를 serialize 하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>This method is reserved and should not be used.</source>
          <target state="translated">이 메서드는 예약되어 있으므로 사용해서는 안 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>When implementing the <ph id="ph1">&lt;see langword="IXmlSerializable" /&gt;</ph> interface, you should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <ph id="ph4">&lt;see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /&gt;</ph> to the class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="IXmlSerializable" /&gt;</ph> 인터페이스를 구현할 때 이 메서드에서 <ph id="ph2">&lt;see langword="null" /&gt;</ph>(Visual Basic에서는 <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>)을 반환해야 하지만 사용자 지정 스키마를 지정해야 하는 경우에는 <ph id="ph4">&lt;see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /&gt;</ph>를 클래스에 적용합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 메서드에 의해 생성되고 <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> 메서드가 사용하는 개체의 XML 표현을 설명하는 <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>When serializing or deserializing an object, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class does not perform XML validation.</source>
          <target state="translated">직렬화 또는 역직렬화 되는 개체로 때는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 클래스는 XML 유효성 검사를 수행 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>For this reason, it is often safe to omit schema information by providing a trivial implementation of this method, for example by returning <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">이러한 이유로 종종 안전 여부가 스키마 정보를 반환 하 여 예를 들어이 방법의 간단한 구현을 제공 하 여 생략 <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>If providing schema information is necessary, you should use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> attribute.</source>
          <target state="translated">사용 해야 필요한 경우에 스키마 정보를 제공 하는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSchemaProviderAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>The <ph id="ph1">`GetSchema`</ph> method should still return <ph id="ph2">`null`</ph> (or <ph id="ph3">`Nothing`</ph>).</source>
          <target state="translated"><ph id="ph1">`GetSchema`</ph> 메서드 반환 해야 <ph id="ph2">`null`</ph> (또는 <ph id="ph3">`Nothing`</ph>).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>Some <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> types as well as legacy custom types implementing the <ph id="ph2">`IXmlSerializable`</ph> interface may be using <ph id="ph3">`GetSchema`</ph> instead of <ph id="ph4">`XmlSchemaProvider`</ph>.</source>
          <target state="translated">일부 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 형식으로 구현 하는 레거시 사용자 지정 형식에서 <ph id="ph2">`IXmlSerializable`</ph> 인터페이스를 사용 중일 수 <ph id="ph3">`GetSchema`</ph> 대신 <ph id="ph4">`XmlSchemaProvider`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <source>In this case, the method returns an accurate XML schema that describes the XML representation of the object generated by the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">이 경우 메서드가 반환 정확 하 게 XML 스키마에 의해 생성 된 개체의 XML 표현을 설명 하는 <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> stream from which the object is deserialized.</source>
          <target state="translated">개체가 deserialize되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 스트림입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>Generates an object from its XML representation.</source>
          <target state="translated">개체의 XML 표현에서 개체를 생성합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> method must reconstitute your object using the information that was written by the <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> 메서드 정보에 의해 작성 되었으므로 사용 하 여 개체를 다시 구성 해야 합니다는 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>When this method is called, the reader is positioned on the start tag that wraps the information for your type.</source>
          <target state="translated">이 메서드를 호출할 때 유형에 대 한 정보를 래핑하는 시작 태그에 판독기가 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>That is, directly on the start tag that indicates the beginning of a serialized object.</source>
          <target state="translated">즉, 시작 태그에 직접 serialize 된 개체의 시작 부분을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>When this method returns, it must have read the entire element from beginning to end, including all of its contents.</source>
          <target state="translated">이 메서드가 반환 될 때 읽기 갖고 있어야 전체 요소를 종료 하려면 처음부터 모든 콘텐츠를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> method, the framework does not handle the wrapper element automatically.</source>
          <target state="translated">와 달리는 <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> 메서드를 프레임 워크 래퍼 요소를 자동으로 처리 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>Your implementation must do so.</source>
          <target state="translated">구현 해야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>Failing to observe these positioning rules may cause code to generate unexpected runtime exceptions or corrupt data.</source>
          <target state="translated">같은 위치 지정 규칙을 준수 하지 않음으로 예기치 않은 런타임 예외 또는 손상 된 데이터가 생성 하기 위해 코드를 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>When implementing this method, you should consider the possibility that a malicious user might provide a well-formed but invalid XML representation in order to disable or otherwise alter the behavior of your application.</source>
          <target state="translated">이 메서드를 구현할 때에 가능성을 고려해 야 악의적인 사용자가 사용 하지 않도록 설정 하거나 그렇지 않으면 응용 프로그램의 동작을 변경 하려면 올바른 형식 이지만 잘못 된 XML 표시를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>The following example illustrates an implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize this object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 클래스를이 개체를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> stream to which the object is serialized.</source>
          <target state="translated">개체가 serialize되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 스트림입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>Converts an object into its XML representation.</source>
          <target state="translated">개체를 XML 표현으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> implementation you provide should write out the XML representation of the object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> 구현을 제공 하는 개체의 XML 표현을 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The framework writes a wrapper element and positions the XML writer after its start.</source>
          <target state="translated">프레임 워크는 래퍼 요소를 쓰고 시작 후 XML 작성기를 배치 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>Your implementation may write its contents, including child elements.</source>
          <target state="translated">구현에는 자식 요소를 포함 하 여 해당 콘텐츠를 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The framework then closes the wrapper element.</source>
          <target state="translated">그런 다음 프레임 워크 래퍼 요소를 닫습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>Write sufficient information to the <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> stream to allow the <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> method to reconstitute your object.</source>
          <target state="translated">충분 한 정보를 쓸는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 스트림을 허용 하는 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A&gt;</ph> 메서드를 사용자 개체를 다시 구성 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>For example, if your object state includes an array variable, be sure to write the length of the array, or use a parent element to contain the elements that describe the array values, so that you know how many values to read when the object is reconstituted.</source>
          <target state="translated">예를 들어 배열 변수를 포함 하는 개체 상태 수는 배열의 길이 작성 해야 하거나 개체가 재구성 될 때 읽을 값의 개수를 알 수 있도록 배열 값을 설명 하는 요소를 포함 하는 부모 요소를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The following example illustrates an implementation of the <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to deserialize this object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 클래스를이 개체를 역직렬화 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>