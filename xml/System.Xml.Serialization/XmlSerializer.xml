<Type Name="XmlSerializer" FullName="System.Xml.Serialization.XmlSerializer">
  <TypeSignature Language="C#" Value="public class XmlSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e8d91-101">개체를 XML 문서로 직렬화하고 XML 문서에서 역직렬화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-101">Serializes and deserializes objects into and from XML documents.</span></span> <span data-ttu-id="e8d91-102"><see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하면 개체가 XML로 인코딩되는 방식을 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-102">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> enables you to control how objects are encoded into XML.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-103">XML serialization은 개체의 public 속성 및 필드를 저장이나 전송을 위해 직렬 형식(이 경우 XML)으로 변환하는 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-103">XML serialization is the process of converting an object's public properties and fields to a serial format (in this case, XML) for storage or transport.</span></span> <span data-ttu-id="e8d91-104">Deserialization 하는 XML 출력에서 원래 상태로 개체를 다시 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-104">Deserialization re-creates the object in its original state from the XML output.</span></span> <span data-ttu-id="e8d91-105">Serialization 스트림 또는 버퍼에 있는 개체의 상태를 저장 하는 방법으로 생각할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-105">You can think of serialization as a way of saving the state of an object into a stream or buffer.</span></span> <span data-ttu-id="e8d91-106">예를 들어 ASP.NET 사용 하 여는 <xref:System.Xml.Serialization.XmlSerializer> XML 웹 서비스 메시지를 인코딩하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-106">For example, ASP.NET uses the <xref:System.Xml.Serialization.XmlSerializer> class to encode XML Web service messages.</span></span>  
  
 <span data-ttu-id="e8d91-107">개체 내의 데이터는 클래스, 필드, 속성, 기본 형식, 배열 및 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlAttribute> 개체 형태로 포함된 XML과 같은 프로그래밍 언어 구조를 통하여 설명됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-107">The data in your objects is described using programming language constructs like classes, fields, properties, primitive types, arrays, and even embedded XML in the form of <xref:System.Xml.XmlElement> or <xref:System.Xml.XmlAttribute> objects.</span></span> <span data-ttu-id="e8d91-108">사용 하 여 특성으로 주석이 지정 된 사용자 고유의 클래스를 만들 수 있는 [XML 스키마 정의 도구 (Xsd.exe)](http://msdn.microsoft.com/library/a6e6e65c-347f-4494-9457-653bf29baac2) 기존 XML 스키마 정의 (XSD) 문서에 따라 클래스를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-108">You have the option of creating your own classes, annotated with attributes, or using the [XML Schema Definition Tool (Xsd.exe)](http://msdn.microsoft.com/library/a6e6e65c-347f-4494-9457-653bf29baac2) to generate the classes based on an existing XML Schema definition (XSD) document.</span></span> <span data-ttu-id="e8d91-109">XML 스키마를 사용 하도록 설정한 경우에 강력한는 스키마로 형식화 되 고 serialize 될 때 스키마를 준수 하는 특성으로 주석이 지정 된 클래스 집합을 생성 하기 위해 Xsd.exe를 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-109">If you have an XML Schema, you can run the Xsd.exe to produce a set of classes that are strongly typed to the schema and annotated with attributes to adhere to the schema when serialized.</span></span>  
  
 <span data-ttu-id="e8d91-110">개체 및 XML 간에 데이터를 전송 하 고 프로그래밍 언어 구문에 XML 스키마에서 XML 스키마를 프로그래밍 언어 구조에서 매핑이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-110">To transfer data between objects and XML requires a mapping from the programming language constructs to XML schema and from the XML schema to the programming language constructs.</span></span> <span data-ttu-id="e8d91-111"><xref:System.Xml.Serialization.XmlSerializer> Xsd.exe와 같은 관련된 도구는 이러한 두 기술을 모두 디자인 타임 및 런타임 간의 브리지를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-111">The <xref:System.Xml.Serialization.XmlSerializer> and related tools like Xsd.exe provide the bridge between these two technologies at both design time and runtime.</span></span> <span data-ttu-id="e8d91-112">디자인 타임에 사용 하 여 Xsd.exe를 사용자 지정 클래스에서 XML 스키마 문서 (.xsd)를 생성 하거나 지정된 된 스키마에서 클래스를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-112">At design time, use the Xsd.exe to produce an XML schema document (.xsd) from your custom classes or to produce classes from a given schema.</span></span> <span data-ttu-id="e8d91-113">두 경우 모두 클래스에 주석을 다는 사용자 지정 특성에 대 한 명령으로 <xref:System.Xml.Serialization.XmlSerializer> 공용 언어 런타임 및 XML 스키마 시스템 간에 매핑하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-113">In either case, the classes are annotated with custom attributes to instruct the <xref:System.Xml.Serialization.XmlSerializer> how to map between the XML schema system and the common language runtime.</span></span> <span data-ttu-id="e8d91-114">런타임 시 클래스의 인스턴스 지정된 된 스키마에 따라 XML 문서 직렬화 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-114">At runtime, instances of the classes can be serialized into XML documents that follow the given schema.</span></span> <span data-ttu-id="e8d91-115">마찬가지로, 런타임 개체에 이러한 XML 문서를 역직렬화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-115">Likewise, these XML documents can be deserialized into runtime objects.</span></span> <span data-ttu-id="e8d91-116">XML 스키마는 선택적 요소 이며 필요 하지 않음 디자인 타임 또는 런타임 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-116">Note that the XML schema is optional, and not required at design time or runtime.</span></span>  
  
## <a name="controlling-generated-xml"></a><span data-ttu-id="e8d91-117">생성 된 XML을 제어합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-117">Controlling Generated XML</span></span>  
 <span data-ttu-id="e8d91-118">생성된 된 XML을 제어 하기 위해 특수 한 특성 클래스 및 멤버에 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-118">To control the generated XML, you can apply special attributes to classes and members.</span></span> <span data-ttu-id="e8d91-119">예를 들어 다른 XML 요소 이름을 지정 하려면 적용는 <xref:System.Xml.Serialization.XmlElementAttribute> 공용 필드 또는 속성을 설정 하는 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-119">For example, to specify a different XML element name, apply an <xref:System.Xml.Serialization.XmlElementAttribute> to a public field or property, and set the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span> <span data-ttu-id="e8d91-120">비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 XML 직렬화](http://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7)합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-120">For a complete list of similar attributes, see [Attributes That Control XML Serialization](http://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7).</span></span> <span data-ttu-id="e8d91-121">구현할 수도 있습니다는 <xref:System.Xml.Serialization.IXmlSerializable> XML 출력을 제어 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-121">You can also implement the <xref:System.Xml.Serialization.IXmlSerializable> interface to control the XML output.</span></span>  
  
 <span data-ttu-id="e8d91-122">생성 된 XML은 World Wide 컨소시엄 (www.w3.org) 문서의 5 단원을 따라야 하는 경우 구성 해야 "Simple Object Access Protocol (SOAP) 1.1"는 <xref:System.Xml.Serialization.XmlSerializer> 와 <xref:System.Xml.Serialization.XmlTypeMapping>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-122">If the XML generated must conform to section 5 of the World Wide Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1", you must construct the <xref:System.Xml.Serialization.XmlSerializer> with an <xref:System.Xml.Serialization.XmlTypeMapping>.</span></span> <span data-ttu-id="e8d91-123">에 나열 된 특성을 사용 하는 인코딩된 SOAP XML을 제어할 수 [특성을 제어 인코딩된 SOAP Serialization](http://msdn.microsoft.com/library/93ee258c-9c0f-4a08-897c-c10db7a00f91)합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-123">To further control the encoded SOAP XML, use the attributes listed in [Attributes That Control Encoded SOAP Serialization](http://msdn.microsoft.com/library/93ee258c-9c0f-4a08-897c-c10db7a00f91).</span></span>  
  
 <span data-ttu-id="e8d91-124">와 <xref:System.Xml.Serialization.XmlSerializer> 의 강력한 형식의 클래스 작업에 사용할 수 있으며 여전히 XML의 유연성을 발휘할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-124">With the <xref:System.Xml.Serialization.XmlSerializer> you can take advantage of working with strongly typed classes and still have the flexibility of XML.</span></span> <span data-ttu-id="e8d91-125">필드 또는 형식의 속성을 사용 하 여 <xref:System.Xml.XmlElement>, <xref:System.Xml.XmlAttribute> 또는 <xref:System.Xml.XmlNode> 에서 강력한 형식의 클래스를 직접 XML 개체로 XML 문서의 부분을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-125">Using fields or properties of type <xref:System.Xml.XmlElement>, <xref:System.Xml.XmlAttribute> or <xref:System.Xml.XmlNode> in your strongly typed classes, you can read parts of the XML document directly into XML objects.</span></span>  
  
 <span data-ttu-id="e8d91-126">확장 가능한 XML 스키마와 함께 작업 하는 경우 사용할 수도 있습니다는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 및 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 를 serialize 및 deserialize 요소 또는 특성에는 원래 스키마에 찾을 수 없는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-126">If you work with extensible XML schemas, you can also use the <xref:System.Xml.Serialization.XmlAnyElementAttribute> and <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> attributes to serialize and deserialize elements or attributes that are not found in the original schema.</span></span> <span data-ttu-id="e8d91-127">개체를 사용 하려면 적용는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 의 배열을 반환 하는 필드에 <xref:System.Xml.XmlElement> 내용일 개체는 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 의 배열을 반환 하는 필드에 <xref:System.Xml.XmlAttribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-127">To use the objects, apply an <xref:System.Xml.Serialization.XmlAnyElementAttribute> to a field that returns an array of <xref:System.Xml.XmlElement> objects, or apply an <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> to a field that returns an array of <xref:System.Xml.XmlAttribute> objects.</span></span>  
  
 <span data-ttu-id="e8d91-128">속성 또는 필드가 복잡한 개체(예: 배열 또는 클래스 인스턴스)를 반환하는 경우 <xref:System.Xml.Serialization.XmlSerializer>는 그 개체를 주 XML 문서 내의 중첩된 요소로 변환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-128">If a property or field returns a complex object (such as an array or a class instance), the <xref:System.Xml.Serialization.XmlSerializer> converts it to an element nested within the main XML document.</span></span> <span data-ttu-id="e8d91-129">예를 들어 다음 코드에서 첫 번째 클래스는 두 번째 클래스의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-129">For example, the first class in the following code returns an instance of the second class.</span></span>  
  
```vb  
Public Class MyClass  
    Public MyObjectProperty As MyObject  
End Class  
  
Public Class MyObject  
    Public ObjectName As String  
End Class  
```  
  
```csharp  
public class MyClass  
{  
    public MyObject MyObjectProperty;  
}  
public class MyObject  
{  
    public string ObjectName;  
}  
```  
  
 <span data-ttu-id="e8d91-130">serialize 된 XML 출력은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-130">The serialized, XML output looks like this:</span></span>  
  
```  
<MyClass>  
  <MyObjectProperty>  
  <ObjectName>My String</ObjectName>  
  </MyObjectProperty>  
</MyClass>  
```  
  
 <span data-ttu-id="e8d91-131">스키마는 선택 사항 하는 요소를 포함 하는 경우 (minOccurs = '0'), 또는 스키마는 기본값을 포함 하는 경우 두 가지 옵션이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-131">If a schema includes an element that is optional (minOccurs = '0'), or if the schema includes a default value, you have two options.</span></span> <span data-ttu-id="e8d91-132">사용 하는 한 가지 방법은 <xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType> 다음 코드에 나와 있는 것 처럼 기본 값을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-132">One option is to use <xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType> to specify the default value, as shown in the following code.</span></span>  
  
```vb  
Public Class PurchaseOrder  
    <System.ComponentModel.DefaultValueAttribute ("2002")> _  
    Public Year As String  
End Class  
```  
  
```csharp  
public class PurchaseOrder  
{  
    [System.ComponentModel.DefaultValueAttribute ("2002")]  
    public string Year;  
}  
```  
  
 <span data-ttu-id="e8d91-133">또 다른 옵션은에서 인식 하는 부울 필드를 만드는 특수 한 패턴을 사용 하는 <xref:System.Xml.Serialization.XmlSerializer>, 필요한 사항을 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 필드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-133">Another option is to use a special pattern to create a Boolean field recognized by the <xref:System.Xml.Serialization.XmlSerializer>, and to apply the <xref:System.Xml.Serialization.XmlIgnoreAttribute> to the field.</span></span> <span data-ttu-id="e8d91-134">패턴은의 형태로 만들어집니다 `propertyNameSpecified`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-134">The pattern is created in the form of `propertyNameSpecified`.</span></span> <span data-ttu-id="e8d91-135">예를 들어 "MyFirstNameSpecified" 라는 필드 해지기 "MyFirstName" 이라는 필드가 지시 하는 <xref:System.Xml.Serialization.XmlSerializer> "MyFirstName" XML 요소가 생성 여부입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-135">For example, if there is a field named "MyFirstName" you would also create a field named "MyFirstNameSpecified" that instructs the <xref:System.Xml.Serialization.XmlSerializer> whether to generate the XML element named "MyFirstName".</span></span> <span data-ttu-id="e8d91-136">다음 예제에서 이를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-136">This is shown in the following example.</span></span>  
  
```vb  
Public Class OptionalOrder  
    ' This field's value should not be serialized   
    ' if it is uninitialized.  
    Public FirstOrder As String  
  
    ' Use the XmlIgnoreAttribute to ignore the   
    ' special field named "FirstOrderSpecified".  
    <System.Xml.Serialization.XmlIgnoreAttribute> _  
    Public FirstOrderSpecified As Boolean  
End Class  
```  
  
```csharp  
public class OptionalOrder  
{  
    // This field should not be serialized   
    // if it is uninitialized.  
    public string FirstOrder;  
  
    // Use the XmlIgnoreAttribute to ignore the   
    // special field named "FirstOrderSpecified".  
    [System.Xml.Serialization.XmlIgnoreAttribute]  
    public bool FirstOrderSpecified;  
}  
```  
  
## <a name="overriding-default-serialization"></a><span data-ttu-id="e8d91-137">기본 직렬화를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-137">Overriding Default Serialization</span></span>  
 <span data-ttu-id="e8d91-138">적절 한 특성 중 하나를 만들고의 인스턴스에 추가 하 여 개체 및 해당 필드와 속성 집합의 serialization을 재정의할 수도 있습니다는 <xref:System.Xml.Serialization.XmlAttributes> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-138">You can also override the serialization of any set of objects and their fields and properties by creating one of the appropriate attributes, and adding it to an instance of the <xref:System.Xml.Serialization.XmlAttributes> class.</span></span> <span data-ttu-id="e8d91-139">용도 이러한 방식으로 직렬화를 재정의: 제어 하 고 원본;에 액세스할 수 없는 경우에 DLL에 있는 개체의 serialization을 보강할 수 먼저 둘째, 하나의 집합만 serializable 클래스를 만들 수 있지만 여러 가지 방법으로 개체를 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-139">Overriding serialization in this way has two uses: first, you can control and augment the serialization of objects found in a DLL, even if you do not have access to the source; second, you can create one set of serializable classes, but serialize the objects in multiple ways.</span></span> <span data-ttu-id="e8d91-140">자세한 내용은 참조는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스 및 [하는 방법: 제어 하는 직렬화의 파생 클래스](http://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84)합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-140">For more details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class and [How to: Control Serialization of Derived Classes](http://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84).</span></span>  
  
 <span data-ttu-id="e8d91-141">호출 하는 개체를 serialize 하는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e8d91-141">To serialize an object, call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span> <span data-ttu-id="e8d91-142">호출 개체를 역직렬화 하는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e8d91-142">To deserialize an object, call the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
 <span data-ttu-id="e8d91-143">XML 네임 스페이스에 XML 문서를 추가 하려면 참조 <xref:System.Xml.Serialization.XmlSerializerNamespaces>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-143">To add XML namespaces to an XML document, see <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-144"><xref:System.Xml.Serialization.XmlSerializer> 구현 하는 클래스를 특별 한 처리를 제공 <xref:System.Collections.IEnumerable> 또는 <xref:System.Collections.ICollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-144">The <xref:System.Xml.Serialization.XmlSerializer> gives special treatment to classes that implement <xref:System.Collections.IEnumerable> or <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="e8d91-145"><xref:System.Collections.IEnumerable>을 구현하는 클래스는 단일 매개 변수를 취하는 공용 `Add` 메서드를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-145">A class that implements <xref:System.Collections.IEnumerable> must implement a public `Add` method that takes a single parameter.</span></span> <span data-ttu-id="e8d91-146">`Add` 메서드의 매개 변수에서 반환 된 동일한 형식 이어야 합니다는 `Current` 속성에서 반환 된 값을 `GetEnumerator`, 또는 해당 형식의 기본 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-146">The `Add` method's parameter must be of the same type as is returned from the `Current` property on the value returned from `GetEnumerator`, or one of that type's bases.</span></span> <span data-ttu-id="e8d91-147">구현 하는 클래스 <xref:System.Collections.ICollection> (같은 <xref:System.Collections.CollectionBase>) 외에 <xref:System.Collections.IEnumerable> 공용 있어야 `Item` 인덱싱된 속성 (C# 인덱서)는 정수를 사용 하 고 공용 이어야 `Count` integer 형식의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-147">A class that implements <xref:System.Collections.ICollection> (such as <xref:System.Collections.CollectionBase>) in addition to <xref:System.Collections.IEnumerable> must have a public `Item` indexed property (indexer in C#) that takes an integer, and it must have a public `Count` property of type integer.</span></span> <span data-ttu-id="e8d91-148">매개 변수를는 `Add` 메서드에서 반환 된 동일한 형식 이어야 합니다는 `Item` 속성 또는 해당 형식의 기본 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-148">The parameter to the `Add` method must be the same type as is returned from the `Item` property, or one of that type's bases.</span></span> <span data-ttu-id="e8d91-149">에 대 한 구현 하는 클래스 <xref:System.Collections.ICollection>, serialize 되는 값이 검색에서 인덱싱된 `Item` 속성을 호출 하 여 하지 `GetEnumerator`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-149">For classes that implement <xref:System.Collections.ICollection>, values to be serialized are retrieved from the indexed `Item` property, not by calling `GetEnumerator`.</span></span>  
  
 <span data-ttu-id="e8d91-150">(TEMP 환경 변수에 의해 정의 됨) 처럼 개체를 역직렬화 하는 임시 디렉터리에 쓸 수 있는 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-150">You must have permission to write to the temporary directory (as defined by the TEMP environment variable) to deserialize an object.</span></span>  
  
## <a name="dynamically-generated-assemblies"></a><span data-ttu-id="e8d91-151">동적으로 생성 된 어셈블리</span><span class="sxs-lookup"><span data-stu-id="e8d91-151">Dynamically Generated Assemblies</span></span>  
 <span data-ttu-id="e8d91-152">성능을 향상 시키려면 XML serialization 인프라 동적으로 지정 된 형식을 serialize 및 deserialize 하는 어셈블리를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-152">To increase performance, the XML serialization infrastructure dynamically generates assemblies to serialize and deserialize specified types.</span></span> <span data-ttu-id="e8d91-153">찾아서 해당 어셈블리를 다시 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-153">The infrastructure finds and reuses those assemblies.</span></span> <span data-ttu-id="e8d91-154">이 문제는 다음과 같은 생성자를 사용 하는 경우에 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-154">This behavior occurs only when using the following constructors:</span></span>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%29?displayProperty=nameWithType>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="e8d91-155">다른 생성자를 사용 하면 동일한 어셈블리의 여러 버전 생성 되어 언로드되지 않으므로 결과적 메모리 누수 및 성능이 저하 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-155">If you use any of the other constructors, multiple versions of the same assembly are generated and never unloaded, which results in a memory leak and poor performance.</span></span> <span data-ttu-id="e8d91-156">가장 쉬운 방법은 앞에서 언급 한 두 생성자 중 하나를 사용 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-156">The easiest solution is to use one of the previously mentioned two constructors.</span></span> <span data-ttu-id="e8d91-157">어셈블리를 캐시 해야 하는 그렇지 않은 경우는 <xref:System.Collections.Hashtable>다음 예제에 나온 것 처럼 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-157">Otherwise, you must cache the assemblies in a <xref:System.Collections.Hashtable>, as shown in the following example.</span></span>  
  
```csharp  
Hashtable serializers = new Hashtable();  
  
// Use the constructor that takes a type and XmlRootAttribute.  
XmlSerializer s = new XmlSerializer(typeof(MyClass), myRoot);  
  
// Implement a method named GenerateKey that creates unique keys   
// for each instance of the XmlSerializer. The code should take   
// into account all parameters passed to the XmlSerializer   
// constructor.  
object key = GenerateKey(typeof(MyClass), myRoot);  
  
// Check the local cache for a matching serializer.  
XmlSerializer ser = (XmlSerializer)serializers[key];  
if (ser == null)   
{  
    ser = new XmlSerializer(typeof(MyClass), myRoot);  
    // Cache the serializer.  
    serializers[key] = ser;  
}  
else  
{  
    // Use the serializer to serialize, or deserialize.  
}  
```  
  
```vb  
Dim serializers As New Hashtable()  
  
' Use the constructor that takes a type and XmlRootAttribute.  
Dim s As New XmlSerializer(GetType([MyClass]), myRoot)  
  
' Implement a method named GenerateKey that creates unique keys   
' for each instance of the XmlSerializer. The code should take   
' into account all parameters passed to the XmlSerializer   
' constructor.  
Dim key As Object = GenerateKey(GetType([MyClass]), myRoot)  
  
' Check the local cache for a matching serializer.  
Dim ser As XmlSerializer = CType(serializers(key), XmlSerializer)  
  
If ser Is Nothing Then  
    ser = New XmlSerializer(GetType([MyClass]), myRoot)  
    ' Cache the serializer.  
    serializers(key) = ser  
Else   
    ' Use the serializer to serialize, or deserialize.  
End If  
```  
  
## <a name="serialization-of-arraylist-and-generic-list"></a><span data-ttu-id="e8d91-158">ArrayList, 제네릭 목록의 serialization</span><span class="sxs-lookup"><span data-stu-id="e8d91-158">Serialization of ArrayList and Generic List</span></span>  
 <span data-ttu-id="e8d91-159"><xref:System.Xml.Serialization.XmlSerializer> serialize 하거나 다음을 deserialize 할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-159">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize or deserialize the following:</span></span>  
  
-   <span data-ttu-id="e8d91-160">배열 <xref:System.Collections.ArrayList></span><span class="sxs-lookup"><span data-stu-id="e8d91-160">Arrays of <xref:System.Collections.ArrayList></span></span>  
  
-   <span data-ttu-id="e8d91-161">배열 <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="e8d91-161">Arrays of <xref:System.Collections.Generic.List%601></span></span>  
  
## <a name="serialization-of-enumerations-of-unsigned-long"></a><span data-ttu-id="e8d91-162">부호 없는 Long 형식의 열거의 serialization</span><span class="sxs-lookup"><span data-stu-id="e8d91-162">Serialization of Enumerations of Unsigned Long</span></span>  
 <span data-ttu-id="e8d91-163"><xref:System.Xml.Serialization.XmlSerializer> 다음 조건이 true 인 경우 854 인스턴스화할 수 없습니다: 열거형은 부호 없는 long 형식의 (`ulong` C#) 보다 큰 값을 가진 멤버를 포함 하는 열거형 9223372036854775807 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-163">The <xref:System.Xml.Serialization.XmlSerializer> cannot be instantiated to serialize an enumeration if the following conditions are true: The enumeration is of type unsigned long (`ulong` in C#) and the enumeration contains any member with a value larger than 9,223,372,036,854,775,807.</span></span> <span data-ttu-id="e8d91-164">예를 들어 다음 serialize 할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-164">For example, the following cannot be serialized.</span></span>  
  
```  
public enum LargeNumbers: ulong  
{  
    a = 9223372036854775808  
}  
// At runtime, the following code will fail.  
xmlSerializer mySerializer=new XmlSerializer(typeof(LargeNumbers));  
```  
  
## <a name="objects-marked-with-the-obsolete-attribute-no-longer-serialized"></a><span data-ttu-id="e8d91-165">Serialize 된 더 이상 사용 되지 않는 특성으로 표시 된 개체</span><span class="sxs-lookup"><span data-stu-id="e8d91-165">Objects marked with the Obsolete Attribute no longer serialized</span></span>  
 <span data-ttu-id="e8d91-166">에 [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] 는 <xref:System.Xml.Serialization.XmlSerializer> 클래스 더 이상으로 표시 된 개체를 직렬화 `[Obsolete]`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-166">In the [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] the <xref:System.Xml.Serialization.XmlSerializer> class no longer serializes objects that are marked as `[Obsolete]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-167">다음 예제에는 두 가지 주요 클래스: `PurchaseOrder` 및 `Test`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-167">The following example contains two main classes: `PurchaseOrder` and `Test`.</span></span> <span data-ttu-id="e8d91-168">`PurchaseOrder` 클래스 단일 구매에 대 한 정보가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-168">The `PurchaseOrder` class contains information about a single purchase.</span></span> <span data-ttu-id="e8d91-169">`Test` 클래스 구매 주문을 만들고 생성된 된 구매 주문을 읽는 메서드가 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-169">The `Test` class contains the methods that create the purchase order, and that read the created purchase order.</span></span>  
  
 [!code-cpp[Classic XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e8d91-170">이 형식은 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-170">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8d91-171"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-171">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8d91-172"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-172">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-173">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-173">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-174">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-174">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-175">일반적으로 응용 프로그램 정의 일부는 클래스는 <xref:System.Xml.Serialization.XmlSerializer> 단일 XML 인스턴스 문서를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-175">Commonly, an application defines several classes that the <xref:System.Xml.Serialization.XmlSerializer> converts into a single XML-instance document.</span></span> <span data-ttu-id="e8d91-176">그러나는 <xref:System.Xml.Serialization.XmlSerializer> 하나만 유형-XML 루트 요소를 나타내는 클래스의 형식을 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-176">However, the <xref:System.Xml.Serialization.XmlSerializer> must know only one type--the type of the class that represents the XML root element.</span></span> <span data-ttu-id="e8d91-177"><xref:System.Xml.Serialization.XmlSerializer> 자동으로 모든 하위 클래스 인스턴스를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-177">The <xref:System.Xml.Serialization.XmlSerializer> automatically serializes all subordinate class instances.</span></span> <span data-ttu-id="e8d91-178">마찬가지로, XML 루트 요소 형식에만 deserialization에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-178">Similarly, only the type of the XML root element is required for deserialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-179">다음 구성 예제는 <xref:System.Xml.Serialization.XmlSerializer> 라는 개체를 직렬화 하 `Widget`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-179">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that serializes an object named `Widget`.</span></span> <span data-ttu-id="e8d91-180">호출 하기 전에 개체의 다양 한 속성을 설정 하는 예제는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e8d91-180">The example sets various properties of the object before calling the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping"><span data-ttu-id="e8d91-181">특정 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-181">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another.</span></span></param>
        <summary><span data-ttu-id="e8d91-182">특정 형식을 다른 형식에 매핑하는 개체를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-182">Initializes an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class using an object that maps one type to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-183">이 생성자를 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer> SOAP 메시지에 개체를 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-183">This constructor is used to create an <xref:System.Xml.Serialization.XmlSerializer> when you serialize an object into a SOAP message.</span></span> <span data-ttu-id="e8d91-184">에 있는 특수 한 특성 ("Soap"로 시작)를 사용 하 여 생성 되는 SOAP 메시지를 제어 하려면는 <xref:System.Xml.Serialization> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-184">To control the SOAP messages generated, use the special attributes (beginning with the word "Soap") found in the <xref:System.Xml.Serialization> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-185">다음 예에서는 라는 클래스를 직렬화 `Group`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-185">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="e8d91-186">serialization는 `GroupName`, `IgnoreThis` 필드 및의 멤버는 `GroupType` 열거형 재정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-186">The serialization of the `GroupName`, `IgnoreThis` fields, and the members of the `GroupType` enumeration are overridden.</span></span> <span data-ttu-id="e8d91-187">에 `CreateOverrideSerializer` 메서드를 한 <xref:System.Xml.Serialization.SoapAttributeOverrides> 개체를 만들고, 각 재정의 된 멤버 또는 열거에 대 한, 즉 <xref:System.Xml.Serialization.SoapAttributes> 적절 한 속성 집합을 추가할 개체가 만들어집니다는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-187">In the `CreateOverrideSerializer` method, a <xref:System.Xml.Serialization.SoapAttributeOverrides> object is created, and for each overridden member or enumeration, a <xref:System.Xml.Serialization.SoapAttributes> object is created with the appropriate property set and added to the <xref:System.Xml.Serialization.SoapAttributeOverrides> object.</span></span> <span data-ttu-id="e8d91-188"><xref:System.Xml.Serialization.XmlMapping> 개체를 사용 하 여 만든는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 개체를 <xref:System.Xml.Serialization.XmlMapping> 개체를 만드는 데 사용 되는 <xref:System.Xml.Serialization.XmlSerializer> 기본 직렬화를 재정의 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-188">An <xref:System.Xml.Serialization.XmlMapping> object is created using the <xref:System.Xml.Serialization.SoapAttributeOverrides> object, and that <xref:System.Xml.Serialization.XmlMapping> object is used to create the <xref:System.Xml.Serialization.XmlSerializer> that overrides the default serialization.</span></span>  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-189">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-189">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="e8d91-190">모든 XML 요소에 사용할 기본 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-190">The default namespace to use for all the XML elements.</span></span></param>
        <summary><span data-ttu-id="e8d91-191">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-191">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span> <span data-ttu-id="e8d91-192">모든 XML 요소의 기본 네임스페이스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-192">Specifies the default namespace for all the XML elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8d91-193">다음 구성 예제는 <xref:System.Xml.Serialization.XmlSerializer> 라는 개체를 직렬화 하 `Widget`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-193">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that serializes an object named `Widget`.</span></span> <span data-ttu-id="e8d91-194">호출 하기 전에 개체의 다양 한 속성을 설정 하는 예제는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e8d91-194">The example sets various properties of the object before calling the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, Type[] extraTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Type[] extraTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, cli::array &lt;Type ^&gt; ^ extraTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-195">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-195">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="e8d91-196">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-196">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-197">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-197">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into object of a specified type.</span></span> <span data-ttu-id="e8d91-198">필드 또는 속성이 배열을 반환하는 경우 <paramref name="extraTypes" /> 매개 변수는 배열에 삽입될 수 있는 개체를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-198">If a property or field returns an array, the <paramref name="extraTypes" /> parameter specifies objects that can be inserted into the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-199">기본적으로 공용 속성 또는 필드 개체, 배열 또는 개체를 반환 하는 경우 개체 유형은 자동으로 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-199">By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</span></span> <span data-ttu-id="e8d91-200">그러나 형식의 배열을 반환 하는 클래스에는 필드 또는 속성이 <xref:System.Object>, 해당 배열에 개체를 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-200">However, if a class contains a field or property that returns an array of type <xref:System.Object>, any object can be inserted into that array.</span></span> <span data-ttu-id="e8d91-201">이 경우에 <xref:System.Xml.Serialization.XmlSerializer> 삽입 되는 모든 개체 형식에 제공 되어야 합니다는 <xref:System.Object> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-201">In that case, the <xref:System.Xml.Serialization.XmlSerializer> must be instructed to expect all the possible object types that are inserted into the <xref:System.Object> array.</span></span> <span data-ttu-id="e8d91-202">이 위해 사용 하 여는 `extraTypes` 매개 변수를 serialize 하거나 deserialize 할 추가 개체 유형을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-202">To do this, use the `extraTypes` parameter to specify the extra object types to serialize or deserialize.</span></span>  
  
 <span data-ttu-id="e8d91-203">사용할 수도 있습니다는 `extraTypes` 기본 클래스에서 파생 된 매개 변수 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-203">You can also use the `extraTypes` parameter to specify types derived from a base class.</span></span> <span data-ttu-id="e8d91-204">예를 들어 라는 기본 클래스 `Phone` 존재 라는 클래스 및 `InternationalPhone` 여기에서 파생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-204">For example, suppose a base class named `Phone` exists, and a class named `InternationalPhone` derives from it.</span></span> <span data-ttu-id="e8d91-205">사용 하 여는 `extraTypes` 매개 변수를 파생된 형식도 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-205">Use the `extraTypes` parameter to specify the derived type as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-206">다음 예제에서는 개체의 배열을 반환 하는 공용 필드를 포함 하는 클래스의 인스턴스를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-206">The following example serializes an instance of a class that contains a public field that returns an array of objects.</span></span> <span data-ttu-id="e8d91-207">`extraTypes` 의 매개 변수는 <xref:System.Xml.Serialization.XmlSerializer> 생성자는 배열의 serialize 할 수 있는 개체의 유형을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-207">The `extraTypes` parameter of the <xref:System.Xml.Serialization.XmlSerializer> constructor specifies the types of the objects that can be serialized in the array.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-208">serialize할 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-208">The type of the object to serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="e8d91-209"><see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-209">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</span></span></param>
        <summary><span data-ttu-id="e8d91-210">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-210">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize XML documents into objects of the specified type.</span></span> <span data-ttu-id="e8d91-211">serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-211">Each object to be serialized can itself contain instances of classes, which this overload can override with other classes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-212">`overrides` 필드와 속성이 XML에 인코딩 되는 방법을 제어 하려면 매개 변수를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-212">The `overrides` parameter can be used to control how fields and properties are encoded in XML.</span></span> <span data-ttu-id="e8d91-213">이러한 설정은 개체에 이미 있는 모든 특성을 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-213">These settings override any attributes that already exist on the objects.</span></span> <span data-ttu-id="e8d91-214">소스 코드를 수정할 수 없습니다 또는 다중 인코딩이 동일한 클래스에 필요한 경우에 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-214">This can be useful when the source code cannot be modified or multiple encodings are required for the same classes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-215">다음 예제에서는 이렇게 하려면 및 DLL에 정의 된, DLL에 있는 공용 멤버를 재정의 하는 클래스의 인스턴스를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-215">The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the DLL.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-216">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-216">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="root"><span data-ttu-id="e8d91-217">XML 루트 요소를 나타내는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-217">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that represents the XML root element.</span></span></param>
        <summary><span data-ttu-id="e8d91-218">지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-218">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML documents, and deserialize an XML document into object of the specified type.</span></span> <span data-ttu-id="e8d91-219">또한 XML 루트 요소로 사용할 클래스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-219">It also specifies the class to use as the XML root element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-220">XML 문서의 루트 요소는 다른 모든 요소를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-220">The root element of an XML document encloses all the other elements.</span></span> <span data-ttu-id="e8d91-221">기본적으로 지정 하는 개체가 `type` 매개 변수는 루트 요소로 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-221">By default, the object specified by the `type` parameter is serialized as the root element.</span></span> <span data-ttu-id="e8d91-222">루트 요소의 XML 요소 이름 등의 속성에서 가져옵니다는 `type` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-222">Properties, such as the XML element name of the root element, are taken from the `type` object.</span></span> <span data-ttu-id="e8d91-223">그러나는 `root` 매개 변수를 사용 하면 기본 개체의 정보를 지정 하 여 바꿀 수 있습니다는 <xref:System.Xml.Serialization.XmlRootAttribute>; 개체를 사용 하면 다른 네임 스페이스, 요소 이름 및 등을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-223">However, the `root` parameter allows you to replace the default object's information by specifying an <xref:System.Xml.Serialization.XmlRootAttribute>; the object allows you to set a different namespace, element name, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-224">다음 구성 예제는 <xref:System.Xml.Serialization.XmlSerializer> 를 사용 하는 <xref:System.Xml.Serialization.XmlRootAttribute> XML 루트 요소 네임 스페이스 및 요소 이름 등의 다양 한 속성이 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-224">The following example constructs an <xref:System.Xml.Serialization.XmlSerializer> that uses an <xref:System.Xml.Serialization.XmlRootAttribute> that contains various properties of the XML root element, such as its namespace and element name.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-225">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-225">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="e8d91-226"><c>형식</c> 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-226">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <c>type</c> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="e8d91-227">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-227">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="e8d91-228">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-228">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="e8d91-229">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-229">The default namespace of all XML elements in the XML document.</span></span></param>
        <summary><span data-ttu-id="e8d91-230"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 형식의 개체를 XML 문서 인스턴스로 serialize하고 XML 문서 인스턴스를 <see cref="T:System.Object" /> 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Object" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-230">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of type <see cref="T:System.Object" /> into XML document instances, and deserialize XML document instances into objects of type <see cref="T:System.Object" />.</span></span> <span data-ttu-id="e8d91-231">serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드에서 그 클래스를 다른 클래스로 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-231">Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</span></span> <span data-ttu-id="e8d91-232">또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-232">This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-233">`overrides` 만들기에 대 한 매개 변수를 사용는 [XmlSerializer 생성자 (Type, XmlAttributeOverrides, 형식\<xref:System.Xml.Serialization.XmlSerializer >을 확장 하거나의 동작을 재정의 하는 클래스를 직렬화 하는 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-233">The `overrides` parameter allows for the creation of an [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer> that serializes a class that extends or overrides the behavior of a base class.</span></span> <span data-ttu-id="e8d91-234">예를 들어, DLL 들어 수 있기를 상속 하거나 해당 DLL에 포함 된 클래스를 확장 하는 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-234">For example, given a DLL, it is possible to create a class that inherits or extends a class contained in the DLL.</span></span> <span data-ttu-id="e8d91-235">인스턴스를 사용 해야 이러한 클래스를 serialize 하는 [XmlSerializer 생성자 (Type, XmlAttributeOverrides, 형식\<xref:System.Xml.Serialization.XmlAttributeOverrides > [(XmlSerializer 생성자를 생성할 때 클래스 형식, XmlAttributeOverrides, y p e\<xref:System.Xml.Serialization.XmlSerializer > 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-235">To serialize such a class, you must use an instance of the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlAttributeOverrides> class when constructing the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="e8d91-236">자세한 내용은 참조 하십시오. [XmlSerializer 생성자 (Type, XmlAttributeOverrides, 형식\<xref:System.Xml.Serialization.XmlAttributeOverrides > 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-236">For more details, see [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlAttributeOverrides>.</span></span>  
  
 <span data-ttu-id="e8d91-237">기본적으로 공용 속성 또는 필드 개체, 배열 또는 개체를 반환 하는 경우 개체 유형은 자동으로 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-237">By default, if a public property or field returns an object, or array of objects, the object types are automatically serialized.</span></span> <span data-ttu-id="e8d91-238">그러나 형식의 배열을 반환 하는 클래스에 필드 또는 속성 [XmlSerializer 생성자 (Type, XmlAttributeOverrides, 형식\<xref:System.Object >, 해당 배열에 개체를 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-238">However, if a class contains a field or property that returns an array of type [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Object>, any object can be inserted into that array.</span></span> <span data-ttu-id="e8d91-239">이 경우에 [XmlSerializer 생성자 (Type, XmlAttributeOverrides, 형식\<xref:System.Xml.Serialization.XmlSerializer > [XmlSerializer에 삽입 된 모든 개체 형식에 제공 되어야 합니다 생성자 (Type, XmlAttributeOverrides, 형식\<xref:System.Object > 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-239">In that case, the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer> must be instructed to expect all the possible object types that are inserted into the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Object> array.</span></span> <span data-ttu-id="e8d91-240">이 위해 사용 하 여는 `extraTypes` 매개 변수를 serialize 하거나 deserialize 할 추가 개체 유형을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-240">To do this, use the `extraTypes` parameter to specify the extra object types to serialize or deserialize.</span></span>  
  
 <span data-ttu-id="e8d91-241">XML 문서의 루트 요소는 다른 모든 요소를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-241">The root element of an XML document encloses all the other elements.</span></span> <span data-ttu-id="e8d91-242">기본적으로 지정 하는 개체가 `type` 매개 변수는 루트 요소로 serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-242">By default, the object specified by the `type` parameter is serialized as the root element.</span></span> <span data-ttu-id="e8d91-243">루트 요소의 XML 요소 이름 등의 속성에서 가져옵니다는 `type` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-243">Properties, such as the XML element name of the root element are taken from the `type` object.</span></span> <span data-ttu-id="e8d91-244">그러나는 `root` 매개 변수를 사용 하면 기본 개체의 정보를 지정 하 여 바꿀 수 있습니다는 [XmlSerializer 생성자 (Type, XmlAttributeOverrides, 형식\<xref:System.Xml.Serialization.XmlRootAttribute >; 개체를 사용 하면 다른 네임 스페이스, 요소 이름 및 등을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-244">However, the `root` parameter allows you to replace the default object's information by specifying an [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlRootAttribute>; the object allows you to set a different namespace, element name, and so on.</span></span>  
  
 <span data-ttu-id="e8d91-245">사용 하 여는 `defaultName` 모든 XML 요소에 의해 생성 된 기본 네임 스페이스를 지정 하려면 매개 변수는 [XmlSerializer 생성자 (Type, XmlAttributeOverrides, 형식\<xref:System.Xml.Serialization.XmlSerializer > 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-245">Use the `defaultName` parameter to specify the default namespace of all XML elements generated by the [XmlSerializer Constructor (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-246">다음 예제에서는 이렇게 하려면 및 DLL에 정의 된는 클래스에 공용 멤버를 재정의 하는 클래스의 인스턴스를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-246">The following example serializes an instance of a class that is defined in a DLL and to do so, overrides the public members found in the class.</span></span> <span data-ttu-id="e8d91-247">추가 형식, 모든 XML 요소 및 사용 하도록 XML 루트 요소 정보를 제공 하는 클래스에 대 한 기본 네임 스페이스의 배열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-247">The example also specifies an array of extra types, the default namespace for all XML elements, and the class to use that provides the XML root element information.</span></span> <span data-ttu-id="e8d91-248">이 예에서는 시작 부분에 코드 이라는 DLL로 컴파일 되었으면는 가정 `HighSchool`합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-248">The example assumes that the code at the beginning has been compiled into a DLL named `HighSchool`.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-249">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-249">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="e8d91-250"><c>형식</c> 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-250">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <c>type</c> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="e8d91-251">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-251">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="e8d91-252">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-252">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="e8d91-253">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-253">The default namespace of all XML elements in the XML document.</span></span></param>
        <param name="location"><span data-ttu-id="e8d91-254">형식의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-254">The location of the types.</span></span></param>
        <summary><span data-ttu-id="e8d91-255"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 형식의 개체를 XML 문서 인스턴스로 serialize하고 XML 문서 인스턴스를 <see cref="T:System.Object" /> 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Object" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-255">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of type <see cref="T:System.Object" /> into XML document instances, and deserialize XML document instances into objects of type <see cref="T:System.Object" />.</span></span> <span data-ttu-id="e8d91-256">serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드에서 그 클래스를 다른 클래스로 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-256">Each object to be serialized can itself contain instances of classes, which this overload overrides with other classes.</span></span> <span data-ttu-id="e8d91-257">또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-257">This overload also specifies the default namespace for all the XML elements and the class to use as the XML root element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use a XmlSerializer constructor overload which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-258">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-258">The type of the object that this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can serialize.</span></span></param>
        <param name="overrides"><span data-ttu-id="e8d91-259"><c>형식</c> 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-259">An <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> that extends or overrides the behavior of the class specified in the <c>type</c> parameter.</span></span></param>
        <param name="extraTypes"><span data-ttu-id="e8d91-260">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-260">A <see cref="T:System.Type" /> array of additional object types to serialize.</span></span></param>
        <param name="root"><span data-ttu-id="e8d91-261">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-261">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that defines the XML root element properties.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="e8d91-262">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-262">The default namespace of all XML elements in the XML document.</span></span></param>
        <param name="location"><span data-ttu-id="e8d91-263">형식의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-263">The location of the types.</span></span></param>
        <param name="evidence"><span data-ttu-id="e8d91-264">형식에 액세스하는 데 필요한 자격 증명이 포함된 <see cref="T:System.Security.Policy.Evidence" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-264">An instance of the <see cref="T:System.Security.Policy.Evidence" /> class that contains credentials required to access types.</span></span></param>
        <summary><span data-ttu-id="e8d91-265">지정된 형식의 개체를 XML 문서 인스턴스로 serialize하고 XML 문서 인스턴스를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-265">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class that can serialize objects of the specified type into XML document instances, and deserialize XML document instances into objects of the specified type.</span></span> <span data-ttu-id="e8d91-266">이 오버로드를 통해 serialization 또는 deserialization 작업 동안 발생할 수 있는 다른 형식뿐 아니라 모든 XML 요소에 대한 기본 네임스페이스, XML 루트 요소로 사용할 클래스, 클래스의 위치 및 액세스하는 데 필요한 자격 증명을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-266">This overload allows you to supply other types that can be encountered during a serialization or deserialization operation, as well as a default namespace for all XML elements, the class to use as the XML root element, its location, and credentials required for access.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-267">임시 디렉터리에 대 한 액세스를 보다 정확 하 게 제어할 수 있습니다. 하 고 코드 삽입 및 악용을 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-267">Allows more precise control over access to a temporary directory and prevents code injection and exploitation.</span></span> <span data-ttu-id="e8d91-268">이 메서드를 사용 하려면 위치를 지정 하 고 특정 사용자 에게만 액세스 권한을 부여 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-268">To use this method, specify a location and give access only to specific users.</span></span> <span data-ttu-id="e8d91-269">관리자 권한으로는 증거와 일치 하는 증명 정보 목록 사용 하 여 정책을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-269">Administrators can set up policies with evidence lists that match evidence to permissions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeserialize">
      <MemberSignature Language="C#" Value="public virtual bool CanDeserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDeserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDeserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="e8d91-270">deserialize할 문서를 가리키는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-270">An <see cref="T:System.Xml.XmlReader" /> that points to the document to deserialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-271">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 지정된 XML 문서를 deserialize할 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-271">Gets a value that indicates whether this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize a specified XML document.</span></span></summary>
        <returns>
          <span data-ttu-id="e8d91-272"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 가리키는 개체를 이 <see cref="T:System.Xml.XmlReader" />가 deserialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-272"><see langword="true" /> if this <see cref="T:System.Xml.Serialization.XmlSerializer" /> can deserialize the object that the <see cref="T:System.Xml.XmlReader" /> points to; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e8d91-273">다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A> XML 문서를 역직렬화 할 수 있는지 여부를 확인 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="e8d91-273">The following example calls the <xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A> method to check whether an XML document can be deserialized.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="CreateReader">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationReader CreateReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationReader CreateReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateReader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateReader () As XmlSerializationReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationReader ^ CreateReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8d91-274">serialize할 XML 문서를 읽는 데 사용되는 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-274">Returns an object used to read the XML document to be serialized.</span></span></summary>
        <returns><span data-ttu-id="e8d91-275">XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-275">An <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> used to read the XML document.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e8d91-276">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</span><span class="sxs-lookup"><span data-stu-id="e8d91-276">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWriter">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationWriter CreateWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationWriter CreateWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateWriter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWriter () As XmlSerializationWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationWriter ^ CreateWriter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8d91-277">파생 클래스에서 재정의되는 경우 개체를 serialize하는 데 사용되는 작성기를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-277">When overridden in a derived class, returns a writer used to serialize the object.</span></span></summary>
        <returns><span data-ttu-id="e8d91-278"><see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 클래스를 구현하는 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-278">An instance that implements the <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e8d91-279">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</span><span class="sxs-lookup"><span data-stu-id="e8d91-279">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8d91-280">XML 문서를 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-280">Deserializes an XML document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e8d91-281">deserialize할 XML 문서를 포함하는 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-281">The <see cref="T:System.IO.Stream" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-282">지정된 <see cref="T:System.IO.Stream" />에 포함된 XML 문서를 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-282">Deserializes the XML document contained by the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <returns><span data-ttu-id="e8d91-283">deserialize되는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-283">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-284">Deserialization은 XML 문서를 읽고에 XSD (XML 스키마) 문서의 강력한 형식이 개체 생성 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-284">Deserialization is the process of reading an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="e8d91-285">역직렬화 하는 동안, 하기 전에 <xref:System.Xml.Serialization.XmlSerializer> 역직렬화 하는 개체의 형식을 사용 하 여 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-285">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="e8d91-286">사용 하 여는 `stream` 에서 파생 되는 개체를 지정 하려면 매개 변수는 <xref:System.IO.Stream> 스트림에 데이터를 쓸 수 있도록 만들어진 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-286">Use the `stream` parameter to specify an object that derives from the <xref:System.IO.Stream> class, which is designed to write to streams.</span></span> <span data-ttu-id="e8d91-287">파생 된 클래스는 <xref:System.IO.Stream> 클래스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-287">Classes that derive from the <xref:System.IO.Stream> class include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-288"><xref:System.Xml.Serialization.XmlSerializer> 다음 역직렬화 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-288">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-289">다음 예제에서는 사용 하 여 개체를 역직렬화 한 <xref:System.IO.Stream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-289">The following example deserializes an object using a <xref:System.IO.Stream> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::TextReader ^ textReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader"><span data-ttu-id="e8d91-290">deserialize할 XML 문서를 포함하는 <see cref="T:System.IO.TextReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-290">The <see cref="T:System.IO.TextReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-291">지정된 <see cref="T:System.IO.TextReader" />에 포함된 XML 문서를 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-291">Deserializes the XML document contained by the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <returns><span data-ttu-id="e8d91-292">deserialize되는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-292">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-293">Deserialization은 XML 문서의 인스턴스를 읽고에 XSD (XML 스키마) 문서의 강력한 형식이 개체 생성 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-293">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="e8d91-294">역직렬화 하는 동안, 하기 전에 <xref:System.Xml.Serialization.XmlSerializer> 역직렬화 하는 개체의 형식을 사용 하 여 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-294">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="e8d91-295">상속 된 클래스 <xref:System.IO.TextReader> 포함 <xref:System.IO.StringReader> 및 <xref:System.IO.StreamReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-295">Classes that inherit from <xref:System.IO.TextReader> include <xref:System.IO.StringReader> and <xref:System.IO.StreamReader>.</span></span> <span data-ttu-id="e8d91-296">사용 하는 경우는 <xref:System.IO.StreamReader> 생성 해야 개체를 역직렬화 하는 <xref:System.IO.StreamReader> 가능한 적절 한 <xref:System.Text.Encoding>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-296">If you are using a <xref:System.IO.StreamReader> to deserialize an object, you must construct the <xref:System.IO.StreamReader> with an appropriate <xref:System.Text.Encoding>.</span></span> <span data-ttu-id="e8d91-297">XML 문서에서 지정 된 인코딩은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-297">The encoding specified by the XML document is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-298">XML 문서에 지정 된 인코딩을 사용 하려면 사용 하 여는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 사용 오버 로드는 <xref:System.Xml.XmlReader> 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-298">To use the encoding specified by the XML document, use the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> overload that takes an <xref:System.Xml.XmlReader> instead.</span></span> <span data-ttu-id="e8d91-299"><xref:System.Xml.XmlReader> 자동으로 검색 하 고 XML 문서에서 지정 된 인코딩을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-299">The <xref:System.Xml.XmlReader> automatically detects and uses the encoding specified by the XML document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-300"><xref:System.Xml.Serialization.XmlSerializer> 다음 역직렬화 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-300">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-301">다음 예제에서는 사용 하 여 개체를 역직렬화 한 <xref:System.IO.TextReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-301">The following example deserializes an object using a <xref:System.IO.TextReader> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-302">deserialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-302">An error occurred during deserialization.</span></span> <span data-ttu-id="e8d91-303"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-303">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual object Deserialize (System.Xml.Serialization.XmlSerializationReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Deserialize(class System.Xml.Serialization.XmlSerializationReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Deserialize (reader As XmlSerializationReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Deserialize(System::Xml::Serialization::XmlSerializationReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.Serialization.XmlSerializationReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="e8d91-304">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-304">The <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-305">지정된 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />에 포함된 XML 문서를 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-305">Deserializes the XML document contained by the specified <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</span></span></summary>
        <returns><span data-ttu-id="e8d91-306">deserialize된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-306">The deserialized object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e8d91-307">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</span><span class="sxs-lookup"><span data-stu-id="e8d91-307">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="e8d91-308">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-308">The <see cref="T:System.Xml.XmlReader" /> that contains the XML document to deserialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-309">지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서를 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-309">Deserializes the XML document contained by the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="e8d91-310">deserialize되는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-310">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-311">Deserialization은 XML 문서의 인스턴스를 읽고에 XSD (XML 스키마) 문서의 강력한 형식이 개체 생성 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-311">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="e8d91-312">역직렬화 하는 동안, 하기 전에 <xref:System.Xml.Serialization.XmlSerializer> 역직렬화 하는 개체의 형식을 사용 하 여 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-312">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="e8d91-313"><xref:System.Xml.XmlReader> 자동으로 검색 하 고 XML 문서에서 지정 된 인코딩을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-313">The <xref:System.Xml.XmlReader> automatically detects and uses the encoding specified by the XML document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-314"><xref:System.Xml.Serialization.XmlSerializer> 다음 역직렬화 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-314">The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-315">다음 예제에서는 사용 하 여 개체를 역직렬화는 <xref:System.Xml.XmlReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-315">The following example deserializes an object using an <xref:System.Xml.XmlReader>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-316">deserialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-316">An error occurred during deserialization.</span></span> <span data-ttu-id="e8d91-317"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-317">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="encodingStyle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="e8d91-318">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-318">The <see cref="T:System.Xml.XmlReader" /> that contains the XML document to deserialize.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="e8d91-319">serialize된 XML의 인코딩 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-319">The encoding style of the serialized XML.</span></span></param>
        <summary><span data-ttu-id="e8d91-320">지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서와 인코딩 스타일을 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-320">Deserializes the XML document contained by the specified <see cref="T:System.Xml.XmlReader" /> and encoding style.</span></span></summary>
        <returns><span data-ttu-id="e8d91-321">deserialize된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-321">The deserialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-322">Deserialization은 XML 문서의 인스턴스를 읽고에 XSD (XML 스키마) 문서의 강력한 형식이 개체 생성 프로세스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-322">Deserialization is the process of reading an instance of an XML document and constructing an object that is strongly typed to the XML Schema (XSD) of the document.</span></span>  
  
 <span data-ttu-id="e8d91-323">역직렬화 하는 동안, 하기 전에 <xref:System.Xml.Serialization.XmlSerializer> 역직렬화 하는 개체의 형식을 사용 하 여 생성 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-323">Before deserializing, an <xref:System.Xml.Serialization.XmlSerializer> must be constructed using the type of the object that is being deserialized.</span></span>  
  
 <span data-ttu-id="e8d91-324">설정의 `encodingStyle` 매개 변수를 "http://schemas.xmlsoap.org/soap/encoding/ " SOAP 버전 1.1 인코딩의; 그렇지 않으면으로 설정 "http://www.w3.org/2001/12/soap-encoding" SOAP 버전 1.2 인코딩의 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-324">Set the `encodingStyle` parameter to "http://schemas.xmlsoap.org/soap/encoding/ " for SOAP version 1.1 encoding; otherwise, set it to "http://www.w3.org/2001/12/soap-encoding" for SOAP version 1.2 encoding.</span></span>  
  
 <span data-ttu-id="e8d91-325">**참고** 는 <xref:System.Xml.Serialization.XmlSerializer> 다음 역직렬화 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-325">**Note** The <xref:System.Xml.Serialization.XmlSerializer> cannot deserialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-326">deserialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-326">An error occurred during deserialization.</span></span> <span data-ttu-id="e8d91-327"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-327">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="e8d91-328">deserialize할 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-328">The <see cref="T:System.Xml.XmlReader" /> that contains the document to deserialize.</span></span></param>
        <param name="events"><span data-ttu-id="e8d91-329"><see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-329">An instance of the <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> class.</span></span></param>
        <summary><span data-ttu-id="e8d91-330">지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서를 deserialize하고 deserialization을 수행하는 동안 발생하는 이벤트를 재정의할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-330">Deserializes an XML document contained by the specified <see cref="T:System.Xml.XmlReader" /> and allows the overriding of events that occur during deserialization.</span></span></summary>
        <returns><span data-ttu-id="e8d91-331">deserialize되는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-331">The <see cref="T:System.Object" /> being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-332">deserialize되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-332">The object being deserialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="encodingStyle" Type="System.String" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="e8d91-333">문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-333">An instance of the <see cref="T:System.Xml.XmlReader" /> class used to read the document.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="e8d91-334">사용되는 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-334">The encoding used.</span></span></param>
        <param name="events"><span data-ttu-id="e8d91-335"><see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-335">An instance of the <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> class.</span></span></param>
        <summary><span data-ttu-id="e8d91-336">지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 데이터를 사용하여 개체를 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-336">Deserializes the object using the data contained by the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="e8d91-337">deserialize되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-337">The object being deserialized.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-338">이 메서드는 메시지의 알 수 없는 웹 서비스 시나리오에만 헤더 deserialization에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-338">This method is required for deserialization of unknown headers for Web Service scenarios only.</span></span> <span data-ttu-id="e8d91-339">이 메서드를 사용 하면 웹 서비스 메서드에서 이벤트 동기화를 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-339">This method allows you to avoid event synchronization in Web Service methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromMappings">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8d91-340">지정된 매핑에 따라 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-340">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class from the specified mappings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMappings (mappings As XmlMapping()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="e8d91-341">특정 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-341">An array of <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that maps one type to another.</span></span></param>
        <summary><span data-ttu-id="e8d91-342"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열에서 만들어진 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-342">Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> objects.</span></span></summary>
        <returns><span data-ttu-id="e8d91-343"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-343">An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of FromMappings which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="e8d91-344">특정 형식을 다른 형식에 매핑하는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlMapping" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-344">An array of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects used to map one type to another.</span></span></param>
        <param name="evidence"><span data-ttu-id="e8d91-345">공용 언어 런타임 정책 시스템에 전달되는 호스트 및 어셈블리 데이터가 포함된 <see cref="T:System.Security.Policy.Evidence" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-345">An instance of the <see cref="T:System.Security.Policy.Evidence" /> class that contains host and assembly data presented to the common language runtime policy system.</span></span></param>
        <summary><span data-ttu-id="e8d91-346">XML 형식 간의 매핑에 따라 생성되는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-346">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class created from mappings of one XML type to another.</span></span></summary>
        <returns><span data-ttu-id="e8d91-347"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-347">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mappings"><span data-ttu-id="e8d91-348"><see cref="T:System.Xml.Serialization.XmlMapping" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-348">An array of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects.</span></span></param>
        <param name="type"><span data-ttu-id="e8d91-349">deserialize된 개체의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-349">The <see cref="T:System.Type" /> of the deserialized object.</span></span></param>
        <summary><span data-ttu-id="e8d91-350">지정된 매핑에 따라 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-350">Returns an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class from the specified mappings.</span></span></summary>
        <returns><span data-ttu-id="e8d91-351"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-351">An instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypes">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromTypes (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromTypes(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTypes (types As Type()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromTypes(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="e8d91-352"><see cref="T:System.Type" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-352">An array of <see cref="T:System.Type" /> objects.</span></span></param>
        <summary><span data-ttu-id="e8d91-353">형식 배열에서 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-353">Returns an array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects created from an array of types.</span></span></summary>
        <returns><span data-ttu-id="e8d91-354"><see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-354">An array of <see cref="T:System.Xml.Serialization.XmlSerializer" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-355"><xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> 메서드를 사용 하면 효율적으로 배열을 만들 수 있습니다 <xref:System.Xml.Serialization.XmlSerializer> 개체의 배열을 처리용 <xref:System.Type> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-355">The <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> method allows you to efficiently create an array of <xref:System.Xml.Serialization.XmlSerializer> objects for processing an array of <xref:System.Type> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-356">다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> 의 배열을 반환 하는 메서드 <xref:System.Xml.Serialization.XmlSerializer> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-356">The following example uses the <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> method to return an array of <xref:System.Xml.Serialization.XmlSerializer> objects.</span></span> <span data-ttu-id="e8d91-357">코드의 배열을 만드는 데 사용 되는 세 가지 클래스 정의 <xref:System.Type> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-357">The code includes three class definitions that are each used to create an array of <xref:System.Type> objects.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8d91-358">형식화된 serializer가 포함된 어셈블리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-358">Returns an assembly that contains typed serializers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-359">[XML Serializer 생성기 도구 (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) 의 런타임 성능을 향상 시키기 위해 지정된 된 어셈블리의 형식에 대 한 XML serialization 어셈블리를 만듭니다는 <xref:System.Xml.Serialization.XmlSerializer> 때를 직렬화 또는 역직렬화의 개체는 지정 된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-359">The [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="e8d91-360">사용 하 여는 <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> 를 이러한 어셈블리의 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-360">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="e8d91-361">웹 서비스를 호출 하는 클라이언트 응용 프로그램의 일부로 이러한 어셈블리를 배포 하는 경우 적용할 수 있습니다는 <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> 어셈블리의 이름과 위치를 지정 하려면 클라이언트 형식에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-361">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="e8d91-362">형식 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-362">A collection of types.</span></span></param>
        <param name="mappings"><span data-ttu-id="e8d91-363">특정 형식을 다른 형식으로 변환하는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlMapping" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-363">A collection of <see cref="T:System.Xml.Serialization.XmlMapping" /> objects used to convert one type to another.</span></span></param>
        <summary><span data-ttu-id="e8d91-364">지정된 매핑을 사용하여 하나 이상의 지정된 형식을 serialize 또는 deserialize하는 데 사용되는 사용자 지정 serializer가 포함된 어셈블리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-364">Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings.</span></span></summary>
        <returns><span data-ttu-id="e8d91-365">제공된 형식 및 매핑에 대한 serializer가 포함된 <see cref="T:System.Reflection.Assembly" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-365">An <see cref="T:System.Reflection.Assembly" /> object that contains serializers for the supplied types and mappings.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings, System.CodeDom.Compiler.CompilerParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings, class System.CodeDom.Compiler.CompilerParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping(), parameters As CompilerParameters) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::CodeDom::Compiler::CompilerParameters ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="parameters" Type="System.CodeDom.Compiler.CompilerParameters" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="e8d91-366">데이터를 serialize하고 deserialize하는 데 사용되는 개체가 포함된 <see cref="T:System.Type" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-366">An array of type <see cref="T:System.Type" /> that contains objects used to serialize and deserialize data.</span></span></param>
        <param name="mappings"><span data-ttu-id="e8d91-367">XML 데이터를 형식 데이터에 매핑하는 <see cref="T:System.Xml.Serialization.XmlMapping" /> 형식의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-367">An array of type <see cref="T:System.Xml.Serialization.XmlMapping" /> that maps the XML data to the type data.</span></span></param>
        <param name="parameters"><span data-ttu-id="e8d91-368">컴파일러를 호출하는 데 사용되는 매개 변수를 나타내는 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-368">An instance of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> class that represents the parameters used to invoke a compiler.</span></span></param>
        <summary><span data-ttu-id="e8d91-369">지정된 매핑과 컴파일러 설정 및 옵션을 사용하여 하나 이상의 지정된 형식을 serialize 또는 deserialize하는 데 사용되는 사용자 지정 serializer가 포함된 어셈블리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-369">Returns an assembly that contains custom-made serializers used to serialize or deserialize the specified type or types, using the specified mappings and compiler settings and options.</span></span></summary>
        <returns><span data-ttu-id="e8d91-370"><see cref="T:System.Reflection.Assembly" />의 특수 버전이 포함된 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-370">An <see cref="T:System.Reflection.Assembly" /> that contains special versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlSerializerAssemblyName">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8d91-371">특정 형식을 serialize 또는 deserialize하기 위해 특별히 생성된 하나 또는 여러 버전의 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 포함된 어셈블리의 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-371">Returns the name of the assembly that contains one or more versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> especially created to serialize or deserialize specific types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-372">[XML Serializer 생성기 도구 (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) 의 런타임 성능을 향상 시키기 위해 지정된 된 어셈블리의 형식에 대 한 XML serialization 어셈블리를 만듭니다는 <xref:System.Xml.Serialization.XmlSerializer> 때를 직렬화 또는 역직렬화의 개체는 지정 된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-372">The [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="e8d91-373">사용 하 여는 <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> 를 이러한 어셈블리의 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-373">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="e8d91-374">웹 서비스를 호출 하는 클라이언트 응용 프로그램의 일부로 이러한 어셈블리를 배포 하는 경우 적용할 수 있습니다는 <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> 어셈블리의 이름과 위치를 지정 하려면 클라이언트 형식에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-374">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-375">deserialize하고 있는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-375">The <see cref="T:System.Type" /> you are deserializing.</span></span></param>
        <summary><span data-ttu-id="e8d91-376">지정된 형식을 serialize 또는 deserialize하기 위해 특별히 생성된 하나 또는 여러 버전의 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 포함된 어셈블리의 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-376">Returns the name of the assembly that contains one or more versions of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> especially created to serialize or deserialize the specified type.</span></span></summary>
        <returns><span data-ttu-id="e8d91-377">형식에 대한 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 포함된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-377">The name of the assembly that contains an <see cref="T:System.Xml.Serialization.XmlSerializer" /> for the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-378">[XML Serializer 생성기 도구 (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) 의 런타임 성능을 향상 시키기 위해 지정된 된 어셈블리의 형식에 대 한 XML serialization 어셈블리를 만듭니다는 <xref:System.Xml.Serialization.XmlSerializer> 때를 직렬화 또는 역직렬화의 개체는 지정 된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-378">The [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="e8d91-379">사용 하 여는 <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> 를 이러한 어셈블리의 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-379">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="e8d91-380">웹 서비스를 호출 하는 클라이언트 응용 프로그램의 일부로 이러한 어셈블리를 배포 하는 경우 적용할 수 있습니다는 <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> 어셈블리의 이름과 위치를 지정 하려면 클라이언트 형식에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-380">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e8d91-381">원하는 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-381">The <see cref="T:System.Type" /> you are interested in.</span></span></param>
        <param name="defaultNamespace"><span data-ttu-id="e8d91-382">형식의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-382">The namespace of the type.</span></span></param>
        <summary><span data-ttu-id="e8d91-383">지정된 네임스페이스의 지정된 형식에 대한 serializer가 포함된 어셈블리의 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-383">Returns the name of the assembly that contains the serializer for the specified type in the specified namespace.</span></span></summary>
        <returns><span data-ttu-id="e8d91-384">특별히 빌드된 serializer가 포함된 어셈블리의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-384">The name of the assembly that contains specially built serializers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-385">[XML Serializer 생성기 도구 (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) 의 런타임 성능을 향상 시키기 위해 지정된 된 어셈블리의 형식에 대 한 XML serialization 어셈블리를 만듭니다는 <xref:System.Xml.Serialization.XmlSerializer> 때를 직렬화 또는 역직렬화의 개체는 지정 된 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-385">The [XML Serializer Generator Tool (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) creates an XML serialization assembly for types in a specified assembly to improve the run-time performance of an <xref:System.Xml.Serialization.XmlSerializer> when it serializes or deserializes objects of the specified types.</span></span> <span data-ttu-id="e8d91-386">사용 하 여는 <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> 를 이러한 어셈블리의 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-386">Use the <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> to return the name of such an assembly.</span></span>  
  
 <span data-ttu-id="e8d91-387">웹 서비스를 호출 하는 클라이언트 응용 프로그램의 일부로 이러한 어셈블리를 배포 하는 경우 적용할 수 있습니다는 <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> 어셈블리의 이름과 위치를 지정 하려면 클라이언트 형식에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-387">If you are distributing such an assembly as part of a client application that calls a Web service, you can apply the <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> to the client type to specify the location and name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8d91-388">개체를 XML 문서로 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-388">Serializes an object into an XML document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e8d91-389">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-389">The <see cref="T:System.IO.Stream" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="e8d91-390">serialize할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-390">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-391">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.Stream" />을 사용하여 XML 문서를 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-391">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-392"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드는 공용 필드 및 개체의 읽기/쓰기 속성을 XML로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-392">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="e8d91-393">메서드, 인덱서, private 필드 또는 읽기 전용 속성에는 변환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-393">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="e8d91-394">모든 개체의 필드 및 속성을 serialize 하려면 공용 및 전용을 모두 사용 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-394">To serialize all of an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="e8d91-395">에 `stream` 매개 변수를 추상에서 파생 되는 개체를 지정 <xref:System.IO.Stream> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-395">In the `stream` parameter, specify an object that derives from the abstract <xref:System.IO.Stream> class.</span></span> <span data-ttu-id="e8d91-396">파생 된 클래스 <xref:System.IO.Stream> 포함:</span><span class="sxs-lookup"><span data-stu-id="e8d91-396">Classes that derive from <xref:System.IO.Stream> include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-397"><xref:System.Xml.Serialization.XmlSerializer> 다음 serialize 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-397">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-398">다음 예제에서는 사용 하 여 개체를 serialize 한 <xref:System.IO.Stream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-398">The following example serializes an object using a <xref:System.IO.Stream> object.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-399">serialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-399">An error occurred during serialization.</span></span> <span data-ttu-id="e8d91-400"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-400">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="textWriter"><span data-ttu-id="e8d91-401">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-401">The <see cref="T:System.IO.TextWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="e8d91-402">serialize할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-402">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-403">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.TextWriter" />을 사용하여 XML 문서를 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-403">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-404"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드는 공용 필드 및 개체의 읽기/쓰기 속성을 XML로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-404">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="e8d91-405">메서드, 인덱서, private 필드 또는 읽기 전용 속성에는 변환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-405">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="e8d91-406">개체의 모든 필드와 속성을 serialize 하려면 공용 및 전용을 모두 사용 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-406">To serialize all an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="e8d91-407">에 `textWriter` 매개 변수를 추상에서 파생 되는 개체를 지정 <xref:System.IO.TextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-407">In the `textWriter` parameter, specify an object that derives from the abstract <xref:System.IO.TextWriter> class.</span></span> <span data-ttu-id="e8d91-408">파생 된 클래스 <xref:System.IO.TextWriter> 포함:</span><span class="sxs-lookup"><span data-stu-id="e8d91-408">Classes that derive from <xref:System.IO.TextWriter> include:</span></span>  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-409"><xref:System.Xml.Serialization.XmlSerializer> 다음 serialize 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-409">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-410">다음 예제에서는 사용 하 여 개체를 serialize 한 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-410">The following example serializes an object using a <xref:System.IO.TextWriter>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (object o, System.Xml.Serialization.XmlSerializationWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(object o, class System.Xml.Serialization.XmlSerializationWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (o As Object, writer As XmlSerializationWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Object ^ o, System::Xml::Serialization::XmlSerializationWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="writer" Type="System.Xml.Serialization.XmlSerializationWriter" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e8d91-411">serialize할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-411">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="writer"><span data-ttu-id="e8d91-412">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-412">The <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> used to write the XML document.</span></span></param>
        <summary><span data-ttu-id="e8d91-413">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />을 사용하여 XML 문서를 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-413">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="e8d91-414">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</span><span class="sxs-lookup"><span data-stu-id="e8d91-414">Any attempt is made to access the method when the method is not overridden in a descendant class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="e8d91-415">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-415">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="e8d91-416">serialize할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-416">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <summary><span data-ttu-id="e8d91-417">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />을 사용하여 XML 문서를 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-417">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-418"><xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드는 공용 필드 및 개체의 읽기/쓰기 속성을 XML로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-418">The <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method converts the public fields and read/write properties of an object into XML.</span></span> <span data-ttu-id="e8d91-419">메서드, 인덱서, private 필드 또는 읽기 전용 속성에는 변환 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-419">It does not convert methods, indexers, private fields, or read-only properties.</span></span> <span data-ttu-id="e8d91-420">개체의 모든 필드와 속성을 serialize 하려면 공용 및 전용을 모두 사용 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-420">To serialize all an object's fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="e8d91-421">에 `xmlWriter` 매개 변수를 추상에서 파생 되는 개체를 지정 <xref:System.Xml.XmlWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-421">In the `xmlWriter` parameter, specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class.</span></span> <span data-ttu-id="e8d91-422"><xref:System.Xml.XmlTextWriter> 에서 파생 되는 <xref:System.Xml.XmlWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-422">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-423"><xref:System.Xml.Serialization.XmlSerializer> 다음 serialize 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-423">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-424">다음 예제에서는 사용 하 여 개체를 serialize 한 <xref:System.Xml.XmlWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-424">The following example serializes an object using an <xref:System.Xml.XmlWriter>.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-425">serialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-425">An error occurred during serialization.</span></span> <span data-ttu-id="e8d91-426"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-426">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e8d91-427">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-427">The <see cref="T:System.IO.Stream" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="e8d91-428">serialize할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-428">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="e8d91-429">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-429">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <summary><span data-ttu-id="e8d91-430">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 네임스페이스를 참조하는 지정된 <see cref="T:System.IO.Stream" />을 사용하여 XML 문서를 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-430">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.Stream" /> that references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-431">경우는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드가 호출 되 면 공용 필드 및 개체의 읽기/쓰기 속성은 XML로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-431">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="e8d91-432">메서드, 인덱서, private 필드 및 읽기 전용 속성이 serialize 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-432">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="e8d91-433">모든 필드와 속성을 serialize 하려면 공용 및 전용을 모두 사용 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-433">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="e8d91-434">사용 하 여는 `stream` 추상에서 파생 되는 개체를 지정 하려면 매개 변수 <xref:System.IO.Stream> 스트림에 데이터를 쓸 수 있도록 만들어진 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-434">Use the `stream` parameter to specify an object that derives from the abstract <xref:System.IO.Stream> class, which is designed to write to streams.</span></span> <span data-ttu-id="e8d91-435">파생 된 클래스는 <xref:System.IO.Stream> 클래스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-435">Classes that derive from the <xref:System.IO.Stream> class include:</span></span>  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-436"><xref:System.Xml.Serialization.XmlSerializer> 다음 serialize 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-436">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-437">다음 예제에서는 serialize 된 개체는 <xref:System.IO.Stream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-437">The following example serializes an object with a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="e8d91-438">이 예에서는 또한 만듭니다는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 개체에 두 개의 네임 스페이스를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-438">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> and adds two namespaces to the object.</span></span> <span data-ttu-id="e8d91-439">직렬화 된 개체를 정의 하는 클래스도 특성으로 지정 <xref:System.Xml.Serialization.XmlElementAttribute> 특성을 각 요소에 대 한 네임 스페이스를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-439">The class that defines the serialized object is also attributed with <xref:System.Xml.Serialization.XmlElementAttribute> attributes to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-440">serialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-440">An error occurred during serialization.</span></span> <span data-ttu-id="e8d91-441"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-441">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="textWriter"><span data-ttu-id="e8d91-442">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-442">The <see cref="T:System.IO.TextWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="e8d91-443">serialize할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-443">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="e8d91-444">생성된 XML 문서의 네임스페이스를 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-444">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> that contains namespaces for the generated XML document.</span></span></param>
        <summary><span data-ttu-id="e8d91-445">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스를 참조합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-445">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.IO.TextWriter" /> and references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-446">경우는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드가 호출 되는 공용 필드 및 개체의 읽기/쓰기 속성은 XML로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-446">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="e8d91-447">메서드, 인덱서, private 필드 및 읽기 전용 속성이 serialize 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-447">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="e8d91-448">모든 필드와 속성을 serialize 하려면 공용 및 전용을 모두 사용 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-448">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="e8d91-449">사용 하 여는 `textWriter` 추상에서 파생 되는 개체를 지정 하려면 매개 변수 <xref:System.IO.TextWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-449">Use the `textWriter` parameter to specify an object that derives from the abstract <xref:System.IO.TextWriter> class.</span></span> <span data-ttu-id="e8d91-450">파생 된 클래스 <xref:System.IO.TextWriter> 클래스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-450">Classes that derive from <xref:System.IO.TextWriter> class include:</span></span>  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-451"><xref:System.Xml.Serialization.XmlSerializer> 다음 serialize 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-451">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-452">다음 예제에서는 serialize 된 개체는 <xref:System.IO.TextWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-452">The following example serializes an object with a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e8d91-453">이 예에서는 또한 만듭니다는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 개체 및 개체에 두 개의 네임 스페이스를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-453">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object and adds two namespaces to the object.</span></span> <span data-ttu-id="e8d91-454">직렬화 된 개체를 정의 하는 클래스도 특성으로 지정 <xref:System.Xml.Serialization.XmlElementAttribute> 특성을 각 요소에 대 한 네임 스페이스를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-454">The class that defines the serialized object is also attributed with <xref:System.Xml.Serialization.XmlElementAttribute> attributes to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-455">serialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-455">An error occurred during serialization.</span></span> <span data-ttu-id="e8d91-456"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-456">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="e8d91-457">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-457">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="e8d91-458">serialize할 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-458">The <see cref="T:System.Object" /> to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="e8d91-459">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-459">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <summary><span data-ttu-id="e8d91-460">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스를 참조합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-460">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" /> and references the specified namespaces.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-461">경우는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드가 호출 되 면 공용 필드 및 개체의 읽기/쓰기 속성은 XML로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-461">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="e8d91-462">메서드, 인덱서, private 필드 및 읽기 전용 속성이 serialize 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-462">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="e8d91-463">모든 필드와 속성을 serialize 하려면 공용 및 전용을 모두 사용 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-463">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="e8d91-464">사용 하 여는 `xmlWriter` 추상에서 파생 되는 개체를 지정 하려면 매개 변수 <xref:System.Xml.XmlWriter> XML 문서를 작성할 수 있도록 만들어진 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-464">Use the `xmlWriter` parameter to specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class, which is designed to write XML documents.</span></span> <span data-ttu-id="e8d91-465"><xref:System.Xml.XmlTextWriter> 에서 파생 되는 <xref:System.Xml.XmlWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-465">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-466"><xref:System.Xml.Serialization.XmlSerializer> 다음 serialize 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-466">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-467">다음 예제에서는 serialize 된 개체는 <xref:System.Xml.XmlWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-467">The following example serializes an object with an <xref:System.Xml.XmlWriter>.</span></span> <span data-ttu-id="e8d91-468">이 예에서는 또한 만듭니다는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 개체에 두 개의 네임 스페이스를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-468">The example also creates an <xref:System.Xml.Serialization.XmlSerializerNamespaces> and adds two namespaces to the object.</span></span> <span data-ttu-id="e8d91-469">여러 인스턴스는 <xref:System.Xml.Serialization.XmlElementAttribute> 클래스는 각 요소에 대 한 네임 스페이스를 지정 하는 클래스 멤버에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-469">Several instances of the <xref:System.Xml.Serialization.XmlElementAttribute> class are applied to the class members to specify the namespace for each element.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-470">serialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-470">An error occurred during serialization.</span></span> <span data-ttu-id="e8d91-471"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-471">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
        <Parameter Name="encodingStyle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="e8d91-472">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-472">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="e8d91-473">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-473">The object to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="e8d91-474">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-474">The <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenced by the object.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="e8d91-475">serialize된 XML의 인코딩 스타일입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-475">The encoding style of the serialized XML.</span></span></param>
        <summary><span data-ttu-id="e8d91-476">지정된 개체를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스 및 인코딩 스타일을 참조합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-476">Serializes the specified object and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" /> and references the specified namespaces and encoding style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-477">경우는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 메서드가 호출 되 면 공용 필드 및 개체의 읽기/쓰기 속성은 XML로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-477">When the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method is invoked, the public fields and read/write properties of an object are converted into XML.</span></span> <span data-ttu-id="e8d91-478">메서드, 인덱서, private 필드 및 읽기 전용 속성이 serialize 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-478">Methods, indexers, private fields, and read-only properties are not serialized.</span></span> <span data-ttu-id="e8d91-479">모든 필드와 속성을 serialize 하려면 공용 및 전용을 모두 사용 된 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-479">To serialize all fields and properties, both public and private, use the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</span></span>  
  
 <span data-ttu-id="e8d91-480">사용 하 여는 `xmlWriter` 추상에서 파생 되는 개체를 지정 하려면 매개 변수 <xref:System.Xml.XmlWriter> XML 문서를 작성할 수 있도록 만들어진 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-480">Use the `xmlWriter` parameter to specify an object that derives from the abstract <xref:System.Xml.XmlWriter> class, which is designed to write XML documents.</span></span> <span data-ttu-id="e8d91-481"><xref:System.Xml.XmlTextWriter> 에서 파생 되는 <xref:System.Xml.XmlWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-481">The <xref:System.Xml.XmlTextWriter> derives from the <xref:System.Xml.XmlWriter>.</span></span>  
  
 <span data-ttu-id="e8d91-482">설정의 `encodingStyle` 매개 변수를 "http://schemas.xmlsoap.org/soap/encoding/"SOAP 버전 1.1 인코딩의; 그렇지 않으면로 설정"http://www.w3.org/2001/12/soap-encoding" SOAP 버전 1.2 인코딩의 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-482">Set the `encodingStyle` parameter to "http://schemas.xmlsoap.org/soap/encoding/" for SOAP version 1.1 encoding; otherwise, set it to "http://www.w3.org/2001/12/soap-encoding" for SOAP version 1.2 encoding.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-483"><xref:System.Xml.Serialization.XmlSerializer> 다음 serialize 할 수 없습니다: 배열을 <xref:System.Collections.ArrayList> 및 배열을 <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-483">The <xref:System.Xml.Serialization.XmlSerializer> cannot serialize the following: arrays of <xref:System.Collections.ArrayList> and arrays of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d91-484">serialization 중 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-484">An error occurred during serialization.</span></span> <span data-ttu-id="e8d91-485"><see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-485">The original exception is available using the <see cref="P:System.Exception.InnerException" /> property.</span></span></exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle, System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
        <Parameter Name="encodingStyle" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlWriter"><span data-ttu-id="e8d91-486">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-486">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span></span></param>
        <param name="o"><span data-ttu-id="e8d91-487">serialize할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-487">The object to serialize.</span></span></param>
        <param name="namespaces"><span data-ttu-id="e8d91-488">사용할 네임스페이스 및 접두사가 포함된 <see langword="XmlSerializaerNamespaces" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-488">An instance of the <see langword="XmlSerializaerNamespaces" /> that contains namespaces and prefixes to use.</span></span></param>
        <param name="encodingStyle"><span data-ttu-id="e8d91-489">문서에서 사용되는 인코딩입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-489">The encoding used in the document.</span></span></param>
        <param name="id"><span data-ttu-id="e8d91-490">SOAP로 인코딩된 메시지의 경우 id 특성을 생성하는 데 사용되는 기본 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-490">For SOAP encoded messages, the base used to generate id attributes.</span></span></param>
        <summary><span data-ttu-id="e8d91-491">지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />, XML 네임스페이스 및 인코딩을 사용하여 XML 문서를 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-491">Serializes the specified <see cref="T:System.Object" /> and writes the XML document to a file using the specified <see cref="T:System.Xml.XmlWriter" />, XML namespaces, and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-492">*id* 매개 변수는 SOAP id 생성에 사용 되는 기본 문자열을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-492">The *id* parameter supplies the base string used to create SOAP ids.</span></span> <span data-ttu-id="e8d91-493">기본적으로 이러한은 "id1", "id2" 및 등입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-493">By default, these are "id1", "id2" and so on.</span></span> <span data-ttu-id="e8d91-494">하지만 생성 된 값 매개 변수 "myBase"로 설정 됩니다 등 "myBaseid1", "myBaseid2" 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-494">But if the parameter is set to "myBase" the generated values are "myBaseid1", "myBaseid2" and so on.</span></span> <span data-ttu-id="e8d91-495">이 기능은 전체 SOAP 메시지에서 고유 id 값을 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-495">This functionality is used to create unique id values across the whole SOAP message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownAttribute">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownAttribute As XmlAttributeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlAttributeEventHandler ^ UnknownAttribute;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8d91-496"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 특성이 나타날 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-496">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML attribute of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-497">기본적으로 호출한 후는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드는 <xref:System.Xml.Serialization.XmlSerializer> 알 수 없는 형식의 XML 특성을 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-497">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML attributes of unknown types.</span></span> <span data-ttu-id="e8d91-498">그러나 이러한 노드 유형을 처리 하도록이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-498">However, you can use this event to handle such node types.</span></span>  
  
 <span data-ttu-id="e8d91-499">Deserialize 되 고 클래스의 인스턴스의 배열을 반환 하는 필드를 포함 하는 경우 <xref:System.Xml.XmlAttribute> 개체 및 <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> 필드에 적용 된는 <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-499">If the instance of the class being deserialized contains a field that returns an array of <xref:System.Xml.XmlAttribute> objects and an <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> has been applied to the field, the <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> event does not occur.</span></span> <span data-ttu-id="e8d91-500">대신, 모든 알 수 없는 XML 특성은 배열에 수집 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-500">Instead, all unknown XML attributes are collected into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-501">다음 예제에서는 XML 문서를 역직렬화 하는 동안 발생 하는 모든 알 수 없는 특성에 대 한 정보를 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-501">The following example prints information about any unknown attributes encountered while deserializing an XML document.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="UnknownElement">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlElementEventHandler UnknownElement;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlElementEventHandler UnknownElement" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownElement As XmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlElementEventHandler ^ UnknownElement;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8d91-502"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 요소를 발견하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-502">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML element of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-503">기본적으로 호출한 후는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드는 <xref:System.Xml.Serialization.XmlSerializer> 알 수 없는 형식의 XML 특성을 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-503">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML attributes of unknown types.</span></span> <span data-ttu-id="e8d91-504">그러나 이러한 노드 유형을 처리 하도록이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-504">However, you can use this event to handle such node types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e8d91-505">경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 의 배열을 반환 하는 필드에 적용할 <xref:System.Xml.XmlElement> 개체, 배열에 알 수 없는 요소를 모두 수집 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-505">If the <xref:System.Xml.Serialization.XmlAnyElementAttribute> is applied to a field that returns an array of <xref:System.Xml.XmlElement> objects, all unknown elements are collected in the array.</span></span> <span data-ttu-id="e8d91-506">이 경우에 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 이벤트가 발생 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-506">In that case, the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> event does not occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-507">다음 예에서는 라는 클래스를 deserialize `Group` UnknownElements.xml 라는 파일에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-507">The following example deserializes a class named `Group` from a file named UnknownElements.xml.</span></span> <span data-ttu-id="e8d91-508">클래스에서 해당 멤버가 없는 파일에는 요소를 찾을 때마다는 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-508">Whenever an element is found in the file that has no corresponding member in the class, the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> event occurs.</span></span> <span data-ttu-id="e8d91-509">이 예제를 실행 하려면 다음 XML 코드를 UnknownElements.xml 라는 파일로 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-509">To try the example, paste the following XML code into a file named UnknownElements.xml.</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="UnknownNode">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlNodeEventHandler UnknownNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlNodeEventHandler UnknownNode" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownNode As XmlNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlNodeEventHandler ^ UnknownNode;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8d91-510"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 노드가 나타날 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-510">Occurs when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters an XML node of unknown type during deserialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-511">기본적으로 호출한 후는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드는 <xref:System.Xml.Serialization.XmlSerializer> 알 수 없는 형식의 XML 노드를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-511">By default, after calling the <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method, the <xref:System.Xml.Serialization.XmlSerializer> ignores XML nodes of unknown types.</span></span> <span data-ttu-id="e8d91-512">그러나 이러한 노드 유형을 처리 하도록이 이벤트를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-512">However, you can use this event to handle such node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-513">다음 예제에서는 발생 한 모든 알 수 없는 노드 유형의 인쇄합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-513">The following example prints the type of any encountered unknown node.</span></span>  
  
 [!code-cpp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
    <Member MemberName="UnreferencedObject">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnreferencedObject As UnreferencedObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::UnreferencedObjectEventHandler ^ UnreferencedObject;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.UnreferencedObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8d91-514">SOAP로 인코딩된 XML 스트림의 deserialization을 수행하는 동안 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 사용되지 않았거나 참조되지 않은 인식할 수 있는 형식을 발견하면 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-514">Occurs during deserialization of a SOAP-encoded XML stream, when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> encounters a recognized type that is not used or is unreferenced.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d91-515"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> 이벤트는 런타임에만 발생 때는 <xref:System.Xml.Serialization.XmlSerializer> "Simple Object Access Protocol (SOAP) 1.1" World Wide Web 컨소시엄 (www.w3.org) 문서의 섹션 5 준수 하는 SOAP 메시지를 포함 하는 XML 문서를 역직렬화 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-515">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event only occurs when the <xref:System.Xml.Serialization.XmlSerializer> is used to deserialize an XML document that contains a SOAP message that conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1".</span></span>  
  
 <span data-ttu-id="e8d91-516">섹션 5 준수 하는 문서는 특별 한 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-516">Documents that conform to section 5 are in a special format.</span></span> <span data-ttu-id="e8d91-517">최소한, 이러한 문서는 SOAP 메시지의 본문을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-517">At the very least, such a document includes the main body of the SOAP message.</span></span> <span data-ttu-id="e8d91-518">그러나 문서에 인라인 정의 모든 형식이 아닌 형식 정의 만들었다고 문서의 최상위 요소에 대 한 참조로 인코딩할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-518">However, rather than having all types defined inline in the document, some type definitions can be encoded as references to top-level elements in the document.</span></span> <span data-ttu-id="e8d91-519">따라서 본문은 참조에는 모든 요소에 대해 있어야 형식 정의 포함 하는 해당 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-519">Thus, for every element found in the main body that is a reference, there must be a corresponding element that contains the type definition.</span></span> <span data-ttu-id="e8d91-520">참조 요소와 형식 정의 상관 관계를 분석 하기 위해 형식 정의는 `id` 고유 문자열 ID 및 참조 요소로 설정 하는 특성에는 `href` 같은 ID를 참조 하는 특성</span><span class="sxs-lookup"><span data-stu-id="e8d91-520">To correlate the referencing element and the type definition, the type definition has an `id` attribute set to a unique string ID and the referencing element has an `href` attribute that references the same ID.</span></span>  
  
```  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" GroupNumber="ZDI=" CreationDate="2002-05-02" xmlns:n1="http:'www.cpandl.com">  
    <PosInt xsi:type="xsd:nonNegativeInteger">10000</PosInt>  
    <GroupVehicle href="#id2" />  
  </Group>  
  <Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
```  
  
 <span data-ttu-id="e8d91-521"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> 형식 정의 문서에서 찾을 수 없을 때 이벤트 발생 하지만 참조 하는 본문에서 매개 변수가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-521">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event occur when there is a type definition found in the document, but no parameter in the main body references it.</span></span> <span data-ttu-id="e8d91-522">이벤트가 발생할 때를 검사 하 여 XML 유형의 참조 되지 않은 개체를 검색할 수 있습니다는 <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A> 의 속성은 <xref:System.Xml.Serialization.UnreferencedObjectEventArgs> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-522">When the event occurs, you can retrieve the XML type of the unreferenced object by examining the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A> property of the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs> class.</span></span> <span data-ttu-id="e8d91-523">개체의 XML ID가 반환한는 <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-523">The XML ID of the object is returned by the <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A> property.</span></span>  
  
 <span data-ttu-id="e8d91-524"><xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> 이벤트와 일치 하지 않습니다는 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 및 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> XML 노드 또는 요소 형식에 해당 하는 클래스 멤버가 없는 경우 발생 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-524">The <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> event should not be confused with the <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> and <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> events, which occur when there is no class member that corresponds to the XML node or element type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d91-525">다음 예제에서는 추가 <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> 에 <xref:System.Xml.Serialization.XmlSerializer>합니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-525">The following example adds an <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> to an <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="e8d91-526">이벤트를 처리는 `Serializer``_``UnreferencedObject` 메서드.</span><span class="sxs-lookup"><span data-stu-id="e8d91-526">The event is handled by the `Serializer``_``UnreferencedObject` method.</span></span> <span data-ttu-id="e8d91-527">이 예제를 실행 하려면 잘라내어 "UnrefObj.xml" 라는 파일에 다음 XML을 붙여 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="e8d91-527">To run the example, cut and paste the following XML into a file named "UnrefObj.xml".</span></span>  
  
```  
<wrapper>  
  <Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" xmlns:n1="http://www.cpandl.com">  
   </Group>  
<Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">ABCD</licenseNumber>  
  </Vehicle>  
<Vehicle id="id3" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
</wrapper>  
```  
  
 [!code-cpp[UnreferencedObject Event Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/UnreferencedObject Event Example/CPP/unrefobj.cpp#1)]
 [!code-csharp[UnreferencedObject Event Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/UnreferencedObject Event Example/CS/unrefobj.cs#1)]
 [!code-vb[UnreferencedObject Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/UnreferencedObject Event Example/VB/unrefobj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
      </Docs>
    </Member>
  </Members>
</Type>