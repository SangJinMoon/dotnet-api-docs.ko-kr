<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a98aa130890eb05c5962405024a99b6cfcac833e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720747" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>멤버(<see cref="T:System.Xml.XmlElement" /> 또는 <see cref="T:System.Xml.XmlNode" /> 개체의 배열을 반환하는 필드)가 serialize 또는 deserialize되고 있는 개체에 해당 멤버가 없는 XML 요소를 나타내는 개체를 포함하도록 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  이식 가능한 클래스 라이브러리를 사용할 때와 같이 Silverlight, Windows Phone 또는 Windows 스토어 앱 프로젝트를를 사용 하는.NET Framework 4.0.3 이상 사용 하 여 <xref:System.Xml.Linq.XElement> 또는 <xref:System.Xml.Linq.XNode> 대신 <xref:System.Xml.XmlElement> 및 <xref:System.Xml.XmlNode>합니다.  
  
 사용 하 여는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> (XML 요소로) XML 문서에서 메타 데이터 문서의 일부로 전송 등의 일부로 보낼 수 있는 임의 데이터를 포함 시키십시오.  
  
 적용 된 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 의 배열을 반환 하는 필드에 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체입니다. 이러한 필드를 사용 하는 개체 되 고 있는지 여부에 따라 두 가지 방법으로 serialize 되거나 deserialize 합니다. Serialize 된 개체는 없는 해당 멤버 (또는 멤버) 개체에 serialize 되 고 있더라도 XML 요소 또는 노드로 생성 됩니다. 지정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 값 특성을 적용 하는 경우 모든 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 배열에 삽입 하는 개체는 동일한 요소 이름 및 기본 네임 스페이스를 해야 합니다. 또는 예외가 throw 됩니다. 설정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 설정 해야 속성 값은 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성도 및 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체 이름 및 네임 스페이스 값이 같은 있어야 합니다. 없는 경우 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값을 지정 된 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체는 요소 이름을 가질 수 있습니다.  
  
 호출 하는 경우는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 의 메서드는 <xref:System.Xml.Serialization.XmlSerializer> 클래스, 역직렬화 중인 개체에 해당 멤버를 포함 하지 않은 모든 요소 배열에서 수집 됩니다. Deserialization 후의 컬렉션을 반복 <xref:System.Xml.XmlElement> 항목 데이터를 처리 합니다. 지정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값, 배열에는 해당 이름 가진 XML 요소만 포함 합니다. 지정 하지 않는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 배열 값을 해당 멤버가 없는 클래스에 있는 모든 요소를 포함 합니다. 특성이 적용 되는 둘 이상의 필드를 포함 하는 클래스를 사용 하 여는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, 또는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 및 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 배열의 내용을 구분할 수 속성입니다. 이러한 여러 필드가 있는 클래스 구분 속성 값 집합에 있는 하나의 필드를 포함 하는 경우 (즉, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 및 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 역직렬화 하는 동안이 배열에 이미 포함 되어 있지 않은 모든 알 수 없는 XML 요소 포함 에 다른 배열입니다. 클래스에 둘 이상의 필드를 구분 하지 않은 경우 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, 또는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 및 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 값 집합을 역직렬화 하는 동안 동작이 지정 되지 않습니다.  
  
 적용할 수 있습니다는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 는 단일 반환 하는 필드를 <xref:System.Xml.XmlElement> 개체입니다. 메서드와 속성 사용 해야 할 경우는 <xref:System.Xml.XmlElement> 알 수 없는 요소를 통해 클래스를 재귀적으로 반복 합니다.  
  
 여러 인스턴스를 적용할 수는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 클래스에 멤버를 있지만 각 인스턴스에 고유한 되어 있어야 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 값입니다. 하거나, 있는 경우 동일한 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성은 고유한 각 인스턴스에 대해 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 각 인스턴스에 대 한 속성 값을 설정 해야 합니다.  
  
 <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> 및 <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> 의 이벤트는 <xref:System.Xml.Serialization.XmlSerializer> 적용 하는 경우에 발생 하지 않습니다는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 클래스의 멤버에 있습니다.  
  
> [!NOTE]
>  word를 사용 하 여 `XmlAnyElement` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlAnyElementAttribute>합니다.  
  
 특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 라는 필드에 `AllElements` 의 배열을 반환 하는 <xref:System.Xml.XmlElement> 개체입니다.  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 필드의 serialization을 재정의 하는 경우 생성자입니다. 직렬화를 재정의 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</param>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서에 생성된 XML 요소의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 필드의 serialization을 재정의 하는 경우 생성자입니다. 직렬화를 재정의 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</param>
        <param name="ns">XML 요소의 XML 네임스페이스입니다.</param>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서와 이 문서의 XML 네임스페이스에 생성된 XML 요소의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 필드의 serialization을 재정의 하는 경우 생성자입니다. 직렬화를 재정의 하는 방법에 대 한 자세한 내용은 참조는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 요소 이름을 가져오거나 설정합니다.</summary>
        <value>XML 요소의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 값 특성을 적용 하는 경우 모든 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 배열에 삽입 하는 개체는 동일한 요소 이름 및 기본 네임 스페이스를 해야 합니다. 또는 예외가 throw 됩니다. 설정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 설정 해야 속성 값은 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성도 및 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체 이름 및 네임 스페이스 값이 같은 있어야 합니다. 없는 경우 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값을 지정 된 <xref:System.Xml.XmlElement> 또는 <xref:System.Xml.XmlNode> 개체는 요소 이름을 가질 수 있습니다.  
  
 호출 하는 경우는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 의 메서드는 <xref:System.Xml.Serialization.XmlSerializer> 역직렬화 중인 개체에 해당 멤버를 포함 하지 않은 모든 특성 클래스 배열에 수집 됩니다. 지정 하는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 값, 배열에는 해당 이름 가진 XML 요소만 포함 합니다. 지정 하지 않는 경우는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 배열 값을 해당 멤버가 없는 클래스에 있는 모든 요소를 포함 합니다. 특성이 적용 되는 둘 이상의 필드를 포함 하는 클래스를 사용 하 여는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 및 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 배열의 내용을 구분할 수 속성입니다. 이러한 여러 필드가 있는 클래스 구분 속성 값 집합에 있는 하나의 필드를 포함 하는 경우 (즉, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 및 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) 배열 deserialization을 수행 하는 동안 다른에 아직 포함 되지 않은 모든 XML 요소를 포함 배열입니다. 둘 이상의 필드를 구분 하지 않은 경우 추가 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 또는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 값 집합을 다른 배열에 아직 포함 되지 않은 모든 알 수 없는 요소를 포함 하는 클래스의 마지막 필드 및 다른 필드가 설정 된 `null`합니다.  
  
 여러 인스턴스를 적용할 수는 <xref:System.Xml.Serialization.XmlAnyElementAttribute> 클래스에 멤버를 있지만 각 인스턴스에 고유한 되어 있어야 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성 값입니다. 하거나, 있는 경우 동일한 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> 속성은 고유한 각 인스턴스에 대해 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 각 인스턴스에 대 한 속성 값을 설정 해야 합니다.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">배열 멤버의 요소 이름이 <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /> 속성으로 지정한 요소 이름과 일치하지 않는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 문서에 생성된 XML 네임스페이스를 가져오거나 설정합니다.</summary>
        <value>XML 네임스페이스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 속성을 사용 하면 XML 특성에 대 한 고유한 이름을 설정할 수 있습니다. <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 속성은 World Wide Web 컨소시엄 (www.w3.org) 문서의 "XML에 네임 스페이스입니다." 볼 수 있는 XML 네임 스페이스를 만들기 위한 규칙을 따르는  
  
 설정 하는 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 속성을 접두사가 붙은 이름 만들기는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 네임 스페이스 및 XML 문서에 사용 되는 접두사를 포함 하는 합니다. 설정의 <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> 속성의 네임 스페이스 중 하나는 <xref:System.Xml.Serialization.XmlSerializerNamespaces>합니다. XML을 생성 하는 경우 특성 이름이 올바르게 지정된 된 네임 스페이스와 관련 된 붙습니다.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</summary>
        <value>코드가 생성되는 순서입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 지시 하는 열거형은 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 설정 하는 코드를 생성 하는 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 속성입니다.  
  
> [!IMPORTANT]
>  한 번의 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 하나의 공용 속성 또는 형식에서 필드에 사용 되었습니다. 속성, 모든 public 속성 및 해당 형식과 상속 된 모든 형식에 대 한 필드에 적용 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>