<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlAnyElementAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a98aa130890eb05c5962405024a99b6cfcac833e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a98aa130890eb05c5962405024a99b6cfcac833e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>Specifies that the member (a field that returns an array of <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</source>
          <target state="translated">멤버(<ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> 개체의 배열을 반환하는 필드)가 serialize 또는 deserialize되고 있는 개체에 해당 멤버가 없는 XML 요소를 나타내는 개체를 포함하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>When working in a portable class library, such as in Silverlight, Windows Phone or Windows Store App project, and you are using the .NET Framework 4.0.3 and above, use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Linq.XNode&gt;</ph> in place of <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph>.</source>
          <target state="translated">이식 가능한 클래스 라이브러리를 사용할 때와 같이 Silverlight, Windows Phone 또는 Windows 스토어 앱 프로젝트를를 사용 하는.NET Framework 4.0.3 이상 사용 하 여 <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.Linq.XNode&gt;</ph> 대신 <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to contain arbitrary data (as XML elements) that can be sent as part of an XML document, such as metadata sent as part of the document.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> (XML 요소로) XML 문서에서 메타 데이터 문서의 일부로 전송 등의 일부로 보낼 수 있는 임의 데이터를 포함 시키십시오.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a field that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects.</source>
          <target state="translated">적용 된 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 의 배열을 반환 하는 필드에 <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>Such a field can be used in two ways, depending on whether an object is being serialized or deserialized.</source>
          <target state="translated">이러한 필드를 사용 하는 개체 되 고 있는지 여부에 따라 두 가지 방법으로 serialize 되거나 deserialize 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>When serialized, the object is generated as XML elements or nodes, even though they have no corresponding member (or members) in the object being serialized.</source>
          <target state="translated">Serialize 된 개체는 없는 해당 멤버 (또는 멤버) 개체에 serialize 되 고 있더라도 XML 요소 또는 노드로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If you specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property value when applying the attribute, all <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 속성 값 특성을 적용 하는 경우 모든 <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> 배열에 삽입 하는 개체는 동일한 요소 이름 및 기본 네임 스페이스를 해야 합니다. 또는 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If you set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property value, you must set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property as well, and the <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph> objects must also have the same name and namespace values.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 설정 해야 속성 값은 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 속성도 및 <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph> 개체 이름 및 네임 스페이스 값이 같은 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value is specified, the <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects can have any element name.</source>
          <target state="translated">없는 경우 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 값을 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> 개체는 요소 이름을 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>When you call the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class, all elements that do not have a corresponding member in the object being deserialized are collected in the array.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 클래스, 역직렬화 중인 개체에 해당 멤버를 포함 하지 않은 모든 요소 배열에서 수집 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>After deserialization, iterate through the collection of <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> items to process the data.</source>
          <target state="translated">Deserialization 후의 컬렉션을 반복 <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> 항목 데이터를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If you specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value, the array contains only XML elements with that name.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 값, 배열에는 해당 이름 가진 XML 요소만 포함 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value, the array contains all elements that have no corresponding member in the class.</source>
          <target state="translated">지정 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 배열 값을 해당 멤버가 없는 클래스에 있는 모든 요소를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If a class contains more than one field to which the attribute is applied, use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> properties to differentiate between the contents of the arrays.</source>
          <target state="translated">특성이 적용 되는 둘 이상의 필드를 포함 하는 클래스를 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph>, 또는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 배열의 내용을 구분할 수 속성입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If such a class (with multiple fields) also contains one field that has no differentiating property values set (in other words, <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph>) during deserialization, this array contains any unknown XML elements that are not already contained in the other arrays.</source>
          <target state="translated">이러한 여러 필드가 있는 클래스 구분 속성 값 집합에 있는 하나의 필드를 포함 하는 경우 (즉, <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph>) 역직렬화 하는 동안이 배열에 이미 포함 되어 있지 않은 모든 알 수 없는 XML 요소 포함 에 다른 배열입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If a class contains more than one field that does not have a differentiating <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> value set, the behavior during deserialization is unspecified.</source>
          <target state="translated">클래스에 둘 이상의 필드를 구분 하지 않은 경우 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph>, 또는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 값 집합을 역직렬화 하는 동안 동작이 지정 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>You can also apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a field that returns a single <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> object.</source>
          <target state="translated">적용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 는 단일 반환 하는 필드를 <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>If you do so, you must use the properties and methods of the <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> class to recursively iterate through the unknown elements.</source>
          <target state="translated">메서드와 속성 사용 해야 할 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> 알 수 없는 요소를 통해 클래스를 재귀적으로 반복 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>You can apply multiple instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a class member, but each instance must have a distinct <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property value.</source>
          <target state="translated">여러 인스턴스를 적용할 수는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 클래스에 멤버를 있지만 각 인스턴스에 고유한 되어 있어야 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>Or, if the same <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property is set for each instance, a distinct <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property value must be set for each instance.</source>
          <target state="translated">하거나, 있는 경우 동일한 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 속성은 고유한 각 인스턴스에 대해 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 각 인스턴스에 대 한 속성 값을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownNode&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute&gt;</ph> events of the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> do not occur if you apply the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a member of a class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownNode&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute&gt;</ph> 의 이벤트는 <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 적용 하는 경우에 발생 하지 않습니다는 <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 클래스의 멤버에 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>You can use the word <ph id="ph1">`XmlAnyElement`</ph> in your code instead of the longer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>.</source>
          <target state="translated">word를 사용 하 여 <ph id="ph1">`XmlAnyElement`</ph> 대신에 간결 코드에서 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>특성<ept id="p1">](~/docs/standard/attributes/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a field named <ph id="ph2">`AllElements`</ph> that returns an array of <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 적용 된 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 라는 필드에 <ph id="ph2">`AllElements`</ph> 의 배열을 반환 하는 <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlAnyElementAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> constructor when you are overriding the serialization of a field.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 필드의 serialization을 재정의 하는 경우 생성자입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
          <source>For more details about overriding serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">직렬화를 재정의 하는 방법에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
          <source>The name of the XML element that the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> generates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>가 생성하는 XML 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> class and specifies the XML element name generated in the XML document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화하며 XML 문서에 생성된 XML 요소의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> constructor when you are overriding the serialization of a field.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 필드의 serialization을 재정의 하는 경우 생성자입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
          <source>For more details about overriding serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">직렬화를 재정의 하는 방법에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
          <source>The name of the XML element that the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> generates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>가 생성하는 XML 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
          <source>The XML namespace of the XML element.</source>
          <target state="translated">XML 요소의 XML 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> class and specifies the XML element name generated in the XML document and its XML namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화하며 XML 문서와 이 문서의 XML 네임스페이스에 생성된 XML 요소의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> constructor when you are overriding the serialization of a field.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 필드의 serialization을 재정의 하는 경우 생성자입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
          <source>For more details about overriding serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">직렬화를 재정의 하는 방법에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>Gets or sets the XML element name.</source>
          <target state="translated">XML 요소 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>The name of the XML element.</source>
          <target state="translated">XML 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>If you specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property value when applying the attribute, all <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 속성 값 특성을 적용 하는 경우 모든 <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> 배열에 삽입 하는 개체는 동일한 요소 이름 및 기본 네임 스페이스를 해야 합니다. 또는 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>If you set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property value, you must set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property as well, and the <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph> objects must also have the same name and namespace values.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 설정 해야 속성 값은 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 속성도 및 <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph> 개체 이름 및 네임 스페이스 값이 같은 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value is specified, the <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects can have any element name.</source>
          <target state="translated">없는 경우 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 값을 지정 된 <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> 개체는 요소 이름을 가질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>When you call the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class, all attributes that do not have a corresponding member in the object being deserialized are collected in the array.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 역직렬화 중인 개체에 해당 멤버를 포함 하지 않은 모든 특성 클래스 배열에 수집 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>If you specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value, the array contains only XML elements with that name.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 값, 배열에는 해당 이름 가진 XML 요소만 포함 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value, the array contains all elements that have no corresponding member in the class.</source>
          <target state="translated">지정 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 배열 값을 해당 멤버가 없는 클래스에 있는 모든 요소를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>If a class contains more than one field to which the attribute is applied, use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> properties to differentiate between the contents of the arrays.</source>
          <target state="translated">특성이 적용 되는 둘 이상의 필드를 포함 하는 클래스를 사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 배열의 내용을 구분할 수 속성입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>If such a class (with multiple fields) also contains one field that has no differentiating property values set (that is, <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph>) during deserialization, the array contains any XML elements that are not already contained in the other arrays.</source>
          <target state="translated">이러한 여러 필드가 있는 클래스 구분 속성 값 집합에 있는 하나의 필드를 포함 하는 경우 (즉, <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph>) 배열 deserialization을 수행 하는 동안 다른에 아직 포함 되지 않은 모든 XML 요소를 포함 배열입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>If you add more than one field that does not have a differentiating <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> value set, the last field in the class contains all unknown elements that are not already contained in the other arrays, and any other fields are set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">둘 이상의 필드를 구분 하지 않은 경우 추가 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 값 집합을 다른 배열에 아직 포함 되지 않은 모든 알 수 없는 요소를 포함 하는 클래스의 마지막 필드 및 다른 필드가 설정 된 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>You can apply multiple instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a class member, but each instance must have a distinct <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property value.</source>
          <target state="translated">여러 인스턴스를 적용할 수는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> 클래스에 멤버를 있지만 각 인스턴스에 고유한 되어 있어야 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>Or, if the same <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property is set for each instance, a distinct <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property value must be set for each instance.</source>
          <target state="translated">하거나, 있는 경우 동일한 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> 속성은 고유한 각 인스턴스에 대해 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 각 인스턴스에 대 한 속성 값을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
          <source>The element name of an array member does not match the element name specified by the <ph id="ph1">&lt;see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /&gt;</ph> property.</source>
          <target state="translated">배열 멤버의 요소 이름이 <ph id="ph1">&lt;see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" /&gt;</ph> 속성으로 지정한 요소 이름과 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
          <source>Gets or sets the XML namespace generated in the XML document.</source>
          <target state="translated">XML 문서에 생성된 XML 네임스페이스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
          <source>An XML namespace.</source>
          <target state="translated">XML 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property allows you to set a unique name for the XML attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 속성을 사용 하면 XML 특성에 대 한 고유한 이름을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property conforms to the rules for creating an XML namespace as found in the World Wide Web Consortium (www.w3.org) document, "Namespaces in XML."</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 속성은 World Wide Web 컨소시엄 (www.w3.org) 문서의 "XML에 네임 스페이스입니다." 볼 수 있는 XML 네임 스페이스를 만들기 위한 규칙을 따르는</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
          <source>To set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property to a prefixed name, create an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> that contains the namespaces and prefixes used in the XML document.</source>
          <target state="translated">설정 하는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 속성을 접두사가 붙은 이름 만들기는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> 네임 스페이스 및 XML 문서에 사용 되는 접두사를 포함 하는 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
          <source>Set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property to one of the namespaces in the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> 속성의 네임 스페이스 중 하나는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
          <source>When the XML is generated, the attribute name is correctly prefixed with the prefix associated with the specified namespace.</source>
          <target state="translated">XML을 생성 하는 경우 특성 이름이 올바르게 지정된 된 네임 스페이스와 관련 된 붙습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
          <source>Gets or sets the explicit order in which the elements are serialized or deserialized.</source>
          <target state="translated">요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
          <source>The order of the code generation.</source>
          <target state="translated">코드가 생성되는 순서입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> enumeration to instruct the <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> to generate code that sets the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> 지시 하는 열거형은 <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> 설정 하는 코드를 생성 하는 <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
          <source>Once the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</source>
          <target state="translated">한 번의 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> 하나의 공용 속성 또는 형식에서 필드에 사용 되었습니다. 속성, 모든 public 속성 및 해당 형식과 상속 된 모든 형식에 대 한 필드에 적용 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>