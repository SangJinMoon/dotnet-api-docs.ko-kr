<Type Name="CodeIdentifiers" FullName="System.Xml.Serialization.CodeIdentifiers">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6f40d51bc25248bb5ab7434f0479011c04676bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440506" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeIdentifiers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeIdentifiers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.CodeIdentifiers" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeIdentifiers" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeIdentifiers" />
  <TypeSignature Language="F#" Value="type CodeIdentifiers = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>관련 코드 엔터티 이름의 그룹이나 .NET Framework XML serialization 인프라에서 생성한 형식 매핑을 유지합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 다음 목록에는 도구를 식별 하 고 사용 하는 클래스는 <xref:System.Xml.Serialization.CodeIdentifiers>:  
  
-   [웹 서비스 설명 언어 도구 (Wsdl.exe)](http://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88), 또는 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 설명 언어 WSDL (웹 서비스) 문서에서 클라이언트 프록시 클래스 또는 추상 서버 클래스를 생성 하는 동안 클래스입니다.  
  
-   [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) XML 스키마 정의 (XSD) 문서로에서 클래스를 생성 하는 동안 도구입니다.  
  
-   <xref:System.Web.Services.Description.ServiceDescriptionReflector> 클래스를 만드는 동안 <xref:System.Web.Services.Description.ServiceDescription> 웹 서비스를 통해 식별 되는 클래스의 개체는 <xref:System.Web.Services.WebServiceAttribute> 특성입니다.  
  
 사용 하는 대신는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스를 직접 앞에서 언급 한 도구 또는 클래스를 사용 합니다. 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 합니다.  
  
 이 범위에 따라 한 <xref:System.Xml.Serialization.CodeIdentifiers> 인스턴스는 다음 목록에 있는 항목의 이름을 유지 하기 위해 사용할 수 있습니다.  
  
-   형식, 메서드 또는 필드를 선택 합니다.  
  
-   매개 변수 및 반환 값에 해당 WSDL 하는 메서드의 입력 및 출력 메시지입니다.  
  
-   내에서 개체는 <xref:System.Web.Services.Description.ServiceDescription> WSDL 문서를 serialize 할 수 있는 인스턴스.  
  
 일반적으로 클래스의 포함 하는 엔터티 이름으로 충돌을 포함 하 여 특정 범위 내에서 코드 엔터티 간 이름 충돌을 방지 하기 위해 사용 됩니다.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeIdentifiers();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeIdentifiers (bool caseSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool caseSensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (caseSensitive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeIdentifiers(bool caseSensitive);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.CodeIdentifiers : bool -&gt; System.Xml.Serialization.CodeIdentifiers" Usage="new System.Xml.Serialization.CodeIdentifiers caseSensitive" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caseSensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="caseSensitive">식별자가 대/소문자를 구분하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 클래스의 새 인스턴스를 초기화하고 코드 식별자가 대/소문자를 구분하는지 여부를 확인합니다.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string identifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string identifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (identifier As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ identifier, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="codeIdentifiers.Add (identifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="identifier">코드 엔터티를 인덱싱할 때 사용되는 이름입니다.</param>
        <param name="value">코드 엔터티 또는 형식 매핑 정보입니다.</param>
        <summary>명명된 코드 엔터티나 형식 매핑을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 달리는 <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> 메서드는 <xref:System.Xml.Serialization.CodeIdentifiers.Add%2A> 때도 메서드 이름 충돌 합니다.  
  
 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스입니다. 전체 목록을 보려면를 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddReserved">
      <MemberSignature Language="C#" Value="public void AddReserved (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReserved(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddReserved (identifier As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReserved(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="member this.AddReserved : string -&gt; unit" Usage="codeIdentifiers.AddReserved identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 범위 내에서 사용할 수 없게 되는 이름입니다.</param>
        <summary>지정한 이름을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 범위 내에서 사용하지 못하게 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예약 된 이름이 포함 된 코드 엔터티를 멤버 이름을 생성 해야 하는 형식과 같은 속할 수 있습니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddUnique">
      <MemberSignature Language="C#" Value="public string AddUnique (string identifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddUnique(string identifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddUnique (identifier As String, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AddUnique(System::String ^ identifier, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddUnique : string * obj -&gt; string" Usage="codeIdentifiers.AddUnique (identifier, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="identifier">코드 엔터티를 인덱싱할 때 사용되는 후보 이름입니다.</param>
        <param name="value">코드 엔터티 또는 형식 매핑 정보입니다.</param>
        <summary>명명된 코드 항목이나 형식 매핑을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에 추가합니다. 이 때 이름은 범위 내에서 고유해야 합니다.</summary>
        <returns>이름 충돌이 있는 경우 식별자 매개 변수 값이나 수정된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 식별자 매개 변수 값 내에서 고유 하지 않은 경우는 <xref:System.Xml.Serialization.CodeIdentifiers> 새, 고유 문자열 인스턴스 범위에서 생성 되 고 대신 사용 합니다. 새 문자열 입력된 이름에 추가 하 여 생성 됩니다. 원래 이름에 이전에 전달 된 경우 고유 하지 않습니다는 <xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>, <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>, 또는 <xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> 메서드를 한 이전 호출에 의해 생성 된 경우 또는 <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> 메서드. 각각의 경우에서 새 식별자가 고유 하지 않으면 처음에 전달 되기는 <xref:System.Xml.Serialization.CodeIdentifiers.MakeUnique%2A> 방법을 새 고유 식별자를 만들 수 있습니다.  
  
 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스입니다. 전체 목록을 보려면를 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="codeIdentifiers.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에서 모든 코드 엔터티나 형식 매핑을 해당하는 이름과 함께 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 필드를 통해 추가 된 예약 된 이름은 <xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> 메서드를 제거 되지 않습니다.  
  
 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스입니다. 전체 목록을 보려면를 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsInUse">
      <MemberSignature Language="C#" Value="public bool IsInUse (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInUse(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInUse (identifier As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInUse(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="member this.IsInUse : string -&gt; bool" Usage="codeIdentifiers.IsInUse identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 사용되는지 확인할 이름입니다.</param>
        <summary>지정한 이름이 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 이미 사용되고 있는지 여부를 확인합니다.</summary>
        <returns>이름이 이미 사용되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 입력된 이름이에 이전에 전달 된 경우 고유 하지 않습니다는 <xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>, <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>, 또는 <xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> 메서드를 하거나에 의해 생성 된 경우는 <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> 메서드.  
  
 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스입니다. 전체 목록을 보려면를 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakeRightCase">
      <MemberSignature Language="C#" Value="public string MakeRightCase (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeRightCase(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeRightCase (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MakeRightCase(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="member this.MakeRightCase : string -&gt; string" Usage="codeIdentifiers.MakeRightCase identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">수정될 수 있는 이름입니다.</param>
        <summary>
          <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> 속성 값에 따라 이름을 수정하여 입력의 대/소문자를 올바르게 만듭니다.</summary>
        <returns>입력 식별자와 같거나 첫 문자의 대/소문자가 수정된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 하는 경우의 값은 <xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A> 속성은 `true` 및 입력 값의 첫 번째 문자는 문자, 소문자로 필요한 경우. 경우의 값은 <xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A> 은 `false`파스칼식 대/소문자가 적용 하 고 첫 번째 문자가 문자 이면 문자를 대문자로 필요 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakeUnique">
      <MemberSignature Language="C#" Value="public string MakeUnique (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeUnique(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeUnique (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MakeUnique(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="member this.MakeUnique : string -&gt; string" Usage="codeIdentifiers.MakeUnique identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">고유하지 않은 경우 수정할 이름입니다.</param>
        <summary>입력 이름이 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내의 다른 이름과 충돌하는지 확인하고 충돌할 경우 수정된 문자열을 생성합니다.</summary>
        <returns>이름 충돌이 있는 경우 식별자 매개 변수 값이나 수정된 문자열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 입력된 이름이에 이전에 전달 된 경우 고유 하지 않습니다는 <xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>, <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>, 또는 <xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A> 메서드를 하거나에 의해 생성 된 경우는 <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A> 메서드. 이름이 고유 하지 않으면 새 문자열은 원래 문자열에 추가 하 여 생성 됩니다.  
  
 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스입니다. 전체 목록을 보려면를 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (identifier As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="codeIdentifiers.Remove identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">제거할 코드 엔터티나 형식 매핑의 이름입니다.</param>
        <summary>
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에서 입력 이름으로 식별되는 코드 엔터티나 형식 매핑을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스입니다. 전체 목록을 보려면를 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RemoveReserved">
      <MemberSignature Language="C#" Value="public void RemoveReserved (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveReserved(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveReserved (identifier As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveReserved(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="member this.RemoveReserved : string -&gt; unit" Usage="codeIdentifiers.RemoveReserved identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 사용할 수 있게 될 이름입니다.</param>
        <summary>
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 예약된 이름에서 입력 이름을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public object ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ToArray(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.ToArray : Type -&gt; obj" Usage="codeIdentifiers.ToArray type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">인스턴스의 모든 코드 엔터티 또는 형식 매핑에 대한 형식입니다.</param>
        <summary>
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에 있는 코드 엔터티 또는 형식 매핑의 배열을 반환합니다.</summary>
        <returns>
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 개체에서 저장한 코드 엔터티 또는 형식 매핑의 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <xref:System.Xml.Serialization.CodeIdentifiers> 클래스입니다. 전체 목록을 보려면를 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UseCamelCasing">
      <MemberSignature Language="C#" Value="public bool UseCamelCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCamelCasing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCamelCasing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCamelCasing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCamelCasing : bool with get, set" Usage="System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>인스턴스가 카멜식 대/소문자를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다. </summary>
        <value>인스턴스가 카멜식 대/소문자를 사용하면 <see langword="true" />이고, 그렇지 않고 파스칼식 대/소문자를 사용하면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 카멜식 대/소문자 경우 식별자의 첫 번째 문자는 문자, 소문자 여야 합니다. 파스칼식 대 / 소문자로 된 경우 첫 번째 문자는 문자, 대문자 여야 합니다.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>