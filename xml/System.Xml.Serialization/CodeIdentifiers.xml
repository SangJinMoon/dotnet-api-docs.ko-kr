<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeIdentifiers.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac516b1c25698b0afa3fb04d166b9e98816c76600d1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16b1c25698b0afa3fb04d166b9e98816c76600d1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>Maintains a group of names for related code entities or type mappings that are generated by the .NET Framework's XML serialization infrastructure.</source>
          <target state="translated">관련 코드 엔터티 이름의 그룹이나 .NET Framework XML serialization 인프라에서 생성한 형식 매핑을 유지합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>The following list identifies tools and classes that use the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph>:</source>
          <target state="translated">다음 목록에는 도구를 식별 하 고 사용 하는 클래스는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>The <bpt id="p1">[</bpt>Web Services Description Language Tool (Wsdl.exe)<ept id="p1">](http://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88)</ept>, or the <ph id="ph1">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> class, while generating client proxy classes or abstract server classes from a Web Services Description Language (WSDL) document.</source>
          <target state="translated"><bpt id="p1">[</bpt>웹 서비스 설명 언어 도구 (Wsdl.exe)<ept id="p1">](http://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88)</ept>, 또는 <ph id="ph1">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> 설명 언어 WSDL (웹 서비스) 문서에서 클라이언트 프록시 클래스 또는 추상 서버 클래스를 생성 하는 동안 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>The <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept> tool while generating classes from XML Schema Definition (XSD) documents.</source>
          <target state="translated"><bpt id="p1">[</bpt>XML 스키마 정의 도구 (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept> XML 스키마 정의 (XSD) 문서로에서 클래스를 생성 하는 동안 도구입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;</ph> class while creating <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescription&gt;</ph> objects from classes that are identified as Web services via the <ph id="ph3">&lt;xref:System.Web.Services.WebServiceAttribute&gt;</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Description.ServiceDescriptionReflector&gt;</ph> 클래스를 만드는 동안 <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescription&gt;</ph> 웹 서비스를 통해 식별 되는 클래스의 개체는 <ph id="ph3">&lt;xref:System.Web.Services.WebServiceAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>Instead of using the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class directly, use the aforementioned tools or classes.</source>
          <target state="translated">사용 하는 대신는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스를 직접 앞에서 언급 한 도구 또는 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>Depending on its scope, a <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> instance can be used to maintain the names of any of the items in the following list:</source>
          <target state="translated">이 범위에 따라 한 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 인스턴스는 다음 목록에 있는 항목의 이름을 유지 하기 위해 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>Types, methods, or fields.</source>
          <target state="translated">형식, 메서드 또는 필드를 선택 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>The parameters and return value of a method corresponding to WSDL input and output messages.</source>
          <target state="translated">매개 변수 및 반환 값에 해당 WSDL 하는 메서드의 입력 및 출력 메시지입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>Objects within a <ph id="ph1">&lt;xref:System.Web.Services.Description.ServiceDescription&gt;</ph> instance that can be serialized to a WSDL document.</source>
          <target state="translated">내에서 개체는 <ph id="ph1">&lt;xref:System.Web.Services.Description.ServiceDescription&gt;</ph> WSDL 문서를 serialize 할 수 있는 인스턴스.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.CodeIdentifiers">
          <source>Typically, the class is used to avoid naming collisions between code entities within a particular scope, including collisions with the name of a containing entity.</source>
          <target state="translated">일반적으로 클래스의 포함 하는 엔터티 이름으로 충돌을 포함 하 여 특정 범위 내에서 코드 엔터티 간 이름 충돌을 방지 하기 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if identifiers are case sensitive; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">식별자가 대/소문자를 구분하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> class and determines whether code identifiers are case sensitive.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 코드 식별자가 대/소문자를 구분하는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
          <source>A name that is used to index the code entity.</source>
          <target state="translated">코드 엔터티를 인덱싱할 때 사용되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
          <source>The code entity or type mapping information.</source>
          <target state="translated">코드 엔터티 또는 형식 매핑 정보입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
          <source>Adds a named code entity or type mapping to the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope.</source>
          <target state="translated">명명된 코드 엔터티나 형식 매핑을 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위에 추가합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Serialization.CodeIdentifiers.Add%2A&gt;</ph> method does not prevent naming collisions.</source>
          <target state="translated">와 달리는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Xml.Serialization.CodeIdentifiers.Add%2A&gt;</ph> 때도 메서드 이름 충돌 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
          <source>For a complete list, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">전체 목록을 보려면를 참조 하십시오. <bpt id="p1">[</bpt>특성을 제어 XML 직렬화<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
          <source>A name that will not be available within the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스의 범위 내에서 사용할 수 없게 되는 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
          <source>Prevents a specified name from being used within the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope.</source>
          <target state="translated">지정한 이름을 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스의 범위 내에서 사용하지 못하게 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
          <source>A reserved name can belong to a containing code entity, such as a type for which member names must also be generated.</source>
          <target state="translated">예약 된 이름이 포함 된 코드 엔터티를 멤버 이름을 생성 해야 하는 형식과 같은 속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>A candidate name that is used to index the code entity.</source>
          <target state="translated">코드 엔터티를 인덱싱할 때 사용되는 후보 이름입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>The code entity or type mapping information.</source>
          <target state="translated">코드 엔터티 또는 형식 매핑 정보입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>Adds a named code entity or type mapping to the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope, ensuring that the name is unique within the scope.</source>
          <target state="translated">명명된 코드 항목이나 형식 매핑을 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위에 추가합니다. 이 때 이름은 범위 내에서 고유해야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>The identifier parameter value or a modified string if there is a name collision.</source>
          <target state="translated">이름 충돌이 있는 경우 식별자 매개 변수 값이나 수정된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>If the identifier parameter value is not unique within the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> instance's scope, a new, unique string is generated and used in its place.</source>
          <target state="translated">식별자 매개 변수 값 내에서 고유 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 새, 고유 문자열 인스턴스 범위에서 생성 되 고 대신 사용 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>The new string is generated by appending to the input name.</source>
          <target state="translated">새 문자열 입력된 이름에 추가 하 여 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>The original name is not unique if it was passed previously to the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A&gt;</ph> method, or if it was generated by a previous call to the <ph id="ph4">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph> method.</source>
          <target state="translated">원래 이름에 이전에 전달 된 경우 고유 하지 않습니다는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A&gt;</ph> 메서드를 한 이전 호출에 의해 생성 된 경우 또는 <ph id="ph4">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>In each case, if the new identifier is not unique, it is first passed to the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.MakeUnique%2A&gt;</ph> method to create a new unique identifier.</source>
          <target state="translated">각각의 경우에서 새 식별자가 고유 하지 않으면 처음에 전달 되기는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.MakeUnique%2A&gt;</ph> 방법을 새 고유 식별자를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
          <source>For a complete list, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">전체 목록을 보려면를 참조 하십시오. <bpt id="p1">[</bpt>특성을 제어 XML 직렬화<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.Clear">
          <source>Removes all code entities or type mappings, including their names, from the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위에서 모든 코드 엔터티나 형식 매핑을 해당하는 이름과 함께 제거합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.Clear">
          <source>Reserved names, as added through the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A&gt;</ph> method, are not removed.</source>
          <target state="translated">필드를 통해 추가 된 예약 된 이름은 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A&gt;</ph> 메서드를 제거 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.Clear">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.Clear">
          <source>For a complete list, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">전체 목록을 보려면를 참조 하십시오. <bpt id="p1">[</bpt>특성을 제어 XML 직렬화<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
          <source>The name to check for use within the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위 내에서 사용되는지 확인할 이름입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
          <source>Determines whether a specified name is already being used within the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope.</source>
          <target state="translated">지정한 이름이 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위 내에서 이미 사용되고 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name is already in use; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이름이 이미 사용되고 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
          <source>The input name is not unique if it was passed previously to the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A&gt;</ph> method, or if it was generated by the <ph id="ph4">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph> method.</source>
          <target state="translated">입력된 이름이에 이전에 전달 된 경우 고유 하지 않습니다는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A&gt;</ph> 메서드를 하거나에 의해 생성 된 경우는 <ph id="ph4">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
          <source>For a complete list, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">전체 목록을 보려면를 참조 하십시오. <bpt id="p1">[</bpt>특성을 제어 XML 직렬화<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
          <source>The name to possibly modify.</source>
          <target state="translated">수정될 수 있는 이름입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
          <source>Ensures that the input is of the correct case by modifying the name according to the value of the <ph id="ph1">&lt;see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /&gt;</ph> 속성 값에 따라 이름을 수정하여 입력의 대/소문자를 올바르게 만듭니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
          <source>A string that is the same as the input identifier or has the first letter's case modified.</source>
          <target state="translated">입력 식별자와 같거나 첫 문자의 대/소문자가 수정된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A&gt;</ph> property is <ph id="ph2">`true`</ph> and the first character of the input is a letter, it is made lowercase, if necessary.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph> 및 입력 값의 첫 번째 문자는 문자, 소문자로 필요한 경우.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A&gt;</ph> is <ph id="ph2">`false`</ph>, Pascal case is in effect and the first character, if a letter, is capitalized, if necessary.</source>
          <target state="translated">경우의 값은 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>파스칼식 대/소문자가 적용 하 고 첫 번째 문자가 문자 이면 문자를 대문자로 필요 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
          <source>The name to modify if it is not already unique.</source>
          <target state="translated">고유하지 않은 경우 수정할 이름입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
          <source>Determines whether the input name conflicts with another name within the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope and, if it does, generates a modified string.</source>
          <target state="translated">입력 이름이 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위 내의 다른 이름과 충돌하는지 확인하고 충돌할 경우 수정된 문자열을 생성합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
          <source>The identifier parameter value or a modified string if there is a name collision.</source>
          <target state="translated">이름 충돌이 있는 경우 식별자 매개 변수 값이나 수정된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
          <source>The input name is not unique if it was passed previously to the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A&gt;</ph> method, or if it was generated by the <ph id="ph4">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph> method.</source>
          <target state="translated">입력된 이름이에 이전에 전달 된 경우 고유 하지 않습니다는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A&gt;</ph> 메서드를 하거나에 의해 생성 된 경우는 <ph id="ph4">&lt;xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
          <source>If the name is not unique, a new string is generated by appending to the original string.</source>
          <target state="translated">이름이 고유 하지 않으면 새 문자열은 원래 문자열에 추가 하 여 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
          <source>For a complete list, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">전체 목록을 보려면를 참조 하십시오. <bpt id="p1">[</bpt>특성을 제어 XML 직렬화<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
          <source>The name of the code entity or type mapping information to remove.</source>
          <target state="translated">제거할 코드 엔터티나 형식 매핑의 이름입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
          <source>Removes from the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope the code entity or type mapping identified by the input name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위에서 입력 이름으로 식별되는 코드 엔터티나 형식 매핑을 제거합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
          <source>For a complete list, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">전체 목록을 보려면를 참조 하십시오. <bpt id="p1">[</bpt>특성을 제어 XML 직렬화<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
          <source>A name that will be made available within the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위 내에서 사용할 수 있게 될 이름입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
          <source>Removes the input name from the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's reserved names.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스의 예약된 이름에서 입력 이름을 제거합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
          <source>The type of all the code entities or type mappings for the instance.</source>
          <target state="translated">인스턴스의 모든 코드 엔터티 또는 형식 매핑에 대한 형식입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
          <source>Returns an array of the code entities or type mappings within the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> instance's scope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 인스턴스 범위 내에 있는 코드 엔터티 또는 형식 매핑의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
          <source>An array of the code entities or type mappings that is stored by the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.CodeIdentifiers" /&gt;</ph> 개체에서 저장한 코드 엔터티 또는 형식 매핑의 배열입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
          <source>If you want to control the names of code entities that are bound to XML Schema or Web service definitions, use the associated attributes rather than creating an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> class.</source>
          <target state="translated">코드에서 XML 스키마 또는 웹 서비스 정의에 바인딩되는 엔터티의 이름을 제어 하려는 경우 관련된 특성을 사용 하지 않고의 인스턴스를 만들지는 <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeIdentifiers&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
          <source>For a complete list, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">전체 목록을 보려면를 참조 하십시오. <bpt id="p1">[</bpt>특성을 제어 XML 직렬화<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
          <source>Gets or sets a value that indicates whether the instance uses camel case.</source>
          <target state="translated">인스턴스가 카멜식 대/소문자를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다. </target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that the instance uses camel case; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to indicate that the instance uses Pascal case.</source>
          <target state="translated">인스턴스가 카멜식 대/소문자를 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않고 파스칼식 대/소문자를 사용하면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
          <source>With camel case, if the first character of an identifier is a letter, it must be lowercase.</source>
          <target state="translated">카멜식 대/소문자 경우 식별자의 첫 번째 문자는 문자, 소문자 여야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
          <source>With Pascal case, if the first character is a letter, it must be uppercase.</source>
          <target state="translated">파스칼식 대 / 소문자로 된 경우 첫 번째 문자는 문자, 대문자 여야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>