<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ea1d0945968902e4d9d44b278bf2cee320fb057" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapEnumAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 제어합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapEnumAttribute> 클래스 제어 되는 특성의 집합에 속합니다 방법을 <xref:System.Xml.Serialization.XmlSerializer> 를 직렬화 또는 인코딩된 SOAP XML로 개체를 역직렬화 합니다. 결과 XML은 World Wide Web 컨소시엄(www.w3.org) 문서의 5단원 "SOAP(Simple Object Access Protocol) 1.1"을 따릅니다. 비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 인코딩된 SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)합니다.  
  
 개체는 인코딩된 SOAP 메시지로 serialize 하려면 먼저 생성 해야는 <xref:System.Xml.Serialization.XmlSerializer> 를 사용 하는 <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만든는 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 의 메서드는 <xref:System.Xml.Serialization.SoapReflectionImporter> 클래스입니다.  
  
 사용 하 여는 <xref:System.Xml.Serialization.SoapEnumAttribute> 열거를 변경 하려면 하는 <xref:System.Xml.Serialization.XmlSerializer> 를 생성 하거나 (때를 직렬화 또는 역직렬화 클래스 각각)를 인식 합니다. 예를 들어, 명명 된 멤버를 포함 하는 열거형 `One`, 나오는 XML 출력 이름이 것을 선호 하지만 `Single`, 적용는 <xref:System.Xml.Serialization.SoapEnumAttribute> 을 설정 하 고는 열거형 멤버는 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 속성을 "단일"입니다.  
  
 재정의할 수 있습니다는 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 속성 값이 한 <xref:System.Xml.Serialization.SoapEnumAttribute> 의 인스턴스를 만들어는 <xref:System.Xml.Serialization.SoapEnumAttribute> 클래스에 할당 하는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 속성의는 <xref:System.Xml.Serialization.SoapAttributes>합니다. 자세한 내용은 참조는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 클래스 개요입니다.  
  
 개체는 인코딩된 SOAP 메시지로 serialize 하려면 먼저 생성 해야는 <xref:System.Xml.Serialization.XmlSerializer> 를 사용 하는 <xref:System.Xml.Serialization.XmlTypeMapping> 사용 하 여 만든는 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 의 메서드는 <xref:System.Xml.Serialization.SoapReflectionImporter> 클래스입니다.  
  
> [!NOTE]
>  word를 사용 하 여 `SoapEnum` 대신에 간결 코드에서 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다.  
  
 특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 라는 클래스를 serialize 하는 데 `Food` 라는 열거형을 포함 하는 `FoodType`합니다. `FoodType` 열거형을 만들어 재정의 <xref:System.Xml.Serialization.SoapEnumAttribute> 각 열거형 및 설정에 대 한는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 속성은 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다. <xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 프로그램 <xref:System.Xml.Serialization.XmlSerializer>합니다.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A> 기존 열거형을 재정의할 수 있습니다. 새 <xref:System.Xml.Serialization.SoapEnumAttribute>, 해당 속성을 설정 하 고 개체를 할당 된 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 속성은 <xref:System.Xml.Serialization.SoapAttributes>합니다. 열거형의 각 멤버에 대 한 새 만들어야 <xref:System.Xml.Serialization.SoapAttributes> 에 추가 하는 <xref:System.Xml.Serialization.SoapAttributeOverrides>합니다. 자세한 내용은 참조는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 클래스 개요입니다.  
  
> [!NOTE]
>  word를 사용 하 여 `SoapEnum` 대신에 간결 코드에서 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 라는 클래스를 serialize 하는 데 `Food` 라는 열거형을 포함 하는 `FoodType`합니다. `FoodType` 열거형을 만들어 재정의 <xref:System.Xml.Serialization.SoapEnumAttribute> 각 열거형 및 설정에 대 한는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 속성은 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다. <xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 프로그램 <xref:System.Xml.Serialization.XmlSerializer>합니다.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapEnumAttribute : string -&gt; System.Xml.Serialization.SoapEnumAttribute" Usage="new System.Xml.Serialization.SoapEnumAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 요소 이름입니다.</param>
        <summary>지정된 요소 이름을 사용하여 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 열거형에서 찾은 열거자는 다르게 생성된 된 XML 열거자 하려는 경우.  
  
> [!NOTE]
>  word를 사용 하 여 `SoapEnum` 대신에 간결 코드에서 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 라는 클래스를 serialize 하는 데 `Food` 라는 열거형을 포함 하는 `FoodType`합니다. `FoodType` 열거형을 만들어 재정의 <xref:System.Xml.Serialization.SoapEnumAttribute> 각 열거형 및 설정에 대 한는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 속성은 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다. <xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 프로그램 <xref:System.Xml.Serialization.XmlSerializer>합니다.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 된 <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> 열거형에서 찾은 열거자는 다르게 생성된 된 XML 열거자 하려는 경우.  
  
> [!NOTE]
>  word를 사용 하 여 `SoapEnum` 대신에 간결 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlSerializer> 라는 클래스를 serialize 하는 데 `Food` 라는 열거형을 포함 하는 `FoodType`합니다. `FoodType` 열거형을 만들어 재정의 <xref:System.Xml.Serialization.SoapEnumAttribute> 각 열거형 및 설정에 대 한는 <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> 속성은 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapEnumAttribute>합니다. <xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 프로그램 <xref:System.Xml.Serialization.XmlSerializer>합니다.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>