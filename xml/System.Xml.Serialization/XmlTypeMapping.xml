<Type Name="XmlTypeMapping" FullName="System.Xml.Serialization.XmlTypeMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a751c9ef66e1eb2cd48d1749e1f104f7df7bf3e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36438221" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTypeMapping : System.Xml.Serialization.XmlMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTypeMapping extends System.Xml.Serialization.XmlMapping" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTypeMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTypeMapping&#xA;Inherits XmlMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTypeMapping : System::Xml::Serialization::XmlMapping" />
  <TypeSignature Language="F#" Value="type XmlTypeMapping = class&#xA;    inherit XmlMapping" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Serialization.XmlMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>한 형식과 다른 형식의 매핑을 포함합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTypeMapping> 클래스는 인코딩된 SOAP XML로 개체를 직렬화 하는 데 사용 됩니다. 결과 XML은 World Wide Web 컨소시엄 (www.w3.org) 문서의 "Simple Object Access Protocol (SOAP) 1.1" 섹션 5 준수합니다. 만들기는 <xref:System.Xml.Serialization.XmlTypeMapping> 호출 하 여는 <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> 의 메서드는 <xref:System.Xml.Serialization.SoapReflectionImporter> 클래스입니다. 사용 하 여는 <xref:System.Xml.Serialization.XmlTypeMapping> 의 인스턴스를 생성 하는 <xref:System.Xml.Serialization.XmlSerializer> 클래스입니다. Serialization을 제어 하려면에 나열 된 특성 중 하나를 사용 [특성을 제어 인코딩된 SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 클래스의 인스턴스를 serialize `Transportation` 라는 필드가 포함 된 `Vehicle`합니다. A <xref:System.Xml.Serialization.SoapElementAttribute> 필드에 적용 합니다. 필드를 serialize 할 때 XML 요소 이름은 "Vehicle" 대신 "바퀴"입니다. `SerializeOverride` 메서드를 만듭니다는 <xref:System.Xml.Serialization.SoapElementAttribute> 설정는 <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> 속성은 <xref:System.Xml.Serialization.SoapAttributes> 에 <xref:System.Xml.Serialization.SoapElementAttribute>합니다. <xref:System.Xml.Serialization.SoapAttributes> 에 추가 되는 <xref:System.Xml.Serialization.SoapAttributeOverrides> 만드는 데 사용 되는 프로그램 <xref:System.Xml.Serialization.XmlTypeMapping>합니다. <xref:System.Xml.Serialization.XmlSerializer> 로 구성 되며는 <xref:System.Xml.Serialization.XmlTypeMapping>와의 인스턴스는 `Transportation` 클래스가 다시 serialize 되는 합니다. 때문에 <xref:System.Xml.Serialization.SoapElementAttribute> 은 직렬화를 재정의 하는 데, 생성 된 XML 요소 이름은 이제 "바퀴" 대신 "Truck"입니다.  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="TypeFullName">
      <MemberSignature Language="C#" Value="public string TypeFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeFullName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeFullName : string" Usage="System.Xml.Serialization.XmlTypeMapping.TypeFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>네임스페이스와 형식이 포함된 정규화된 형식 이름입니다.</summary>
        <value>정규화된 형식 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[XmlTypeMapping Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlTypeMapping Example/CPP/mapping.cpp#1)]
 [!code-csharp[XmlTypeMapping Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTypeMapping Example/CS/mapping.cs#1)]
 [!code-vb[XmlTypeMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTypeMapping Example/VB/mapping.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeMapping.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.Xml.Serialization.XmlTypeMapping.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매핑된 개체의 형식 이름을 가져옵니다.</summary>
        <value>매핑된 개체의 형식 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식 이름은 매핑된 개체의 클래스 이름이입니다.  
  
 확인할 수도 있습니다는 정규화 된 이름을 검사 하 여는 <xref:System.Xml.Serialization.XmlTypeMapping.TypeFullName%2A> 속성입니다.  
  
   
  
## Examples  
 [!code-cpp[XmlTypeMapping Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlTypeMapping Example/CPP/mapping.cpp#1)]
 [!code-csharp[XmlTypeMapping Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTypeMapping Example/CS/mapping.cs#1)]
 [!code-vb[XmlTypeMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTypeMapping Example/VB/mapping.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XsdTypeName">
      <MemberSignature Language="C#" Value="public string XsdTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XsdTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XsdTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XsdTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XsdTypeName : string" Usage="System.Xml.Serialization.XmlTypeMapping.XsdTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매핑된 개체의 XML 요소 이름을 가져옵니다.</summary>
        <value>매핑된 개체의 XML 요소 이름입니다. 기본값은 개체의 클래스 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체의 대체 요소 이름을 설정 하려면 적용 한 <xref:System.Xml.Serialization.SoapTypeAttribute> 을 설정 하 고는 클래스는 <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> 속성을 새 값입니다.  
  
   
  
## Examples  
 [!code-cpp[XmlTypeMapping Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlTypeMapping Example/CPP/mapping.cpp#1)]
 [!code-csharp[XmlTypeMapping Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTypeMapping Example/CS/mapping.cs#1)]
 [!code-vb[XmlTypeMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTypeMapping Example/VB/mapping.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XsdTypeNamespace">
      <MemberSignature Language="C#" Value="public string XsdTypeNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XsdTypeNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XsdTypeNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XsdTypeNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XsdTypeNamespace : string" Usage="System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매핑된 개체의 XML 네임스페이스를 가져옵니다.</summary>
        <value>매핑된 개체의 XML 네임스페이스입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 개체의 네임 스페이스 이름의 설정 하려면 적용 한 <xref:System.Xml.Serialization.SoapTypeAttribute> 을 설정 하 고는 클래스는 <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> 속성을 새 값입니다.  
  
   
  
## Examples  
 [!code-cpp[XmlTypeMapping Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlTypeMapping Example/CPP/mapping.cpp#1)]
 [!code-csharp[XmlTypeMapping Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTypeMapping Example/CS/mapping.cs#1)]
 [!code-vb[XmlTypeMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTypeMapping Example/VB/mapping.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>