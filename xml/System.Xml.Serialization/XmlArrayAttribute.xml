<Type Name="XmlArrayAttribute" FullName="System.Xml.Serialization.XmlArrayAttribute">
  <TypeSignature Language="C#" Value="public class XmlArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ba7d5-101"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 특정 클래스 멤버를 XML 요소의 배열로 serialize하도록 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-101">Specifies that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a particular class member as an array of XML elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7d5-102"><xref:System.Xml.Serialization.XmlArrayAttribute> 제어 하는 특성의 제품군에 속하는 방법을 <xref:System.Xml.Serialization.XmlSerializer> 직렬화 하거나 개체를 역직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-102">The <xref:System.Xml.Serialization.XmlArrayAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="ba7d5-103">비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="ba7d5-104">적용할 수는 <xref:System.Xml.Serialization.XmlArrayAttribute> 를 개체의 배열을 반환 하는 공용 필드 또는 읽기/쓰기 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-104">You can apply the <xref:System.Xml.Serialization.XmlArrayAttribute> to a public field or read/write property that returns an array of objects.</span></span> <span data-ttu-id="ba7d5-105">또한 컬렉션 및 반환 하는 필드에 적용할 수는 <xref:System.Collections.ArrayList> 또는 구현 하는 개체를 반환 하는 모든 필드는 <xref:System.Collections.IEnumerable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-105">You can also apply it to collections and fields that return an <xref:System.Collections.ArrayList> or any field that returns an object that implements the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="ba7d5-106">적용 하는 경우는 <xref:System.Xml.Serialization.XmlArrayAttribute> 클래스 멤버에는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 의 메서드는 <xref:System.Xml.Serialization.XmlSerializer> 클래스 해당 멤버를 XML 요소의 중첩된 된 시퀀스를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-106">When you apply the <xref:System.Xml.Serialization.XmlArrayAttribute> to a class member, the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> method of the <xref:System.Xml.Serialization.XmlSerializer> class generates a nested sequence of XML elements from that member.</span></span> <span data-ttu-id="ba7d5-107">XML 스키마 문서 (.xsd 파일)으로 배열 나타냅니다는 `complexType`합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-107">An XML schema document (an .xsd file), indicates such an array as a `complexType`.</span></span> <span data-ttu-id="ba7d5-108">예를 들어, serialize 되는 클래스는 구매 주문서를 나타내는 경우 생성할 수 있습니다 구매한 항목 배열을 적용 하 여는 <xref:System.Xml.Serialization.XmlArrayAttribute> 주문 항목을 나타내는 개체의 배열을 반환 하는 공용 필드에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-108">For example, if the class to be serialized represents a purchase order, you can generate an array of purchased items by applying the <xref:System.Xml.Serialization.XmlArrayAttribute> to a public field that returns an array of objects that represent order items.</span></span>  
  
 <span data-ttu-id="ba7d5-109">공용 필드 또는 복잡 한 또는 기본 유형 개체의 배열을 반환 하는 속성에 특성이 적용 된 경우는 <xref:System.Xml.Serialization.XmlSerializer> 기본적으로 XML 요소의 중첩 된 시퀀스를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-109">If no attributes are applied to a public field or property that returns an array of complex or primitive type objects, the <xref:System.Xml.Serialization.XmlSerializer> generates a nested sequence of XML elements by default.</span></span> <span data-ttu-id="ba7d5-110">생성 된 XML 요소를 보다 정확 하 게 제어 하려면 적용는 <xref:System.Xml.Serialization.XmlArrayItemAttribute> 및 <xref:System.Xml.Serialization.XmlArrayAttribute> 필드 또는 속성에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-110">To more precisely control what XML elements are generated, apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and an <xref:System.Xml.Serialization.XmlArrayAttribute> to the field or property.</span></span> <span data-ttu-id="ba7d5-111">예제에서는 기본적으로 생성 된 XML 요소 이름에서에서 파생 된 멤버 식별자에 대 한 설정 하 여 생성 된 XML 요소 이름을 변경할 수 있습니다는 <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-111">For example, by default, the name of the generated XML element is derived from the member identifier You can change the name of the generated XML element by setting the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="ba7d5-112">특정 형식의 항목을 포함 하는 배열을 serialize 하 고 모든 클래스에서 파생 형식을 사용 해야 하는 <xref:System.Xml.Serialization.XmlArrayItemAttribute> 를 각 형식 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-112">If you serialize an array that contains items of a specific type and all the classes derived from that type, you must use the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to declare each of the types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba7d5-113">사용할 수 있습니다 `XmlArray` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlArrayAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-113">You can use `XmlArray` in your code instead of the longer <xref:System.Xml.Serialization.XmlArrayAttribute>.</span></span>  
  
 <span data-ttu-id="ba7d5-114">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-114">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7d5-115">다음 예제에서는 여러 개체 배열이 포함 된 XML 문서에 클래스 인스턴스를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-115">The following example serializes a class instance into an XML document that contains several object arrays.</span></span> <span data-ttu-id="ba7d5-116"><xref:System.Xml.Serialization.XmlArrayAttribute> XML 요소 배열 되는 멤버에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-116">The <xref:System.Xml.Serialization.XmlArrayAttribute> is applied to the members that become XML element arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
    <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba7d5-117"><see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba7d5-118"><see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7d5-119">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-119">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7d5-120">다음 예제에서는 할당 된 <xref:System.Xml.Serialization.XmlArrayAttribute> 두 배열에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-120">The following example assigns the <xref:System.Xml.Serialization.XmlArrayAttribute> to two arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="ba7d5-121"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-121">The name of the XML element that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates.</span></span></param>
        <summary><span data-ttu-id="ba7d5-122"><see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서 인스턴스에서 생성된 XML 요소의 이름을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-122">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> class and specifies the XML element name generated in the XML document instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7d5-123">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-123">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7d5-124">다음 예제에서는 할당 된 <xref:System.Xml.Serialization.XmlArrayAttribute> 두 배열에 해당 배열에 포함 된 클래스 인스턴스를 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-124">The following example assigns the <xref:System.Xml.Serialization.XmlArrayAttribute> to two arrays, and serializes a class instance that contains those arrays.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/Common/MyClass1.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba7d5-125">serialize된 배열에 지정되어 있는 XML 요소의 이름을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-125">Gets or sets the XML element name given to the serialized array.</span></span></summary>
        <value><span data-ttu-id="ba7d5-126">serialize된 배열의 XML 요소 이름으로,</span><span class="sxs-lookup"><span data-stu-id="ba7d5-126">The XML element name of the serialized array.</span></span> <span data-ttu-id="ba7d5-127">기본값은 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />가 할당된 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-127">The default is the name of the member to which the <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> is assigned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7d5-128">지정 된 <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> 멤버 식별자는 다르게 생성 된 XML 요소 이름 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-128">Specify an <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> when you want the generated XML element name to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="ba7d5-129">동일한 설정할 수 있습니다 <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> 으로 생성된 된 XML 문서의 XML 네임 스페이스를 사용 하 여 이름이 같은 멤버를 구분 하기 위해 둘 이상의 멤버를 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-129">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one member as long as the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="ba7d5-130">네임 스페이스를 사용 하 고 XML 문서에 접두사가 붙은 이름을 만드는 방법에 대 한 자세한 내용은 참조 하십시오. <xref:System.Xml.Serialization.XmlSerializerNamespaces>합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-130">For more details about using namespaces and creating prefixed names in the XML document, see <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7d5-131">인스턴스를 serialize 하는 다음 예제는 `Library` 라는 속성이 포함 된 클래스 `Books` 의 배열을 반환 하는 `Book` 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-131">The following example serializes an instance of the `Library` class that contains a property named `Books` that returns an array of `Book` items.</span></span> <span data-ttu-id="ba7d5-132">이 예제에서는 사용는 <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> 속성을 XML 요소의 배열 명명할 지정 `My_Books` 대신 `Books`합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-132">The example uses the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property to specify that the array of XML elements should be named `My_Books` rather than `Books`.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba7d5-133"><see cref="T:System.Xml.Serialization.XmlSerializer" />에서 생성한 XML 요소 이름이 정규화되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-133">Gets or sets a value that indicates whether the XML element name generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> is qualified or unqualified.</span></span></summary>
        <value><span data-ttu-id="ba7d5-134"><see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-134">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="ba7d5-135">기본값은 <see langword="XmlSchemaForm.None" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-135">The default is <see langword="XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7d5-136"><xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> 속성 정규화 되거나 정규화 되지 않은 XML 요소 이름 인지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-136">The <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property determines whether an XML element name is qualified or unqualified.</span></span> <span data-ttu-id="ba7d5-137"><xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> "XML에 네임 스페이스입니다." 라는 1999 World Wide Web 컨소시엄 (www.w3.org) 문서에 맞는 속성</span><span class="sxs-lookup"><span data-stu-id="ba7d5-137">The <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property conforms to the 1999 World Wide Web Consortium (www.w3.org) document titled "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="ba7d5-138">경우는 <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> 속성을 설정 하는 값은 <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> 속성을 `XmlSchemaForm.Unqualified` 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-138">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="ba7d5-139">기본 설정은 `XmlSchemaForm.None`, 지시는 <xref:System.Xml.Serialization.XmlSerializer> 네임 스페이스 정규화 있는지 여부를 결정 하는 XML 문서에 대 한 스키마를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-139">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="ba7d5-140">스키마 개별 요소 또는 특성에 대 한 값을 지정 하지 않는 경우는 <xref:System.Xml.Serialization.XmlSerializer> 사용 하 여는 `elementFormDefault` 및 `attributeFormDefault` 요소 또는 특성 정규화 되었는지 여부를 결정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-140">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="ba7d5-141">다음 XML 코드는 스키마를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-141">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="ba7d5-142">때는 <xref:System.Xml.Serialization.XmlSerializer> 에서 스키마를 읽으면는 <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> 모두에 대 한 값의 `Name` 및 `Number` 은 `XmlSchemaForm.None`, 되지만 `Name` 요소가 한정 동안는 `Number` 요소 정규화 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-142">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7d5-143">인스턴스를 serialize 하는 다음 예제는 `Enterprises` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-143">The following example serializes an instance of the `Enterprises` class.</span></span> <span data-ttu-id="ba7d5-144">두 개의 XML 요소가 같은 로컬 이름을 갖고 (`Company`) 하지만 서로 다른 접두사입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-144">Two XML elements have the same local name (`Company`) but different prefixes.</span></span> <span data-ttu-id="ba7d5-145">예제에서는 <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> 속성이 `XmlForm.Qualified` XML 인스턴스에 있는 경우 정규화 된 이름을 수행 되는지 확인 하기.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-145">The example sets the <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A> property is set to `XmlForm.Qualified` to ensure that the qualified names occur in the XML instance.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba7d5-146"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 멤버를 <see langword="xsi:nil" /> 특성이 <see langword="true" />로 설정된 빈 XML 태그로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-146">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value>
          <span data-ttu-id="ba7d5-147"><see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-147"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7d5-148">구조에 대 한 XML 스키마 사양에는 XML 문서를 요소 콘텐츠가 누락 된 신호를 명시적으로 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-148">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="ba7d5-149">이러한 요소는 특성이 포함 되어 `xsi:nil` 로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-149">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="ba7d5-150">자세한 내용은 라는 World Wide Web 컨소시엄 (www.w3.org) 사양을 참조 "XML 스키마 1 부: 구조입니다."</span><span class="sxs-lookup"><span data-stu-id="ba7d5-150">For more information, see the World Wide Web Consortium (www.w3.org) specification titled "XML Schema Part 1: Structures."</span></span>  
  
 <span data-ttu-id="ba7d5-151">경우는 <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> 속성이로 설정 되어 `true`, `xsi:nil` 로 설정 된 클래스 멤버에 대 한 특성은 생성 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-151">If the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="ba7d5-152">예를 들어, 라는 필드를 설정 하는 경우 `MyStringArray` 를 `null`, <xref:System.Xml.Serialization.XmlSerializer> 다음 XML 코드를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-152">For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="ba7d5-153">경우는 <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> 속성은 `false`, XML 요소가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-153">If the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property is `false`, no XML element is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba7d5-154">적용할 수 없습니다는 <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> 값 형식을 포함할 수 없기 때문 멤버에 대 한 속성을 값 형식으로 입력 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-154">You cannot apply the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7d5-155">다음 예제에서는 두 배열 포함:와 하나는 <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> 속성이로 설정 `true`로 다른는 <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> 속성이로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-155">The following example contains two arrays: one with the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property set to `true`, and another with the <xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba7d5-156">XML 요소의 네임스페이스를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-156">Gets or sets the namespace of the XML element.</span></span></summary>
        <value><span data-ttu-id="ba7d5-157">XML 요소의 네임스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-157">The namespace of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7d5-158"><xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> 속성을 사용 하면 정규화 된 XML 요소 이름을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-158">The <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> property allows you to create qualified XML element names.</span></span> <span data-ttu-id="ba7d5-159"><xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> 속성 만들기 "XML에 네임 스페이스입니다." 라는 1999 World Wide Web 컨소시엄 (www.w3.org) 문서에 있는 XML 네임 스페이스에 대 한 규칙을 따르는</span><span class="sxs-lookup"><span data-stu-id="ba7d5-159">The <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A> property conforms to the rules for creating an XML namespace as found in the 1999 World Wide Web Consortium (www.w3.org) document titled "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="ba7d5-160">접두사와 연결 된 네임 스페이스를 만들려면 인스턴스의 만들어야는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 네임 스페이스 및 XML 문서에 사용 되는 접두사를 포함 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-160">To create namespaces that are associated with a prefix, you must create an instance of the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="ba7d5-161">각 네임 스페이스를 설정 하는 대로 <xref:System.Xml.Serialization.XmlArrayAttribute>, 네임 스페이스에의 하 나와 일치 해야는 <xref:System.Xml.Serialization.XmlSerializerNamespaces>합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-161">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="ba7d5-162">XML을 생성 하는 경우 각 배열이 올바르게 지정된 된 네임 스페이스와 관련 된 붙습니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-162">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba7d5-163">인스턴스를 serialize 하는 다음 예제는 `Library` 두 멤버를 포함 하는 클래스, 책 제목을 포함 하는 하나 이며 다른 정기 간행물 제목이 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-163">The following example serializes an instance of the `Library` class that contains two members, one that contain book titles, and another that contain periodical titles.</span></span> <span data-ttu-id="ba7d5-164">두 XML 요소의 이름이 있지만 `Titles`, 각각 서로 다른 접두사를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-164">Although both XML elements are named `Titles`, each contains a different prefix.</span></span> <span data-ttu-id="ba7d5-165">들어의 인스턴스는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 네임 스페이스 및 두 개의 요소 이름을 한 정하는 데 사용 되는 접두사를 포함 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-165">The example also includes an instance of the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class that contains the namespaces and prefixes used to qualify the two element names.</span></span>  
  
 [!code-cpp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba7d5-166">요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-166">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="ba7d5-167">코드가 생성되는 순서입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-167">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba7d5-168">사용 하 여는 <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> 지시 하는 열거형은 <xref:System.Web.Services.Description.ServiceDescriptionImporter> 설정 하는 코드를 생성 하는 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-168">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ba7d5-169">한 번의 <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> 하나의 공용 속성 또는 형식에서 필드에 사용 되었습니다. 속성, 모든 public 속성 및 해당 형식과 상속 된 모든 형식에 대 한 필드에 적용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ba7d5-169">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>