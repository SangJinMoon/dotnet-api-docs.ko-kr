<Type Name="XmlEnumAttribute" FullName="System.Xml.Serialization.XmlEnumAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68f2076e128e9a77ad9313388aff29afaa07ff04" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439323" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlEnumAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlEnumAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="531ba-101">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 제어합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="531ba-101">Controls how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531ba-102"><xref:System.Xml.Serialization.XmlEnumAttribute> 제어 하는 특성의 제품군에 속하는 방법을 <xref:System.Xml.Serialization.XmlSerializer> 직렬화 하거나 개체를 역직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-102">The <xref:System.Xml.Serialization.XmlEnumAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="531ba-103">비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="531ba-104">사용 하 여는 <xref:System.Xml.Serialization.XmlEnumAttribute> 열거를 변경 하려면 하는 <xref:System.Xml.Serialization.XmlSerializer> 를 생성 하거나 (때를 직렬화 또는 역직렬화 클래스 각각)를 인식 합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-104">Use the <xref:System.Xml.Serialization.XmlEnumAttribute> to change the enumeration that the <xref:System.Xml.Serialization.XmlSerializer> generates or recognizes (when it serializes or deserializes a class, respectively).</span></span> <span data-ttu-id="531ba-105">예를 들어, 명명 된 멤버를 포함 하는 열거형 `One`, 나오는 XML 출력 이름이 것을 선호 하지만 `Single`, 적용는 <xref:System.Xml.Serialization.XmlEnumAttribute> 을 설정 하 고는 열거형 멤버는 <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> 속성을 "단일"입니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-105">For example, if an enumeration contains a member named `One`, but you prefer that the XML output be named `Single`, apply the <xref:System.Xml.Serialization.XmlEnumAttribute> to the enumeration member and set the <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> property to "Single".</span></span>  
  
 <span data-ttu-id="531ba-106">재정의할 수 있습니다는 <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> 속성 값이는 <xref:System.Xml.Serialization.XmlEnumAttribute> 의 인스턴스를 만들어는 <xref:System.Xml.Serialization.XmlEnumAttribute> 클래스에 할당 하는 <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> 속성은 <xref:System.Xml.Serialization.XmlAttributes> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-106">You can override the <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> property value of an <xref:System.Xml.Serialization.XmlEnumAttribute> by creating an instance of the <xref:System.Xml.Serialization.XmlEnumAttribute> class and assigning it to the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="531ba-107">자세한 내용은 참조는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-107">For details, see the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="531ba-108">word를 사용 하 여 `XmlEnum` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-108">You can use the word `XmlEnum` in your code instead of the longer <xref:System.Xml.Serialization.XmlEnumAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531ba-109">다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlEnumAttribute> 열거형의 멤버에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-109">The following example applies the <xref:System.Xml.Serialization.XmlEnumAttribute> to the members of an enumeration.</span></span> <span data-ttu-id="531ba-110">경우는 <xref:System.Xml.Serialization.XmlSerializer> XML 데이터를 생성이 열거형에 대 한 데이터의 값을 준수는 <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-110">When the <xref:System.Xml.Serialization.XmlSerializer> generates XML data for this enumeration, the data conforms to the values of the <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> properties.</span></span>  
  
 [!code-cpp[Classic XmlEnumAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlEnumAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlEnumAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlEnumAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlEnumAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlEnumAttribute Example/VB/source.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="531ba-111">word를 사용 하 여 `XmlEnum` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-111">You can use the word `XmlEnum` in your code instead of the longer <xref:System.Xml.Serialization.XmlEnumAttribute>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="531ba-112">
            <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531ba-112">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="531ba-113">
            <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531ba-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531ba-114">사용할 수는 <xref:System.Xml.Serialization.XmlEnumAttribute.%23ctor%2A> 기존 열거형을 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-114">You can use the <xref:System.Xml.Serialization.XmlEnumAttribute.%23ctor%2A> to override an existing enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="531ba-115">word를 사용 하 여 `XmlEnum` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-115">You can use the word `XmlEnum` in your code instead of the longer <xref:System.Xml.Serialization.XmlEnumAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531ba-116">다음 예제에서는 serialize 라는 두 개의 클래스가 `Food` 및 `FoodType`합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-116">The following example serializes two classes named `Food` and `FoodType`.</span></span> <span data-ttu-id="531ba-117">`FoodType` 클래스 재정의 된 두 개의 열거형을 포함 하 고 각 열거에 대 한이 예에서는 만듭니다는 <xref:System.Xml.Serialization.XmlEnumAttribute> 에 할당 된 개체는 <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> 속성은 <xref:System.Xml.Serialization.XmlAttributes> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-117">The `FoodType` class contains two enumerations that are overridden and, for each enumeration, the example creates an <xref:System.Xml.Serialization.XmlEnumAttribute> object that is assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="531ba-118">예제에서는 그런는 <xref:System.Xml.Serialization.XmlAttributes> 개체는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 를 만드는 데 사용 되는 개체는 <xref:System.Xml.Serialization.XmlSerializer>합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-118">The example then adds the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, which is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[Classic XmlEnumAttribute.XmlEnumAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlEnumAttribute.XmlEnumAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlEnumAttribute.XmlEnumAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlEnumAttribute.XmlEnumAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlEnumAttribute.XmlEnumAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlEnumAttribute.XmlEnumAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlEnumAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlEnumAttribute : string -&gt; System.Xml.Serialization.XmlEnumAttribute" Usage="new System.Xml.Serialization.XmlEnumAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="531ba-119">열거형 멤버의 재정의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531ba-119">The overriding name of the enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="531ba-120">
            <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize하거나 deserialize할 때 생성하거나 인식하는 XML 값을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531ba-120">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> class, and specifies the XML value that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates or recognizes (when it serializes or deserializes the enumeration, respectively).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="531ba-121">word를 사용 하 여 `XmlEnum` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-121">You can use the word `XmlEnum` in your code instead of the longer <xref:System.Xml.Serialization.XmlEnumAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531ba-122">다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlEnumAttribute> 열거형의 멤버에 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-122">The following example applies the <xref:System.Xml.Serialization.XmlEnumAttribute> to the members of an enumeration.</span></span> <span data-ttu-id="531ba-123">경우는 <xref:System.Xml.Serialization.XmlSerializer> XML 데이터를 생성이 열거형에 대 한 데이터의 값을 준수는 <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-123">When the <xref:System.Xml.Serialization.XmlSerializer> generates XML data for this enumeration, the data conforms to the values of the <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> properties.</span></span>  
  
 [!code-cpp[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/CS/source.cs#1)]
 [!code-vb[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlEnumAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="531ba-124">
            <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서 인스턴스에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531ba-124">Gets or sets the value generated in an XML-document instance when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration, or the value recognized when it deserializes the enumeration member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="531ba-125">
            <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서 인스턴스에서 생성된 값, 또는 열거형 멤버를 deserialize할 때 인식된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="531ba-125">The value generated in an XML-document instance when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the enumeration, or the value recognized when it is deserializes the enumeration member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="531ba-126">지정 된 <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> 열거형 식별자는 다르게 생성 된 XML 데이터를 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="531ba-126">Specify the <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> when you want the generated XML data to differ from the enumeration identifier.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="531ba-127">word를 사용 하 여 `XmlEnum` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlEnumAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-127">You can use the word `XmlEnum` in your code instead of the longer <xref:System.Xml.Serialization.XmlEnumAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="531ba-128">다음 예제에서는 적용는 <xref:System.Xml.Serialization.XmlEnumAttribute> 특성을 열거형의 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-128">The following example applies the <xref:System.Xml.Serialization.XmlEnumAttribute> attribute to members of an enumeration.</span></span> <span data-ttu-id="531ba-129">생성 된 XML 데이터에 대해 설정 된 값으로 준수는 <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="531ba-129">The generated XML data conforms to the values set for the <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/CS/source.cs#1)]
 [!code-vb[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
  </Members>
</Type>