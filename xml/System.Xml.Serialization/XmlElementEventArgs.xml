<Type Name="XmlElementEventArgs" FullName="System.Xml.Serialization.XmlElementEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04f0ebb8e42a2c914078623b8d8ed1228ea8677d" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32038595" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlElementEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md) 및 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 이벤트 호출할 때만 발생는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드.  
  
   
  
## Examples  
 다음 예에서는 라는 클래스를 deserialize `Group` UnknownElements.xml 라는 파일에서 합니다. 클래스에서 해당 멤버가 없는 파일에는 요소를 찾을 때마다는 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 이벤트가 발생 합니다. 이 예제를 실행 하려면 다음 XML 코드를 UnknownElements.xml 라는 파일로 붙여 넣습니다.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement Element { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Element" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementEventArgs.Element" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Element As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ Element { System::Xml::XmlElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>알 수 없는 XML 요소를 나타내는 개체를 가져옵니다.</summary>
        <value>알 수 없는 XML 요소를 나타내는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예에서는 라는 클래스를 deserialize `Group` UnknownElements.xml 라는 파일에서 합니다. 클래스에서 해당 멤버가 없는 파일에는 요소를 찾을 때마다는 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 이벤트가 발생 합니다. 이 예제를 실행 하려면 다음 XML 코드를 UnknownElements.xml 라는 파일로 붙여 넣습니다.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedElements">
      <MemberSignature Language="C#" Value="public string ExpectedElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpectedElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpectedElements As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpectedElements { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 문서 인스턴스에 있어야 하는 XML 요소 이름의 쉼표로 구분된 목록을 가져옵니다.</summary>
        <value>XML 요소 이름의 쉼표로 구분된 목록입니다. 각 이름은 <paramref name="namespace" />:<paramref name="name" /> 형식입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호를 가져옵니다.</summary>
        <value>XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호입니다. 그렇지 않으면 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlElementEventArgs.LineNumber%2A> 내부 XML 판독기가 경우에 속성 값을 반환는 <xref:System.Xml.XmlTextReader>합니다.  
  
   
  
## Examples  
 다음 예에서는 라는 클래스를 deserialize `Group` UnknownElements.xml 라는 파일에서 합니다. 클래스에서 해당 멤버가 없는 파일에는 요소를 찾을 때마다는 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 이벤트가 발생 합니다. 이 예제를 실행 하려면 다음 XML 코드를 UnknownElements.xml 라는 파일로 붙여 넣습니다.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호를 가져옵니다.</summary>
        <value>XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호입니다. 그렇지 않으면 -1입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예에서는 라는 클래스를 deserialize `Group` UnknownElements.xml 라는 파일에서 합니다. 클래스에서 해당 멤버가 없는 파일에는 요소를 찾을 때마다는 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 이벤트가 발생 합니다. 이 예제를 실행 하려면 다음 XML 코드를 UnknownElements.xml 라는 파일로 붙여 넣습니다.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectBeingDeserialized">
      <MemberSignature Language="C#" Value="public object ObjectBeingDeserialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectBeingDeserialized" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectBeingDeserialized As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectBeingDeserialized { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialize하고 있는 개체를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialize하고 있는 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예에서는 라는 클래스를 deserialize `Group` UnknownElements.xml 라는 파일에서 합니다. 클래스에서 해당 멤버가 없는 파일에는 요소를 찾을 때마다는 <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> 이벤트가 발생 합니다. 이 예제를 실행 하려면 다음 XML 코드를 UnknownElements.xml 라는 파일로 붙여 넣습니다.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 XmlSerializer.UnknownElement 예제 #1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>