<Type Name="XmlAttributeOverrides" FullName="System.Xml.Serialization.XmlAttributeOverrides">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e0141a391e71cf93c3169b458e50a946b1002f5b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439690" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributeOverrides" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributeOverrides extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributeOverrides" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributeOverrides" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributeOverrides" />
  <TypeSignature Language="F#" Value="type XmlAttributeOverrides = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하여 개체를 serialize하거나 deserialize하면 속성, 필드 및 클래스 특성을 재정의할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributeOverrides> 수 있도록는 <xref:System.Xml.Serialization.XmlSerializer> 개체 집합을 직렬화 하는 기본 방법을 재정의 하 합니다. 용도 이러한 방식으로 직렬화를 재정의: 제어 하 고 DLL-에 있는 개체의 serialization을 보강할 수 먼저 원본;에 액세스할 수 없는 경우에 둘째, 하나의 집합만 serializable 클래스를 만들 수 있지만 여러 가지 방법으로 개체를 직렬화 합니다. 예를 들어 XML 요소로 클래스 인스턴스의 멤버를 직렬화 하는 대신 serialize 할 수 있습니다 이러한 XML 특성으로 보다 효율적으로 문서를 전송으로 발생 합니다.  
  
 만든 후는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체에 대 한 인수로 전달 된 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> 생성자입니다. 그 결과 <xref:System.Xml.Serialization.XmlSerializer> 에 포함 된 데이터를 사용 하 여는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체는 직렬화 하는 방법을 제어 하는 특성을 재정의할 수 있습니다. 이 수행 하는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 재정의 되는 개체 유형의 컬렉션을 포함 물론 <xref:System.Xml.Serialization.XmlAttributes> 각 재정의 개체 유형과 연결 된 개체입니다. <xref:System.Xml.Serialization.XmlAttributes> 개체 자체에 각 필드, 속성 또는 클래스 serialize 되는 방식을 제어 하는 특성 개체에 대 한 적절 한 집합이 포함 되어 있습니다.  
  
 만들고 사용 하는 프로세스는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체는 다음과 같습니다.  
  
1.  만들기는 <xref:System.Xml.Serialization.XmlAttributes> 개체입니다.  
  
2.  재정의 되는 개체에 적합 한 특성 개체를 만듭니다. 예를 들어, 필드 또는 속성을 재정의 하려면 만듭니다는 <xref:System.Xml.Serialization.XmlElementAttribute>, new를 사용 하 여 파생 형식입니다. 새 선택적으로 할당할 수 <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A>, 또는 <xref:System.Xml.Serialization.XmlElementAttribute.Namespace%2A> 기본 클래스의 특성 이름 또는 네임 스페이스를 재정의 합니다.  
  
3.  특성 개체를 적절 한 추가 <xref:System.Xml.Serialization.XmlAttributes> 속성 또는 컬렉션입니다. 추가 예를 들어는 <xref:System.Xml.Serialization.XmlElementAttribute> 에 <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> 의 컬렉션은 <xref:System.Xml.Serialization.XmlAttributes> 재정의 되는 멤버 이름을 지정 하는 개체입니다.  
  
4.  만들기는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다.  
  
5.  사용 하 여는 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 메서드를 추가 <xref:System.Xml.Serialization.XmlAttributes> 개체는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다. 개체가 재정의 되는 <xref:System.Xml.Serialization.XmlRootAttribute> 또는 <xref:System.Xml.Serialization.XmlTypeAttribute>, 재정의 된 개체의 유형을 지정에 필요 합니다. 않지만 필드 또는 속성을 재정의 하는 경우 재정의 된 멤버의 이름을 지정 해야 합니다.  
  
6.  생성할 때는 <xref:System.Xml.Serialization.XmlSerializer>, 전달는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 에 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%2A> 생성자입니다.  
  
7.  그 결과 사용 하 여 <xref:System.Xml.Serialization.XmlSerializer> 를 직렬화 또는 파생된 클래스 개체를 역직렬화 합니다.  
  
   
  
## Examples  
 다음 예에서는 라는 클래스를 직렬화 `Orchestra`, 라는 단일 필드를 포함 하 `Instruments` 의 배열을 반환 하는 `Instrument` 개체입니다. 라는 두 번째 클래스 `Brass` 에서 상속 되는 `Instrument` 클래스입니다. 이 예제에서 사용 하는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 재정의 하는 클래스는 `Instrument` 필드를 필드에 적용할 수 있도록 `Brass` 개체입니다.  
  
 [!code-cpp[Classic XmlAttributeOverrides Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributeOverrides ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributeOverrides();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체 컬렉션에 추가합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, System.Xml.Serialization.XmlAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, class System.Xml.Serialization.XmlAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::Xml::Serialization::XmlAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * System.Xml.Serialization.XmlAttributes -&gt; unit" Usage="xmlAttributeOverrides.Add (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.XmlAttributes" />
      </Parameters>
      <Docs>
        <param name="type">재정의되는 개체의 <see cref="T:System.Type" />입니다.</param>
        <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체입니다.</param>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체 컬렉션에 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체로 재정의할 개체를 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes> 발생 하는 특성 개체의 통합을 포함 하는 개체는 <xref:System.Xml.Serialization.XmlSerializer> 개체 집합에 대 한 기본 serialization 동작을 재정의할 수 있습니다. 특성 개체에서 배치를 선택는 <xref:System.Xml.Serialization.XmlAttributes> 재정의 하려는 특정 동작에 따라 개체입니다. 예를 들어는 <xref:System.Xml.Serialization.XmlSerializer> 기본적으로 XML 요소로 클래스 멤버를 serialize 합니다. 대신 XM 특성으로 serialize 할 멤버를 원하는 경우 만들어야는 <xref:System.Xml.Serialization.XmlAttributeAttribute>에 할당는 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 속성은 <xref:System.Xml.Serialization.XmlAttributes>, 추가 하 고는 <xref:System.Xml.Serialization.XmlAttributes> 개체를 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다.  
  
 이 오버 로드를 사용 하 여 재정의 하는 <xref:System.Xml.Serialization.XmlRootAttribute> 또는 <xref:System.Xml.Serialization.XmlTypeAttribute>합니다.  
  
   
  
## Examples  
 다음 예에서는 라는 클래스를 직렬화 `Band` 라는 클래스에서 파생 된 `Orchestra`합니다. 이 예에서는 만듭니다는 <xref:System.Xml.Serialization.XmlRootAttribute> 개체에 할당 합니다는 <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> 속성은 <xref:System.Xml.Serialization.XmlAttributes> 개체입니다. 이 예에서는 다음 호출에서 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 메서드를 추가 하려면는 <xref:System.Xml.Serialization.XmlAttributes> 개체를 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다.  
  
 [!code-cpp[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Type type, string member, System.Xml.Serialization.XmlAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Type type, string member, class System.Xml.Serialization.XmlAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Type ^ type, System::String ^ member, System::Xml::Serialization::XmlAttributes ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Add : Type * string * System.Xml.Serialization.XmlAttributes -&gt; unit" Usage="xmlAttributeOverrides.Add (type, member, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
        <Parameter Name="attributes" Type="System.Xml.Serialization.XmlAttributes" />
      </Parameters>
      <Docs>
        <param name="type">재정의할 개체의 <see cref="T:System.Type" />입니다.</param>
        <param name="member">재정의할 멤버의 이름입니다.</param>
        <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체입니다.</param>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체 컬렉션에 추가합니다. <paramref name="type" /> 매개 변수는 재정의할 개체를 지정합니다. <paramref name="member" /> 매개 변수는 재정의되는 멤버의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlAttributes> 발생 하는 특성 개체의 통합을 포함 하는 개체는 <xref:System.Xml.Serialization.XmlSerializer> 개체 집합에 대 한 기본 serialization 동작을 재정의할 수 있습니다. 특성 개체에서 배치를 선택는 <xref:System.Xml.Serialization.XmlAttributes> 재정의 하려는 특정 동작에 따라 개체입니다. 예를 들어는 <xref:System.Xml.Serialization.XmlSerializer> 기본적으로 XML 요소로 클래스 멤버를 serialize 합니다. 대신 XML 특성으로 serialize 할 멤버를 원하는 경우 만들어야는 <xref:System.Xml.Serialization.XmlAttributeAttribute>에 할당는 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 속성은 <xref:System.Xml.Serialization.XmlAttributes>, 추가 하 고는 <xref:System.Xml.Serialization.XmlAttributes> 개체를 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다.  
  
 재정의 하는 동안이 메서드를 사용는 <xref:System.Xml.Serialization.XmlElementAttribute>, <xref:System.Xml.Serialization.XmlAttributeAttribute>, <xref:System.Xml.Serialization.XmlArrayAttribute>, <xref:System.Xml.Serialization.XmlArrayItemAttribute>, 또는 <xref:System.Xml.Serialization.XmlIgnoreAttribute>합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlAttributeAttribute> 개체에 할당 합니다는 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 속성은 <xref:System.Xml.Serialization.XmlAttributes> 개체입니다. 이 예에서는 다음 추가 <xref:System.Xml.Serialization.XmlAttributes> 개체는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체를 만들기 전에 <xref:System.Xml.Serialization.XmlSerializer>합니다.  
  
 [!code-cpp[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>재정의 특성의 컬렉션을 나타내는 개체를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributes this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributes Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As XmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributes ^ default[Type ^] { System::Xml::Serialization::XmlAttributes ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : System.Xml.Serialization.XmlAttributes" Usage="System.Xml.Serialization.XmlAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">검색할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
        <summary>지정한 기본 클래스 형식과 관련된 개체를 가져옵니다.</summary>
        <value>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드를 사용 하 여 반환 하는 <xref:System.Xml.Serialization.XmlAttributes> 개체에 대 한 특성을 포함 하는 <xref:System.Xml.Serialization.XmlRootAttribute> 또는 <xref:System.Xml.Serialization.XmlTypeAttribute> 개체입니다.  
  
 경우는 <xref:System.Xml.Serialization.XmlAttributes> 재정의 하는 개체를 포함 하는 개체는 <xref:System.Xml.Serialization.XmlArrayAttribute>, <xref:System.Xml.Serialization.XmlArrayItemAttribute>, <xref:System.Xml.Serialization.XmlElementAttribute>, <xref:System.Xml.Serialization.XmlEnumAttribute>, 또는 <xref:System.Xml.Serialization.XmlAttributeAttribute>,으로 재정의 된 멤버 유형을 지정 하는 오버 로드를 사용 해야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체는 <xref:System.Xml.Serialization.XmlAttributes> 개체 및 <xref:System.Xml.Serialization.XmlRootAttribute> 개체입니다. 이 예에서는 할당는 <xref:System.Xml.Serialization.XmlRootAttribute> 에 <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> 속성의는 <xref:System.Xml.Serialization.XmlAttributes> 개체를 추가 하는 <xref:System.Xml.Serialization.XmlAttributes> 개체를 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다. 마지막으로,이 예제에서는 가져옵니다는 <xref:System.Xml.Serialization.XmlAttributes> 전달 하 여 개체는 <xref:System.Type> 에 대해 직렬화 된 클래스의는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다. 이 예제는 <xref:System.Type> 은 `Group`합니다.  
  
 [!code-cpp[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributes this[Type type, string member] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributes Item(class System.Type, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type, member As String) As XmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributes ^ default[Type ^, System::String ^] { System::Xml::Serialization::XmlAttributes ^ get(Type ^ type, System::String ^ member); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type * string) : System.Xml.Serialization.XmlAttributes" Usage="System.Xml.Serialization.XmlAttributeOverrides.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="member" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">원하는 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
        <param name="member">반환할 <see cref="T:System.Xml.Serialization.XmlAttributes" />를 지정하는 재정의된 멤버의 이름입니다.</param>
        <summary>지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다. 해당 멤버 매개 변수는 재정의되는 기본 클래스 멤버를 지정합니다.</summary>
        <value>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 오버 로드를 사용 하 여 반환 하는 <xref:System.Xml.Serialization.XmlAttributes> 개체가 있는 재정의 하는 개체가 <xref:System.Xml.Serialization.XmlArrayAttribute>, <xref:System.Xml.Serialization.XmlArrayItemAttribute>, <xref:System.Xml.Serialization.XmlAttributeAttribute>, <xref:System.Xml.Serialization.XmlElementAttribute>, 또는 <xref:System.Xml.Serialization.XmlEnumAttribute>합니다. 경우는 <xref:System.Xml.Serialization.XmlAttributes> 개체에 포함 되어 있는 <xref:System.Xml.Serialization.XmlRootAttribute> 또는 <xref:System.Xml.Serialization.XmlTypeAttribute>, 재정의 된 형식만 지정 하는 오버 로드를 사용 해야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체는 <xref:System.Xml.Serialization.XmlAttributes>, 및 <xref:System.Xml.Serialization.XmlAttributeAttribute> 개체입니다. 이 예에서는 할당는 <xref:System.Xml.Serialization.XmlAttributeAttribute> 에 <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> 속성의는 <xref:System.Xml.Serialization.XmlAttributes> 개체는 <xref:System.Xml.Serialization.XmlAttributes> 개체를 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다. 마지막으로,이 예제에서는 가져옵니다는 <xref:System.Xml.Serialization.XmlAttributes> 전달 하 여 개체는 <xref:System.Type> 직렬화 된 클래스 및 멤버 이름을 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체입니다.  
  
 [!code-cpp[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributeOverrides.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributeOverrides.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
  </Members>
</Type>