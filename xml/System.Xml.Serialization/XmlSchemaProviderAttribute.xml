<Type Name="XmlSchemaProviderAttribute" FullName="System.Xml.Serialization.XmlSchemaProviderAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f70b55224ea951413663e9f0344547153b444cf5" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037009" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaProviderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaProviderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaProviderAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>형식에 적용되는 경우 XML 스키마를 반환하는 형식의 정적 메서드 이름과 형식의 serialization을 제어하는 <see cref="T:System.Xml.XmlQualifiedName" />(익명 형식의 경우 <see cref="T:System.Xml.Schema.XmlSchemaType" />)을 저장합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 주요 목적은 <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> 활성화 하는 것은 <xref:System.Xml.Serialization.XmlSchemaExporter> 클래스를 사용 하는 경우 또는 웹 서비스 기술 언어 도구 (WSDL.exe)가 쿼리할 때 스키마를 반환 합니다.는 **웹 참조 추가** Visual Studio의 기능입니다. 정적 메서드에서 형식에 대 한 실제 스키마를 제어할 수 있습니다.  
  
> [!NOTE]
>  특성의 대상 클래스에서 구현 해야 합니다는 <xref:System.Xml.Serialization.IXmlSerializable> 인터페이스입니다.  
  
 <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> 속성 리플렉션을 통해 정적 메서드 이름을 반환 합니다. 구현 해야 하는 메서드는 단일 매개 변수를 사용 해야 합니다는 <xref:System.Xml.Schema.XmlSchemaSet> 메서드 채워집니다 개체는 <xref:System.Xml.Schema.XmlSchema> 개체입니다. 메서드 반환 해야는 <xref:System.Xml.XmlQualifiedName> 데이터 형식을 식별 하는 개체입니다.  
  
## <a name="returning-anonymous-types"></a>익명 형식 반환  
 익명 복합 형식을 반환 하는 메서드를 사용 하 여 만들 수 없습니다 <xref:System.Xml.XmlQualifiedName>합니다. 익명 형식으로 반환 되어야 합니다 익명 형식에 이름이 없는 서 스키마에 익명 형식을 추가할 수 없습니다는 <xref:System.Xml.Schema.XmlSchemaType>합니다.  
  
   
  
## Examples  
 다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> 서버 쪽 클래스에 있습니다. 를 호출 하 여 명명 된 메서드는 <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> 속성 스키마를 만듭니다. 이 간단한 구현에서 기존 스키마 디스크를 읽습니다. 그러나 만들 수도 있습니다는 사용자 지정 스키마에는 형식을 사용 하 여 필요한 경우는 <xref:System.Xml.Schema> 네임 스페이스입니다.  
  
 [!code-csharp[HowToChunkSerializedData#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HowToChunkSerializedData/CS/SerializationChunk.cs#2)]
 [!code-vb[HowToChunkSerializedData#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HowToChunkSerializedData/VB/SerializationChunk.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchema" />
    <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
    <altmember cref="T:System.Xml.Serialization.XmlReflectionImporter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaProviderAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaProviderAttribute(System::String ^ methodName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">구현해야 하는 정적 메서드의 이름입니다.</param>
        <summary>형식의 XML 스키마를 제공하는 정적 메서드 이름을 가져와서 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAny">
      <MemberSignature Language="C#" Value="public bool IsAny { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAny" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAny As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAny { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대상 클래스가 와일드카드이거나 클래스의 스키마에 <see langword="xs:any" /> 요소만 포함되어 있는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
        <value>
          클래스가 와일드카드이거나 스키마에 <see langword="true" /> 요소만 있으면 <see langword="xs:any" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 특성의 대상 클래스는 클래스일 수 있습니다. 다음과 같은 방법으로이 작업을 수행할 수 있습니다.  
  
-   특성으로 라는 메서드가 반환할 수 `null`합니다.  
  
-   이 속성의 값을 설정 `true` 메서드 호출 하지 못하도록 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>형식의 XML 스키마 및 해당 XML 스키마 데이터 형식의 이름을 제공하는 정적 메서드의 이름을 가져옵니다.</summary>
        <value>XML 스키마를 반환하기 위해 XML 인프라에서 호출되는 메서드의 이름입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>