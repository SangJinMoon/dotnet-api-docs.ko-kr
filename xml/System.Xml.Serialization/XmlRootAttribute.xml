<Type Name="XmlRootAttribute" FullName="System.Xml.Serialization.XmlRootAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b55f3f976753095e1524a02bed323b49c0db7734" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439063" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlRootAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlRootAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlRootAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlRootAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlRootAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlRootAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.ReturnValue | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e5e5e-101">특성 대상의 XML serialization을 XML 루트 요소로 제어합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5e5e-101">Controls XML serialization of the attribute target as an XML root element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5e5e-102"><xref:System.Xml.Serialization.XmlRootAttribute> 제어 하는 특성의 제품군에 속하는 방법을 <xref:System.Xml.Serialization.XmlSerializer> 직렬화 하거나 개체를 역직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-102">The <xref:System.Xml.Serialization.XmlRootAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="e5e5e-103">비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="e5e5e-104">적용할 수는 <xref:System.Xml.Serialization.XmlRootAttribute> 클래스, 구조체, 열거형 또는 인터페이스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-104">You can apply the <xref:System.Xml.Serialization.XmlRootAttribute> to a class, structure, enumeration, or interface.</span></span> <span data-ttu-id="e5e5e-105">또한 XML 웹 서비스 메서드의 반환 값에 특성을 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-105">You can also apply the attribute to the return value of an XML Web service method.</span></span>  
  
 <span data-ttu-id="e5e5e-106">모든 XML 문서는 다른 모든 요소를 포함 하는 단일 루트 요소가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-106">Every XML document must have a single root element that contains all the other elements.</span></span> <span data-ttu-id="e5e5e-107"><xref:System.Xml.Serialization.XmlRootAttribute> 제어할 수 있습니다는 방법을 <xref:System.Xml.Serialization.XmlSerializer> 특정 속성을 설정 하 여 루트 요소를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-107">The <xref:System.Xml.Serialization.XmlRootAttribute> allows you to control how the <xref:System.Xml.Serialization.XmlSerializer> generates the root element by setting certain properties.</span></span> <span data-ttu-id="e5e5e-108">예를 들어 생성 된 XML 요소 이름을 설정 하 여 지정 된 <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-108">For example, specify the name of the generated XML element by setting the <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="e5e5e-109">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-109">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5e5e-110">word를 사용 하 여 `XmlRoot` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlRootAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-110">You can use the word `XmlRoot` in your code instead of the longer <xref:System.Xml.Serialization.XmlRootAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5e5e-111">다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlRootAttribute> 클래스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-111">The following example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to a class.</span></span> <span data-ttu-id="e5e5e-112">특성은 요소 이름, 네임 스페이스를 지정 하 고 요소가 한정 그리고 있는지는 `xsi:nil` 특성은 클래스로 설정 된 경우 생성 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-112">The attribute specifies the element name, namespace, and whether the element is qualified, and whether the `xsi:nil` attribute is generated if the class is set to `null`.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5e5e-113">
            <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 클래스의 새 인스턴스를 초기화하고 해당 클래스 이름을 XML 루트 요소의 이름으로 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class and uses the class name as the name of the XML root element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlRootAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlRootAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5e5e-114">
            <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-114">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e5e5e-115">다음 예제에서는 인스턴스를 만듭니다는 <xref:System.Xml.Serialization.XmlRootAttribute> 에 할당 하 고는 <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> 속성의는 <xref:System.Xml.Serialization.XmlAttributes> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-115">The following example creates an instance of an <xref:System.Xml.Serialization.XmlRootAttribute> and assigns it to the <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="e5e5e-116">경우는 <xref:System.Xml.Serialization.XmlSerializer> 직렬화는 `MyClass` 개체를 사용 하 여는 <xref:System.Xml.Serialization.XmlRootAttribute> 기본 루트 요소를 재정의 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-116">When the <xref:System.Xml.Serialization.XmlSerializer> serializes the `MyClass` object, it uses the <xref:System.Xml.Serialization.XmlRootAttribute> object to override the default root element.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.XmlRootAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.XmlRootAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlRootAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlRootAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlRootAttribute : string -&gt; System.Xml.Serialization.XmlRootAttribute" Usage="new System.Xml.Serialization.XmlRootAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="e5e5e-117">XML 루트 요소의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-117">The name of the XML root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5e5e-118">
            <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 루트 요소의 이름을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> class and specifies the name of the XML root element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e5e5e-119">다음 예제에서는 XmlRootAttribute의 인스턴스를 만들고 사용 하 여 "학생" 라는 클래스의 인스턴스로의 직렬화를 재정의 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-119">The following example creates an instance of the XmlRootAttribute and uses it to override the serialization of an instance of a class named "Student".</span></span>  
  
 [!code-cpp[XMLRootAttribute_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLRootAttribute_Constructor/CPP/xmlrootattribute_constructor.cpp#1)]
 [!code-csharp[XMLRootAttribute_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLRootAttribute_Constructor/CS/xmlrootattribute_constructor.cs#1)]
 [!code-vb[XMLRootAttribute_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLRootAttribute_Constructor/VB/xmlrootattribute_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlRootAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5e5e-120">XML 루트 요소의 XSD 데이터 형식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-120">Gets or sets the XSD data type of the XML root element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5e5e-121">World Wide Web 컨소시엄(www.w3.org) 문서의 "XML Schema Part 2: Datatypes"에 정의된 XSD(XML 스키마 문서) 데이터 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-121">An XSD (XML Schema Document) data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema: DataTypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5e5e-122">다음 표에서 XSD 단순 데이터 형식과 해당.NET 형식 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-122">The following table lists the XSD simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="e5e5e-123">XSD에 대 한 `base64Binary` 및 `hexBinary` 데이터 형식을 사용 하 여 배열을 <xref:System.Byte> , 구조 및 적용 한 <xref:System.Xml.Serialization.XmlRootAttribute> 와 <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> 속성이 "base64Binary" 또는 "hexBinary" 적절 하 게로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-123">For the XSD `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlRootAttribute> with the <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="e5e5e-124">XSD에 대 한 `time` 및 `date` 데이터 형식을 사용 하 여는 <xref:System.DateTime> 입력 하 고 적용 된 <xref:System.Xml.Serialization.XmlRootAttribute> 와 <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> "date" 또는 "시간"로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-124">For the XSD `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlRootAttribute> with the <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="e5e5e-125">문자열에 매핑되는 모든 XSD 형식에 대 한 적용 된 <xref:System.Xml.Serialization.XmlRootAttribute> 와 해당 <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> 속성이 XSD 형식으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-125">For every XSD type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlRootAttribute> with its <xref:System.Xml.Serialization.XmlRootAttribute.DataType%2A> property set to the XSD type.</span></span> <span data-ttu-id="e5e5e-126">그러나 serialization 형식으로 된 멤버에 대 한 스키마만 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-126">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5e5e-127">속성이 대/소문자 구분, 이므로 XSD 데이터 형식 중 하나를 정확 하 게 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-127">The property is case-sensitive, so you must set it exactly to one of the XSD data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5e5e-128">요소를 XML 형식으로 이진 데이터를 전달 합니다. XML 특성으로 전달할 때 보다 더 효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-128">Passing binary data as an XML element is more efficient than passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="e5e5e-129">XML 데이터 형식에 대 한 자세한 내용은 "XML 스키마 파트 2:: 데이터 형식" 이라는 World Wide Web 컨소시엄 (www.w3.org) 문서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-129">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="e5e5e-130">XSD 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="e5e5e-130">XSD data type</span></span>|<span data-ttu-id="e5e5e-131">.NET 데이터 형식</span><span class="sxs-lookup"><span data-stu-id="e5e5e-131">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="e5e5e-132">anyURI</span><span class="sxs-lookup"><span data-stu-id="e5e5e-132">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-133">base64Binary</span><span class="sxs-lookup"><span data-stu-id="e5e5e-133">base64Binary</span></span>|<span data-ttu-id="e5e5e-134">배열 <xref:System.Byte> 개체</span><span class="sxs-lookup"><span data-stu-id="e5e5e-134">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="e5e5e-135">boolean</span><span class="sxs-lookup"><span data-stu-id="e5e5e-135">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="e5e5e-136">byte</span><span class="sxs-lookup"><span data-stu-id="e5e5e-136">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="e5e5e-137">date</span><span class="sxs-lookup"><span data-stu-id="e5e5e-137">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="e5e5e-138">dateTime</span><span class="sxs-lookup"><span data-stu-id="e5e5e-138">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="e5e5e-139">decimal</span><span class="sxs-lookup"><span data-stu-id="e5e5e-139">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="e5e5e-140">double</span><span class="sxs-lookup"><span data-stu-id="e5e5e-140">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="e5e5e-141">ENTITY</span><span class="sxs-lookup"><span data-stu-id="e5e5e-141">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-142">엔터티</span><span class="sxs-lookup"><span data-stu-id="e5e5e-142">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-143">float</span><span class="sxs-lookup"><span data-stu-id="e5e5e-143">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="e5e5e-144">gDay</span><span class="sxs-lookup"><span data-stu-id="e5e5e-144">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-145">gMonth</span><span class="sxs-lookup"><span data-stu-id="e5e5e-145">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-146">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="e5e5e-146">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-147">gYear</span><span class="sxs-lookup"><span data-stu-id="e5e5e-147">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-148">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="e5e5e-148">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-149">hexBinary</span><span class="sxs-lookup"><span data-stu-id="e5e5e-149">hexBinary</span></span>|<span data-ttu-id="e5e5e-150">배열 <xref:System.Byte> 개체</span><span class="sxs-lookup"><span data-stu-id="e5e5e-150">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="e5e5e-151">ID</span><span class="sxs-lookup"><span data-stu-id="e5e5e-151">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-152">IDREF</span><span class="sxs-lookup"><span data-stu-id="e5e5e-152">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-153">IDREFS</span><span class="sxs-lookup"><span data-stu-id="e5e5e-153">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-154">int</span><span class="sxs-lookup"><span data-stu-id="e5e5e-154">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="e5e5e-155">정수</span><span class="sxs-lookup"><span data-stu-id="e5e5e-155">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-156">language</span><span class="sxs-lookup"><span data-stu-id="e5e5e-156">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-157">long</span><span class="sxs-lookup"><span data-stu-id="e5e5e-157">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="e5e5e-158">name</span><span class="sxs-lookup"><span data-stu-id="e5e5e-158">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-159">NCName</span><span class="sxs-lookup"><span data-stu-id="e5e5e-159">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-160">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="e5e5e-160">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-161">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="e5e5e-161">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-162">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="e5e5e-162">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-163">normalizedString</span><span class="sxs-lookup"><span data-stu-id="e5e5e-163">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-164">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="e5e5e-164">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-165">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="e5e5e-165">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-166">NOTATION</span><span class="sxs-lookup"><span data-stu-id="e5e5e-166">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-167">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="e5e5e-167">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-168">QName</span><span class="sxs-lookup"><span data-stu-id="e5e5e-168">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="e5e5e-169">recurringDate</span><span class="sxs-lookup"><span data-stu-id="e5e5e-169">recurringDate</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-170">duration</span><span class="sxs-lookup"><span data-stu-id="e5e5e-170">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-171">string</span><span class="sxs-lookup"><span data-stu-id="e5e5e-171">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-172">short</span><span class="sxs-lookup"><span data-stu-id="e5e5e-172">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="e5e5e-173">시간</span><span class="sxs-lookup"><span data-stu-id="e5e5e-173">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="e5e5e-174">token</span><span class="sxs-lookup"><span data-stu-id="e5e5e-174">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="e5e5e-175">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="e5e5e-175">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="e5e5e-176">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="e5e5e-176">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="e5e5e-177">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="e5e5e-177">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="e5e5e-178">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="e5e5e-178">unsignedShort</span></span>|<xref:System.UInt16>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlRootAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5e5e-179">
            <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> 및 <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> 메서드에 의해 각각 생성되고 인식되는 XML 요소의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-179">Gets or sets the name of the XML element that is generated and recognized by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class's <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> and <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" /> methods, respectively.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5e5e-180">XML 문서 인스턴스에서 생성되고 인식되는 XML 루트 요소의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-180">The name of the XML root element that is generated and recognized in an XML-document instance.</span>
          </span>
          <span data-ttu-id="e5e5e-181">기본값은 serialize된 클래스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-181">The default is the name of the serialized class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5e5e-182">지정 된 <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> 다 클래스 이름에서 생성된 된 XML 요소 이름을 사용 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-182">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the class name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5e5e-183">다음 예제에서는 인스턴스를 만듭니다는 <xref:System.Xml.Serialization.XmlRootAttribute> 클래스 및 집합은 <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> 속성을 새 값입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-183">The following example creates an instance of the <xref:System.Xml.Serialization.XmlRootAttribute> class and sets the <xref:System.Xml.Serialization.XmlRootAttribute.ElementName%2A> property to a new value.</span></span> <span data-ttu-id="e5e5e-184">개체를 만드는 데 다음 프로그램 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체는 개체의 직렬화를 재정의 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-184">The object is then used to create an <xref:System.Xml.Serialization.XmlAttributeOverrides> object used to override the serialization of an object.</span></span>  
  
 [!code-cpp[XMLRootAttribute_ElementName#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLRootAttribute_ElementName/CPP/xmlrootattribute_elementname.cpp#1)]
 [!code-csharp[XMLRootAttribute_ElementName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLRootAttribute_ElementName/CS/xmlrootattribute_elementname.cs#1)]
 [!code-vb[XMLRootAttribute_ElementName#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLRootAttribute_ElementName/VB/xmlrootattribute_elementname.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlRootAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5e5e-185">
            <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="null" />로 설정된 멤버를 <see langword="xsi:nil" />로 설정된 <see langword="true" /> 특성으로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-185">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> into the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5e5e-186">
            <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-186">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5e5e-187">구조에 대 한 XML 스키마 사양에는 XML 문서를 요소 콘텐츠가 누락 된 신호를 명시적으로 있습니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-187">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="e5e5e-188">이러한 요소는 특성이 포함 되어 `xsi:nil` 로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-188">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="e5e5e-189">자세한 내용은 참조는 http://www.w3.org/TR/xmlschema-1/ 라는 사양 `XML Schema Part 1: Structures`합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-189">For more information, see the http://www.w3.org/TR/xmlschema-1/ specification named `XML Schema Part 1: Structures`.</span></span>  
  
 <span data-ttu-id="e5e5e-190">경우는 <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> 속성이로 설정 되어 `true`, `xsi:nil` 다음 XML에 표시 된 것 처럼 특성이 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-190">If the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated as shown in the following XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:nil="true" />  
```  
  
 <span data-ttu-id="e5e5e-191">경우는 <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> 속성은 `false`, 다음 코드에 표시 된 대로 빈 요소가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-191">If the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property is `false`, an empty element is created as shown in the following code:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
xmlns:xsd="http://www.w3.org/2001/XMLSchema" />  
```  
  
   
  
## Examples  
 <span data-ttu-id="e5e5e-192">다음 예에서는 라는 클래스를 직렬화 `Group`합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-192">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="e5e5e-193">예 적용 된 <xref:System.Xml.Serialization.XmlRootAttribute> 클래스 및 설정에는 <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> 속성을 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-193">The example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to the class, and sets the <xref:System.Xml.Serialization.XmlRootAttribute.IsNullable%2A> property to `false`.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlRootAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlRootAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5e5e-194">XML 루트 요소의 네임스페이스를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-194">Gets or sets the namespace for the XML root element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5e5e-195">XML 요소의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5e5e-195">The namespace for the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5e5e-196"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> 속성 사양을 준수 하는 World Wide Web 컨소시엄 (www.w3.org) 라는 `Namespaces in XML`합니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-196">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification named `Namespaces in XML`.</span></span>  
  
 <span data-ttu-id="e5e5e-197">XML 문서에 접두사가 있는 네임 스페이스를 만들려면 프로그램 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 모든 접두사를 네임 스페이스 쌍을 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-197">To create prefixed namespaces in the XML document, create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object that contains all the prefix-namespace pairs.</span></span> <span data-ttu-id="e5e5e-198">각각에 대해 설정한 네임 스페이스 <xref:System.Xml.Serialization.XmlArrayAttribute> 에 포함 되어야 합니다는 <xref:System.Xml.Serialization.XmlSerializerNamespaces> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-198">The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="e5e5e-199">경우는 <xref:System.Xml.Serialization.XmlSerializer> 문서를 생성할 각 배열 항목에 대 한 요소 이름 접두사를 붙입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-199">When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5e5e-200">다음 예제에서는 적용 된 <xref:System.Xml.Serialization.XmlRootAttribute> 를 클래스 집합에는 <xref:System.Xml.Serialization.XmlRootAttribute.Namespace%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="e5e5e-200">The following example applies the <xref:System.Xml.Serialization.XmlRootAttribute> to a class and sets the <xref:System.Xml.Serialization.XmlRootAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlRootAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlRootAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      </Docs>
    </Member>
  </Members>
</Type>