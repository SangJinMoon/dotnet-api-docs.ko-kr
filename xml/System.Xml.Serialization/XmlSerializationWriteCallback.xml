<Type Name="XmlSerializationWriteCallback" FullName="System.Xml.Serialization.XmlSerializationWriteCallback">
  <TypeSignature Language="C#" Value="public delegate void XmlSerializationWriteCallback(object o);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlSerializationWriteCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSerializationWriteCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub XmlSerializationWriteCallback(o As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void XmlSerializationWriteCallback(System::Object ^ o);" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="o" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="o"><span data-ttu-id="c758d-101">serialize되고 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c758d-101">The object being serialized.</span></span></param>
    <summary><span data-ttu-id="c758d-102">SOAP로 인코딩된 루트가 아닌 XML 데이터에서 형식을 serialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="c758d-102">Delegate that is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class for serialization of types from SOAP-encoded, non-root XML data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c758d-103">초기화 하는 동안.NET Framework XML serialization 인프라 동적으로 생성 하 고 serialization에서 파생 된 임시 클래스를 컴파일하고 <xref:System.Xml.Serialization.XmlSerializationWriter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c758d-103">During initialization, the .NET Framework XML serialization infrastructure dynamically generates and compiles a temporary class for serialization derived from the <xref:System.Xml.Serialization.XmlSerializationWriter> class.</span></span> <span data-ttu-id="c758d-104">이 과정에서.NET Framework를 구현 하는 쓰기 메서드를 생성 된 <xref:System.Xml.Serialization.XmlSerializationWriteCallback> 클래스 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="c758d-104">During this process, the .NET Framework generates write methods that implement the <xref:System.Xml.Serialization.XmlSerializationWriteCallback> class delegate.</span></span> <span data-ttu-id="c758d-105">따라서 특정.NET Framework 형식 및 SOAP 인코딩된 XML을 통해 직렬화 되 고은 루트 요소가 아닌는 XML 데이터 형식 간의 매핑을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="c758d-105">It does so for certain mappings between .NET Framework types and XML data types that are serialized through SOAP-encoded XML and are not root elements.</span></span> <span data-ttu-id="c758d-106">그런 다음 필요에 따라 write 메서드가 직렬화 하는 동안 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c758d-106">Then, as necessary, a write method is called during serialization.</span></span>  
  
 <span data-ttu-id="c758d-107">직접 인스턴스화하지 해야 <xref:System.Xml.Serialization.XmlSerializationWriteCallback>합니다.</span><span class="sxs-lookup"><span data-stu-id="c758d-107">You should not directly instantiate <xref:System.Xml.Serialization.XmlSerializationWriteCallback>.</span></span>  
  
 <span data-ttu-id="c758d-108">SOAP 인코딩은 SOAP 1.1 사양 단원 5에 설명 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c758d-108">SOAP encoding is described in Section 5 of the SOAP 1.1 specification.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
</Type>