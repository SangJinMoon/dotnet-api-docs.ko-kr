<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlIgnoreAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56a62a599ccc106e2a327f7aeaad785e44067ca13.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a62a599ccc106e2a327f7aeaad785e44067ca13</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>Instructs the <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /&gt;</ph> method of the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> not to serialize the public field or public read/write property value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 메서드를 호출하여 공용 필드 또는 공용 읽기/쓰기 속성 값을 serialize하지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> belongs to a family of attributes that controls how the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes or deserializes an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> 제어 하는 특성의 제품군에 속하는 방법을 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 직렬화 하거나 개체를 역직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>If you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> to any member of a class, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> ignores the member when serializing or deserializing an instance of the class.</source>
          <target state="translated">적용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> 는 클래스의 모든 멤버에는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 를 직렬화 또는 클래스의 인스턴스를 역직렬화 하는 경우 멤버를 무시 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">비슷한 특성의 전체 목록은 참조 하십시오. <bpt id="p1">[</bpt>특성을 제어 XML 직렬화<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>You can override the behavior caused by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> by creating an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and setting its <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">인해 발생 하는 동작을 재정의할 수는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> 만들어는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> 개체 및 설정을 해당 <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> 속성을 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>You must <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an instance of the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">수행 해야 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> 개체의 인스턴스에 <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>Lastly, you must use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object to construct an instance of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class before you call the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> methods.</source>
          <target state="translated">마지막으로 사용 해야 합니다는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> 개체의 인스턴스를 생성 하는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 호출 하기 전에 클래스는 <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>The <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept> occasionally generates the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> when creating classes from a schema file (.xsd).</source>
          <target state="translated"><bpt id="p1">[</bpt>XML 스키마 정의 도구 (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept> 경우에 따라 생성 된 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> 스키마 파일 (.xsd)에서 클래스를 만들 때.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>This behavior occurs because value types cannot be set to <ph id="ph1">`null`</ph>, but all XML data types can be.</source>
          <target state="translated">값 형식으로 설정할 수 없습니다 때문에이 문제가 발생 <ph id="ph1">`null`</ph>, 하지만 모든 XML 데이터 형식이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>Therefore, the tool creates two fields when it encounters an XML type that maps to a value type: one to hold the value and another special field that takes the form of <ph id="ph1">`fieldnameSpecified`</ph>, where the <ph id="ph2">`fieldname`</ph> is replaced by the name of the field or property.</source>
          <target state="translated">값 형식에 매핑되는 XML 형식 발생 하면이 도구 두 필드를 만듭니다 따라서: 하나는 값과 형식을 사용 하는 다른 특수 필드를 보유 하 <ph id="ph1">`fieldnameSpecified`</ph>, 여기서는 <ph id="ph2">`fieldname`</ph> 필드나 속성의 이름으로 바뀝니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>Notice, however, that this special field is generated only when the schema specifies that the element has no minimum occurrence (minOccurs = "0") and that the element has no default value.</source>
          <target state="translated">하지만을 메모리 부족 스키마 요소에 없는 최소 발생을 지정 하는 경우에이 특수 필드 생성 됩니다 (minOccurs = "0") 및 요소에 기본값이 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> sets and checks this special field to determine whether a value has been set for the field or property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 설정 하 고 필드 또는 속성에 대 한 값 설정 되었는지 여부를 확인 하려면이 특수 필드를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>Because the special field must not be serialized, the tool applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> to it.</source>
          <target state="translated">도구에서는 적용 하는 특수 필드 직렬화 하지 해야 하기 때문에 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> 에 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>특성<ept id="p1">](~/docs/standard/attributes/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>You can use the word <ph id="ph1">`XmlIgnore`</ph> in your code instead of the longer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>.</source>
          <target state="translated">word를 사용 하 여 <ph id="ph1">`XmlIgnore`</ph> 대신에 간결 코드에서 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>The following example shows a class named <ph id="ph1">`Group`</ph>, which contains a field named <ph id="ph2">`Comment`</ph>.</source>
          <target state="translated">다음 예에서는 라는 클래스 <ph id="ph1">`Group`</ph>, 라는 필드를 포함 하 <ph id="ph2">`Comment`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlIgnoreAttribute">
          <source>The example assigns the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> to the field, thereby instructing the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to ignore the field when serializing or deserializing an instance of the class.</source>
          <target state="translated">이 예에서는 할당는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> 을 필드에, 킴으로써는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 를 직렬화 또는 클래스의 인스턴스를 역직렬화 하는 경우 필드를 무시 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
          <source>The following example shows a class named <ph id="ph1">`Group`</ph>, which contains a field named <ph id="ph2">`Comment`</ph>.</source>
          <target state="translated">다음 예에서는 라는 클래스 <ph id="ph1">`Group`</ph>, 라는 필드를 포함 하 <ph id="ph2">`Comment`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
          <source>The example assigns the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> to the field, thereby instructing the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to ignore the field when serializing or deserializing an instance of the class.</source>
          <target state="translated">이 예에서는 할당는 <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> 을 필드에, 킴으로써는 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> 를 직렬화 또는 클래스의 인스턴스를 역직렬화 하는 경우 필드를 무시 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>