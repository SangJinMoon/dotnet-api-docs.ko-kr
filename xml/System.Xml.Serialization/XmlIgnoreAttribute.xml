<Type Name="XmlIgnoreAttribute" FullName="System.Xml.Serialization.XmlIgnoreAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a62a599ccc106e2a327f7aeaad785e44067ca13" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719367" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlIgnoreAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlIgnoreAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlIgnoreAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlIgnoreAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlIgnoreAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />의 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 메서드를 호출하여 공용 필드 또는 공용 읽기/쓰기 속성 값을 serialize하지 않도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 제어 하는 특성의 제품군에 속하는 방법을 <xref:System.Xml.Serialization.XmlSerializer> 직렬화 하거나 개체를 역직렬화 합니다. 적용 하는 경우는 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 는 클래스의 모든 멤버에는 <xref:System.Xml.Serialization.XmlSerializer> 를 직렬화 또는 클래스의 인스턴스를 역직렬화 하는 경우 멤버를 무시 합니다. 비슷한 특성의 전체 목록은 참조 하십시오. [특성을 제어 XML 직렬화](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)합니다.  
  
 인해 발생 하는 동작을 재정의할 수는 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 만들어는 <xref:System.Xml.Serialization.XmlAttributes> 개체 및 설정을 해당 <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> 속성을 `false`합니다. 수행 해야 <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 는 <xref:System.Xml.Serialization.XmlAttributes> 개체의 인스턴스에 <xref:System.Xml.Serialization.XmlAttributeOverrides> 클래스입니다. 마지막으로 사용 해야 합니다는 <xref:System.Xml.Serialization.XmlAttributeOverrides> 개체의 인스턴스를 생성 하는 <xref:System.Xml.Serialization.XmlSerializer> 호출 하기 전에 클래스는 <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> 또는 <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> 메서드.  
  
 [XML 스키마 정의 도구 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) 경우에 따라 생성 된 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 스키마 파일 (.xsd)에서 클래스를 만들 때. 값 형식으로 설정할 수 없습니다 때문에이 문제가 발생 `null`, 하지만 모든 XML 데이터 형식이 될 수 있습니다. 값 형식에 매핑되는 XML 형식 발생 하면이 도구 두 필드를 만듭니다 따라서: 하나는 값과 형식을 사용 하는 다른 특수 필드를 보유 하 `fieldnameSpecified`, 여기서는 `fieldname` 필드나 속성의 이름으로 바뀝니다. 하지만을 메모리 부족 스키마 요소에 없는 최소 발생을 지정 하는 경우에이 특수 필드 생성 됩니다 (minOccurs = "0") 및 요소에 기본값이 없습니다. <xref:System.Xml.Serialization.XmlSerializer> 설정 하 고 필드 또는 속성에 대 한 값 설정 되었는지 여부를 확인 하려면이 특수 필드를 확인 합니다. 도구에서는 적용 하는 특수 필드 직렬화 하지 해야 하기 때문에 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 에 있습니다.  
  
 특성을 사용 하는 방법에 대 한 자세한 내용은 참조 [특성](~/docs/standard/attributes/index.md)합니다.  
  
> [!NOTE]
>  word를 사용 하 여 `XmlIgnore` 대신에 간결 코드에서 <xref:System.Xml.Serialization.XmlIgnoreAttribute>합니다.  
  
   
  
## Examples  
 다음 예에서는 라는 클래스 `Group`, 라는 필드를 포함 하 `Comment`합니다. 이 예에서는 할당는 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 을 필드에, 킴으로써는 <xref:System.Xml.Serialization.XmlSerializer> 를 직렬화 또는 클래스의 인스턴스를 역직렬화 하는 경우 필드를 무시 합니다.  
  
 [!code-cpp[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlIgnoreAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlIgnoreAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예에서는 라는 클래스 `Group`, 라는 필드를 포함 하 `Comment`합니다. 이 예에서는 할당는 <xref:System.Xml.Serialization.XmlIgnoreAttribute> 을 필드에, 킴으로써는 <xref:System.Xml.Serialization.XmlSerializer> 를 직렬화 또는 클래스의 인스턴스를 역직렬화 하는 경우 필드를 무시 합니다.  
  
 [!code-cpp[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlIgnoreAttribute.XmlIgnoreAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
  </Members>
</Type>