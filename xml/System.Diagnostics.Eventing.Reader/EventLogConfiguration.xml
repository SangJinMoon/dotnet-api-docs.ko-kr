<Type Name="EventLogConfiguration" FullName="System.Diagnostics.Eventing.Reader.EventLogConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6f304cdb0a7cc20edd884c5449375c258970d8f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51927307" /></Metadata><TypeSignature Language="C#" Value="public class EventLogConfiguration : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogConfiguration extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogConfiguration&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogConfiguration : IDisposable" />
  <TypeSignature Language="F#" Value="type EventLogConfiguration = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="71cee-101">이벤트 로그에 대 한 정적 정보 및 구성 설정을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-101">Contains static information and configuration settings for an event log.</span></span> <span data-ttu-id="71cee-102">로그를 만든 이벤트 공급자에 의해 정의 된 대부분의 구성 설정.</span><span class="sxs-lookup"><span data-stu-id="71cee-102">Many of the configurations settings were defined by the event provider that created the log.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71cee-103">이 개체에 대 한 속성 변경 되 면 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-103">If a property is changed for this object, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71cee-104">예를 들어이 클래스를 사용 하 여 코드 참조 [방법: 이벤트 로그 속성을 읽고 구성](https://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac)합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-104">For example code using this class, see [How to: Configure and Read Event Log Properties](https://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-105">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-105">Technology Summary for Reading and Managing Event Logs</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-106">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-106">Event Log Scenarios</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71cee-107">새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 개체를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-107">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-108">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-108">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-109">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-109">Event Log Scenarios</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogConfiguration : string -&gt; System.Diagnostics.Eventing.Reader.EventLogConfiguration" Usage="new System.Diagnostics.Eventing.Reader.EventLogConfiguration logName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="71cee-110">정보 및 구성 설정을 가져올 로컬 이벤트 로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-110">The name of the local event log for which to get information and configuration settings.</span></span></param>
        <summary><span data-ttu-id="71cee-111">새 초기화 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 정보 및 구성 설정을 가져올 로컬 이벤트 로그를 지정 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-111">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the local event log for which to get information and configuration settings.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-112">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-112">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-113">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-113">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName, System.Diagnostics.Eventing.Reader.EventLogSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, class System.Diagnostics.Eventing.Reader.EventLogSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, session As EventLogSession)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName, System::Diagnostics::Eventing::Reader::EventLogSession ^ session);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogConfiguration : string * System.Diagnostics.Eventing.Reader.EventLogSession -&gt; System.Diagnostics.Eventing.Reader.EventLogConfiguration" Usage="new System.Diagnostics.Eventing.Reader.EventLogConfiguration (logName, session)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" />
      </Parameters>
      <Docs>
        <param name="logName"><span data-ttu-id="71cee-114">정보 및 구성 설정을 가져올 이벤트 로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-114">The name of the event log for which to get information and configuration settings.</span></span></param>
        <param name="session"><span data-ttu-id="71cee-115">이벤트 로그 세션에 속하는 지정된 된 로그의 이벤트 로그 서비스를 확인 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-115">The event log session used to determine the event log service that the specified log belongs to.</span></span> <span data-ttu-id="71cee-116">세션의 이벤트 로그 서비스에 로컬 컴퓨터 또는 원격 컴퓨터에 연결 하거나 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-116">The session is either connected to the event log service on the local computer or a remote computer.</span></span></param>
        <summary><span data-ttu-id="71cee-117">새 초기화 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 정보 및 구성 설정을 가져올 로그의 이름을 지정 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-117">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the name of the log for which to get information and configuration settings.</span></span> <span data-ttu-id="71cee-118">로그는 로컬 컴퓨터 또는 원격 컴퓨터에 지정 된 이벤트 로그 세션 기반에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-118">The log can be on the local computer or a remote computer, based on the event log session specified.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-119">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-119">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-120">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-120">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71cee-121">이 개체에서 사용하는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-121">Releases the resources used by this object.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-122">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-122">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-123">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-123">Event Log Scenarios</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventLogConfiguration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71cee-124">이 개체에서 사용 하는 모든 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-124">Releases all the resources used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-125">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-125">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-126">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-126">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventLogConfiguration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="71cee-127">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-127"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="71cee-128">이 개체를 사용 하는 관리 되지 않는 리소스를 해제 하 고 필요에 따라 관리 되는 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-128">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-129">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-129">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-130">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-130">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsClassicLog">
      <MemberSignature Language="C#" Value="public bool IsClassicLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClassicLog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClassicLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClassicLog { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClassicLog : bool" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-131">이벤트 로그는 클래식 이벤트 로그를 사용 하 여 인지 여부를 나타내는 플래그를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-131">Gets the flag that indicates if the event log is a classic event log.</span></span> <span data-ttu-id="71cee-132">클래식 이벤트 로그에서 이벤트 공급자에서 사용 하는 매니페스트 (.xml 파일) 아닌.mc 파일에 정의 된 이벤트를 발생 하는 경우</span><span class="sxs-lookup"><span data-stu-id="71cee-132">A classic event log is one that has its events defined in a .mc file instead of a manifest (.xml file) used by the event provider.</span></span></summary>
        <value><span data-ttu-id="71cee-133">반환 <see langword="true" /> 이벤트 로그가 클래식 로그 이면 되며 반환 <see langword="false" /> 이벤트 로그가 클래식 로그 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="71cee-133">Returns <see langword="true" /> if the event log is a classic log, and returns <see langword="false" /> if the event log is not a classic log.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-134">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-134">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-135">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-135">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-136">이벤트 로그 사용 되는지 여부를 결정 하는 부울 값을 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-136">Gets or sets a Boolean value that determines whether the event log is enabled or disabled.</span></span> <span data-ttu-id="71cee-137">활성화 된 로그는 이벤트가 기록 될 수 있습니다, 하나 이며 비활성된 로그 이벤트를 기록할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-137">An enabled log is one in which events can be logged, and a disabled log is one in which events cannot be logged.</span></span></summary>
        <value><span data-ttu-id="71cee-138">반환 <see langword="true" /> 로그를 사용 하 고 반환 하는 경우 <see langword="false" /> 로그를 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-138">Returns <see langword="true" /> if the log is enabled, and returns <see langword="false" /> if the log is disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71cee-139">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-139">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-140">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-140">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-141">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-141">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LogFilePath">
      <MemberSignature Language="C#" Value="public string LogFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LogFilePath : string with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-142">로그에 대 한 이벤트를 저장할 파일의 위치로 파일 디렉터리 경로 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-142">Gets or sets the file directory path to the location of the file where the events are stored for the log.</span></span></summary>
        <value><span data-ttu-id="71cee-143">이벤트 로그 파일의 경로를 포함 하는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-143">Returns a string that contains the path to the event log file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71cee-144">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-144">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-145">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-145">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-146">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-146">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LogIsolation">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogIsolation As EventLogIsolation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogIsolation LogIsolation { System::Diagnostics::Eventing::Reader::EventLogIsolation get(); };" />
      <MemberSignature Language="F#" Value="member this.LogIsolation : System.Diagnostics.Eventing.Reader.EventLogIsolation" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogIsolation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-147">가져옵니다는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 이벤트 로그는 응용 프로그램, 시스템 또는 사용자 지정 이벤트 로그 인지 여부를 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-147">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value that specifies whether the event log is an application, system, or custom event log.</span></span></summary>
        <value><span data-ttu-id="71cee-148">반환 된 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-148">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-149">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-149">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-150">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-150">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LogMode">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogMode LogMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogMode LogMode" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMode As EventLogMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogMode LogMode { System::Diagnostics::Eventing::Reader::EventLogMode get(); void set(System::Diagnostics::Eventing::Reader::EventLogMode value); };" />
      <MemberSignature Language="F#" Value="member this.LogMode : System.Diagnostics.Eventing.Reader.EventLogMode with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-151">가져오거나는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 이벤트 로그가 가득 찰 때 이벤트가 처리 되는 방식을 결정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-151">Gets or sets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value that determines how events are handled when the event log becomes full.</span></span></summary>
        <value><span data-ttu-id="71cee-152">반환 된 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-152">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71cee-153">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-153">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-154">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-154">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-155">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-155">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogName : string" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-156">이벤트 로그의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-156">Gets the name of the event log.</span></span></summary>
        <value><span data-ttu-id="71cee-157">이벤트 로그의 이름이 포함 된 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-157">Returns a string that contains the name of the event log.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-158">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-158">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-159">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-159">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LogType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogType LogType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogType LogType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogType As EventLogType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogType LogType { System::Diagnostics::Eventing::Reader::EventLogType get(); };" />
      <MemberSignature Language="F#" Value="member this.LogType : System.Diagnostics.Eventing.Reader.EventLogType" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-160">가져옵니다는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 이벤트 로그의 유형을 결정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-160">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value that determines the type of the event log.</span></span></summary>
        <value><span data-ttu-id="71cee-161">반환 된 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-161">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-162">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-162">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-163">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-163">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeInBytes">
      <MemberSignature Language="C#" Value="public long MaximumSizeInBytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumSizeInBytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumSizeInBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumSizeInBytes { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSizeInBytes : int64 with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-164">(바이트)를 이벤트 로그 파일 수의 최대 크기를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-164">Gets or sets the maximum size, in bytes, that the event log file is allowed to be.</span></span> <span data-ttu-id="71cee-165">파일에서이 최대 크기에 도달 하면 전체 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-165">When the file reaches this maximum size, it is considered full.</span></span></summary>
        <value><span data-ttu-id="71cee-166">이벤트 로그 파일 일 수는 최대 크기 (바이트) 나타내는 long 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-166">Returns a long value that represents the maximum size, in bytes, that the event log file is allowed to be.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71cee-167">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-167">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-168">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-168">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-169">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-169">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OwningProviderName">
      <MemberSignature Language="C#" Value="public string OwningProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwningProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OwningProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwningProviderName : string" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-170">이 이벤트 로그를 만든 이벤트 공급자의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-170">Gets the name of the event provider that created this event log.</span></span></summary>
        <value><span data-ttu-id="71cee-171">이 이벤트 로그를 만든 이벤트 공급자의 이름을 포함 하는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-171">Returns a string that contains the name of the event provider that created this event log.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-172">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-172">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-173">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-173">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderBufferSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderBufferSize As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderBufferSize { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderBufferSize : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-174">로그에 이벤트를 게시에 대 한 이벤트 공급자를 사용 하는 버퍼의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-174">Gets the size of the buffer that the event provider uses for publishing events to the log.</span></span></summary>
        <value><span data-ttu-id="71cee-175">Null 일 수 있는 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-175">Returns an integer value that can be null.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-176">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-176">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-177">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-177">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderControlGuid">
      <MemberSignature Language="C#" Value="public Nullable&lt;Guid&gt; ProviderControlGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; ProviderControlGuid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderControlGuid As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Guid&gt; ProviderControlGuid { Nullable&lt;Guid&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderControlGuid : Nullable&lt;Guid&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-178">로그는 디버그 로그 하는 경우 이벤트 로그에 대 한 컨트롤 전역적으로 고유 식별자를 (GUID)를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-178">Gets the control globally unique identifier (GUID) for the event log if the log is a debug log.</span></span> <span data-ttu-id="71cee-179">이 로그는 디버그 로그를 없는 경우이 값이 null이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-179">If this log is not a debug log, this value will be null.</span></span></summary>
        <value><span data-ttu-id="71cee-180">GUID 값 또는 null을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-180">Returns a GUID value or null.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-181">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-181">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-182">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-182">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderKeywords">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; ProviderKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; ProviderKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderKeywords As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; ProviderKeywords { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderKeywords : Nullable&lt;int64&gt; with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-183">이벤트 공급자가 사용 되는 키워드 마스크를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-183">Gets or sets keyword mask used by the event provider.</span></span></summary>
        <value><span data-ttu-id="71cee-184">이벤트 공급자 키워드를 정의 하지 않은 경우 null 일 수 있는 long 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-184">Returns a long value that can be null if the event provider did not define any keywords.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71cee-185">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-185">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-186">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-186">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-187">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-187">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderLatency">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLatency { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLatency" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderLatency As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLatency { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderLatency : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-188">로그에 이벤트를 게시할 때 이벤트 공급자가 사용 되는 최대 대기 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-188">Gets the maximum latency time used by the event provider when publishing events to the log.</span></span></summary>
        <value><span data-ttu-id="71cee-189">이벤트 공급자가 없는 대기 시간을 지정 하는 경우에 null 일 수 있는 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-189">Returns an integer value that can be null if no latency time was specified by the event provider.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-190">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-190">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-191">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-191">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderLevel">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderLevel As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLevel { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderLevel : Nullable&lt;int&gt; with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-192">이벤트 로그에 기록 될 수 있는 최대 이벤트 수준을 (정의 하는 이벤트의 심각도)를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-192">Gets or sets the maximum event level (which defines the severity of the event) that is allowed to be logged in the event log.</span></span> <span data-ttu-id="71cee-193">이 값은 이벤트 공급자에 의해 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-193">This value is defined by the event provider.</span></span></summary>
        <value><span data-ttu-id="71cee-194">최대 이벤트 수준을 하지 못한 경우 null 일 수 있는 정수 값 공급자 정의 이벤트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-194">Returns an integer value that can be null if the maximum event level was not defined in the event provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71cee-195">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-195">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-196">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-196">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-197">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-197">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderMaximumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMaximumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderMaximumNumberOfBuffers : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-198">이벤트 공급자 이벤트 로그에 이벤트를 게시 하는데 사용 되는 버퍼의 최대 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-198">Gets the maximum number of buffers used by the event provider to publish events to the event log.</span></span></summary>
        <value><span data-ttu-id="71cee-199">이벤트 공급자 이벤트 로그에 이벤트를 게시 하는데 사용 되는 버퍼의 최대 수는 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-199">Returns an integer value that is the maximum number of buffers used by the event provider to publish events to the event log.</span></span> <span data-ttu-id="71cee-200">이 값은 null 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-200">This value can be null.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-201">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-201">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-202">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-202">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderMinimumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMinimumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderMinimumNumberOfBuffers : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-203">이벤트 공급자 이벤트 로그에 이벤트를 게시 하는데 사용 되는 버퍼의 최소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-203">Gets the minimum number of buffers used by the event provider to publish events to the event log.</span></span></summary>
        <value><span data-ttu-id="71cee-204">이벤트 공급자 이벤트 로그에 이벤트를 게시 하는데 사용 되는 버퍼의 최소 수 인 정수 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-204">Returns an integer value that is the minimum number of buffers used by the event provider to publish events to the event log.</span></span> <span data-ttu-id="71cee-205">이 값은 null 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-205">This value can be null.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-206">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-206">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-207">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-207">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ProviderNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ProviderNames" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderNames As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ ProviderNames { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderNames : seq&lt;string&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-208">이 이벤트 로그에 이벤트를 게시할 수 있는 모든 이벤트 공급자 이름의 열거 가능 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-208">Gets an enumerable collection of the names of all the event providers that can publish events to this event log.</span></span></summary>
        <value><span data-ttu-id="71cee-209">이벤트 공급자 이름이 포함 된 문자열의 열거 가능한 컬렉션을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-209">Returns an enumerable collection of strings that contain the event provider names.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-210">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-210">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-211">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-211">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public void SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; unit" Usage="eventLogConfiguration.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71cee-212">구성 설정을 저장합니다</span><span class="sxs-lookup"><span data-stu-id="71cee-212">Saves the configuration settings that</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-213">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-213">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-214">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-214">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SecurityDescriptor">
      <MemberSignature Language="C#" Value="public string SecurityDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityDescriptor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityDescriptor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityDescriptor : string with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71cee-215">이벤트 로그의 보안 설명자를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-215">Gets or sets the security descriptor of the event log.</span></span> <span data-ttu-id="71cee-216">사용자 및 그룹 읽고 이벤트 로그에 쓸 수 있는 사용자의 보안 설명자를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-216">The security descriptor defines the users and groups of users that can read and write to the event log.</span></span></summary>
        <value><span data-ttu-id="71cee-217">이벤트 로그에 대 한 보안 설명자를 포함 하는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-217">Returns a string that contains the security descriptor for the event log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71cee-218">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="71cee-218">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d26107ee-7a80-44d7-b43b-cf774559e4ac"><span data-ttu-id="71cee-219">이벤트 로그를 읽고 관리하기 위한 기술 요약</span><span class="sxs-lookup"><span data-stu-id="71cee-219">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/79377aba-b6e5-4e4d-a9be-ea25ce6f1dc5"><span data-ttu-id="71cee-220">이벤트 로그 시나리오</span><span class="sxs-lookup"><span data-stu-id="71cee-220">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>