<Type Name="EventLogConfiguration" FullName="System.Diagnostics.Eventing.Reader.EventLogConfiguration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d872f0d2a8ef0e103f47d2f267be94a112ef69a" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39982119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventLogConfiguration : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogConfiguration extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogConfiguration&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogConfiguration : IDisposable" />
  <TypeSignature Language="F#" Value="type EventLogConfiguration = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1fd4d-101">이벤트 로그에 대한 정적 정보 및 구성 설정이 들어 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fd4d-101">Contains static information and configuration settings for an event log.</span>
      </span>
      <span data-ttu-id="1fd4d-102">구성 설정 중 다수는 로그를 만든 이벤트 공급자에 의해 정의됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fd4d-102">Many of the configurations settings were defined by the event provider that created the log.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd4d-103">이 개체에 대 한 속성 변경 되 면 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-103">If a property is changed for this object, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fd4d-104">예를 들어이 클래스를 사용 하 여 코드 참조 [방법: 이벤트 로그 속성을 읽고 구성](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac)합니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-104">For example code using this class, see [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/library/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-105">새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 개체를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-105">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogConfiguration : string -&gt; System.Diagnostics.Eventing.Reader.EventLogConfiguration" Usage="new System.Diagnostics.Eventing.Reader.EventLogConfiguration logName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="1fd4d-106">정보 및 구성 설정을 가져올 로컬 이벤트 로그의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-106">The name of the local event log for which to get information and configuration settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fd4d-107">정보 및 구성 설정을 가져올 로컬 이벤트 로그를 지정하여 새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 개체를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-107">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the local event log for which to get information and configuration settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogConfiguration (string logName, System.Diagnostics.Eventing.Reader.EventLogSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string logName, class System.Diagnostics.Eventing.Reader.EventLogSession session) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logName As String, session As EventLogSession)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogConfiguration(System::String ^ logName, System::Diagnostics::Eventing::Reader::EventLogSession ^ session);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogConfiguration : string * System.Diagnostics.Eventing.Reader.EventLogSession -&gt; System.Diagnostics.Eventing.Reader.EventLogConfiguration" Usage="new System.Diagnostics.Eventing.Reader.EventLogConfiguration (logName, session)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="session" Type="System.Diagnostics.Eventing.Reader.EventLogSession" />
      </Parameters>
      <Docs>
        <param name="logName">
          <span data-ttu-id="1fd4d-108">정보 및 구성 설정을 가져올 이벤트 로그의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-108">The name of the event log for which to get information and configuration settings.</span>
          </span>
        </param>
        <param name="session">
          <span data-ttu-id="1fd4d-109">지정된 로그가 속하는 이벤트 로그 서비스를 확인하는 데 사용할 이벤트 로그 세션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-109">The event log session used to determine the event log service that the specified log belongs to.</span>
          </span>
          <span data-ttu-id="1fd4d-110">세션은 로컬 컴퓨터 또는 원격 컴퓨터의 이벤트 로그 서비스에 연결됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-110">The session is either connected to the event log service on the local computer or a remote computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fd4d-111">정보 및 구성 설정을 가져올 로그의 이름을 지정하여 새 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> 개체를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-111">Initializes a new <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> object by specifying the name of the log for which to get information and configuration settings.</span>
          </span>
          <span data-ttu-id="1fd4d-112">지정된 이벤트 로그 세션에 따라 로그가 로컬 컴퓨터 또는 원격 컴퓨터에 있을 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-112">The log can be on the local computer or a remote computer, based on the event log session specified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-113">이 개체에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-113">Releases the resources used by this object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventLogConfiguration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-114">이 개체에서 사용하는 리소스를 모두 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-114">Releases all the resources used by this object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventLogConfiguration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1fd4d-115">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-115">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fd4d-116">이 개체에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-116">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClassicLog">
      <MemberSignature Language="C#" Value="public bool IsClassicLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClassicLog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClassicLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClassicLog { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClassicLog : bool" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-117">이벤트 로그가 클래식 이벤트 로그인지 여부를 나타내는 플래그를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-117">Gets the flag that indicates if the event log is a classic event log.</span>
          </span>
          <span data-ttu-id="1fd4d-118">클래식 이벤트 로그는 이벤트 공급자에서 사용하는 매니페스트(.xml 파일)가 아닌 .mc 파일에 이벤트가 정의된 로그입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-118">A classic event log is one that has its events defined in a .mc file instead of a manifest (.xml file) used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-119">이벤트 로그가 클래식 로그이면 <see langword="true" />를, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-119">Returns <see langword="true" /> if the event log is a classic log, and returns <see langword="false" /> if the event log is not a classic log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-120">이벤트 로그의 활성화 여부를 결정하는 부울 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-120">Gets or sets a Boolean value that determines whether the event log is enabled or disabled.</span>
          </span>
          <span data-ttu-id="1fd4d-121">활성화된 로그는 이벤트를 기록할 수 있는 로그이고, 비활성화된 로그는 이벤트를 기록할 수 없는 로그입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-121">An enabled log is one in which events can be logged, and a disabled log is one in which events cannot be logged.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-122">로그가 활성화되었으면 <see langword="true" />를, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-122">Returns <see langword="true" /> if the log is enabled, and returns <see langword="false" /> if the log is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd4d-123">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-123">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogFilePath">
      <MemberSignature Language="C#" Value="public string LogFilePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFilePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LogFilePath : string with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-124">로그의 이벤트가 저장되는 파일의 위치에 대한 파일 디렉터리 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-124">Gets or sets the file directory path to the location of the file where the events are stored for the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-125">이벤트 로그 파일에 대한 경로가 들어 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-125">Returns a string that contains the path to the event log file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd4d-126">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-126">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogIsolation">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogIsolation As EventLogIsolation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogIsolation LogIsolation { System::Diagnostics::Eventing::Reader::EventLogIsolation get(); };" />
      <MemberSignature Language="F#" Value="member this.LogIsolation : System.Diagnostics.Eventing.Reader.EventLogIsolation" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogIsolation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-127">이벤트 로그가 응용 프로그램, 시스템 또는 사용자 지정 이벤트 로그인지 여부를 지정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-127">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value that specifies whether the event log is an application, system, or custom event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-128">
            <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-128">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMode">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogMode LogMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogMode LogMode" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMode As EventLogMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogMode LogMode { System::Diagnostics::Eventing::Reader::EventLogMode get(); void set(System::Diagnostics::Eventing::Reader::EventLogMode value); };" />
      <MemberSignature Language="F#" Value="member this.LogMode : System.Diagnostics.Eventing.Reader.EventLogMode with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-129">이벤트 로그가 가득 찰 때 이벤트가 처리되는 방법을 결정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-129">Gets or sets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value that determines how events are handled when the event log becomes full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-130">
            <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-130">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd4d-131">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-131">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogName : string" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-132">이벤트 로그의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-132">Gets the name of the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-133">이벤트 로그의 이름이 들어 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-133">Returns a string that contains the name of the event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogType LogType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Eventing.Reader.EventLogType LogType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogType As EventLogType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogType LogType { System::Diagnostics::Eventing::Reader::EventLogType get(); };" />
      <MemberSignature Language="F#" Value="member this.LogType : System.Diagnostics.Eventing.Reader.EventLogType" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-134">이벤트 로그의 형식을 결정하는 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-134">Gets an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value that determines the type of the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-135">
            <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-135">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeInBytes">
      <MemberSignature Language="C#" Value="public long MaximumSizeInBytes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumSizeInBytes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumSizeInBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumSizeInBytes { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSizeInBytes : int64 with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-136">이벤트 로그 파일의 최대 허용 크기(바이트)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-136">Gets or sets the maximum size, in bytes, that the event log file is allowed to be.</span>
          </span>
          <span data-ttu-id="1fd4d-137">이 최대 크기에 도달한 파일은 가득 찬 것으로 간주됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-137">When the file reaches this maximum size, it is considered full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-138">이벤트 로그 파일의 최대 허용 크기를 나타내는 long 값(바이트)을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-138">Returns a long value that represents the maximum size, in bytes, that the event log file is allowed to be.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd4d-139">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-139">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwningProviderName">
      <MemberSignature Language="C#" Value="public string OwningProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OwningProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OwningProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwningProviderName : string" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-140">이 이벤트 로그를 만든 이벤트 공급자의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-140">Gets the name of the event provider that created this event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-141">이 이벤트 로그를 만든 이벤트 공급자의 이름이 들어 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-141">Returns a string that contains the name of the event provider that created this event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderBufferSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderBufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderBufferSize As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderBufferSize { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderBufferSize : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-142">이벤트 공급자가 로그에 이벤트를 게시하는 데 사용하는 버퍼의 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-142">Gets the size of the buffer that the event provider uses for publishing events to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-143">정수 값을 반환하며, null이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-143">Returns an integer value that can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderControlGuid">
      <MemberSignature Language="C#" Value="public Nullable&lt;Guid&gt; ProviderControlGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Guid&gt; ProviderControlGuid" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderControlGuid As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Guid&gt; ProviderControlGuid { Nullable&lt;Guid&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderControlGuid : Nullable&lt;Guid&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-144">로그가 디버그 로그인 경우 이벤트 로그의 제어 GUID(Globally Unique Identifier)를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-144">Gets the control globally unique identifier (GUID) for the event log if the log is a debug log.</span>
          </span>
          <span data-ttu-id="1fd4d-145">이 로그가 디버그 로그가 아닌 경우 이 값은 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-145">If this log is not a debug log, this value will be null.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-146">GUID 값 또는 null을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-146">Returns a GUID value or null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderKeywords">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; ProviderKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; ProviderKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderKeywords As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; ProviderKeywords { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderKeywords : Nullable&lt;int64&gt; with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-147">이벤트 공급자에서 사용하는 키워드 마스크를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-147">Gets or sets keyword mask used by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-148">long 값을 반환하며, 이벤트 공급자가 키워드를 정의하지 않은 경우 null이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-148">Returns a long value that can be null if the event provider did not define any keywords.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd4d-149">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-149">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderLatency">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLatency { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLatency" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderLatency As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLatency { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderLatency : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-150">이벤트 공급자가 로그에 이벤트를 게시할 때 사용되는 최대 대기 시간을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-150">Gets the maximum latency time used by the event provider when publishing events to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-151">정수 값을 반환하며, 이벤트 공급자가 대기 시간을 지정하지 않은 경우 null이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-151">Returns an integer value that can be null if no latency time was specified by the event provider.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderLevel">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderLevel As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderLevel { Nullable&lt;int&gt; get(); void set(Nullable&lt;int&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderLevel : Nullable&lt;int&gt; with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-152">이벤트 로그에 기록될 수 있는 이벤트의 심각도를 정의하는 최대 이벤트 수준을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-152">Gets or sets the maximum event level (which defines the severity of the event) that is allowed to be logged in the event log.</span>
          </span>
          <span data-ttu-id="1fd4d-153">이 값은 이벤트 공급자에서 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-153">This value is defined by the event provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-154">정수 값을 반환하며, 이벤트 공급자가 최대 이벤트 수준을 정의하지 않은 경우 null이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-154">Returns an integer value that can be null if the maximum event level was not defined in the event provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd4d-155">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-155">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderMaximumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMaximumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMaximumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderMaximumNumberOfBuffers : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-156">이벤트 공급자가 이벤트 로그에 이벤트를 게시할 때 사용되는 최대 버퍼 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-156">Gets the maximum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-157">이벤트 공급자가 이벤트 로그에 이벤트를 게시할 때 사용되는 최대 버퍼 수인 정수 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-157">Returns an integer value that is the maximum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
          <span data-ttu-id="1fd4d-158">이 값은 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-158">This value can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderMinimumNumberOfBuffers">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderMinimumNumberOfBuffers As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; ProviderMinimumNumberOfBuffers { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderMinimumNumberOfBuffers : Nullable&lt;int&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-159">이벤트 공급자가 이벤트 로그에 이벤트를 게시할 때 사용되는 최소 버퍼 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-159">Gets the minimum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-160">이벤트 공급자가 이벤트 로그에 이벤트를 게시할 때 사용되는 최소 버퍼 수인 정수 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-160">Returns an integer value that is the minimum number of buffers used by the event provider to publish events to the event log.</span>
          </span>
          <span data-ttu-id="1fd4d-161">이 값은 null일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-161">This value can be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; ProviderNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; ProviderNames" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderNames As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ ProviderNames { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderNames : seq&lt;string&gt;" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-162">이 이벤트 로그에 이벤트를 게시할 수 있는 모든 이벤트 공급자 이름의 열거 가능한 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-162">Gets an enumerable collection of the names of all the event providers that can publish events to this event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-163">이벤트 공급자 이름이 들어 있는 열거 가능한 문자열 컬렉션을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-163">Returns an enumerable collection of strings that contain the event provider names.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public void SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; unit" Usage="eventLogConfiguration.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-164">구성 설정을 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-164">Saves the configuration settings that</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityDescriptor">
      <MemberSignature Language="C#" Value="public string SecurityDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityDescriptor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityDescriptor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityDescriptor : string with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fd4d-165">이벤트 로그의 보안 설명자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-165">Gets or sets the security descriptor of the event log.</span>
          </span>
          <span data-ttu-id="1fd4d-166">보안 설명자는 이벤트 로그에서 읽고 쓸 수 있는 사용자 및 사용자 그룹을 정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-166">The security descriptor defines the users and groups of users that can read and write to the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fd4d-167">이벤트 로그의 보안 설명자가 들어 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fd4d-167">Returns a string that contains the security descriptor for the event log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd4d-168">이 속성의 값을 변경 하는 경우 호출 된 <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> 변경 내용을 저장 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="1fd4d-168">If the value of this property is changed, call the <xref:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges%2A> method to save the changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>