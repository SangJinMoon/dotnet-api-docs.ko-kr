<Type Name="EventKeyword" FullName="System.Diagnostics.Eventing.Reader.EventKeyword">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a60e8240a3660200c370167204c1417781fa757" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30395787" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventKeyword" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventKeyword extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventKeyword" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventKeyword" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventKeyword sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="16e31-101">이벤트의 키워드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16e31-101">Represents a keyword for an event.</span>
      </span>
      <span data-ttu-id="16e31-102">키워드는 이벤트 공급자에 정의되며, 이벤트의 용도에 따라 비슷한 이벤트를 서로 그룹화할 때 사용됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="16e31-102">Keywords are defined in an event provider and are used to group the event with other similar events (based on the usage of the events).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16e31-103">이 클래스는 인스턴스화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="16e31-103">This class cannot be instantiated.</span></span> <span data-ttu-id="16e31-104">A <xref:System.Diagnostics.Eventing.Reader.ProviderMetadata> 개체의 목록을 하나씩 정의 <xref:System.Diagnostics.Eventing.Reader.EventKeyword> 개체, 공급자 이벤트가 사용 하는 각 키워드에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="16e31-104">A <xref:System.Diagnostics.Eventing.Reader.ProviderMetadata> object defies a list of <xref:System.Diagnostics.Eventing.Reader.EventKeyword> objects, one for each keyword used by the provider events.</span></span> <span data-ttu-id="16e31-105">각 키워드는에서 64 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="16e31-105">Each keyword is a bit in a 64-bit mask.</span></span> <span data-ttu-id="16e31-106">미리 정의 된 비트 값과 예약된 비트 매니페스트는 0x0000000000000001 및 0x0000800000000000 사이의 모든 비트를 사용 하려면이 마스크의 상위 16 자리를 차지 합니다.</span><span class="sxs-lookup"><span data-stu-id="16e31-106">Predefined bit values and reserved bits occupy the top 16 positions of this mask, leaving the manifest to use any bits between 0x0000000000000001 and 0x0000800000000000.</span></span>  
  
 <span data-ttu-id="16e31-107">표준 이벤트 키워드에 정의 된는 <xref:System.Diagnostics.Eventing.Reader.StandardEventKeywords> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="16e31-107">The standard event keywords are defined in the <xref:System.Diagnostics.Eventing.Reader.StandardEventKeywords> enumeration.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16e31-108">키워드의 지역화된 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16e31-108">Gets the localized name of the keyword.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16e31-109">이 키워드의 지역화된 이름이 들어 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16e31-109">Returns a string that contains a localized name for this keyword.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16e31-110">키워드의 지역화되지 않은 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16e31-110">Gets the non-localized name of the keyword.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16e31-111">이 키워드의 지역화되지 않은 이름이 들어 있는 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16e31-111">Returns a string that contains the non-localized name of this keyword.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public long Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Value { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16e31-112">키워드에 연결된 숫자 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16e31-112">Gets the numeric value associated with the keyword.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16e31-113">
            <see langword="long" /> 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="16e31-113">Returns a <see langword="long" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16e31-114">각 키워드는에서 64 비트 마스크입니다.</span><span class="sxs-lookup"><span data-stu-id="16e31-114">Each keyword is a bit in a 64-bit mask.</span></span> <span data-ttu-id="16e31-115">미리 정의 된 비트 값과 예약된 비트 매니페스트는 0x0000000000000001 및 0x0000800000000000 사이의 모든 비트를 사용 하려면이 마스크의 상위 16 자리를 차지 합니다.</span><span class="sxs-lookup"><span data-stu-id="16e31-115">Predefined bit values and reserved bits occupy the top 16 positions of this mask, leaving the manifest to use any bits between 0x0000000000000001 and 0x0000800000000000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>