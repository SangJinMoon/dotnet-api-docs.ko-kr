<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DSACryptoServiceProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac533512625a99610ed0fa15f42e883b445c06c47e7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33512625a99610ed0fa15f42e883b445c06c47e7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> algorithm.</source>
          <target state="translated">래퍼 개체를 정의하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 알고리즘의 CSP(암호화 서비스 공급자) 구현에 액세스합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> class to create digital signatures and protect the integrity of your data.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> 디지털 서명을 생성 하 고 데이터의 무결성을 보호 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</source>
          <target state="translated">메시지에 디지털 서명을 하려면 공개 키 시스템을 사용 하려면 보낸 사람에 게 먼저는 해시 함수를 적용 메시지 메시지 다이제스트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</source>
          <target state="translated">보낸 다음 보낸 사람의 보낸 사람의 개인 서명을 만드는 데 개인 키와 함께 메시지 다이제스트를 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</source>
          <target state="translated">메시지와 서명을 받으면 수신자는 메시지 다이제스트를 복구 하려면 보낸 사람의 공개 키를 사용 하 여 서명을 해독 하 고 보낸 사람이 사용한 것과 동일한 해시 알고리즘을 사용 하 여 메시지를 해시 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can be sure that the message was not altered while in transit.</source>
          <target state="translated">보낸 사람 으로부터 받은 메시지 다이제스트를 수신자와 정확히 일치를 계산 하 고 메시지 다이제스트를 수신자 전송 되는 동안 변경 되지 않았다고 되도록 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</source>
          <target state="translated">참고는 서명을 보낸 사람의 공개 키가 일반 기술 하기 때문에 모든 사용자를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Newer asymmetric algorithms are available.</source>
          <target state="translated">최신 비대칭 알고리즘을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> class instead of the <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> 클래스 대신는 <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> only for compatibility with legacy applications and data.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> 레거시 응용 프로그램 및 데이터와 호환성을 위해서만 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</source>
          <target state="translated">이 알고리즘은 64 비트 단위로 증가 1024 비트 이상에서 512 비트 키 길이 지원 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)">
          <source>The size of the key for the asymmetric algorithm in bits.</source>
          <target state="translated">비대칭 알고리즘에 대한 키 크기입니다(단위: 비트).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> class with the specified key size.</source>
          <target state="translated">지정된 키 크기를 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The parameters for the CSP.</source>
          <target state="translated">CSP에 대한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> class with the specified parameters for the cryptographic service provider (CSP).</source>
          <target state="translated">CSP(암호화 서비스 공급자)의 지정된 매개 변수를 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The size of the key for the cryptographic algorithm in bits.</source>
          <target state="translated">암호화 알고리즘에 대한 키 크기입니다(단위: 비트).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The parameters for the CSP.</source>
          <target state="translated">CSP에 대한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> class with the specified key size and parameters for the cryptographic service provider (CSP).</source>
          <target state="translated">CSP(암호화 서비스 공급자)의 지정된 키 크기 및 매개 변수를 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The CSP cannot be acquired.</source>
          <target state="translated">CSP를 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>The key cannot be created.</source>
          <target state="translated">키를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source><ph id="ph1">&lt;paramref name="dwKeySize" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dwKeySize" /&gt;</ph>가 범위에서 벗어난 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])">
          <source>The data to be signed.</source>
          <target state="translated">서명할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])">
          <source>Creates the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">지정된 데이터에 대한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 서명을 만듭니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])">
          <source>The digital signature for the specified data.</source>
          <target state="translated">지정된 데이터의 디지털 서명입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
          <target state="translated">암호화 키 쌍에 대한 추가 정보를 설명하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
          <target state="translated">암호화 키 쌍에 대한 추가 정보를 설명하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property to retrieve additional information about a cryptographic key pair.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> 속성 암호화 키 쌍에 대 한 추가 정보를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
          <source>The returned <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> 여부 키를 내보낼 수 및이 키 컨테이너 이름, 공급자에 대 한 정보 및 기타 정보를 지정 하는 개체에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
          <source>In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</source>
          <target state="translated">임의의 키가 생성 하는 경우에는 키 컨테이너 만들어지지 않습니다 키를 사용 하는 메서드를 호출할 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
          <source>Some properties of the <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property will throw a <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> if a key container has not been created.</source>
          <target state="translated">일부 속성은 <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> 에서 반환 된 개체는 <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> 속성 throw 됩니다는 <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> 키 컨테이너 생성 되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo">
          <source>To make sure that a key container has been created, call a method such as <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A&gt;</ph>, and so on, before you call the <ph id="ph5">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> property.</source>
          <target state="translated">을 키 컨테이너를 만들고 있는지 확인 하기 위해 메서드를와 같은 호출 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A&gt;</ph>, 등의 호출 하기 전에 <ph id="ph5">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the private key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">개인 키를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Exports a blob containing the key information associated with a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 개체와 관련된 키 정보가 들어 있는 BLOB을 내보냅니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>A byte array containing the key information associated with a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 개체와 관련된 키 정보가 들어 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A&gt;</ph> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A&gt;</ph> 메서드와는 관리 되지 않는 Microsoft CAPI (암호화 API) 호환 되는 키 정보를 포함 하는 blob를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>for permission to access a key container when exporting a private key.</source>
          <target state="translated">개인 키를 내보낼 때 키 컨테이너에 액세스할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">private 매개 변수를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Exports the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSAParameters" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSAParameters" /&gt;</ph>를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>에 대한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>The key cannot be exported.</source>
          <target state="translated">이 키는 내보낼 수 없습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>for permission to export a key.</source>
          <target state="translated">키를 내보낼 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>A byte array that represents a DSA key blob.</source>
          <target state="translated">DSA 키 BLOB을 나타내는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Imports a blob that represents DSA key information.</source>
          <target state="translated">DSA 키 정보를 나타내는 BLOB을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A&gt;</ph> method initializes the key data of a <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A&gt;</ph> 메서드는 키 데이터의 초기화는 <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> 개체와 관리 되지 않는 Microsoft CAPI (암호화 API) 호환 되는 blob을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>for permission to access a key container when importing a key.</source>
          <target state="translated">키를 가져올 때 키 컨테이너에 액세스할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>에 대한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>Imports the specified <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSAParameters" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSAParameters" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>The <ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> parameter has missing fields.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> 매개 변수에 누락된 필드가 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>for permission to import a key.</source>
          <target state="translated">키를 가져오는 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>Gets the name of the key exchange algorithm.</source>
          <target state="translated">키 교환 알고리즘의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm">
          <source>The name of the key exchange algorithm.</source>
          <target state="translated">키 교환 알고리즘의 이름입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
          <source>Gets the size of the key used by the asymmetric algorithm in bits.</source>
          <target state="translated">비대칭 알고리즘에서 사용되는 키 크기를 가져옵니다(단위: 비트).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
          <source>The size of the key used by the asymmetric algorithm.</source>
          <target state="translated">비대칭 알고리즘에서 사용되는 키 크기입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
          <source>This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</source>
          <target state="translated">이 알고리즘은 64 비트 단위로 증가 1024 비트 이상에서 512 비트 키 길이 지원 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> class does not allow you to change key sizes using the <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> 클래스를 사용 하 여 키 크기를 변경할 수 없습니다는 <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
          <source>Any value written to this property will fail to update the property without error.</source>
          <target state="translated">이 속성에 기록 된 모든 값은 오류 없이 속성을 업데이트 하려면 실패 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize">
          <source>To change the key size, use one of the constructor overloads.</source>
          <target state="translated">키 크기를 변경 하려면 생성자 오버 로드 중 하나를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</source>
          <target state="translated">키를 CSP(암호화 서비스 공급자)에 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key should be persisted in the CSP; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">CSP에 키가 유지되어야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>Use this property when you want to persist a key in a key container.</source>
          <target state="translated">키 컨테이너에 키를 유지 하려는 경우이 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>for permission to delete a key.</source>
          <target state="translated">키를 삭제 하려면 필요한 권한입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>for permission to create a key.</source>
          <target state="translated">키를 만들 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> object contains only a public key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 개체에 공용 키만 들어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> object contains only a public key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /&gt;</ph> 개체에 공용 키만 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> class can be initialized either with a public key only or with both a public and private key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> 클래스 초기화할만 공개 키 또는 둘 다 공용 및 개인 키가 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A&gt;</ph> property to determine whether the current instance contains only a public key or both a public and private key.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A&gt;</ph> 속성을 현재 인스턴스는 공용 및 개인 키 또는 공개 키만 포함 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm">
          <source>Gets the name of the signature algorithm.</source>
          <target state="translated">서명 알고리즘의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm">
          <source>The name of the signature algorithm.</source>
          <target state="translated">서명 알고리즘의 이름입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Computes the hash value of the specified data and signs it.</source>
          <target state="translated">지정된 데이터의 해시 값을 계산하고 서명합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">해시를 계산하기 위한 입력 데이터입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])">
          <source>Computes the hash value of the specified byte array and signs the resulting hash value.</source>
          <target state="translated">지정된 바이트 배열의 해시 값을 계산하여 결과 해시 값에 서명합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">지정된 데이터의 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 서명입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드를 사용 하 여 확인 되는 디지털 서명을 만듭니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">해시를 계산하기 위한 입력 데이터입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)">
          <source>Computes the hash value of the specified input stream and signs the resulting hash value.</source>
          <target state="translated">지정된 입력 스트림의 해시 값을 계산하여 결과 해시 값에 서명합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">지정된 데이터의 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 서명입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The input data to sign.</source>
          <target state="translated">서명할 입력 데이터입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">데이터로 사용할 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Signs a byte array from the specified start point to the specified end point.</source>
          <target state="translated">지정된 시작점에서 지정된 끝점까지 바이트 배열에 서명합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">지정된 데이터의 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 서명입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드를 사용 하 여 확인 되는 디지털 서명을 만듭니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">서명할 데이터의 해시 값입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The name of the hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘의 이름입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Computes the signature for the specified hash value by encrypting it with the private key.</source>
          <target state="translated">개인 키로 암호화하여 지정된 해시 값의 서명을 계산합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> signature for the specified hash value.</source>
          <target state="translated">지정된 해시 값의 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 서명입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>This method creates a digital signature that is verified using the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드를 사용 하 여 확인 되는 디지털 서명을 만듭니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>There is no private key.</source>
          <target state="translated">개인 키가 없습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>for permission to sign a file using the key.</source>
          <target state="translated">키를 사용 하 여 파일에 서명 하는 데 필요한 권한입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore">
          <source>Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</source>
          <target state="translated">사용자 프로필 저장소 대신 컴퓨터의 키 저장소에 키를 유지할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key should be persisted in the computer key store; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키를 컴퓨터 키 저장소에 유지해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않은 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore">
          <source>Setting this property to true is equivalent to passing the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> flag to a <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object.</source>
          <target state="translated">이 속성을 true로 설정 하는 것은 해당 전달 하는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> 나타내는 플래그입니다.는 <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> property applies to all code in the current application domain, while the <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> object applies only to classes that explicitly reference it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A&gt;</ph> 속성은 현재 어플리케이션 도메인에 있는 모든 코드에 적용 됩니다. 반면는 <ph id="ph2">&lt;xref:System.Security.Cryptography.CspParameters&gt;</ph> 개체가 명시적으로 참조 하는 클래스에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore">
          <source>These settings are useful when impersonating or running under an account whose user profile is not loaded.</source>
          <target state="translated">이 설정은 가장 하거나 사용자 프로필이 로드 되지 않은 계정으로 실행 중인 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSACryptoServiceProvider">
          <source>Verifies that a digital signature is valid.</source>
          <target state="translated">디지털 서명이 유효한지 확인합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">서명된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
          <source>Verifies the specified signature data by comparing it to the signature computed for the specified data.</source>
          <target state="translated">지정된 서명 데이터를 지정된 데이터에 대해 계산된 서명과 비교하여 확인합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature verifies as valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 올바른 것으로 확인되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
          <source>This method verifies the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> digital signature produced by <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 확인 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> 만든 디지털 서명 <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">서명할 데이터의 해시 값입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The name of the hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘의 이름입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>Verifies the specified signature data by comparing it to the signature computed for the specified hash value.</source>
          <target state="translated">지정된 서명 데이터를 지정된 해시 값에 대해 계산된 서명과 비교하여 확인합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature verifies as valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 올바른 것으로 확인되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>This method verifies the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> digital signature produced by <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>.</source>
          <target state="translated">이 메서드는 확인 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> 만든 디지털 서명 <ph id="ph2">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>If the <ph id="ph1">`str`</ph> parameter is <ph id="ph2">`null`</ph>, the default hash algorithm (SHA1) is used.</source>
          <target state="translated">경우는 <ph id="ph1">`str`</ph> 매개 변수는 <ph id="ph2">`null`</ph>, 기본 해시 알고리즘 (SHA1) 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The valid hash algorithms is <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph>.</source>
          <target state="translated">잘못 된 해시 알고리즘은 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgbHash" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="rgbSignature" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgbSignature" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])">
          <source>The signature cannot be verified.</source>
          <target state="translated">서명을 확인할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])">
          <source>The data signed with <bpt id="p1">&lt;c&gt;</bpt>rgbSignature<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>rgbSignature<ept id="p1">&lt;/c&gt;</ept>로 서명된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])">
          <source>The signature to be verified for <bpt id="p1">&lt;c&gt;</bpt>rgbData<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>rgbData<ept id="p1">&lt;/c&gt;</ept>에 대해 확인할 서명입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])">
          <source>Verifies the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">지정된 데이터에 대한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 서명을 확인합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="rgbSignature" /&gt;</ph> matches the signature computed using the specified hash algorithm and key on <ph id="ph3">&lt;paramref name="rgbHash" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="rgbSignature" /&gt;</ph>가 지정된 해시 알고리즘 및 <ph id="ph3">&lt;paramref name="rgbHash" /&gt;</ph>의 키를 사용하여 계산된 서명과 일치하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>