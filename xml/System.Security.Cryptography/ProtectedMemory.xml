<Type Name="ProtectedMemory" FullName="System.Security.Cryptography.ProtectedMemory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9b7a743a3443ccf0d1280f34ac85b01a1d02ea5" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48679908" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedMemory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedMemory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedMemory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedMemory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedMemory sealed" />
  <TypeSignature Language="F#" Value="type ProtectedMemory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dc91d-101">메모리를 보호하거나 보호 해제하는 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-101">Provides methods for protecting and unprotecting memory.</span></span> <span data-ttu-id="dc91d-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc91d-103">이 클래스에는 DPAPI 데이터 보호 API () Windows XP 및 이후 운영 체제에서 사용할 수 있는 액세스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-103">This class provides access to the Data Protection API (DPAPI) available in the Windows XP and later operating systems.</span></span> <span data-ttu-id="dc91d-104">추가 라이브러리가 필요 하지 않습니다 하 고 운영 체제에서 제공 되는 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-104">This is a service that is provided by the operating system and does not require additional libraries.</span></span> <span data-ttu-id="dc91d-105">중요 한 데이터를 메모리에 대 한 암호화를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-105">It provides encryption for sensitive data in memory.</span></span>  
  
 <span data-ttu-id="dc91d-106">클래스는 관리 되지 않는 DPAPI에 대 한 두 래퍼 이루어져 <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> 고 <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-106">The class consists of two wrappers for the unmanaged DPAPI, <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> and <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>.</span></span> <span data-ttu-id="dc91d-107">이 두 메서드는 메모리에 대 한 데이터 암호화 및 해독에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-107">These two methods can be used to encrypt and decrypt data in memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc91d-108">다음 예제에서는 데이터 보호를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-108">The following example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Protect(unsigned int8[] userData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Protect (userData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Protect(cli::array &lt;System::Byte&gt; ^ userData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Protect (userData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData"><span data-ttu-id="dc91d-109">보호할 메모리의 데이터가 들어 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-109">The byte array containing data in memory to protect.</span></span> <span data-ttu-id="dc91d-110">배열은 16바이트의 배수가 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-110">The array must be a multiple of 16 bytes.</span></span></param>
        <param name="scope"><span data-ttu-id="dc91d-111">메모리 보호의 범위를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-111">One of the enumeration values that specifies the scope of memory protection.</span></span></param>
        <summary><span data-ttu-id="dc91d-112">지정한 데이터를 보호합니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-112">Protects the specified data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc91d-113">메모리에서 데이터를 보호 하기 위해이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-113">This method can be used to protect data in memory.</span></span> <span data-ttu-id="dc91d-114">메서드는 데이터의 복사본을 만들지 않습니다 하지만 바이트 배열을 내부에서 암호화는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-114">Note that the method does not make a copy of the data, but encrypts the byte array in place.</span></span> <span data-ttu-id="dc91d-115">`userData` 매개 변수 16 바이트 길이 또는 16 바이트의 배수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-115">The `userData` parameter must be 16 bytes in length or a multiple of 16 bytes.</span></span>  
  
 <span data-ttu-id="dc91d-116">이 메서드에 대 한 지원은 Windows XP 및 이후 운영 체제에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-116">Support for this method is available in the Windows XP and later operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc91d-117">다음 코드 예제에는 데이터 보호를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-117">The following code example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="dc91d-118"><paramref name="userData" />의 길이가 16바이트 또는 16바이트의 배수가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="dc91d-118"><paramref name="userData" /> must be 16 bytes in length or in multiples of 16 bytes.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dc91d-119">운영 체제에서 이 메서드를 지원하지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="dc91d-119">The operating system does not support this method.</span></span> <span data-ttu-id="dc91d-120">이 메서드는 Windows 2000 이상의 운영 체제에서만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-120">This method can be used only with the Windows 2000 or later operating systems.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc91d-121"><paramref name="userData" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dc91d-121"><paramref name="userData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unprotect(unsigned int8[] encryptedData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unprotect (encryptedData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Unprotect (encryptedData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData"><span data-ttu-id="dc91d-122">보호를 해제할 메모리에 있는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-122">The byte array in memory to unencrypt.</span></span></param>
        <param name="scope"><span data-ttu-id="dc91d-123">메모리 보호의 범위를 지정하는 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-123">One of the enumeration values that specifies the scope of memory protection.</span></span></param>
        <summary><span data-ttu-id="dc91d-124"><see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> 메서드를 사용하여 보호된 메모리에 있는 데이터의 보호를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-124">Unprotects data in memory that was protected using the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc91d-125">이 메서드를 사용 하 여 암호화 된 메모리의 데이터 보호를 해제할 수는 <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="dc91d-125">This method can be used to unencrypt data in memory that was encrypted using the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> method.</span></span>  
  
 <span data-ttu-id="dc91d-126">이 메서드에 대 한 지원은 Windows XP 및 이후 운영 체제에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-126">Support for this method is available in the Windows XP and later operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc91d-127">다음 예제에서는 데이터 보호를 사용 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-127">The following example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dc91d-128">운영 체제에서 이 메서드를 지원하지 않는 경우.</span><span class="sxs-lookup"><span data-stu-id="dc91d-128">The operating system does not support this method.</span></span> <span data-ttu-id="dc91d-129">이 메서드는 Windows 2000 이상의 운영 체제에서만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="dc91d-129">This method can be used only with the Windows 2000 or later operating systems.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc91d-130"><paramref name="encryptedData" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="dc91d-130"><paramref name="encryptedData" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="dc91d-131"><paramref name="encryptedData" />가 비어 있는 경우</span><span class="sxs-lookup"><span data-stu-id="dc91d-131"><paramref name="encryptedData" /> is empty.</span></span>  
  
<span data-ttu-id="dc91d-132">또는</span><span class="sxs-lookup"><span data-stu-id="dc91d-132">-or-</span></span> 
<span data-ttu-id="dc91d-133">이 호출이 구현되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="dc91d-133">This call was not implemented.</span></span>  
  
<span data-ttu-id="dc91d-134">또는</span><span class="sxs-lookup"><span data-stu-id="dc91d-134">-or-</span></span> 
<span data-ttu-id="dc91d-135">NTSTATUS에 오류가 있는 경우</span><span class="sxs-lookup"><span data-stu-id="dc91d-135">NTSTATUS contains an error.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>