<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellmanCng.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5286bf918255ea8d29ba319f459e569551d533740.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">286bf918255ea8d29ba319f459e569551d533740</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">ECDH(Elliptic Curve Diffie-Hellman) 알고리즘의 CNG(Cryptography Next Generation) 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>This class is used to perform cryptographic operations.</source>
          <target state="translated">이 클래스는 암호화 작업을 수행하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class enables two parties to exchange private key material even if they are communicating through a public channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> 클래스를 사용 하면 두 당사자를 공용 채널을 통해 통신 하는 경우에 개인 키 자료를 교환 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Both parties can calculate the same secret value, which is referred to as the <bpt id="p1">*</bpt>secret agreement<ept id="p1">*</ept> in the managed Diffie-Hellman classes.</source>
          <target state="translated">양쪽으로 참조 되는 동일한 비밀 값을 계산할 수는 <bpt id="p1">*</bpt>비밀 계약<ept id="p1">*</ept> 관리 되는 Diffie-hellman 클래스에 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The secret agreement can then be used for a variety of purposes, including as a symmetric key.</source>
          <target state="translated">비밀 계약 다양 한 대칭 키로 포함 한 목적으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>However, instead of exposing the secret agreement directly, the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class does some post-processing on the agreement before providing the value.</source>
          <target state="translated">그러나 비밀 계약을 직접 노출 하는 대신에는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> 클래스 값을 제공 하기 전에 규약에 대해 일부 사후 처리를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>This post processing is referred to as the <bpt id="p1">*</bpt>key derivation function (KDF)<ept id="p1">*</ept>; you can select which KDF you want to use and set its parameters through a set of properties on the instance of the Diffie-Hellman object.</source>
          <target state="translated">이 게시물 처리 라고는 <bpt id="p1">*</bpt>KDF 파생 함수 ()을 키<ept id="p1">*</ept>; Diffie Hellman 개체 인스턴스에서 속성 집합을 통해 해당 매개 변수를 설정 하려면 어떤 KDF 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Key derivation function</source>
          <target state="translated">키 파생 함수</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> - The hash algorithm that is used to process the secret agreement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> -비밀 계약을 처리 하는 데 사용 되는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> - An optional byte array to prepend to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> -앞에 해시 하기 전에 비밀 계약 선택적 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> - An optional byte array to append to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> -해시 하기 전에 비밀 계약에 추가할 선택적 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> - The hash algorithm that is used to process the secret agreement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> -비밀 계약을 처리 하는 데 사용 되는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph>- An optional byte array to prepend to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph>-앞에 해시 하기 전에 비밀 계약 선택적 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> - An optional byte array to append to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> -해시 하기 전에 비밀 계약에 추가할 선택적 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A&gt;</ph> - The label for key derivation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A&gt;</ph> -키 파생에 대 한 레이블입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A&gt;</ph> - The seed for key derivation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A&gt;</ph> -키 파생에 대 한 초기값입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The result of passing the secret agreement through the key derivation function is a byte array that may be used as key material for your application.</source>
          <target state="translated">비밀 계약 키 파생 함수를 통해 전달 하는 결과는 응용 프로그램에 대 한 키 자료로 사용할 수 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The number of bytes of key material generated is dependent on the key derivation function; for example, SHA-256 will generate 256 bits of key material, whereas SHA-512 will generate 512 bits of key material.The basic flow of an ECDH key exchange is as follows:</source>
          <target state="translated">생성 된 키 자료의 바이트 수; 키 파생 함수에 따라 달라 집니다. 예를 들어 s h A-512 512 비트의 키 자료를 생성 합니다 반면 s h A-256 256 비트의 키 자료에 생성 됩니다. ECDH 키 교환의 기본 흐름은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob create a key pair to use for the Diffie-Hellman key exchange operation</source>
          <target state="translated">Alice와 Bob Diffie-hellman 키 교환 작업에 사용할 키 쌍 만들기</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob configure the KDF using parameters the agree on.</source>
          <target state="translated">Alice와 Bob는 KDF을 구성에서 매개 변수는 동의 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice sends Bob her public key.</source>
          <target state="translated">Alice는 Bob 공개 키를 전송합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Bob sends Alice his public key.</source>
          <target state="translated">Bob Alice 그의 공개 키를 보냅니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob use each other's public keys to generate the secret agreement, and apply the KDF to the secret agreement to generate key material.</source>
          <target state="translated">Alice와 Bob 상대방의 공개 키를 사용 하 여 비밀 계약을 생성 하 고 키를 생성 하는 비밀 계약 KDF 적용 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class to establish a key exchange and how to use that key to encrypt a message that can be sent over a public channel and decrypted by the receiver.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> 키 교환 및 해당 키를 사용 하 여 공용 채널을 통해 전송 하 고 받는 사람 암호를 해독할 수 있는 메시지를 암호화 하는 방법을 설정 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class with a random key pair.</source>
          <target state="translated">임의의 키 쌍을 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
          <source>The random key pair has a default public key length of 521 bits.</source>
          <target state="translated">임의의 키 쌍의 521 비트의 기본 공개 키 길이입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>The size of the key.</source>
          <target state="translated">키 크기입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Valid key sizes are 256, 384, and 521 bits.</source>
          <target state="translated">유효한 키 크기는 256, 384 및 521비트입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class with a random key pair, using the specified key size.</source>
          <target state="translated">지정된 키 크기를 사용하여 임의의 키 쌍으로 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>The random key pair will have the public key length defined by the <ph id="ph1">`keySize`</ph> parameter.</source>
          <target state="translated">임의의 키 쌍에 정의 된 공개 키 길이 갖습니다는 <ph id="ph1">`keySize`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> specifies an invalid length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph>에서 잘못된 길이를 지정합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>The key that will be used as input to the cryptographic operations performed by the current object.</source>
          <target state="translated">현재 개체에 의해 수행되는 암호화 작업의 입력으로 사용할 키입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> 개체를 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not specify an Elliptic Curve Diffie-Hellman (ECDH) algorithm group.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>가 ECDH(Elliptic Curve Diffie-Hellman) 알고리즘 그룹을 지정하지 않는 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate the public/private key pair.</source>
          <target state="translated">공개/개인 키 쌍을 생성하는 데 사용되는 곡선입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class whose public/private key pair is generated over the specified curve.</source>
          <target state="translated">해당 공개/개인 키 쌍이 지정된 곡선에서 생성되는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method and must be either a named or explicit prime.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> 유효성을 검사 해야 (즉, 반환 해야 <ph id="ph2">`true`</ph>)에 전달 될 때는 <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> 메서드 명시적 여부와 관계 없이 prime 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph>의 유효성을 검사할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives bytes that can be used as a key using a hash function .</source>
          <target state="translated">해시 함수를 사용하여 키로 사용할 수 있는 바이트를 파생합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">상대방의 공개 키입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">키 자료를 파생시키는 데 사용할 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">해시 전에 파생된 암호 앞에 추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">해시 전에 파생된 암호 뒤에 추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a hash function, given another party's public key, hash algorithm's name, a prepend value and an append value.</source>
          <target state="translated">해시 함수, 지정된 다른 당사자의 공개 키, 해시 알고리즘의 이름, 선행 값 및 후행 값을 사용하여 키로 사용할 수 있는 바이트를 파생합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">상대방의 공개 키와의 키 교환와 관련된 키 자료입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`secretPrepend`</ph> or <ph id="ph2">`secretAppend`</ph> is <ph id="ph3">`null`</ph>, they are treated as empty arrays.</source>
          <target state="translated">하는 경우의 값 <ph id="ph1">`secretPrepend`</ph> 또는 <ph id="ph2">`secretAppend`</ph> 은 <ph id="ph3">`null`</ph>를 빈 배열로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 ECDH 키가 아니거나 올바른 크기가 아닌 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>All other errors.</source>
          <target state="translated">다른 모든 오류입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">HMAC(해시 기반 메시지 인증 코드)를 사용하여 키로 사용할 수 있는 바이트를 파생합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">상대방의 공개 키입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">키 자료를 파생시키는 데 사용할 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key for the HMAC.</source>
          <target state="translated">HMAC의 키입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">해시 전에 파생된 암호 앞에 추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">해시 전에 파생된 암호 뒤에 추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">HMAC(해시 기반 메시지 인증 코드)를 사용하여 키로 사용할 수 있는 바이트를 파생합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">상대방의 공개 키와의 키 교환와 관련된 키 자료입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`secretPrepend`</ph> or <ph id="ph2">`secretAppend`</ph> is <ph id="ph3">`null`</ph>, they are treated as empty arrays.</source>
          <target state="translated">하는 경우의 값 <ph id="ph1">`secretPrepend`</ph> 또는 <ph id="ph2">`secretAppend`</ph> 은 <ph id="ph3">`null`</ph>를 빈 배열로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`hmacKey`</ph> is <ph id="ph2">`null`</ph>, the result of the Elliptic Curve Diffie-Hellman (ECDH) algorithm will be used as the HMAC key.</source>
          <target state="translated">하는 경우의 값 <ph id="ph1">`hmacKey`</ph> 은 <ph id="ph2">`null`</ph>, Diffie Hellman ECDH (타원 곡선) 알고리즘의 결과 HMAC 키로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 ECDH 키가 아니거나 올바른 크기가 아닌 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>All other errors.</source>
          <target state="translated">다른 모든 오류입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives the key material that is generated from the secret agreement between two parties.</source>
          <target state="translated">두 당사자 간의 비밀 계약을 통해 생성되는 키 자료를 파생합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The Elliptic Curve Diffie-Hellman (ECDH) algorithm accepts the private key and the other party’s public key as input, and produces the secret agreement as output.</source>
          <target state="translated">Diffie Hellman ECDH (타원 곡선) 알고리즘 개인 키와 다른 당사자의 공개 키를 입력으로 받아들이고 출력으로 비밀 계약을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The key derivation function (KDF) then takes the secret agreement and produces the key material as output.</source>
          <target state="translated">다음 키 파생 함수 (KDF) 비밀 계약 되었으며 출력으로 키 자료를 만듭니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</source>
          <target state="translated">키 교환의 다른 당사자가 제공한 ECDH(Elliptic Curve Diffie-Hellman) 키의 공개 부분이 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>Derives the key material that is generated from the secret agreement between two parties, given a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">두 번째 당사자의 공개 키가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> 개체를 사용하여 두 당사자 간의 비밀 계약을 통해 생성되는 키 자료를 파생합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>A byte array that contains the key material.</source>
          <target state="translated">키 자료가 들어 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">이 정보는 현재 개체의 개인 키와 지정된 공개 키에 따라 계산되는 비밀 계약을 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>Either its <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /&gt;</ph> property does not specify <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /&gt;</ph> or its key size does not match the key size of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /&gt;</ph>을 지정하지 않거나 키 크기가 이 인스턴스의 키 크기와 일치하지 않습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>This object's <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /&gt;</ph> property specifies the <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph> key derivation function, but either <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /&gt;</ph> or <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 개체의 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph> 키 파생 함수를 지정하지만 <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /&gt;</ph>가 <ph id="ph5">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>All other errors.</source>
          <target state="translated">다른 모든 오류입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The public key from the other party in the key exchange.</source>
          <target state="translated">키 교환의 다른 당사자가 제공한 공개 키입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>Derives the key material that is generated from the secret agreement between two parties, given an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">두 번째 당사자의 공개 키가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 개체를 사용하여 두 당사자 간의 비밀 계약을 통해 생성되는 키 자료를 파생합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>A byte array that contains the key material.</source>
          <target state="translated">키 자료가 들어 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">이 정보는 현재 개체의 개인 키와 지정된 공개 키에 따라 계산되는 비밀 계약을 통해 생성됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> key.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> 키가 아닌 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">상대방의 공개 키입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The ASCII-encoded PRF label.</source>
          <target state="translated">ASCII로 인코딩된 PRF 레이블입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The 64-byte PRF seed.</source>
          <target state="translated">64바이트 PRF 시드입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a Transport Layer Security (TLS) Pseudo-Random Function (PRF) derivation algorithm.</source>
          <target state="translated">TLS(전송 계층 보안) PRF(의사 난수 함수) 파생 알고리즘을 사용하여 키로 사용할 수 있는 바이트를 파생합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">상대방의 공개 키와의 키 교환와 관련된 키 자료입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfLabel" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfLabel" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 ECDH 키가 아니거나 올바른 크기가 아닌 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> is not exactly 64 bytes in length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph>의 정확한 길이가 64바이트가 아닌 경우</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>All other cryptographic errors.</source>
          <target state="translated">다른 모든 암호화 오류</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Gets a handle to the secret agreement generated between two parties.</source>
          <target state="translated">두 당사자 간에 생성된 비밀 계약에 대한 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A&gt;</ph> method overloads are for advanced users who need a handle to the raw secret agreement instead of the key material.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A&gt;</ph> 메서드 오버 로드는 키 자료 아닌 원시 비밀 계약에 대 한 핸들을 해야 하는 고급 사용자에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The secret agreement handle can be used in platform invoke calls to perform any work that is not wrapped by the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class.</source>
          <target state="translated">비밀 계약 핸들 플랫폼에서 사용할 수 없습니다 래핑하는 작업을 수행 하는 호출을 호출는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</source>
          <target state="translated">키 교환의 다른 당사자가 제공한 ECDH(Elliptic Curve Diffie-Hellman) 키의 공개 부분이 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Gets a handle to the secret agreement generated between two parties, given a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">두 번째 당사자의 공개 키가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> 개체를 사용하여 두 당사자 간에 생성된 비밀 계약에 대한 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>A handle to the secret agreement.</source>
          <target state="translated">비밀 계약에 대한 핸들입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>This information is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">이 정보는 현재 개체의 개인 키와 지정된 공개 키에 따라 계산됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 ECDH 키가 아니거나 올바른 크기가 아닌 경우</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>All other errors.</source>
          <target state="translated">다른 모든 오류입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">관리 되지 않는 코드를 호출할 수 있는 권한입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The public key from the other party in the key exchange.</source>
          <target state="translated">키 교환의 다른 당사자가 제공한 공개 키입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>Gets a handle to the secret agreement generated between two parties, given an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">두 번째 당사자의 공개 키가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 개체를 사용하여 두 당사자 간에 생성된 비밀 계약에 대한 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>A handle to the secret agreement.</source>
          <target state="translated">비밀 계약에 대한 핸들입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>This information is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">이 정보는 현재 개체의 개인 키와 지정된 공개 키에 따라 계산됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> key.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph>가 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 키가 아닌 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">private 매개 변수를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Exports the key and explicit curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object into an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 개체에 사용되는 키 및 명시적 곡선 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> 개체로 내보냅니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>The key and explicit curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 개체에 사용되는 키 및 명시적 곡선 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>The method cannot obtain curve values.</source>
          <target state="translated">메서드가 곡선 값을 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Explicit export is not supported by this platform.</source>
          <target state="translated">이 플랫폼에서는 명시적 내보내기가 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Windows 10 or higher is required.</source>
          <target state="translated">Windows 10 이상이 필요합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">private 매개 변수를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>Exports the key used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object into an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 개체가 사용하는 키를 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> 개체로 내보냅니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>The key and named curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 개체에 사용되는 키 및 명명된 곡선 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>If the key was created as a named curve, the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType&gt;</ph> field contains named curve parameters;          otherwise,  it contains explicit parameters.</source>
          <target state="translated">명명 된 곡선으로 키가 생성 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType&gt;</ph> 곡선 명명 된 지정 매개 변수를 포함 하는 필드          이렇게 하지 않으면 명시적 매개 변수를 포함합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>The method cannot obtain curve values.</source>
          <target state="translated">메서드가 곡선 값을 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Deserializes the key information from an XML string.</source>
          <target state="translated">XML 문자열에서 키 정보를 deserialize합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">deserialize할 XML 기반 키 정보입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>This method is not implemented.</source>
          <target state="translated">이 메서드가 구현되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>To deserialize an XML key, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">사용 하 여 XML 키를 deserialize 할는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> 오버 로드를 대신 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">이 인스턴스에서 이 메서드가 재정의되지 않은 경우</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">deserialize할 XML 기반 키 정보입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">XML 문자열의 형식을 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">현재 사용 가능한 형식은 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>뿐입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Deserializes the key information from an XML string by using the specified format.</source>
          <target state="translated">지정된 형식을 사용하여 XML 문자열에서 키 정보를 deserialize합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is malformed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph>의 형식이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>에 지정된 형식이 잘못된 경우.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph> 값만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">다른 모든 오류입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate an ephemeral public/private key pair.</source>
          <target state="translated">사용 후 삭제 공개/개인 키 쌍을 생성하는 데 사용되는 곡선입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Generates a new ephemeral public/private key pair for the specified curve.</source>
          <target state="translated">지정된 곡선에 대해 사용 후 삭제 공개/개인 키 쌍을 새로 생성합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return true when passed to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method) and must not be implicit.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> 유효성을 검사 해야 (즉, true를 반환 해야에 전달 될 때는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> 메서드) 암시적이 아니어야 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">특징-2 곡선 Windows에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph>의 유효성을 검사할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>Gets or sets the hash algorithm to use when generating key material.</source>
          <target state="translated">키 자료를 생성하는 데 사용할 해시 알고리즘을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>An object that specifies the hash algorithm.</source>
          <target state="translated">해시 알고리즘을 지정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>This property is used by Cryptography Next Generation (CNG) objects only if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> value is set in the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property.</source>
          <target state="translated">암호화 CNG (Next Generation) 개체 경우에만이 속성은 사용 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> 에 값이 설정의 <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>This property accepts the following algorithms: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>.</source>
          <target state="translated">이 속성은 다음 알고리즘을 허용: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>Other custom hash algorithms may also be used.</source>
          <target state="translated">다른 사용자 지정 해시 알고리즘을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>The default algorithm is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>.</source>
          <target state="translated">기본 알고리즘은 <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>The value is <ph id="ph1">&lt;see langword="null." /&gt;</ph></source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null." /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>Gets or sets the Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</source>
          <target state="translated">키 자료를 파생하는 데 사용할 HMAC(해시 기반 메시지 인증 코드) 키를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>The Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</source>
          <target state="translated">키 자료를 파생하는 데 사용할 HMAC(해시 기반 메시지 인증 코드) 키입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>This property applies only when the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> value is set in the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">이 속성은 경우에만 적용 됩니다.는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> 에 값이 설정의 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A&gt;</ph> 속성은 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">`null`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The curve's parameters to import.</source>
          <target state="translated">가져올 곡선의 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Imports the specified parameters for an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object as a key into the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 개체에 대해 지정된 매개 변수를 현재 인스턴스에 키로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A&gt;</ph> method replaces the existing key that this object is working with by creating a         new <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A&gt;</ph> 메서드는 새 작업은이 개체는 기존 키를 대체 <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> contains only the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph> field, then only a public key is imported.</source>
          <target state="translated">경우 <ph id="ph1">`parameters`</ph> 만 포함 되어는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph> 공개 키만 가져온 필드입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> also contains <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, then a full key pair is be imported.</source>
          <target state="translated">경우 <ph id="ph1">`parameters`</ph> 도 포함 되어 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, 전체 키 쌍은 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">`parameter`</ph> <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> value specifies the type of the curve to import.</source>
          <target state="translated"><ph id="ph1">`parameter`</ph> <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> 값을 가져오는 곡선의 유형을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph>의 유효성을 검사할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that cannot be imported..</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph>가 가져올 수 없는 곡선을 참조합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that is not supported by this platform.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph>가 이 플랫폼에서 지원되지 않는 곡선을 참조합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> that is used by the current object for cryptographic operations.</source>
          <target state="translated">현재 개체에서 암호화 작업에 사용하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph>를 지정합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
          <source>The key pair used by this object to perform cryptographic operations.</source>
          <target state="translated">이 개체에서 암호화 작업을 수행하는 데 사용하는 키 쌍입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>Gets or sets the key derivation function for the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 클래스의 키 파생 함수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /&gt;</ph> enumeration values: <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /&gt;</ph> 열거형 값인 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph> 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>This property specifies the key derivation function that is used to transform the secret agreement into key material.</source>
          <target state="translated">이 속성을 키 자료로 비밀 계약 변환 하는 데 사용 되는 키 파생 함수를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>The enumeration value is out of range.</source>
          <target state="translated">열거형 값이 범위에서 벗어난 경우</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>Gets or sets the label value that is used for key derivation.</source>
          <target state="translated">키 파생에 사용되는 레이블 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>The label value.</source>
          <target state="translated">레이블 값입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph> value is set in the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property.</source>
          <target state="translated">이 값이 키 파생에 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph> 에 값이 설정의 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>By default, it is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본적으로는 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
          <source>Gets the public key that can be used by another <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> object to generate a shared secret agreement.</source>
          <target state="translated">다른 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 개체에서 공유 비밀 계약을 생성하는 데 사용할 수 있는 공개 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
          <source>The public key that is associated with this instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 개체의 이 인스턴스에 연결된 공개 키입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>Gets or sets a value that will be appended to the secret agreement when generating key material.</source>
          <target state="translated">키 자료를 생성할 때 비밀 계약에 추가되는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>The value that is appended to the secret agreement.</source>
          <target state="translated">비밀 계약에 추가되는 값입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> key derivation function (KDF) is used.</source>
          <target state="translated">이 값이 키 파생에 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> 키 파생 함수 (KDF)를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>The value is appended to the secret agreement, and the combined value is passed to the KDF to generate the key material.</source>
          <target state="translated">비밀 계약 값 연결 하 고 결합 된 값은 키를 생성 하는 KDF에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">`null`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>Gets or sets a value that will be added to the beginning of the secret agreement when deriving key material.</source>
          <target state="translated">키 자료를 파생할 때 비밀 계약의 시작 부분에 추가될 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>The value that is appended to the beginning of the secret agreement during key derivation.</source>
          <target state="translated">키를 파생할 때 비밀 계약의 시작 부분에 추가될 값입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to one of the following values:</source>
          <target state="translated">이 값이 키 파생에 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> 속성이 다음 값 중 하나:</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>The value is prepended to the secret agreement, and the combined value is passed to the key derivation function (KDF) to generate the key material.</source>
          <target state="translated">비밀 계약에는 값은 앞에 추가 하 고 결합 된 값은 키 자료를 생성 (KDF) 키 파생 함수에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">`null`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>Gets or sets the seed value that will be used when deriving key material.</source>
          <target state="translated">키 자료를 파생할 때 사용될 시드 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>The seed value.</source>
          <target state="translated">시드 값입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph>.</source>
          <target state="translated">이 값이 키 파생에 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">`null`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Serializes the key information to an XML string.</source>
          <target state="translated">키 정보를 XML 문자열로 serialize합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">private 매개 변수를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">이 메서드가 구현되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>Not applicable.</source>
          <target state="translated">해당 사항 없음.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>To convert the current key to an XML representation, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">현재 키 XML 표현으로 변환 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> 오버 로드를 대신 합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">이 인스턴스에서 이 메서드가 재정의되지 않은 경우</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">XML 문자열의 형식을 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">현재 사용 가능한 형식은 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>뿐입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Serializes the key information to an XML string by using the specified format.</source>
          <target state="translated">지정된 형식을 사용하여 키 정보를 XML 문자열로 serialize합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>A string object that contains the key information, serialized to an XML string, according to the requested format.</source>
          <target state="translated">요청된 형식에 따라 XML 문자열로 serialize한 키 정보가 들어 있는 문자열 개체입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>에 지정된 형식이 잘못된 경우.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph> 값만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>Gets a value that indicates whether the secret agreement is used as a Hash-based Message Authentication Code (HMAC) key to derive key material.</source>
          <target state="translated">비밀 계약을 HMAC(해시 기반 메시지 인증 코드)로 사용하여 키 자료를 파생하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the secret agreement is used as an HMAC key to derive key material; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">비밀 계약을 HMAC 키로 사용하여 키 자료를 파생하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>.</source>
          <target state="translated">이 값이 키 파생에 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>By default, the value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본적으로 이 값은 <ph id="ph1">`false`</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>