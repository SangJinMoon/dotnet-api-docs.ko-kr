<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RC2CryptoServiceProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac577766071034d46f7bafd9486fd7fe162a6aa1b98.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">77766071034d46f7bafd9486fd7fe162a6aa1b98</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> algorithm.</source>
          <target state="translated">래퍼 개체를 정의하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> 알고리즘의 CSP(암호화 서비스 공급자) 구현에 액세스합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> 구현 8 비트 단위로 증가 키 길이가 40 비트 128 비트를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> 개체는 암호화 및 8 바이트 블록에 데이터를 해독 하는 블록 암호화 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>This class pads the final block of data if it is less than 8 bytes.</source>
          <target state="translated">이 클래스는 8 바이트 보다 작은 경우 데이터의 마지막 블록을 채웁니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>As a result of this padding, the length of encrypted data could be greater than the original plaintext.</source>
          <target state="translated">따라서 암호화 된 데이터의 길이 원래의 일반 텍스트로 보다 클 수 없습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>Note that the <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> object does not use salt.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> 개체 솔트를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</source>
          <target state="translated">새 대칭 암호화 알고리즘, 암호화 표준 AES (고급), ´ ù.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Aes&gt;</ph> algorithm and its derived classes instead of the <ph id="ph2">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Aes&gt;</ph> 알고리즘 및 대신 파생된 클래스는 <ph id="ph2">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> only for compatibility with legacy applications and data.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> 레거시 응용 프로그램 및 데이터와 호환성을 위해서만 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>The following code example encrypts and then decrypts a string.</source>
          <target state="translated">다음 코드 예제에서는 암호화 하 고 문자열을 해독 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor">
          <source>The following code example encrypts and then decrypts a string.</source>
          <target state="translated">다음 코드 예제에서는 암호화 하 고 문자열을 해독 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">CSP(암호화 서비스 공급자)를 가져올 수 없습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor">
          <source>A non-compliant FIPS algorithm was found.</source>
          <target state="translated">비규격 FIPS 알고리즘을 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>Creates a symmetric decryptor object.</source>
          <target state="translated">대칭 암호 해독기 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>The secret key to use for the symmetric algorithm.</source>
          <target state="translated">대칭 알고리즘에 사용할 비밀 키입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>The initialization vector to use for the symmetric algorithm.</source>
          <target state="translated">대칭 알고리즘에 사용할 초기화 벡터입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>Creates a symmetric <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> decryptor object with the specified key (<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /&gt;</ph>)and initialization vector (<ph id="ph3">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /&gt;</ph>).</source>
          <target state="translated">지정된 키(<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph>)와 초기화 벡터(<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /&gt;</ph>)를 사용하여 대칭 <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /&gt;</ph> decryptor 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>A symmetric <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> decryptor object.</source>
          <target state="translated">대칭 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> decryptor 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>This method is used to decrypt an encrypted message created using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A&gt;</ph> overload with the same parameters.</source>
          <target state="translated">이 메서드를 사용 하 여를 사용 하 여 만든 암호화 된 메시지를 해독는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A&gt;</ph> 동일한 매개 변수 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>The following code example encrypts and then decrypts a string.</source>
          <target state="translated">다음 코드 예제에서는 암호화 하 고 문자열을 해독 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CipherMode.OFB" /&gt;</ph> cipher mode was used.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CipherMode.OFB" /&gt;</ph> 암호화 모드가 사용된 경우</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CipherMode.CFB" /&gt;</ph> cipher mode with a feedback size other than 8 bits was used.</source>
          <target state="translated">사용된 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CipherMode.CFB" /&gt;</ph> 암호화 모드의 피드백 크기가 8비트가 아닌 경우</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>An invalid key size was used.</source>
          <target state="translated">잘못된 키 크기가 사용된 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])">
          <source>The algorithm key size was not available.</source>
          <target state="translated">알고리즘 키 크기를 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RC2CryptoServiceProvider">
          <source>Creates a symmetric encryptor object.</source>
          <target state="translated">대칭 암호기 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>The secret key to use for the symmetric algorithm.</source>
          <target state="translated">대칭 알고리즘에 사용할 비밀 키입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>The initialization vector to use for the symmetric algorithm.</source>
          <target state="translated">대칭 알고리즘에 사용할 초기화 벡터입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>Creates a symmetric <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> encryptor object with the specified key (<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /&gt;</ph>) and initialization vector (<ph id="ph3">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /&gt;</ph>).</source>
          <target state="translated">지정된 키(<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph>)와 초기화 벡터(<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /&gt;</ph>)를 사용하여 대칭 <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /&gt;</ph> encryptor 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>A symmetric <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> encryptor object.</source>
          <target state="translated">대칭 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> encryptor 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A&gt;</ph> overload with the same parameters to decrypt the result of this method.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A&gt;</ph> 이 메서드의 결과 암호를 해독 하려면 같은 매개 변수 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>The following code example encrypts and then decrypts a string.</source>
          <target state="translated">다음 코드 예제에서는 암호화 하 고 문자열을 해독 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>An <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CipherMode.OFB" /&gt;</ph> cipher mode was used.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CipherMode.OFB" /&gt;</ph> 암호화 모드가 사용된 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>A <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CipherMode.CFB" /&gt;</ph> cipher mode with a feedback size other than 8 bits was used.</source>
          <target state="translated">사용된 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CipherMode.CFB" /&gt;</ph> 암호화 모드의 피드백 크기가 8비트가 아닌 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>An invalid key size was used.</source>
          <target state="translated">잘못된 키 크기가 사용된 경우</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])">
          <source>The algorithm key size was not available.</source>
          <target state="translated">알고리즘 키 크기를 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize">
          <source>Gets or sets the effective size, in bits, of the secret key used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> 알고리즘에서 사용하는 비밀 키의 효과적인 크기(비트 단위)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize">
          <source>The effective key size, in bits, used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RC2" /&gt;</ph> 알고리즘에서 사용하는 효과적인 키 크기(비트 단위)입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /&gt;</ph> property was set to a value other than the <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /&gt;</ph> 속성에 설정된 값이 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" /&gt;</ph> 속성과 다른 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV">
          <source>Generates a random initialization vector (<ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /&gt;</ph>) to use for the algorithm.</source>
          <target state="translated">알고리즘에 사용할 임의의 초기화 벡터(<ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" /&gt;</ph>)를 생성합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV">
          <source>Use this method to generate a random <ph id="ph1">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph> when none is specified.</source>
          <target state="translated">이 메서드를 사용 하 여 임의 생성 <ph id="ph1">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph> 경우 아무 것도 지정 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV">
          <source>The following code example encrypts and then decrypts a string.</source>
          <target state="translated">다음 코드 예제에서는 암호화 하 고 문자열을 해독 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey">
          <source>Generates a random key (<ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /&gt;</ph>) to be used for the algorithm.</source>
          <target state="translated">알고리즘에 사용할 임의의 키(<ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /&gt;</ph>)를 생성합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey">
          <source>Use this method to generate a random key when none is specified.</source>
          <target state="translated">이 메서드를 사용 하 여 지정 되지 않으면는 임의 키를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> 구현 8 비트 단위로 증가 키 길이가 40 비트 128 비트를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey">
          <source>The following code example encrypts and then decrypts a string.</source>
          <target state="translated">다음 코드 예제에서는 암호화 하 고 문자열을 해독 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
          <source>Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.</source>
          <target state="translated">11바이트 길이의 0값 솔트를 사용하여 키를 만들 것인지 여부를 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key should be created with an 11-byte-long, zero-value salt; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">11바이트 길이의 0값 솔트를 사용하여 키를 만들어야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A&gt;</ph> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A&gt;</ph> 속성 11 바이트 길이의 0 값 솔트를 사용 하는 기존 응용 프로그램과 상호 작용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
          <source>For most scenarios, you should not use a salt with an <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> key.</source>
          <target state="translated">대부분의 시나리오에 대 한 사용 하지 않아야 솔트를는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider&gt;</ph> 키입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt">
          <source>The following code example sets the <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, and then encrypts and decrypts a value.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>를 암호화 하 고 값의 암호를 해독 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>