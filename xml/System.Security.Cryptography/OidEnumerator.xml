<Type Name="OidEnumerator" FullName="System.Security.Cryptography.OidEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21558bc66da6b5bf1914358f4d7dcb557687acc5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OidEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OidEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.OidEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OidEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class OidEnumerator sealed : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="916b3-101">
        <see cref="T:System.Security.Cryptography.OidCollection" /> 개체를 탐색하는 기능을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="916b3-101">Provides the ability to navigate through an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</span>
      </span>
      <span data-ttu-id="916b3-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="916b3-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="916b3-103">이 클래스는 <xref:System.Collections.IEnumerator> 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-103">This class implements the <xref:System.Collections.IEnumerator> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="916b3-104">다음 코드 예제에서는 <xref:System.Security.Cryptography.OidEnumerator> 클래스를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-104">The following code example shows how to use the <xref:System.Security.Cryptography.OidEnumerator> class.</span></span>  
  
 [!code-cpp[Cryptography.Oid#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.Oid/CPP/cryptography.oid.cpp#1)]
 [!code-csharp[Cryptography.Oid#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.Oid/CS/cryptography.oid.cs#1)]
 [!code-vb[Cryptography.Oid#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.Oid/VB/cryptography.oid.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.OidEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ Current { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="916b3-105">
            <see cref="T:System.Security.Cryptography.Oid" /> 개체의 현재 <see cref="T:System.Security.Cryptography.OidCollection" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-105">Gets the current <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="916b3-106">컬렉션의 현재 <see cref="T:System.Security.Cryptography.Oid" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-106">The current <see cref="T:System.Security.Cryptography.Oid" /> object in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="916b3-107">열거자를 만든 후의 <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> 메서드를 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소로 이동 해야는 <xref:System.Security.Cryptography.OidEnumerator.Current%2A> 속성, 그렇지 않으면 <xref:System.Security.Cryptography.OidEnumerator.Current%2A> 반환 `null` throw 또는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-107">After an enumerator is created, the <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> method must be called to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Cryptography.OidEnumerator.Current%2A> property; otherwise, <xref:System.Security.Cryptography.OidEnumerator.Current%2A> returns `null` or throws an exception.</span></span>  
  
 <span data-ttu-id="916b3-108"><xref:System.Security.Cryptography.OidEnumerator.Current%2A> 또한 반환 `null` 마지막으로 호출 하는 경우 예외를 throw 또는 <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> 반환 `false`, 컬렉션의 끝에 도달 했음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-108"><xref:System.Security.Cryptography.OidEnumerator.Current%2A> also returns `null` or throws an exception if the last call to <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> returns `false`, which indicates that the end of the collection has been reached.</span></span>  
  
 <span data-ttu-id="916b3-109"><xref:System.Security.Cryptography.OidEnumerator.Current%2A> 열거자를 연속으로 호출의 위치를 이동 하지 않는 <xref:System.Security.Cryptography.OidEnumerator.Current%2A> 될 때까지 동일한 개체를 반환 <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-109"><xref:System.Security.Cryptography.OidEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Security.Cryptography.OidEnumerator.Current%2A> return the same object, until <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="916b3-110">다음 코드 예제에서는 <xref:System.Security.Cryptography.OidEnumerator> 클래스를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-110">The following code example shows how to use the <xref:System.Security.Cryptography.OidEnumerator> class.</span></span>  
  
 [!code-cpp[Cryptography.Oid#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.Oid/CPP/cryptography.oid.cpp#1)]
 [!code-csharp[Cryptography.Oid#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.Oid/CS/cryptography.oid.cs#1)]
 [!code-vb[Cryptography.Oid#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.Oid/VB/cryptography.oid.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.OidEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="916b3-111">
            <see cref="T:System.Security.Cryptography.Oid" /> 개체의 다음 <see cref="T:System.Security.Cryptography.OidCollection" /> 개체로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-111">Advances to the next <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="916b3-112">열거자가 다음 요소로 이동한 경우 <see langword="true" />가 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />가 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-112">
              <see langword="true" />, if the enumerator was successfully advanced to the next element; <see langword="false" />, if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="916b3-113">컬렉션과 첫 번째 호출의 첫 번째 요소 앞 배치 되는 열거자를 만든 후의 <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> 메서드 열거자는 컬렉션의 첫 번째 요소를 통해 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-113">After an enumerator is created, it is positioned before the first element of the collection, and the first call to the <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> method moves the enumerator over the first element of the collection.</span></span> <span data-ttu-id="916b3-114">에 대 한 후속 호출 <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> 열거자는 컬렉션에 있는 다음 항목을 지 나 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-114">Subsequent calls to <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> advances the enumerator past subsequent items in the collection.</span></span>  
  
 <span data-ttu-id="916b3-115">컬렉션의 끝이 전달 된 후에 호출 <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-115">After the end of the collection is passed, calls to <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> return `false`.</span></span>  
  
 <span data-ttu-id="916b3-116">열거자는 컬렉션이 변경 되지 다음 동안 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-116">An enumerator is valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="916b3-117">변경, 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제 된 열거자는 더 이상 유효 하지 않으며 다음에 호출할 경우 <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-117">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator becomes invalid and the next call to <xref:System.Security.Cryptography.OidEnumerator.MoveNext%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="916b3-118">다음 코드 예제에서는 <xref:System.Security.Cryptography.OidEnumerator> 클래스를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-118">The following code example shows how to use the <xref:System.Security.Cryptography.OidEnumerator> class.</span></span>  
  
 [!code-cpp[Cryptography.Oid#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.Oid/CPP/cryptography.oid.cpp#1)]
 [!code-csharp[Cryptography.Oid#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.Oid/CS/cryptography.oid.cs#1)]
 [!code-vb[Cryptography.Oid#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.Oid/VB/cryptography.oid.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="916b3-119">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-119">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.OidEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="916b3-120">열거자를 초기 위치로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-120">Sets an enumerator to its initial position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="916b3-121">열거자의 초기 위치는의 첫 번째 요소 앞의 <xref:System.Security.Cryptography.OidCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-121">The initial position of an enumerator is before the first element in the <xref:System.Security.Cryptography.OidCollection> object.</span></span> <span data-ttu-id="916b3-122">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-122">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="916b3-123">변경, 추가 하는 등 컬렉션에 수정 하거나 요소를 삭제 된 열거자는 더 이상 유효 하지 않으며 다음 호출 하는 경우는 <xref:System.Security.Cryptography.OidEnumerator.Reset%2A> 메서드가 throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-123">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator becomes invalid and the next call to the <xref:System.Security.Cryptography.OidEnumerator.Reset%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="916b3-124">다음 코드 예제에서는 <xref:System.Security.Cryptography.OidEnumerator> 클래스를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="916b3-124">The following code example shows how to use the <xref:System.Security.Cryptography.OidEnumerator> class.</span></span>  
  
 [!code-cpp[Cryptography.Oid#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.Oid/CPP/cryptography.oid.cpp#1)]
 [!code-csharp[Cryptography.Oid#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.Oid/CS/cryptography.oid.cs#1)]
 [!code-vb[Cryptography.Oid#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.Oid/VB/cryptography.oid.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="916b3-125">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-125">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="916b3-126">
            <see cref="T:System.Security.Cryptography.Oid" /> 개체의 현재 <see cref="T:System.Security.Cryptography.OidCollection" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-126">Gets the current <see cref="T:System.Security.Cryptography.Oid" /> object in an <see cref="T:System.Security.Cryptography.OidCollection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="916b3-127">현재 <see cref="T:System.Security.Cryptography.Oid" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="916b3-127">The current <see cref="T:System.Security.Cryptography.Oid" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>