<Type Name="DES" FullName="System.Security.Cryptography.DES">
  <TypeSignature Language="C#" Value="public abstract class DES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a951d-101">모든 <see cref="T:System.Security.Cryptography.DES" /> 구현이 파생되어야 하는 DES(데이터 암호화 표준) 알고리즘에 대한 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-101">Represents the base class for the Data Encryption Standard (DES) algorithm from which all <see cref="T:System.Security.Cryptography.DES" /> implementations must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a951d-102">이 알고리즘은 64 비트의 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-102">This algorithm supports a key length of 64 bits.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="a951d-103">새 비대칭 암호화 알고리즘, 암호화 표준 AES (고급), ´ ù.</span><span class="sxs-lookup"><span data-stu-id="a951d-103">A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="a951d-104">사용 하는 것이 좋습니다는 <xref:System.Security.Cryptography.Aes> 클래스 대신는 <xref:System.Security.Cryptography.DES> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-104">Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class.</span></span> <span data-ttu-id="a951d-105">사용 하 여 <xref:System.Security.Cryptography.DES> 레거시 응용 프로그램 및 데이터와 호환성을 위해서만 합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-105">Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a951d-106"><see cref="T:System.Security.Cryptography.DES" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a951d-107">추상 클래스의 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-107">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="a951d-108">응용 프로그램 코드에서는 파생된 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-108">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="a951d-109">이 메서드는 보호 되는 필드의 초기화는 <xref:System.Security.Cryptography.SymmetricAlgorithm> 클래스에는 다음 표에 표시 된 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-109">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="a951d-110">필드</span><span class="sxs-lookup"><span data-stu-id="a951d-110">Field</span></span>|<span data-ttu-id="a951d-111">기본값</span><span class="sxs-lookup"><span data-stu-id="a951d-111">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="a951d-112">64</span><span class="sxs-lookup"><span data-stu-id="a951d-112">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="a951d-113">64</span><span class="sxs-lookup"><span data-stu-id="a951d-113">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="a951d-114">64</span><span class="sxs-lookup"><span data-stu-id="a951d-114">64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a951d-115">데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘을 수행하는 암호화 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-115">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a951d-116">데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘을 수행하는 암호화 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-116">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <returns><span data-ttu-id="a951d-117">암호화 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-117">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a951d-118">인스턴스를 만듭니다는 <xref:System.Security.Cryptography.DES> 데이터 암호화 및 해독에 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-118">Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a951d-119">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DES> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-119">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="a951d-120">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DES> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-120">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="a951d-121">사용하려는 <see cref="T:System.Security.Cryptography.DES" />의 특정 구현에 대한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-121">The name of the specific implementation of <see cref="T:System.Security.Cryptography.DES" /> to use.</span></span></param>
        <summary><span data-ttu-id="a951d-122">암호화 개체의 인스턴스를 만들어 지정된 데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-122">Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <returns><span data-ttu-id="a951d-123">암호화 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-123">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a951d-124">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DES> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-124">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="a951d-125">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DES> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-125">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSemiWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsSemiWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSemiWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSemiWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSemiWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="a951d-126">semi-weak인지 테스트할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-126">The secret key to test for semi-weakness.</span></span></param>
        <summary><span data-ttu-id="a951d-127">지정된 키가 semi-weak인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-127">Determines whether the specified key is semi-weak.</span></span></summary>
        <returns>
          <span data-ttu-id="a951d-128">키가 semi-weak이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-128"><see langword="true" /> if the key is semi-weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a951d-129">Semi-weak 키는 암호를 해독 하기 쉬운는 만드는 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-129">Semi-weak keys are pairs of keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="a951d-130">텍스트 semi-weak 키로 암호화 된 키가 semi-weak 파트너와 암호를 만들면 원본 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-130">If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text.</span></span> <span data-ttu-id="a951d-131">6 개의 알려진된 semi-weak 키 쌍에 대 한 데이터 암호화 표준 없는 (<xref:System.Security.Cryptography.DES>) 알고리즘;이 해당 semi-weak 키에 대 한 메서드를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-131">There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.</span></span>  
  
 <span data-ttu-id="a951d-132">Semi-weak 키 결과 설정 하려고 한 <xref:System.Security.Cryptography.CryptographicException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-132">Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="a951d-133">때 <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> semi-weak 키 반환 되지 것입니다 임의의 키를 만들기 위해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-133">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a951d-134"><paramref name="rgbKey" /> 매개 변수의 크기가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="a951d-134">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="a951d-135">약한지 테스트할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-135">The secret key to test for weakness.</span></span></param>
        <summary><span data-ttu-id="a951d-136">지정된 키가 약한지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-136">Determines whether the specified key is weak.</span></span></summary>
        <returns>
          <span data-ttu-id="a951d-137">키가 약하면 <see langword="true" />이고, 약하지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-137"><see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a951d-138">약한 키는 암호를 해독 하기 쉬운는 만드는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-138">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="a951d-139">텍스트 weak 키로 암호화 된 암호를 만들면 동일한 weak 키 다시 암호화 원본 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-139">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="a951d-140">한 데이터 암호화 표준에 대 한 네 가지 알려진 약한 키 (<xref:System.Security.Cryptography.DES>) 알고리즘;이 약한 해당 키에 대 한 메서드를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-140">There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.</span></span>  
  
 <span data-ttu-id="a951d-141">약한 키 결과 설정 하려고 한 <xref:System.Security.Cryptography.CryptographicException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-141">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="a951d-142">때 <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> 호출 되는 임의 키를 만들려면 weak 키 반환 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-142">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a951d-143"><paramref name="rgbKey" /> 매개 변수의 크기가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="a951d-143">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a951d-144">데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘에 대한 비밀 키를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-144">Gets or sets the secret key for the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span></summary>
        <value><span data-ttu-id="a951d-145"><see cref="T:System.Security.Cryptography.DES" /> 알고리즘에 대한 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-145">The secret key for the <see cref="T:System.Security.Cryptography.DES" /> algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a951d-146">이 속성이 `null` 사용 될 때 <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> 새 임의 값을 만들어야 하기 위해 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-146">If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.</span></span>  
  
 <span data-ttu-id="a951d-147">키의 길이 동일 해야 합니다. <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-147">The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.</span></span>  
  
 <span data-ttu-id="a951d-148">이 알고리즘은 64 비트의 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a951d-148">This algorithm supports a key length of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a951d-149">키를 <see langword="null" />로 설정하려고 시도한 경우</span><span class="sxs-lookup"><span data-stu-id="a951d-149">An attempt was made to set the key to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a951d-150"><see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />와 길이가 다른 키를 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="a951d-150">An attempt was made to set a key whose length is not equal to <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="a951d-151">weak 키(<see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" /> 참조)나 semi-weak 키(<see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" /> 참조)를 설정하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="a951d-151">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />) or a semi-weak key (see <see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>