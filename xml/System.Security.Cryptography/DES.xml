<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DES.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d50fca96544a72ef6f1e1466cacc67cd022f61cb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d50fca96544a72ef6f1e1466cacc67cd022f61cb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DES">
          <source>Represents the base class for the Data Encryption Standard (DES) algorithm from which all <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph> implementations must derive.</source>
          <target state="translated">모든 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph> 구현이 파생되어야 하는 DES(데이터 암호화 표준) 알고리즘에 대한 기본 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DES">
          <source>This algorithm supports a key length of 64 bits.</source>
          <target state="translated">이 알고리즘은 64 비트의 키 길이 지원 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DES">
          <source>A newer asymmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</source>
          <target state="translated">새 비대칭 암호화 알고리즘, 암호화 표준 AES (고급), ´ ù.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DES">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Aes&gt;</ph> class instead of the <ph id="ph2">&lt;xref:System.Security.Cryptography.DES&gt;</ph> class.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.Aes&gt;</ph> 클래스 대신는 <ph id="ph2">&lt;xref:System.Security.Cryptography.DES&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DES">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> only for compatibility with legacy applications and data.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> 레거시 응용 프로그램 및 데이터와 호환성을 위해서만 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">추상 클래스의 인스턴스를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>Application code will create a new instance of a derived class.</source>
          <target state="translated">응용 프로그램 코드에서는 파생된 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>This method initializes the protected fields of the <ph id="ph1">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;</ph> class to the default values shown in the following table.</source>
          <target state="translated">이 메서드는 보호 되는 필드의 초기화는 <ph id="ph1">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm&gt;</ph> 클래스에는 다음 표에 표시 된 기본값입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>Field</source>
          <target state="translated">필드</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>Default Value</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>64</source>
          <target state="translated">64</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>64</source>
          <target state="translated">64</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.#ctor">
          <source>64</source>
          <target state="translated">64</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DES">
          <source>Creates an instance of a cryptographic object to perform the Data Encryption Standard (<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>) algorithm.</source>
          <target state="translated">데이터 암호화 표준(<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>) 알고리즘을 수행하는 암호화 개체의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.Create">
          <source>Creates an instance of a cryptographic object to perform the Data Encryption Standard (<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>) algorithm.</source>
          <target state="translated">데이터 암호화 표준(<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>) 알고리즘을 수행하는 암호화 개체의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.Create">
          <source>A cryptographic object.</source>
          <target state="translated">암호화 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.Create">
          <source>Creates an instance of the <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> object that can be used for encrypting and decrypting data.</source>
          <target state="translated">인스턴스를 만듭니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> 데이터 암호화 및 해독에 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.Create">
          <source>The following code example shows how to create and use a <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> object to encrypt and decrypt data in a file.</source>
          <target state="translated">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.Create">
          <source>The following code example shows how to create and use a <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> object to encrypt and decrypt data in memory.</source>
          <target state="translated">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.Create(System.String)">
          <source>The name of the specific implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph> to use.</source>
          <target state="translated">사용하려는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>의 특정 구현에 대한 이름입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.Create(System.String)">
          <source>Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>) algorithm.</source>
          <target state="translated">암호화 개체의 인스턴스를 만들어 지정된 데이터 암호화 표준(<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>) 알고리즘을 구현합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.Create(System.String)">
          <source>A cryptographic object.</source>
          <target state="translated">암호화 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.Create(System.String)">
          <source>The following code example shows how to create and use a <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> object to encrypt and decrypt data in a file.</source>
          <target state="translated">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.Create(System.String)">
          <source>The following code example shows how to create and use a <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> object to encrypt and decrypt data in memory.</source>
          <target state="translated">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source>The secret key to test for semi-weakness.</source>
          <target state="translated">semi-weak인지 테스트할 비밀 키입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source>Determines whether the specified key is semi-weak.</source>
          <target state="translated">지정된 키가 semi-weak인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is semi-weak; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키가 semi-weak이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source>Semi-weak keys are pairs of keys that result in ciphers that are easy to break.</source>
          <target state="translated">Semi-weak 키는 암호를 해독 하기 쉬운는 만드는 키 쌍입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source>If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text.</source>
          <target state="translated">텍스트 semi-weak 키로 암호화 된 키가 semi-weak 파트너와 암호를 만들면 원본 텍스트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source>There are six known semi-weak key pairs for the Data Encryption Standard (<ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph>) algorithm; this method checks for those semi-weak keys.</source>
          <target state="translated">6 개의 알려진된 semi-weak 키 쌍에 대 한 데이터 암호화 표준 없는 (<ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph>) 알고리즘;이 해당 semi-weak 키에 대 한 메서드를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source>Attempting to set a semi-weak key results in a <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.</source>
          <target state="translated">Semi-weak 키 결과 설정 하려고 한 <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source>When <ph id="ph1">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A&gt;</ph> is called to create a random key, a semi-weak key will never be returned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A&gt;</ph> semi-weak 키 반환 되지 것입니다 임의의 키를 만들기 위해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])">
          <source>The size of the <ph id="ph1">&lt;paramref name="rgbKey" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgbKey" /&gt;</ph> 매개 변수의 크기가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source>The secret key to test for weakness.</source>
          <target state="translated">약한지 테스트할 비밀 키입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source>Determines whether the specified key is weak.</source>
          <target state="translated">지정된 키가 약한지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is weak; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키가 약하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 약하지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source>Weak keys are keys that result in ciphers that are easy to break.</source>
          <target state="translated">약한 키는 암호를 해독 하기 쉬운는 만드는 키입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source>If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</source>
          <target state="translated">텍스트 weak 키로 암호화 된 암호를 만들면 동일한 weak 키 다시 암호화 원본 텍스트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source>There are four known weak keys for the Data Encryption Standard (<ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph>) algorithm; this method checks for those weak keys.</source>
          <target state="translated">한 데이터 암호화 표준에 대 한 네 가지 알려진 약한 키 (<ph id="ph1">&lt;xref:System.Security.Cryptography.DES&gt;</ph>) 알고리즘;이 약한 해당 키에 대 한 메서드를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source>Attempting to set a weak key results in a <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>.</source>
          <target state="translated">약한 키 결과 설정 하려고 한 <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source>When <ph id="ph1">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A&gt;</ph> is called to create a random key, a weak key will never be returned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A&gt;</ph> 호출 되는 임의 키를 만들려면 weak 키 반환 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])">
          <source>The size of the <ph id="ph1">&lt;paramref name="rgbKey" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rgbKey" /&gt;</ph> 매개 변수의 크기가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DES.Key">
          <source>Gets or sets the secret key for the Data Encryption Standard (<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>) algorithm.</source>
          <target state="translated">데이터 암호화 표준(<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph>) 알고리즘에 대한 비밀 키를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DES.Key">
          <source>The secret key for the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph> algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DES" /&gt;</ph> 알고리즘에 대한 비밀 키입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DES.Key">
          <source>If this property is <ph id="ph1">`null`</ph> when it is used, <ph id="ph2">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt;</ph> is called to create a new random value.</source>
          <target state="translated">이 속성이 <ph id="ph1">`null`</ph> 사용 될 때 <ph id="ph2">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A&gt;</ph> 새 임의 값을 만들어야 하기 위해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DES.Key">
          <source>The length of the key must be equal to <ph id="ph1">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue&gt;</ph>.</source>
          <target state="translated">키의 길이 동일 해야 합니다. <ph id="ph1">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.DES.Key">
          <source>This algorithm supports a key length of 64 bits.</source>
          <target state="translated">이 알고리즘은 64 비트의 키 길이 지원 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DES.Key">
          <source>An attempt was made to set the key to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">키를 <ph id="ph1">&lt;see langword="null" /&gt;</ph>로 설정하려고 시도한 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DES.Key">
          <source>An attempt was made to set a key whose length is not equal to <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" /&gt;</ph>와 길이가 다른 키를 설정하려고 한 경우</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.DES.Key">
          <source>An attempt was made to set a weak key (see <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" /&gt;</ph>) or a semi-weak key (see <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" /&gt;</ph>).</source>
          <target state="translated">weak 키(<ph id="ph1">&lt;see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" /&gt;</ph> 참조)나 semi-weak 키(<ph id="ph2">&lt;see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" /&gt;</ph> 참조)를 설정하려고 한 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>