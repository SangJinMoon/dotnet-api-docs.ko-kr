<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDsaCng.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59146c1f35bf2f9d913e01e050bac7d26770cc7f4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9146c1f35bf2f9d913e01e050bac7d26770cc7f4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA).</source>
          <target state="translated">ECDSA(타원 곡선 디지털 서명 알고리즘)의 CNG(Cryptography Next Generation) 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>This class derives from the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsa&gt;</ph> abstract base class.</source>
          <target state="translated">이 클래스에서 파생 되는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsa&gt;</ph> 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> class to sign a message and how to use the signature to verify that the message has not been altered.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> 클래스는 메시지와 서명을 사용 하 여 메시지가 변경 되지 않았음을 확인 하는 방법에 서명 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class with a random key pair.</source>
          <target state="translated">임의의 키 쌍을 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>The random key pair has a public key length of 521 bits.</source>
          <target state="translated">임의의 키 쌍 521 비트의 공개 키 길이 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>The size of the key.</source>
          <target state="translated">키 크기입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Valid key sizes are 256, 384, and 521 bits.</source>
          <target state="translated">유효한 키 크기는 256, 384 및 521비트입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class with a random key pair, using the specified key size.</source>
          <target state="translated">지정된 키 크기를 사용하여 임의의 키 쌍으로 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>The random key pair will have the public key length defined by the <ph id="ph1">`keySize`</ph> parameter.</source>
          <target state="translated">임의의 키 쌍에 정의 된 공개 키 길이 갖습니다는 <ph id="ph1">`keySize`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> specifies an invalid length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph>에서 잘못된 길이를 지정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>The key that will be used as input to the cryptographic operations performed by the current object.</source>
          <target state="translated">현재 개체에 의해 수행되는 암호화 작업의 입력으로 사용할 키입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> 개체를 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not specify an Elliptic Curve Digital Signature Algorithm (ECDSA) group.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>가 ECDSA(타원 곡선 디지털 서명 알고리즘) 그룹을 지정하지 않은 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">CNG(Cryptography Next Generation) 클래스는 이 시스템에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate the public/private key pair.</source>
          <target state="translated">공개/개인 키 쌍을 생성하는 데 사용되는 곡선입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> class whose public/private key pair is generated over the specified curve.</source>
          <target state="translated">해당 공개/개인 키 쌍이 지정된 곡선에서 생성되는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDsaCng" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method and must be either a named or explicit prime.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> 유효성을 검사 해야 (즉, 반환 해야 <ph id="ph2">`true`</ph>)에 전달 될 때는 <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> 메서드 명시적 여부와 관계 없이 prime 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph>의 유효성을 검사할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">private 매개 변수를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Exports the key and explicit curve parameters used by the Elliptic curve cryptography (ECC) object into an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">ECC(타원 곡선 암호화) 개체에 사용되는 키 및 명시적 곡선 매개 변수를 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> 개체로 내보냅니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>The key and explicit curve parameters used by the ECC object.</source>
          <target state="translated">ECC 개체에 사용되는 키 및 명시적 곡선 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>An error occurred while obtaining the curve values.</source>
          <target state="translated">곡선 값을 가져오는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Explicit export is not supported by this platform.</source>
          <target state="translated">이 플랫폼에서는 명시적 내보내기가 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)">
          <source>Windows 10 or higher is required.</source>
          <target state="translated">Windows 10 이상이 필요합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">private 매개 변수를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>Exports the key used by the Elliptic curve cryptography (ECC) object into an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">ECC(타원 곡선 암호화) 개체에 사용되는 키를 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> 개체로 내보냅니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>If the key was created as a named curve, the <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECParameters.Curve" /&gt;</ph> field contains named curve parameters; otherwise, it contains explicit parameters.</source>
          <target state="translated">키가 명명된 곡선으로 작성된 경우 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECParameters.Curve" /&gt;</ph> 필드에는 명명된 곡선 매개 변수가 포함되고 그렇지 않으면 명시적 매개 변수가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>The key and named curve parameters used by the ECC object.</source>
          <target state="translated">ECC 개체에 사용되는 키 및 명명된 곡선 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)">
          <source>An error occurred while obtaining the curve values.</source>
          <target state="translated">곡선 값을 가져오는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Deserializes the key information from an XML string.</source>
          <target state="translated">XML 문자열에서 키 정보를 deserialize합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">deserialize할 XML 기반 키 정보입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>This method is not implemented.</source>
          <target state="translated">이 메서드가 구현되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>To deserialize an XML key, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">사용 하 여 XML 키를 deserialize 할는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> 오버 로드를 대신 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">이 인스턴스에서 이 메서드가 재정의되지 않은 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">deserialize할 XML 기반 키 정보입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">XML 문자열의 형식을 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">현재 사용 가능한 형식은 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>뿐입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Deserializes the key information from an XML string by using the specified format.</source>
          <target state="translated">지정된 형식을 사용하여 XML 문자열에서 키 정보를 deserialize합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>에 지정된 형식이 잘못된 경우.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph> 값만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">다른 모든 오류입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>The curve to use to generate the key.</source>
          <target state="translated">키를 생성하는 데 사용할 곡선입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Generates a key to use for the ECDsaCng algorithm.</source>
          <target state="translated">ECDsaCng 알고리즘에 사용할 키를 생성합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph>의 유효성을 검사할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>Gets or sets the hash algorithm to use when signing and verifying data.</source>
          <target state="translated">데이터에 서명하고 확인하는 데 사용할 해시 알고리즘을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>An object that specifies the hash algorithm.</source>
          <target state="translated">해시 알고리즘을 지정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>This property accepts the following algorithms: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>.</source>
          <target state="translated">이 속성은 다음 알고리즘을 허용: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>Other custom hash algorithms may also be used.</source>
          <target state="translated">다른 사용자 지정 해시 알고리즘을 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>The default algorithm is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>.</source>
          <target state="translated">기본 알고리즘은 <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>This property is not used if you are signing or verifying data that is already hashed.</source>
          <target state="translated">서명 하거나 이미 해시 되었습니다. 데이터를 확인 하는 경우에이 속성이 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.HashAlgorithm">
          <source>The value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The curve parameters.</source>
          <target state="translated">곡선 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Replaces the existing key that the current instance is working with by creating a new <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> for the parameters structure.</source>
          <target state="translated">매개 변수 구조에 대한 새 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph>를 만들어 현재 인스턴스에서 사용 중인 기존 키를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> contains only <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph>, only a public key is imported.</source>
          <target state="translated">경우 <ph id="ph1">`parameters`</ph> 만 포함 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph>공개 키를 가져올만 필요 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> also contains <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, a full key pair is imported.</source>
          <target state="translated">경우 <ph id="ph1">`parameters`</ph> 도 포함 되어 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, 전체 키 쌍을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> field specifies the type of the curve to import.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> 필드를 가져오려면 곡선의 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not contain valid values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph>에 유효한 값이 포함되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that cannot be imported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph>가 가져올 수 없는 곡선을 참조합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that is not supported by this platform.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph>가 이 플랫폼에서 지원되지 않는 곡선을 참조합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDsaCng.Key">
          <source>Gets or sets the key to use when signing and verifying data.</source>
          <target state="translated">데이터에 서명하거나 확인할 때 사용할 키를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDsaCng.Key">
          <source>An object that specifies the key.</source>
          <target state="translated">키를 지정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Generates a signature.</source>
          <target state="translated">서명을 생성합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The message data to be signed.</source>
          <target state="translated">서명할 메시지 데이터입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Generates a signature for the specified data.</source>
          <target state="translated">지정된 데이터에 대한 서명을 생성합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>A digital signature for the specified data.</source>
          <target state="translated">지정된 데이터에 대한 디지털 서명입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>This method generates a signature for the specified data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">이 메서드는 지정된 된 데이터에 대 한 서명을 사용 하 여 입력된 데이터를 해시 하 여 생성 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> 속성을 결과 서명 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> 플래그 경우 필요한 암호화 CNG (Next Generation) 키에서 임의로 생성 되지 않습니다는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">인스턴스와 연결된 키 정보에는 개인 키가 없습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>for permission to sign data.</source>
          <target state="translated">데이터에 서명 하는 데 필요한 권한입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The data stream to be signed.</source>
          <target state="translated">서명할 데이터 스트림입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Generates a signature for the specified data stream, reading to the end of the stream.</source>
          <target state="translated">스트림 끝까지 읽어들여 지정된 데이터 스트림에 대한 서명을 생성합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>A digital signature for the specified data stream.</source>
          <target state="translated">지정된 데이터 스트림에 대한 디지털 서명입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>This method generates a signature for the specified data stream by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">이 메서드는 지정 된 데이터 스트림에 대 한 서명을 사용 하 여 입력된 데이터를 해시 하 여 생성 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> 속성을 결과 서명 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> 플래그 경우 필요한 암호화 CNG (Next Generation) 키에서 임의로 생성 되지 않습니다는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">인스턴스와 연결된 키 정보에는 개인 키가 없습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>for permission to sign data.</source>
          <target state="translated">데이터에 서명 하는 데 필요한 권한입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The message data to be signed.</source>
          <target state="translated">서명할 메시지 데이터입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The location in the string at which to start signing.</source>
          <target state="translated">문자열에서 서명을 시작할 위치입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The length of the string, in characters, following <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> that will be signed.</source>
          <target state="translated">서명할 <bpt id="p1">&lt;c&gt;</bpt>오프셋<ept id="p1">&lt;/c&gt;</ept>부터 문자열의 길이(문자 단위)입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Generates a digital signature for the specified length of data, beginning at the specified offset.</source>
          <target state="translated">지정된 오프셋에서 시작하여 지정된 길이의 데이터에 대한 디지털 서명을 생성합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>A digital signature for the specified length of data.</source>
          <target state="translated">지정된 길이의 데이터에 대한 디지털 서명입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>This method generates a signature for the specified data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result</source>
          <target state="translated">이 메서드는 지정된 된 데이터에 대 한 서명을 사용 하 여 입력된 데이터를 해시 하 여 생성 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> 속성을 결과 서명</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> 플래그 경우 필요한 암호화 CNG (Next Generation) 키에서 임의로 생성 되지 않습니다는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> caused reading outside the bounds of the data string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>으로 인해 데이터 문자열의 경계를 넘어 읽게 된 경우</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">인스턴스와 연결된 키 정보에는 개인 키가 없습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>for permission to sign data.</source>
          <target state="translated">데이터에 서명 하는 데 필요한 권한입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">서명할 데이터의 해시 값입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Generates a signature for the specified hash value.</source>
          <target state="translated">지정된 해시 값의 서명을 생성합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>A digital signature for the specified hash value.</source>
          <target state="translated">지정된 해시 값의 디지털 서명입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> flag is required if the Cryptography Next Generation (CNG) key is not randomly generated by the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType&gt;</ph> 플래그 경우 필요한 암호화 CNG (Next Generation) 키에서 임의로 생성 되지 않습니다는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsaCng&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>The key information that is associated with the instance does not have a private key.</source>
          <target state="translated">인스턴스와 연결된 키 정보에는 개인 키가 없습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>for permission to sign data.</source>
          <target state="translated">데이터에 서명 하는 데 필요한 권한입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">요청 값: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Serializes the key information to an XML string.</source>
          <target state="translated">키 정보를 XML 문자열로 serialize합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">private 매개 변수를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">이 메서드가 구현되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>Not applicable.</source>
          <target state="translated">해당 사항 없음.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>To convert the current key to an XML representation, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">현재 키 XML 표현으로 변환 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> 오버 로드를 대신 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">이 메서드가 구현되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">XML 문자열의 형식을 지정하는 열거형 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">현재 사용 가능한 형식은 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>뿐입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Serializes the key information to an XML string by using the specified format.</source>
          <target state="translated">지정된 형식을 사용하여 키 정보를 XML 문자열로 serialize합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>A string object that contains the key information, serialized to an XML string according to the requested format.</source>
          <target state="translated">요청된 형식에 따라 XML 문자열로 serialize한 키 정보가 들어 있는 문자열 개체입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>에 지정된 형식이 잘못된 경우.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph> 값만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">다른 모든 오류입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDsaCng">
          <source>Verifies a digital signature.</source>
          <target state="translated">디지털 서명을 확인합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">서명된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">확인할 서명입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>Verifies the digital signature of the specified data.</source>
          <target state="translated">지정된 데이터의 디지털 서명을 확인합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 유효한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source>This method generates a signature for the given data by hashing the input data using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property, and then signing the result.</source>
          <target state="translated">이 메서드는 지정된 된 데이터에 대 한 서명을 사용 하 여 입력된 데이터를 해시 하 여 생성 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> 속성을 결과 서명 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="signature" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>The data stream that was signed.</source>
          <target state="translated">서명된 데이터 스트림입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">확인할 서명입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>Verifies the digital signature of the specified data stream, reading to the end of the stream.</source>
          <target state="translated">스트림 끝까지 읽어들여 지정된 데이터 스트림의 디지털 서명을 확인합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 유효한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source>This method hashes the input data by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property before verification.</source>
          <target state="translated">이 메서드를 사용 하 여 입력된 데이터를 해시는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> 확인 하기 전에 속성입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="signature" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The data that was signed.</source>
          <target state="translated">서명된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The location in the data at which the signed data begins.</source>
          <target state="translated">데이터에서 서명된 데이터가 시작되는 위치입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The length of the data, in characters, following <bpt id="p1">&lt;c&gt;</bpt>offset<ept id="p1">&lt;/c&gt;</ept> that will be signed.</source>
          <target state="translated">서명할 <bpt id="p1">&lt;c&gt;</bpt>오프셋<ept id="p1">&lt;/c&gt;</ept>부터 문자열의 길이(문자 단위)입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>The signature to be verified.</source>
          <target state="translated">확인할 서명입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>Verifies a signature for the specified length of data, beginning at the specified offset.</source>
          <target state="translated">지정된 오프셋에서 시작하여 지정된 길이의 데이터에 대한 서명을 확인합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 유효한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>This method hashes the input data by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> property before verification.</source>
          <target state="translated">이 메서드를 사용 하 여 입력된 데이터를 해시는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDsaCng.HashAlgorithm%2A&gt;</ph> 확인 하기 전에 속성입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less then zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the length of the byte array passed in the <ph id="ph3">&lt;paramref name="data" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="data" /&gt;</ph> 매개 변수에 전달된 바이트 배열의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="signature" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>The hash value of the data to be verified.</source>
          <target state="translated">확인할 데이터의 해시 값입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>The digital signature of the data to be verified against the hash value.</source>
          <target state="translated">서명 해시 값에 대해 확인할 데이터의 디지털 서명입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source>Verifies the specified digital signature against a specified hash value.</source>
          <target state="translated">지정된 해시 값에 대해 지정된 디지털 서명을 확인합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 유효한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> or <ph id="ph2">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hash" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="signature" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>