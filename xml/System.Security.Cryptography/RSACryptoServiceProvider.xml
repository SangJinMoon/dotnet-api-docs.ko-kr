<Type Name="RSACryptoServiceProvider" FullName="System.Security.Cryptography.RSACryptoServiceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ccb76df4d3c28ab63e3dc922f970a4bb75145cf" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37630982" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RSACryptoServiceProvider : System.Security.Cryptography.RSA, System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RSACryptoServiceProvider extends System.Security.Cryptography.RSA implements class System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RSACryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RSACryptoServiceProvider&#xA;Inherits RSA&#xA;Implements ICspAsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class RSACryptoServiceProvider sealed : System::Security::Cryptography::RSA, System::Security::Cryptography::ICspAsymmetricAlgorithm" />
  <TypeSignature Language="F#" Value="type RSACryptoServiceProvider = class&#xA;    inherit RSA&#xA;    interface ICspAsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RSA</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICspAsymmetricAlgorithm</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="47f47-101">Performs asymmetric encryption and decryption using the implementation of the <see cref="T:System.Security.Cryptography.RSA" /> algorithm provided by the cryptographic service provider (CSP).</span>
      <span class="sxs-lookup">
        <span data-stu-id="47f47-101">Performs asymmetric encryption and decryption using the implementation of the <see cref="T:System.Security.Cryptography.RSA" /> algorithm provided by the cryptographic service provider (CSP).</span>
      </span>
      <span data-ttu-id="47f47-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47f47-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-103">이 기본 구현의 <xref:System.Security.Cryptography.RSA>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-103">This is the default implementation of <xref:System.Security.Cryptography.RSA>.</span></span>  
  
 <span data-ttu-id="47f47-104"><xref:System.Security.Cryptography.RSACryptoServiceProvider> 는 Microsoft Enhanced Cryptographic Provider 설치 되어 있는 경우 8 비트씩 증가 16384 비트 384에서 키 크기를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-104">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</span></span>  <span data-ttu-id="47f47-105">Microsoft Base Cryptographic Provider 설치 되어 있는 경우 8 비트씩 증가 512 비트 384에서 키 크기를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-105">It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</span></span>  
  
 <span data-ttu-id="47f47-106">유효한 키 크기는 사용 되는 암호화 서비스 공급자 (CSP)에 종속 된 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="47f47-106">Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> instance.</span></span> <span data-ttu-id="47f47-107">Windows Csp 사용 키 이전 Windows 버전에 대 한 384를 16384 비트 크기 [!INCLUDE[win81](~/includes/win81-md.md)], 및 크기에 대 한 512를 16384 비트 키 [!INCLUDE[win81](~/includes/win81-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-107">Windows CSPs enable keys sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/includes/win81-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/includes/win81-md.md)].</span></span> <span data-ttu-id="47f47-108">자세한 내용은 [CryptGenKey](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx) Windows 설명서에는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-108">For more information, see [CryptGenKey](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx) function in the Windows documentation.</span></span>  
  
## <a name="interoperation-with-the-microsoft-cryptographic-api-capi"></a><span data-ttu-id="47f47-109">Microsoft 암호화 API (CAPI)와 상호 운용</span><span class="sxs-lookup"><span data-stu-id="47f47-109">Interoperation with the Microsoft Cryptographic API (CAPI)</span></span>  
 <span data-ttu-id="47f47-110">관리 되지 않는 CAPI에 RSA 구현과 달리는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 클래스 후 암호화 및 암호 해독 하기 전에 암호화 된 바이트 배열의 순서를 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-110">Unlike the RSA implementation in unmanaged CAPI, the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class reverses the order of an encrypted array of bytes after encryption and before decryption.</span></span>  <span data-ttu-id="47f47-111">기본적으로 데이터를 통해 암호화 합니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider> capi 클래스를 해독할 수 없습니다 `CryptDecrypt` 함수와 capi 암호화 된 데이터 `CryptEncrypt` 여 메서드를 해독할 수 없습니다는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-111">By default, data encrypted by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class cannot be decrypted by the CAPI `CryptDecrypt` function and data encrypted by the CAPI `CryptEncrypt` method cannot be decrypted by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class.</span></span>  
  
 <span data-ttu-id="47f47-112">Api 간에 상호 운용 하는 경우 역방향 순서에 대 한 보상 하지 않는 경우는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> throw 클래스는 <xref:System.Security.Cryptography.CryptographicException>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-112">If you do not compensate for the reverse ordering when interoperating between APIs, the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class throws a <xref:System.Security.Cryptography.CryptographicException>.</span></span>  
  
 <span data-ttu-id="47f47-113">CAPI를 사용 하 여 상호 운용, 암호화 된 데이터를 다른 API와 상호 작용 하기 전에 암호화 된 바이트의 순서를 수동으로 반대로 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-113">To interoperate with CAPI, you must manually reverse the order of encrypted bytes before the encrypted data interoperates with another API.</span></span>  <span data-ttu-id="47f47-114">호출 하 여 관리 되는 바이트 배열의 순서를 반대로 쉽게 할는 <xref:System.Array.Reverse%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-114">You can easily reverse the order of a managed byte array by calling the <xref:System.Array.Reverse%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-115">다음 코드 예제에서는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 바이트 배열에 문자열을 암호화 하 고 다음 문자열로 다시 바이트를 해독 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-115">The following code example uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/VB/sample.vb#1)]  
  
 <span data-ttu-id="47f47-116">다음 코드 예제를 사용 하 여 만든 키 정보를 내보내는 합니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 에 <xref:System.Security.Cryptography.RSAParameters> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-116">The following code example exports the key information created using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> into an <xref:System.Security.Cryptography.RSAParameters> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47f47-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class using the default key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class using the default key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-119">기본 키가 없으면 새 키 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-119">If no default key is found, a new key is created.</span></span>  
  
 <span data-ttu-id="47f47-120">이 생성자는 <xref:System.Security.Cryptography.KeyNumber.Exchange> 키 쌍 세션 암호화에 적합 한 키를 안전 하 게 저장 하 고 다른 사용자와 교환할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-120">This constructor creates an <xref:System.Security.Cryptography.KeyNumber.Exchange> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="47f47-121">생성 된 키를 사용 하 여 생성 한 키에 해당 합니다 `AT_KEYEXCHANGE` 에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-121">The generated key corresponds to a key generated using the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-122">다음 코드 예제에서는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 바이트 배열에 문자열을 암호화 하 고 다음 문자열로 다시 바이트를 해독 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-122">The following code example uses the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class to encrypt a string into an array of bytes and then decrypt the bytes back into a string.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-123">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-123">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (int dwKeySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(int dwKeySize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.RSACryptoServiceProvider : int -&gt; System.Security.Cryptography.RSACryptoServiceProvider" Usage="new System.Security.Cryptography.RSACryptoServiceProvider dwKeySize" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">
          <span data-ttu-id="47f47-124">The size of the key to use in bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-124">The size of the key to use in bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with the specified key size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with the specified key size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-126">기본 키가 없으면 새 키 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-126">If no default key is found, a new key is created.</span></span>  
  
 <span data-ttu-id="47f47-127">이 생성자는 <xref:System.Security.Cryptography.KeyNumber.Exchange> 키 쌍 세션 암호화에 적합 한 키를 안전 하 게 저장 하 고 다른 사용자와 교환할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-127">This constructor creates an <xref:System.Security.Cryptography.KeyNumber.Exchange> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="47f47-128">생성 된 키를 사용 하 여 생성 한 키에 해당 합니다 `AT_KEYEXCHANGE` 에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-128">The generated key corresponds to a key generated using the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-129">다음 코드 예제는 <xref:System.Security.Cryptography.RSACryptoServiceProvider>새 키를 생성, 키 컨테이너에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-129">The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-int32-2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-130">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-130">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.RSACryptoServiceProvider : System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.RSACryptoServiceProvider" Usage="new System.Security.Cryptography.RSACryptoServiceProvider parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="47f47-131">The parameters to be passed to the cryptographic service provider (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-131">The parameters to be passed to the cryptographic service provider (CSP).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with the specified parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with the specified parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-133">이 생성자를 만들거나 사용 하 여 지정 된 키 컨테이너를 다시 사용 합니다 <xref:System.Security.Cryptography.CspParameters.KeyContainerName> 필드는 `parameters` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-133">This constructor creates or reuses a key container specified using the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field of the `parameters` parameter.</span></span>  
  
 <span data-ttu-id="47f47-134">기본적으로이 생성자는 만듭니다는 <xref:System.Security.Cryptography.KeyNumber.Exchange> 키 쌍 세션 암호화에 적합 한 키를 안전 하 게 저장 하 고 다른 사용자와 교환할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-134">By default, this constructor creates an <xref:System.Security.Cryptography.KeyNumber.Exchange> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="47f47-135">생성 된 키를 사용 하 여 생성 한 키에 해당 합니다 `AT_KEYEXCHANGE` 에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-135">The generated key corresponds to a key generated using the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="47f47-136">만들 수 있습니다를 <xref:System.Security.Cryptography.KeyNumber.Signature> 키 쌍을 설정 하 여 파일 또는 메시지 (디지털 서명된) 인증에 적합 합니다 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 필드를 `parameters` 매개 변수를는 <xref:System.Security.Cryptography.KeyNumber.Signature> 값.</span><span class="sxs-lookup"><span data-stu-id="47f47-136">You can create a <xref:System.Security.Cryptography.KeyNumber.Signature> key pair suitable for authenticating (digitally signed) messages or files by setting the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the `parameters` parameter to the <xref:System.Security.Cryptography.KeyNumber.Signature> value.</span></span> <span data-ttu-id="47f47-137">이 유형의 키에 해당 하는 `AT_SIGNATURE` CAPI에 사용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-137">This type of key corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="47f47-138">만드는 경우는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체를 <xref:System.Security.Cryptography.KeyNumber.Exchange> 값 지정을 만든 다음 다른 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체는 <xref:System.Security.Cryptography.KeyNumber.Signature> 값을 지정 하면 두 키 개체를 모두 동일한 키 컨테이너 이름을 지정 하는 경우 단일 컨테이너에 배치 됩니다 .</span><span class="sxs-lookup"><span data-stu-id="47f47-138">If you create an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object with the <xref:System.Security.Cryptography.KeyNumber.Exchange> value specified and then create another <xref:System.Security.Cryptography.RSACryptoServiceProvider> object with the <xref:System.Security.Cryptography.KeyNumber.Signature> value specified, both keys will be placed in a single container if both objects specify the same key container name.</span></span>  
  
 <span data-ttu-id="47f47-139">강력한 이름 서명을 사용 하 여 호환 되는 키를 만들려면 합니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 클래스를 만들어야 합니다를 <xref:System.Security.Cryptography.KeyNumber.Signature> 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-139">To create a key that is compatible with stong-name signing using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class, you must create a <xref:System.Security.Cryptography.KeyNumber.Signature> key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-140">다음 코드 예제는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체를 새 키를 생성 하 고 키 컨테이너에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-140">The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object, generates a new key, and stores it in a key container.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-csp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-csp/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-141">The CSP cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-141">The CSP cannot be acquired.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize, class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer, parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSACryptoServiceProvider(int dwKeySize, System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.RSACryptoServiceProvider : int * System.Security.Cryptography.CspParameters -&gt; System.Security.Cryptography.RSACryptoServiceProvider" Usage="new System.Security.Cryptography.RSACryptoServiceProvider (dwKeySize, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">
          <span data-ttu-id="47f47-142">The size of the key to use in bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-142">The size of the key to use in bits.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="47f47-143">The parameters to be passed to the cryptographic service provider (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-143">The parameters to be passed to the cryptographic service provider (CSP).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-144">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with the specified key size and parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-144">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> class with the specified key size and parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-145">이 생성자를 만들거나 사용 하 여 지정 된 키 컨테이너를 다시 사용 합니다 <xref:System.Security.Cryptography.CspParameters.KeyContainerName> 필드는 `parameters` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-145">This constructor creates or reuses a key container specified using the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field of the `parameters` parameter.</span></span>  
  
 <span data-ttu-id="47f47-146">기본적으로이 생성자는 만듭니다는 <xref:System.Security.Cryptography.KeyNumber.Exchange> 키 쌍 세션 암호화에 적합 한 키를 안전 하 게 저장 하 고 다른 사용자와 교환할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-146">By default, this constructor creates an <xref:System.Security.Cryptography.KeyNumber.Exchange> key pair suitable to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="47f47-147">생성 된 키를 사용 하 여 생성 한 키에 해당 합니다 `AT_KEYEXCHANGE` 에서 관리 되지 않는 Microsoft 암호화 API (CAPI)를 사용 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-147">The generated key corresponds to a key generated using the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="47f47-148">만들 수 있습니다를 <xref:System.Security.Cryptography.KeyNumber.Signature> 키 쌍을 설정 하 여 파일 또는 메시지 (디지털 서명된) 인증에 적합 합니다 <xref:System.Security.Cryptography.CspParameters.KeyNumber> 필드를 `parameters` 매개 변수를는 <xref:System.Security.Cryptography.KeyNumber.Signature> 값.</span><span class="sxs-lookup"><span data-stu-id="47f47-148">You can create a <xref:System.Security.Cryptography.KeyNumber.Signature> key pair suitable for authenticating (digitally signed) messages or files by setting the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the `parameters` parameter to the <xref:System.Security.Cryptography.KeyNumber.Signature> value.</span></span> <span data-ttu-id="47f47-149">이 유형의 키에 해당 하는 `AT_SIGNATURE` CAPI에 사용 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-149">This type of key corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="47f47-150">만드는 경우는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체를 <xref:System.Security.Cryptography.KeyNumber.Exchange> 값 지정을 만든 다음 다른 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체는 <xref:System.Security.Cryptography.KeyNumber.Signature> 값을 지정 하면 두 키 개체를 모두 동일한 키 컨테이너 이름을 지정 하는 경우 단일 컨테이너에 배치 됩니다 .</span><span class="sxs-lookup"><span data-stu-id="47f47-150">If you create an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object with the <xref:System.Security.Cryptography.KeyNumber.Exchange> value specified and then create another <xref:System.Security.Cryptography.RSACryptoServiceProvider> object with the <xref:System.Security.Cryptography.KeyNumber.Signature> value specified, both keys will be placed in a single container if both objects specify the same key container name.</span></span>  
  
 <span data-ttu-id="47f47-151">강력한 이름 서명을 사용 하 여 호환 되는 키를 만들려면 합니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 클래스를 만들어야 합니다를 <xref:System.Security.Cryptography.KeyNumber.Signature> 키 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-151">To create a key that is compatible with stong-name signing using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class, you must create a <xref:System.Security.Cryptography.KeyNumber.Signature> key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-152">다음 코드 예제는 <xref:System.Security.Cryptography.RSACryptoServiceProvider>새 키를 생성, 키 컨테이너에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-152">The following code example creates a <xref:System.Security.Cryptography.RSACryptoServiceProvider>, generates a new key, and stores it in a key container.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.ctor-int32-csp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.ctor-int32-csp/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-153">The CSP cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-153">The CSP cannot be acquired.</span>
          </span>
          <span data-ttu-id="47f47-154">-or-  The key cannot be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-154">-or-  The key cannot be created.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CspKeyContainerInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspKeyContainerInfo ^ CspKeyContainerInfo { System::Security::Cryptography::CspKeyContainerInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CspKeyContainerInfo : System.Security.Cryptography.CspKeyContainerInfo" Usage="System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspKeyContainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-155">Gets a <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-155">Gets a <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47f47-156">암호화 키 쌍에 대한 추가 정보를 설명하는 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-156">A <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-157">사용 된 <xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A> 암호화 키 쌍에 대 한 추가 정보를 검색할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-157">Use the <xref:System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo%2A> property to retrieve additional information about a cryptographic key pair.</span></span>  <span data-ttu-id="47f47-158">반환 된 <xref:System.Security.Cryptography.CspKeyContainerInfo> 키를 내보낼 수 있으며 키 컨테이너 이름, 공급자에 대 한 정보 및 기타 정보를 지정 하는지 여부를 설명 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-158">The returned <xref:System.Security.Cryptography.CspKeyContainerInfo> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</span></span>  
  
 <span data-ttu-id="47f47-159">임의 키가 생성 된 경우, 키 컨테이너 생성 되지 않습니다 키를 사용 하는 메서드를 호출할 때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-159">In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="47f47-160">일부 속성을 <xref:System.Security.Cryptography.CspKeyContainerInfo> 에서 반환 된 개체를 <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> 속성이 throw 됩니다는 <xref:System.Security.Cryptography.CryptographicException> 키 컨테이너를 만들지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="47f47-160">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> object returned by the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  <span data-ttu-id="47f47-161">키 컨테이너에 만들어졌는지 확인 하려면 메서드를 같은 호출 <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>등을 호출 하기 전에 <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-161">To make sure that a key container has been created, call a method such as <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A>, <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, and so on, before you call the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-162">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.CspKeyContainerInfo> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-162">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CspKeyContainerInfo> property.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Decrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-163">Decrypts data that was previously encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-163">Decrypts data that was previously encrypted.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] rgb, bool fOAEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] rgb, bool fOAEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (rgb As Byte(), fOAEP As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ rgb, bool fOAEP);" />
      <MemberSignature Language="F#" Value="override this.Decrypt : byte[] * bool -&gt; byte[]" Usage="rSACryptoServiceProvider.Decrypt (rgb, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="fOAEP" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="47f47-164">The data to be decrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-164">The data to be decrypted.</span>
          </span>
        </param>
        <param name="fOAEP">
          <span data-ttu-id="47f47-165">
            <see langword="true" /> to perform direct <see cref="T:System.Security.Cryptography.RSA" /> decryption using OAEP padding (only available on a computer running Microsoft Windows XP or later); otherwise, <see langword="false" /> to use PKCS#1 v1.5 padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-165">
              <see langword="true" /> to perform direct <see cref="T:System.Security.Cryptography.RSA" /> decryption using OAEP padding (only available on a computer running Microsoft Windows XP or later); otherwise, <see langword="false" /> to use PKCS#1 v1.5 padding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-166">Decrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-166">Decrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-167">The decrypted data, which is the original plain text before encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-167">The decrypted data, which is the original plain text before encryption.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-168">사용 하 여 <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A> 이 메서드를 사용 하 여 암호 해독에 대 한 데이터를 암호화 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-168">Use <xref:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt%2A> to encrypt data for decryption with this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-169">다음 코드 예제에서는 암호화 한 데이터를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-169">The following code example encrypts and decrypts data.</span></span>  
  
 <span data-ttu-id="47f47-170">이 예제에서는 <xref:System.Text.ASCIIEncoding> 클래스입니다; 그러나는 <xref:System.Text.UnicodeEncoding> 클래스는 큰 데이터 작업에 더 적합할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-170">This example uses the <xref:System.Text.ASCIIEncoding> class; however, the <xref:System.Text.UnicodeEncoding> class may be preferable in large data operations.</span></span> <span data-ttu-id="47f47-171">암호화 된 값으로 저장할 수는 `nvarchar` Microsoft SQL Server 2005의 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-171">The encrypted value can be saved as an `nvarchar` data type in Microsoft SQL Server 2005.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.Decrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.Decrypt/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-172">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-172">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="47f47-173">-or-  The <paramref name="fOAEP" /> parameter is <see langword="true" /> and the length of the <paramref name="rgb" /> parameter is greater than <see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-173">-or-  The <paramref name="fOAEP" /> parameter is <see langword="true" /> and the length of the <paramref name="rgb" /> parameter is greater than <see cref="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />.</span>
          </span>
          <span data-ttu-id="47f47-174">-or-  The <paramref name="fOAEP" /> parameter is <see langword="true" /> and OAEP is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-174">-or-  The <paramref name="fOAEP" /> parameter is <see langword="true" /> and OAEP is not supported.</span>
          </span>
          <span data-ttu-id="47f47-175">-or-  The key does not match the encrypted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-175">-or-  The key does not match the encrypted data.</span>
          </span>
          <span data-ttu-id="47f47-176">However, the exception wording may not be accurate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-176">However, the exception wording may not be accurate.</span>
          </span>
          <span data-ttu-id="47f47-177">For example, it may say <c>Not enough storage is available to process this command</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-177">For example, it may say <c>Not enough storage is available to process this command</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-178">
            <paramref name="rgb" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-178">
              <paramref name="rgb" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="47f47-179">해독할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-179">for permission to decrypt.</span>
          </span>
          <span data-ttu-id="47f47-180">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-180">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="47f47-181">연결 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-181">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Decrypt(unsigned int8[] data, class System.Security.Cryptography.RSAEncryptionPadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Decrypt (data As Byte(), padding As RSAEncryptionPadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::RSAEncryptionPadding ^ padding);" />
      <MemberSignature Language="F#" Value="override this.Decrypt : byte[] * System.Security.Cryptography.RSAEncryptionPadding -&gt; byte[]" Usage="rSACryptoServiceProvider.Decrypt (data, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="47f47-182">The data to decrypt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-182">The data to decrypt.</span>
          </span>
        </param>
        <param name="padding">
          <span data-ttu-id="47f47-183">The padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-183">The padding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-184">Decrypts data that was previously encrypted with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm by using the specified padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-184">Decrypts data that was previously encrypted with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm by using the specified padding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-185">The decrypted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-185">The decrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-186">`padding` 여야 <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> 또는 <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-186">`padding` must be either <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> or <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-187">
            <paramref name="data" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-187">
              <paramref name="data" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="47f47-188">-or-  <paramref name="padding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-188">-or-  <paramref name="padding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-189">The padding mode is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-189">The padding mode is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptValue">
      <MemberSignature Language="C#" Value="public override byte[] DecryptValue (byte[] rgb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] DecryptValue(unsigned int8[] rgb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecryptValue (rgb As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ DecryptValue(cli::array &lt;System::Byte&gt; ^ rgb);" />
      <MemberSignature Language="F#" Value="override this.DecryptValue : byte[] -&gt; byte[]" Usage="rSACryptoServiceProvider.DecryptValue rgb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="47f47-190">The data to be decrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-190">The data to be decrypted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-191">This method is not supported in the current version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-191">This method is not supported in the current version.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-192">The decrypted data, which is the original plain text before encryption.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-192">The decrypted data, which is the original plain text before encryption.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47f47-193">This method is not supported in the current version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-193">This method is not supported in the current version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="rSACryptoServiceProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-194">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-194">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] rgb, bool fOAEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] rgb, bool fOAEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (rgb As Byte(), fOAEP As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ rgb, bool fOAEP);" />
      <MemberSignature Language="F#" Value="override this.Encrypt : byte[] * bool -&gt; byte[]" Usage="rSACryptoServiceProvider.Encrypt (rgb, fOAEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="fOAEP" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="47f47-195">The data to be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-195">The data to be encrypted.</span>
          </span>
        </param>
        <param name="fOAEP">
          <span data-ttu-id="47f47-196">
            <see langword="true" /> to perform direct <see cref="T:System.Security.Cryptography.RSA" /> encryption using OAEP padding (only available on a computer running Windows XP or later); otherwise, <see langword="false" /> to use PKCS#1 v1.5 padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-196">
              <see langword="true" /> to perform direct <see cref="T:System.Security.Cryptography.RSA" /> encryption using OAEP padding (only available on a computer running Windows XP or later); otherwise, <see langword="false" /> to use PKCS#1 v1.5 padding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-197">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-197">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-198">The encrypted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-198">The encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-199">다음 표에서 설명의 최대 길이 다른 버전의 Microsoft Windows에서 지원 되는 안쪽 여백을 `rgb` 다른 운영 체제 및 안쪽 여백 결합 하 여 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-199">The following table describes the padding supported by different versions of Microsoft Windows and the maximum length of `rgb` allowed by the different combinations of operating systems and padding.</span></span>  
  
|<span data-ttu-id="47f47-200">안쪽 여백</span><span class="sxs-lookup"><span data-stu-id="47f47-200">Padding</span></span>|<span data-ttu-id="47f47-201">지원 되는 운영 체제</span><span class="sxs-lookup"><span data-stu-id="47f47-201">Operating System Supported</span></span>|<span data-ttu-id="47f47-202">Rgb 매개 변수의 최대 길이</span><span class="sxs-lookup"><span data-stu-id="47f47-202">Maximum Length of rgb Parameter</span></span>|  
|-------------|--------------------------------|-------------------------------------|  
|<span data-ttu-id="47f47-203">OAEP 안쪽 여백 (PKCS #1 v2)</span><span class="sxs-lookup"><span data-stu-id="47f47-203">OAEP padding (PKCS#1 v2)</span></span>|<span data-ttu-id="47f47-204">Windows XP 이상.</span><span class="sxs-lookup"><span data-stu-id="47f47-204">Windows XP or later.</span></span>|<span data-ttu-id="47f47-205">모듈러스 크기-2-2 \* hLen, 여기서 hLen는 해시의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-205">Modulus size -2 -2\*hLen, where hLen is the size of the hash.</span></span>|  
|<span data-ttu-id="47f47-206">암호화를 직접 (PKCS #1 v1.5)</span><span class="sxs-lookup"><span data-stu-id="47f47-206">Direct Encryption (PKCS#1 v1.5)</span></span>|<span data-ttu-id="47f47-207">Microsoft Windows 2000 high encryption 팩이 설치 된 이상.</span><span class="sxs-lookup"><span data-stu-id="47f47-207">Microsoft Windows 2000 or later with the high encryption pack installed.</span></span>|<span data-ttu-id="47f47-208">모듈러스 크기-11입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-208">Modulus size - 11.</span></span> <span data-ttu-id="47f47-209">(11 바이트에 패딩 가능한 최소값입니다.)</span><span class="sxs-lookup"><span data-stu-id="47f47-209">(11 bytes is the minimum padding possible.)</span></span>|  
|<span data-ttu-id="47f47-210">직접 지원 되지 않습니다 하는 암호화 및 OAEP 안쪽 여백</span><span class="sxs-lookup"><span data-stu-id="47f47-210">Direct Encryption and OAEP padding not supported</span></span>|<span data-ttu-id="47f47-211">Microsoft Windows 98, Windows Millennium Edition 또는 Windows 2000 또는 그 이상 없이 높은 수준의 암호화 팩을 설치 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-211">Microsoft Windows 98, Windows Millennium Edition, or Windows 2000 or later without the high encryption pack installed.</span></span>|<span data-ttu-id="47f47-212">대칭 키에 대 한 허용 되는 최대 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-212">The maximum size allowed for a symmetric key.</span></span>|  
  
 <span data-ttu-id="47f47-213">사용 하 여 <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A> 이 메서드의 결과 해독할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-213">Use <xref:System.Security.Cryptography.RSACryptoServiceProvider.Decrypt%2A> to decrypt the results of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-214">다음 코드 예제에서는 초기화를 <xref:System.Security.Cryptography.RSACryptoServiceProvider> (다른 파티에서 보낸) 공개 키의 값으로 개체를 생성 하는 세션 키를 사용 하 여는 <xref:System.Security.Cryptography.RijndaelManaged> 알고리즘을 사용 하 여 세션 키를 암호화 한 다음는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체.</span><span class="sxs-lookup"><span data-stu-id="47f47-214">The following code example initializes an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object to the value of a public key (sent by another party), generates a session key using the <xref:System.Security.Cryptography.RijndaelManaged> algorithm, and then encrypts the session key using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  <span data-ttu-id="47f47-215">이 체계를 사용 하 여 세션 키를 개인 RSA 키의 소유자에 게 다시 보낼 수 있습니다 및 두 당사자 세션 키를 사용 하 여 암호화 된 데이터를 교환할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-215">Using this scheme, the session key could be sent back to the owner of the private RSA key and the two parties could use the session key to exchange encrypted data.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.Encrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.Encrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-216">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-216">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="47f47-217">-or-  The length of the <paramref name="rgb" /> parameter is greater than the maximum allowed length.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-217">-or-  The length of the <paramref name="rgb" /> parameter is greater than the maximum allowed length.</span>
          </span>
          <span data-ttu-id="47f47-218">-or-  The <paramref name="fOAEP" /> parameter is <see langword="true" /> and OAEP padding is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-218">-or-  The <paramref name="fOAEP" /> parameter is <see langword="true" /> and OAEP padding is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-219">
            <paramref name="rgb" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-219">
              <paramref name="rgb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Encrypt(unsigned int8[] data, class System.Security.Cryptography.RSAEncryptionPadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Encrypt (data As Byte(), padding As RSAEncryptionPadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ data, System::Security::Cryptography::RSAEncryptionPadding ^ padding);" />
      <MemberSignature Language="F#" Value="override this.Encrypt : byte[] * System.Security.Cryptography.RSAEncryptionPadding -&gt; byte[]" Usage="rSACryptoServiceProvider.Encrypt (data, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="47f47-220">The data to encrypt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-220">The data to encrypt.</span>
          </span>
        </param>
        <param name="padding">
          <span data-ttu-id="47f47-221">The padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-221">The padding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-222">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm using the specified padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-222">Encrypts data with the <see cref="T:System.Security.Cryptography.RSA" /> algorithm using the specified padding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-223">The encrypted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-223">The encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-224">`padding` 여야 <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> 또는 <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-224">`padding` must be either <xref:System.Security.Cryptography.RSAEncryptionPadding.Pkcs1%2A?displayProperty=nameWithType> or <xref:System.Security.Cryptography.RSAEncryptionPadding.OaepSHA1%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-225">
            <paramref name="data" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-225">
              <paramref name="data" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="47f47-226">-or-  <paramref name="padding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-226">-or-  <paramref name="padding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-227">The padding mode is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-227">The padding mode is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptValue">
      <MemberSignature Language="C#" Value="public override byte[] EncryptValue (byte[] rgb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] EncryptValue(unsigned int8[] rgb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EncryptValue (rgb As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ EncryptValue(cli::array &lt;System::Byte&gt; ^ rgb);" />
      <MemberSignature Language="F#" Value="override this.EncryptValue : byte[] -&gt; byte[]" Usage="rSACryptoServiceProvider.EncryptValue rgb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="47f47-228">The data to be encrypted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-228">The data to be encrypted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-229">This method is not supported in the current version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-229">This method is not supported in the current version.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-230">The encrypted data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-230">The encrypted data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47f47-231">This method is not supported in the current version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-231">This method is not supported in the current version.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExportCspBlob">
      <MemberSignature Language="C#" Value="public byte[] ExportCspBlob (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportCspBlob(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportCspBlob (includePrivateParameters As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportCspBlob(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="abstract member ExportCspBlob : bool -&gt; byte[]&#xA;override this.ExportCspBlob : bool -&gt; byte[]" Usage="rSACryptoServiceProvider.ExportCspBlob includePrivateParameters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="47f47-232">
            <see langword="true" /> to include the private key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-232">
              <see langword="true" /> to include the private key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-233">Exports a blob containing the key information associated with an <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-233">Exports a blob containing the key information associated with an <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-234">A byte array containing the key information associated with an <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-234">A byte array containing the key information associated with an <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-235"><xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A> 메서드가 사용 하 여 관리 되지 않는 Microsoft 암호화 API (CAPI) 호환 되는 키 정보를 포함 하는 blob를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-235">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob%2A> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="47f47-236">개인 키를 내보낼 때 키 컨테이너에 액세스할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-236">for permission to access a key container when exporting a private key.</span>
          </span>
          <span data-ttu-id="47f47-237">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-237">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="47f47-238">연결 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-238">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.RSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As RSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::RSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="override this.ExportParameters : bool -&gt; System.Security.Cryptography.RSAParameters" Usage="rSACryptoServiceProvider.ExportParameters includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="47f47-239">
            <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-239">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-240">Exports the <see cref="T:System.Security.Cryptography.RSAParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-240">Exports the <see cref="T:System.Security.Cryptography.RSAParameters" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-241">The parameters for <see cref="T:System.Security.Cryptography.RSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-241">The parameters for <see cref="T:System.Security.Cryptography.RSA" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47f47-242">다음 코드 예제를 사용 하 여 만든 키 정보를 내보내는 합니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 에 <xref:System.Security.Cryptography.RSAParameters> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-242">The following code example exports the key information created using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> into an <xref:System.Security.Cryptography.RSAParameters> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ExportParameters/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-243">The key cannot be exported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-243">The key cannot be exported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="47f47-244">키를 내보낼 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-244">for permission to export a key.</span>
          </span>
          <span data-ttu-id="47f47-245">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-245">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="47f47-246">연결 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-246">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~RSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!RSACryptoServiceProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="rSACryptoServiceProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : System.IO.Stream * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="rSACryptoServiceProvider.HashData (data, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="override this.HashData : byte[] * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; byte[]" Usage="rSACryptoServiceProvider.HashData (data, offset, count, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCspBlob">
      <MemberSignature Language="C#" Value="public void ImportCspBlob (byte[] keyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportCspBlob(unsigned int8[] keyBlob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportCspBlob (keyBlob As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportCspBlob(cli::array &lt;System::Byte&gt; ^ keyBlob);" />
      <MemberSignature Language="F#" Value="abstract member ImportCspBlob : byte[] -&gt; unit&#xA;override this.ImportCspBlob : byte[] -&gt; unit" Usage="rSACryptoServiceProvider.ImportCspBlob keyBlob" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBlob">
          <span data-ttu-id="47f47-247">A byte array that represents an RSA key blob.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-247">A byte array that represents an RSA key blob.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-248">Imports a blob that represents RSA key information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-248">Imports a blob that represents RSA key information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-249">합니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A> 의 주요 데이터를 초기화 하는 메서드는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 사용 하 여 관리 되지 않는 Microsoft 암호화 API (CAPI) 호환 되는 blob을 사용 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-249">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob%2A> method initializes the key data of an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="47f47-250">키를 가져올 때 키 컨테이너에 액세스할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-250">for permission to access a key container when importing a key.</span>
          </span>
          <span data-ttu-id="47f47-251">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-251">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="47f47-252">연결 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-252">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.RSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As RSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::RSAParameters parameters);" />
      <MemberSignature Language="F#" Value="override this.ImportParameters : System.Security.Cryptography.RSAParameters -&gt; unit" Usage="rSACryptoServiceProvider.ImportParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.RSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="47f47-253">The parameters for <see cref="T:System.Security.Cryptography.RSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-253">The parameters for <see cref="T:System.Security.Cryptography.RSA" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-254">Imports the specified <see cref="T:System.Security.Cryptography.RSAParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-254">Imports the specified <see cref="T:System.Security.Cryptography.RSAParameters" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="47f47-255">다음 코드 예제에서 만든 키 정보를 가져옵니다는 <xref:System.Security.Cryptography.RSAParameters> 개체는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-255">The following code example imports key information created from an <xref:System.Security.Cryptography.RSAParameters> object into an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/CPP/sample.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/CS/sample.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSACryptoServiceProvider.ImportParameters/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-256">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-256">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="47f47-257">-or-  The <paramref name="parameters" /> parameter has missing fields.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-257">-or-  The <paramref name="parameters" /> parameter has missing fields.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="47f47-258">키를 가져올 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-258">for permission to import a key.</span>
          </span>
          <span data-ttu-id="47f47-259">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-259">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="47f47-260">연결 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-260">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : string" Usage="System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-261">Gets the name of the key exchange algorithm available with this implementation of <see cref="T:System.Security.Cryptography.RSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-261">Gets the name of the key exchange algorithm available with this implementation of <see cref="T:System.Security.Cryptography.RSA" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47f47-262">않으면 키 교환 알고리즘의 이름 그렇지 않으면 <see langword="null" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-262">The name of the key exchange algorithm if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-263">이 속성은 형식, 알고리즘의 이름을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-263">This property indicates the name of the algorithm, not of the type.</span></span> <span data-ttu-id="47f47-264">예를 들어, RSA-PKCS1-KeyEx 키 교환 알고리즘 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-264">For example, RSA-PKCS1-KeyEx is a key exchange algorithm name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int" Usage="System.Security.Cryptography.RSACryptoServiceProvider.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-265">Gets the size of the current key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-265">Gets the size of the current key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47f47-266">키의 크기(비트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-266">The size of the key in bits.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-267"><xref:System.Security.Cryptography.RSACryptoServiceProvider> 는 Microsoft Enhanced Cryptographic Provider 설치 되어 있는 경우 8 비트씩 증가 16384 비트 384에서 키 크기를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-267">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> supports key sizes from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</span></span>  <span data-ttu-id="47f47-268">Microsoft Base Cryptographic Provider 설치 되어 있는 경우 8 비트씩 증가 512 비트 384에서 키 크기를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-268">It supports key sizes from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</span></span>  
  
 <span data-ttu-id="47f47-269">유효한 키 크기는 사용 되는 암호화 서비스 공급자 (CSP)에 종속 된 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="47f47-269">Valid key sizes are dependent on the cryptographic service provider (CSP) that is used by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> instance.</span></span> <span data-ttu-id="47f47-270">이전 Windows 버전에 대 한 384를 16384 비트 Windows Csp 사용 키 크기 [!INCLUDE[win81](~/includes/win81-md.md)], 및 크기에 대 한 512를 16384 비트 키 [!INCLUDE[win81](~/includes/win81-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-270">Windows CSPs enable key sizes of 384 to 16384 bits for Windows versions prior to [!INCLUDE[win81](~/includes/win81-md.md)], and key sizes of 512 to 16384 bits for [!INCLUDE[win81](~/includes/win81-md.md)].</span></span> <span data-ttu-id="47f47-271">자세한 내용은 [CryptGenKey](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx) Windows 설명서에는 함수입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-271">For more information, see [CryptGenKey](http://msdn.microsoft.com/library/aa379941\(v=vs.85\).aspx) function in the Windows documentation.</span></span>  
  
 <span data-ttu-id="47f47-272">합니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 클래스를 사용 하 여 키 크기를 변경할 수를 허용 하지 않습니다는 <xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-272">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class does not allow you to change key sizes using the <xref:System.Security.Cryptography.RSACryptoServiceProvider.KeySize%2A> property.</span></span>  <span data-ttu-id="47f47-273">이 속성에 기록 된 모든 값 오류 없이 속성을 업데이트 하지 못합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-273">Any value written to this property will fail to update the property without error.</span></span>  <span data-ttu-id="47f47-274">키 크기를 변경 하려면 생성자 오버 로드 중 하나를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-274">To change the key size, use one of the constructor overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.RSACryptoServiceProvider.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistKeyInCsp">
      <MemberSignature Language="C#" Value="public bool PersistKeyInCsp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistKeyInCsp" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistKeyInCsp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistKeyInCsp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistKeyInCsp : bool with get, set" Usage="System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-275">Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-275">Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47f47-276">CSP에 키가 유지되어야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-276">
              <see langword="true" /> if the key should be persisted in the CSP; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-277">키 컨테이너에 키를 유지 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-277">Use this property to persist a key in a key container.</span></span>  
  
 <span data-ttu-id="47f47-278"><xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> 속성으로 자동 설정 됩니다 `true` 의 키 컨테이너 이름을 지정 하는 경우를 <xref:System.Security.Cryptography.CspParameters.KeyContainerName> 필드를 <xref:System.Security.Cryptography.CspParameters> 개체를 초기화 하는 데 사용을 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 를사용하여생성자중하나를호출하여개체`parameters`매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-278">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> property is automatically set to `true` when you specify a key container name in the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field of a <xref:System.Security.Cryptography.CspParameters> object and use it to initialize an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object by calling one of the constructors with a `parameters` parameter.</span></span>  
  
 <span data-ttu-id="47f47-279"><xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> 속성에 영향을 주지 않습니다 경우는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체를 만든를 `null` 키 컨테이너 이름을 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-279">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp%2A> property has no effect if the <xref:System.Security.Cryptography.RSACryptoServiceProvider> object is created with a `null` key container name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-280">다음 코드 예제는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체를 만들고 키 컨테이너에 키입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-280">The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and persists the key to a key container.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.PersistKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.PersistKey/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="47f47-281">필요한 키를 삭제할 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-281">for permission to delete a key.</span>
          </span>
          <span data-ttu-id="47f47-282">연관 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /> -또는-키를 만들 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-282">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" />  -or-  for permission to create a key.</span>
          </span>
          <span data-ttu-id="47f47-283">연결 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-283">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PublicOnly">
      <MemberSignature Language="C#" Value="public bool PublicOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PublicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PublicOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicOnly : bool" Usage="System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-284">Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object contains only a public key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-284">Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object contains only a public key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47f47-285">
            <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 개체에 공용 키만 들어 있으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-285">
              <see langword="true" /> if the <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> object contains only a public key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-286"><xref:System.Security.Cryptography.RSACryptoServiceProvider> 클래스 모두 공용 또는 공개 키만을 사용 하 여 하거나 초기화 및 개인 키를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-286">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class can be initialized either with a public key only or with both a public and private key.</span></span>  <span data-ttu-id="47f47-287">사용 된 <xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A> 속성을 현재 인스턴스에 공개 키만 또는 공용 및 개인 키를 모두 포함 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-287">Use the <xref:System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly%2A> property to determine whether the current instance contains only a public key or both a public and private key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-288">Gets the name of the signature algorithm available with this implementation of <see cref="T:System.Security.Cryptography.RSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-288">Gets the name of the signature algorithm available with this implementation of <see cref="T:System.Security.Cryptography.RSA" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47f47-289">서명 알고리즘의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-289">The name of the signature algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-290">이 속성은 알고리즘 URI를 나타내기 위해 XML 디지털 서명 클래스에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-290">This property is used in XML digital signature classes to indicate the algorithm URI.</span></span> <span data-ttu-id="47f47-291">이 구현에서이 속성은 항상 반환 http://www.w3.org/2000/09/xmldsig#rsa-sha1합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-291">In this implementation, this property always returns http://www.w3.org/2000/09/xmldsig#rsa-sha1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-292">Computes the hash value of the specified data and signs it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-292">Computes the hash value of the specified data and signs it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ halg);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (buffer, halg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47f47-293">The input data for which to compute the hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-293">The input data for which to compute the hash.</span>
          </span>
        </param>
        <param name="halg">
          <span data-ttu-id="47f47-294">The hash algorithm to use to create the hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-294">The hash algorithm to use to create the hash value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-295">Computes the hash value of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-295">Computes the hash value of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-296">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-296">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-297">이 메서드를 사용 하 여 확인 된 디지털 서명을 만들고를 <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-297">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="47f47-298">합니다 `halg` 매개 변수를 수락할 수는 <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, 또는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-298">The `halg` parameter can accept a <xref:System.String>, a <xref:System.Security.Cryptography.HashAlgorithm>, or a <xref:System.Type>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-299">다음 코드 예제에서는 서명 하 고 데이터를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-299">The following code example signs and verifies data.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.SignData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-300">The <paramref name="halg" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-300">The <paramref name="halg" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47f47-301">The <paramref name="halg" /> parameter is not a valid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-301">The <paramref name="halg" /> parameter is not a valid type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream inputStream, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream inputStream, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (inputStream As Stream, halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ inputStream, System::Object ^ halg);" />
      <MemberSignature Language="F#" Value="override this.SignData : System.IO.Stream * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (inputStream, halg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="inputStream">
          <span data-ttu-id="47f47-302">The input data for which to compute the hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-302">The input data for which to compute the hash.</span>
          </span>
        </param>
        <param name="halg">
          <span data-ttu-id="47f47-303">The hash algorithm to use to create the hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-303">The hash algorithm to use to create the hash value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-304">Computes the hash value of the specified input stream using the specified hash algorithm, and signs the resulting hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-304">Computes the hash value of the specified input stream using the specified hash algorithm, and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-305">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-305">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-306">합니다 `halg` 매개 변수를 수락할 수는 <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, 또는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-306">The `halg` parameter can accept a <xref:System.String>, a <xref:System.Security.Cryptography.HashAlgorithm>, or a <xref:System.Type>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-307">다음 코드 예제에서는 서명 하 고 데이터를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-307">The following code example signs and verifies data.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.SignData3#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData3#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData3/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-308">The <paramref name="halg" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-308">The <paramref name="halg" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47f47-309">The <paramref name="halg" /> parameter is not a valid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-309">The <paramref name="halg" /> parameter is not a valid type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, int offset, int count, object halg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, int32 offset, int32 count, object halg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), offset As Integer, count As Integer, halg As Object) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Object ^ halg);" />
      <MemberSignature Language="F#" Value="override this.SignData : byte[] * int * int * obj -&gt; byte[]" Usage="rSACryptoServiceProvider.SignData (buffer, offset, count, halg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="halg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47f47-310">The input data for which to compute the hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-310">The input data for which to compute the hash.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="47f47-311">The offset into the array from which to begin using data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-311">The offset into the array from which to begin using data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="47f47-312">The number of bytes in the array to use as data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-312">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <param name="halg">
          <span data-ttu-id="47f47-313">The hash algorithm to use to create the hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-313">The hash algorithm to use to create the hash value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-314">Computes the hash value of a subset of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-314">Computes the hash value of a subset of the specified byte array using the specified hash algorithm, and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-315">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-315">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-316">이 메서드를 사용 하 여 확인 된 디지털 서명을 만들고를 <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-316">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="47f47-317">합니다 `halg` 매개 변수를 수락할 수는 <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, 또는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-317">The `halg` parameter can accept a <xref:System.String>, a <xref:System.Security.Cryptography.HashAlgorithm>, or a <xref:System.Type>.</span></span> <span data-ttu-id="47f47-318">문자열 값 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-318">The string value can be one of the following:</span></span>  
  
-   <span data-ttu-id="47f47-319">개체 식별자 (OID)의 이름을 해시 알고리즘을 사용 하 여, 이름 이거나 암호화 구성 파일 또는 Crypto API OID 테이블의 하나에 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-319">The object identifier (OID) friendly name of the hash algorithm to use, either a name registered in the crypto config file or one in the Crypto API OID table.</span></span>  
  
-   <span data-ttu-id="47f47-320">OID 값입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-320">The OID value.</span></span> <span data-ttu-id="47f47-321">OID는 Crypto API에서 인식 하나 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-321">The OID must be one recognized by the Crypto API.</span></span>  
  
 <span data-ttu-id="47f47-322">예를 들어 SignData (새 바이트 [5], "1.3.14.3.2.26") 또는 (새 바이트 [5], "sha1") SignData SignData (새 바이트 [5], "SHA1")를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-322">For example, you could use SignData(new byte[5], "1.3.14.3.2.26") or SignData(new byte[5], "sha1"), or SignData(new byte[5], "SHA1").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-323">다음 코드 예제에서는 서명 하 고 데이터를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-323">The following code example signs and verifies data.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.SignData1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.RSACSP.SignData1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/CS/example.cs#1)]
 [!code-vb[Cryptography.RSACSP.SignData1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.SignData1/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-324">The <paramref name="halg" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-324">The <paramref name="halg" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47f47-325">The <paramref name="halg" /> parameter is not a valid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-325">The <paramref name="halg" /> parameter is not a valid type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-326">Computes the signature for the specified hash value by encrypting it with the private key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-326">Computes the signature for the specified hash value by encrypting it with the private key.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public byte[] SignHash (byte[] rgbHash, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignHash(unsigned int8[] rgbHash, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignHash (rgbHash As Byte(), str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] * string -&gt; byte[]" Usage="rSACryptoServiceProvider.SignHash (rgbHash, str)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="47f47-327">The hash value of the data to be signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-327">The hash value of the data to be signed.</span>
          </span>
        </param>
        <param name="str">
          <span data-ttu-id="47f47-328">The hash algorithm identifier (OID) used to create the hash value of the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-328">The hash algorithm identifier (OID) used to create the hash value of the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-329">Computes the signature for the specified hash value by encrypting it with the private key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-329">Computes the signature for the specified hash value by encrypting it with the private key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-330">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-330">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified hash value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-331">이 메서드를 사용 하 여 확인 된 디지털 서명을 만들고를 <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-331">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> method.</span></span>  
  
 <span data-ttu-id="47f47-332">잘못 된 해시 알고리즘은 <xref:System.Security.Cryptography.SHA1> 고 <xref:System.Security.Cryptography.MD5>입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-332">The valid hash algorithms are <xref:System.Security.Cryptography.SHA1> and <xref:System.Security.Cryptography.MD5>.</span></span> <span data-ttu-id="47f47-333">알고리즘 식별자를 사용 하 여 해시 이름에서 파생 될 수는 <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-333">The algorithm identifier can be derived from the hash name by using the <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-334">다음 코드 예제에서는 일부 데이터를 암호화 하 고, 암호화 된 데이터의 해시를 만듭니다, 디지털 서명 사용 하 여 해시에 서명 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-334">The following code example encrypts some data, creates a hash of the encrypted data, and then signs hash with a digital signature.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-335">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-335">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-336">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-336">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="47f47-337">-or-  There is no private key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-337">-or-  There is no private key.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="47f47-338">키를 사용 하는 파일에 서명할 수 있는 권한입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-338">for permission to sign a file using the key.</span>
          </span>
          <span data-ttu-id="47f47-339">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-339">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="47f47-340">연결 된 열거형: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-340">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] SignHash(unsigned int8[] hash, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.RSASignaturePadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SignHash (hash As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ hash, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, System::Security::Cryptography::RSASignaturePadding ^ padding);" />
      <MemberSignature Language="F#" Value="override this.SignHash : byte[] * System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.RSASignaturePadding -&gt; byte[]" Usage="rSACryptoServiceProvider.SignHash (hash, hashAlgorithm, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
      </Parameters>
      <Docs>
        <param name="hash">
          <span data-ttu-id="47f47-341">The hash value of the data to be signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-341">The hash value of the data to be signed.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="47f47-342">The hash algorithm name used to create the hash value of the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-342">The hash algorithm name used to create the hash value of the data.</span>
          </span>
        </param>
        <param name="padding">
          <span data-ttu-id="47f47-343">The padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-343">The padding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-344">Computes the signature for the specified hash value by encrypting it with the private key using the specified padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-344">Computes the signature for the specified hash value by encrypting it with the private key using the specified padding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-345">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-345">The <see cref="T:System.Security.Cryptography.RSA" /> signature for the specified hash value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47f47-346">
            <paramref name="hashAlgorithm" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-346">
              <paramref name="hashAlgorithm" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-347">
            <paramref name="hash" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-347">
              <paramref name="hash" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="47f47-348">-or-  <paramref name="padding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-348">-or-  <paramref name="padding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-349">
            <paramref name="padding" /> does not equal <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-349">
              <paramref name="padding" /> does not equal <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UseMachineKeyStore">
      <MemberSignature Language="C#" Value="public static bool UseMachineKeyStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseMachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseMachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseMachineKeyStore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMachineKeyStore : bool with get, set" Usage="System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-350">Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-350">Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47f47-351">키를 컴퓨터 키 저장소에 유지해야 하면 <see langword="true" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-351">
              <see langword="true" /> if the key should be persisted in the computer key store; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-352">이 속성을 설정 `true` 에 전달 하는 것과 같습니다 합니다 <xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore> 플래그를 <xref:System.Security.Cryptography.CspParameters> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-352">Setting this property to `true` is equivalent to passing the <xref:System.Security.Cryptography.CspProviderFlags.UseMachineKeyStore> flag to a <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="47f47-353"><xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> 반면 현재 응용 프로그램 도메인의 모든 코드에 적용 되는 속성을 <xref:System.Security.Cryptography.CspParameters> 개체가 명시적으로 참조 하는 클래스에만 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-353">The <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> property applies to all code in the current application domain, whereas the <xref:System.Security.Cryptography.CspParameters> object applies only to classes that explicitly reference it.</span></span> <span data-ttu-id="47f47-354">이러한 설정은 가장 하거나 사용자 프로필이 로드 되지 않습니다 계정으로 실행 하는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-354">These settings are useful when impersonating or running under an account whose user profile is not loaded.</span></span> <span data-ttu-id="47f47-355">설정 <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> 경우에만 키 저장소 위치에 영향을 줍니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 매개 변수를 사용 하 여 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-355">Setting <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> affects the key store location only if <xref:System.Security.Cryptography.RSACryptoServiceProvider> is initialized with no parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-356">다음 코드 예제는 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 개체를 설정 하는 정적 <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> 사용자 프로필 키 저장소 대신 컴퓨터 키 저장소를 사용 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-356">The following code example creates an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object and sets the static <xref:System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore%2A> property to use the machine key store instead of the user profile key store.</span></span>  
  
 [!code-cpp[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/CPP/example2.cpp#2)]
 [!code-csharp[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/CS/example2.cs#2)]
 [!code-vb[Cryptography.RSACSP.UseMachineKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RSACSP.UseMachineKey/VB/example2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-357">Verifies that a digital signature is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-357">Verifies that a digital signature is valid.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] buffer, object halg, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] buffer, object halg, unsigned int8[] signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (buffer As Byte(), halg As Object, signature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ buffer, System::Object ^ halg, cli::array &lt;System::Byte&gt; ^ signature);" />
      <MemberSignature Language="F#" Value="override this.VerifyData : byte[] * obj * byte[] -&gt; bool" Usage="rSACryptoServiceProvider.VerifyData (buffer, halg, signature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="halg" Type="System.Object" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="47f47-358">The data that was signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-358">The data that was signed.</span>
          </span>
        </param>
        <param name="halg">
          <span data-ttu-id="47f47-359">The name of the hash algorithm used to create the hash value of the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-359">The name of the hash algorithm used to create the hash value of the data.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="47f47-360">The signature data to be verified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-360">The signature data to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-361">Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-361">Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the hash value of the provided data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-362">
            <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-362">
              <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-363">이 메서드를 확인 합니다 <xref:System.Security.Cryptography.RSA> 디지털 서명을 생성 하 여는 <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-363">This method verifies the <xref:System.Security.Cryptography.RSA> digital signature produced by the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignData%2A> method.</span></span> <span data-ttu-id="47f47-364">서명 된 공개 키를 사용 하 여 서명에서 해시 값을 확보 하 여 서명을 확인 하 고 제공된 된 데이터의 해시 값을 해당 값을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-364">The signature is verified by obtaining the hash value from the signature using the public key it was signed with, and comparing that value to the hash value of the provided data.</span></span>  
  
 <span data-ttu-id="47f47-365">합니다 `halg` 매개 변수를 수락할 수는 <xref:System.String>, <xref:System.Security.Cryptography.HashAlgorithm>, 또는 <xref:System.Type>합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-365">The `halg` parameter can accept a <xref:System.String>, a <xref:System.Security.Cryptography.HashAlgorithm>, or a <xref:System.Type>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-366">다음 예제에서는 사용 하는 방법의 <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> 서명을 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-366">The following example shows how to use the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyData%2A> method to verify a signature.</span></span> <span data-ttu-id="47f47-367">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-367">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#2)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#2)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-368">The <paramref name="halg" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-368">The <paramref name="halg" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47f47-369">The <paramref name="halg" /> parameter is not a valid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-369">The <paramref name="halg" /> parameter is not a valid type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyHash">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47f47-370">Verifies that a digital signature is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-370">Verifies that a digital signature is valid.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyHash(unsigned int8[] rgbHash, string str, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyHash (rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * string * byte[] -&gt; bool" Usage="rSACryptoServiceProvider.VerifyHash (rgbHash, str, rgbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="47f47-371">The hash value of the signed data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-371">The hash value of the signed data.</span>
          </span>
        </param>
        <param name="str">
          <span data-ttu-id="47f47-372">The hash algorithm identifier (OID) used to create the hash value of the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-372">The hash algorithm identifier (OID) used to create the hash value of the data.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="47f47-373">The signature data to be verified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-373">The signature data to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-374">Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the provided hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-374">Verifies that a digital signature is valid by determining the hash value in the signature using the provided public key and comparing it to the provided hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-375">
            <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-375">
              <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47f47-376">이 메서드를 확인 합니다 <xref:System.Security.Cryptography.RSA> 디지털 서명을 생성 하 여는 <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-376">This method verifies the <xref:System.Security.Cryptography.RSA> digital signature produced by the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.</span></span> <span data-ttu-id="47f47-377">서명 된 공개 키를 사용 하 여 서명에서 해시 값을 확보 하 여 서명을 확인 하 고 제공된 된 데이터의 해시 값을 해당 값을 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-377">The signature is verified by obtaining the hash value from the signature using the public key it was signed with, and comparing that value to the hash value of the provided data.</span></span>  
  
 <span data-ttu-id="47f47-378">잘못 된 해시 알고리즘은 <xref:System.Security.Cryptography.SHA1> 고 <xref:System.Security.Cryptography.MD5>입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-378">The valid hash algorithms are <xref:System.Security.Cryptography.SHA1> and <xref:System.Security.Cryptography.MD5>.</span></span> <span data-ttu-id="47f47-379">알고리즘 식별자를 사용 하 여 해시 이름에서 파생 될 수는 <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-379">The algorithm identifier can be derived from the hash name by using the <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47f47-380">다음 예제에서는 사용 하는 방법의 <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> 서명을 확인 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="47f47-380">The following example shows how to use the <xref:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash%2A> method to verify a signature.</span></span> <span data-ttu-id="47f47-381">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47f47-381">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSACryptoServiceProvider.SignHash%2A> method.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CPP/class1.cpp#2)]
 [!code-csharp[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/CS/class1.cs#2)]
 [!code-vb[System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Security.Cryptography.RSACryptoServiceProvider ManualHash Example/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-382">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-382">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="47f47-383">-or-  The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-383">-or-  The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-384">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-384">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="47f47-385">-or-  The signature cannot be verified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-385">-or-  The signature cannot be verified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifyHash(unsigned int8[] hash, unsigned int8[] signature, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, class System.Security.Cryptography.RSASignaturePadding padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifyHash (hash As Byte(), signature As Byte(), hashAlgorithm As HashAlgorithmName, padding As RSASignaturePadding) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifyHash(cli::array &lt;System::Byte&gt; ^ hash, cli::array &lt;System::Byte&gt; ^ signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, System::Security::Cryptography::RSASignaturePadding ^ padding);" />
      <MemberSignature Language="F#" Value="override this.VerifyHash : byte[] * byte[] * System.Security.Cryptography.HashAlgorithmName * System.Security.Cryptography.RSASignaturePadding -&gt; bool" Usage="rSACryptoServiceProvider.VerifyHash (hash, signature, hashAlgorithm, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
      </Parameters>
      <Docs>
        <param name="hash">
          <span data-ttu-id="47f47-386">The hash value of the signed data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-386">The hash value of the signed data.</span>
          </span>
        </param>
        <param name="signature">
          <span data-ttu-id="47f47-387">The signature data to be verified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-387">The signature data to be verified.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="47f47-388">The hash algorithm name used to create the hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-388">The hash algorithm name used to create the hash value.</span>
          </span>
        </param>
        <param name="padding">
          <span data-ttu-id="47f47-389">The padding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-389">The padding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47f47-390">Verifies that a digital signature is valid by determining the hash value in the signature using the specified hashing algorithm and padding, and comparing it to the provided hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-390">Verifies that a digital signature is valid by determining the hash value in the signature using the specified hashing algorithm and padding, and comparing it to the provided hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47f47-391">
            <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-391">
              <see langword="true" /> if the signature is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47f47-392">
            <paramref name="hashAlgorithm" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-392">
              <paramref name="hashAlgorithm" /> is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47f47-393">
            <paramref name="hash" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-393">
              <paramref name="hash" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="47f47-394">-or-  <paramref name="padding" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-394">-or-  <paramref name="padding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="47f47-395">
            <paramref name="padding" /> does not equal <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47f47-395">
              <paramref name="padding" /> does not equal <see cref="P:System.Security.Cryptography.RSASignaturePadding.Pkcs1" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>