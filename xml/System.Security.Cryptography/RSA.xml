<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RSA.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5723c6a77846e505fc9bd8a8d7ba35739604b2fd1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">723c6a77846e505fc9bd8a8d7ba35739604b2fd1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSA">
          <source>Represents the base class from which all implementations of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm inherit.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 알고리즘의 모든 구현이 상속될 기본 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSA">
          <source>Extending this class proves that you are implementing an <ph id="ph1">`RSA`</ph> key.</source>
          <target state="translated">구현 하는 증명이 클래스를 확장 한 <ph id="ph1">`RSA`</ph> 키입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSA">
          <source>This is required for any developer providing a new <ph id="ph1">`RSA`</ph> key implementation.</source>
          <target state="translated">이 새를 제공 하는 개발자에 게 필요 <ph id="ph1">`RSA`</ph> 중요 한 구현 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSA">
          <source>The only purpose of this class is as a hierarchy member for identification of the <ph id="ph1">`RSA`</ph> algorithm.</source>
          <target state="translated">id에 대 한 계층 멤버는이 클래스의 전용 모드는 <ph id="ph1">`RSA`</ph> 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSA">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph> supports key lengths from 384 bits to 16384 bits in increments of 8 bits if you have the Microsoft Enhanced Cryptographic Provider installed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider&gt;</ph>에서는 Microsoft Enhanced Cryptographic Provider가 설치되어 있는 경우 길이가 384 - 16384비트(8비트 단위로 증가)인 키를 지원하고,</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RSA">
          <source>It supports key lengths from 384 bits to 512 bits in increments of 8 bits if you have the Microsoft Base Cryptographic Provider installed.</source>
          <target state="translated">Microsoft Base Cryptographic Provider가 설치되어 있는 경우에는 길이가 384 - 512비트(8비트 단위로 증가)인 키를 지원합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.#ctor">
          <source>This is a protected method that can only be called from a class derived from <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>.</source>
          <target state="translated">파생 된 클래스에서 호출 될 수 있는 보호 된 메서드를 이것이 <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.#ctor">
          <source>You cannot create an instance of an abstract class.</source>
          <target state="translated">추상 클래스의 인스턴스를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSA">
          <source>Allows specific implementations of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> to be instantiated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>의 특정 구현이 인스턴스화되는 것을 허용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Create">
          <source>Creates an instance of the default implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 알고리즘의 기본 구현 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Create">
          <source>A new instance of the default implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 기본 구현의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Create(System.String)">
          <source>The name of the implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> to use.</source>
          <target state="translated">사용할 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>의 구현 이름입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Create(System.String)">
          <source>Creates an instance of the specified implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>의 지정된 구현 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Create(System.String)">
          <source>A new instance of the specified implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>의 지정된 구현의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The data to decrypt.</source>
          <target state="translated">해독할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>When overridden in a derived class, decrypts the input data using the specified padding mode.</source>
          <target state="translated">파생 클래스에서 재정의하는 경우 지정된 패딩 모드를 사용하여 입력 데이터를 해독합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The decrypted data.</source>
          <target state="translated">암호 해독된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>A derived class must override this method.</source>
          <target state="translated">파생 클래스가 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])">
          <source>The cipher text to be decrypted.</source>
          <target state="translated">암호 해독할 암호화 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])">
          <source>When overridden in a derived class, decrypts the input data using the private key.</source>
          <target state="translated">파생 클래스에서 재정의하는 경우 개인 키를 사용하여 입력 데이터를 해독합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])">
          <source>The resulting decryption of the <ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> parameter in plain text.</source>
          <target state="translated">일반 텍스트로 된 <ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> 매개 변수의 해독 결과입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])">
          <source>In the <ph id="ph1">[!INCLUDE[net_v452](~/includes/net-v452-md.md)]</ph> and earlier versions of the .NET Framework, this method was <ph id="ph2">`abstract`</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v452](~/includes/net-v452-md.md)]</ph> 되었으며.NET Framework의 이전 버전에서는이 메서드가 <ph id="ph2">`abstract`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])">
          <source>However, the only implementation by a derived class, <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=nameWithType&gt;</ph>, also threw a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception.</source>
          <target state="translated">그러나 파생된 클래스에서 유일한 구현 <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=nameWithType&gt;</ph>, 또한 했습니다는 <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> 예외 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])">
          <source>This method call is not supported.</source>
          <target state="translated">이 메서드 호출은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.DecryptValue(System.Byte[])">
          <source>This exception is thrown starting with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>부터 이 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The data to encrypt.</source>
          <target state="translated">암호화할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>When overridden in a derived class, encrypts the input data using the specified padding mode.</source>
          <target state="translated">파생 클래스에서 재정의하는 경우 지정된 패딩 모드를 사용하여 입력 데이터를 암호화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>The encrypted data.</source>
          <target state="translated">암호화된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)">
          <source>A derived class must override this method.</source>
          <target state="translated">파생 클래스가 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])">
          <source>The plain text to be encrypted.</source>
          <target state="translated">암호화할 일반 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])">
          <source>When overridden in a derived class, encrypts the input data using the public key.</source>
          <target state="translated">파생 클래스에서 재정의하는 경우 공개 키를 사용하여 입력 데이터를 암호화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])">
          <source>The resulting encryption of the <ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> parameter as cipher text.</source>
          <target state="translated">암호화 텍스트로 된 <ph id="ph1">&lt;paramref name="rgb" /&gt;</ph> 매개 변수의 암호화 결과입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])">
          <source>In the <ph id="ph1">[!INCLUDE[net_v452](~/includes/net-v452-md.md)]</ph> and earlier versions of the .NET Framework, this method was <ph id="ph2">`abstract`</ph>.</source>
          <target state="translated">에 <ph id="ph1">[!INCLUDE[net_v452](~/includes/net-v452-md.md)]</ph> 되었으며.NET Framework의 이전 버전에서는이 메서드가 <ph id="ph2">`abstract`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])">
          <source>However, the only implementation by a derived class, <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=nameWithType&gt;</ph>, also threw a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> exception.</source>
          <target state="translated">그러나 파생된 클래스에서 유일한 구현 <ph id="ph1">&lt;xref:System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue%2A?displayProperty=nameWithType&gt;</ph>, 또한 했습니다는 <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> 예외 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])">
          <source>This method call is not supported.</source>
          <target state="translated">이 메서드 호출은 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.EncryptValue(System.Byte[])">
          <source>This exception is thrown starting with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>부터 이 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">private 매개 변수를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.ExportParameters(System.Boolean)">
          <source>When overridden in a derived class, exports the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의하는 경우 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.ExportParameters(System.Boolean)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>에 대한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>The XML string containing <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> key information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 키 정보가 들어 있는 XML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>Initializes an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> object from the key information from an XML string.</source>
          <target state="translated">XML 문자열의 키 정보를 사용하여 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 개체를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> initializes an RSA object using key information in an XML string that was generated using the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> RSA를 사용 하 여 생성 된 XML 문자열에 중요 한 정보를 사용 하 여 개체를 초기화는 <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> method accepts either an XML string containing a public key or an XML string containing a public and private key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> 메서드는 공개 키를 포함 하는 XML 문자열 또는 공용 및 개인 키를 포함 하는 XML 문자열을 수락 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> method to conveniently initialize <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> key information.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> 메서드를 편리 하 게 초기화 <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> 키 정보가 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>Persisting an XML string containing a private key to an insecure location is a security threat.</source>
          <target state="translated">보안 위협이 안전 하지 않은 위치에 개인 키가 포함 된 XML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>The security of your application can be compromised if a malicious third party can access your private key.</source>
          <target state="translated">악의적인 제 3 자가 사용자의 개인 키에 액세스할 수 있는 경우 응용 프로그램의 보안을 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>To safely persist a private key, use a secure key container.</source>
          <target state="translated">개인 키를 안전 하 게 유지 하기 위해 보안 키 컨테이너를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>For more information about persisting private keys in a key container, see <bpt id="p1">[</bpt>How to: Store Asymmetric Keys in a Key Container<ept id="p1">](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)</ept>.</source>
          <target state="translated">키 컨테이너에 개인 키를 저장 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 키 컨테이너에 비대칭 키 저장소<ept id="p1">](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="xmlString" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlString" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.FromXmlString(System.String)">
          <source>The format of the <ph id="ph1">&lt;paramref name="xmlString" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlString" /&gt;</ph> 매개 변수의 형식이 유효하지 않은 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSA">
          <source>Computes the hash value of binary data.</source>
          <target state="translated">이진 데이터의 해시 값을 계산합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The binary stream to hash.</source>
          <target state="translated">해시할 이진 스트림입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm.</source>
          <target state="translated">해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.</source>
          <target state="translated">파생 클래스에서 재정의할 때 지정된 해싱 알고리즘을 사용하여 지정된 이진 스트림의 해시 값을 계산합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hashed data.</source>
          <target state="translated">해시된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>A derived class must override this method.</source>
          <target state="translated">파생 클래스가 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The data to be hashed.</source>
          <target state="translated">해시할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The index of the first byte in <bpt id="p1">&lt;c&gt;</bpt>data<ept id="p1">&lt;/c&gt;</ept> that is to be hashed.</source>
          <target state="translated">해시할 <bpt id="p1">&lt;c&gt;</bpt>데이터<ept id="p1">&lt;/c&gt;</ept>에 있는 첫 번째 바이트의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The number of bytes to hash.</source>
          <target state="translated">해시할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The algorithm to use in hash the data.</source>
          <target state="translated">데이터를 해시하는 데 사용하는 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</source>
          <target state="translated">파생 클래스에서 재정의할 때 지정된 해싱 알고리즘을 사용하여 지정된 바이트 배열 부분의 해시 값을 계산합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hashed data.</source>
          <target state="translated">해시된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>A derived class must override this method.</source>
          <target state="translated">파생 클래스가 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>에 대한 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.ImportParameters(System.Security.Cryptography.RSAParameters)">
          <source>When overridden in a derived class, imports the specified <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의하는 경우 지정된 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSAParameters" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSA.KeyExchangeAlgorithm">
          <source>Gets the name of the key exchange algorithm available with this implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>의 해당 구현에 사용할 수 있는 키 교환 알고리즘의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSA.KeyExchangeAlgorithm">
          <source>Returns "RSA".</source>
          <target state="translated">"RSA"를 반환합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RSA.SignatureAlgorithm">
          <source>Gets the name of the signature algorithm available with this implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>의 해당 구현에 사용할 수 있는 서명 알고리즘의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RSA.SignatureAlgorithm">
          <source>Returns "RSA".</source>
          <target state="translated">"RSA"를 반환합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSA">
          <source>Computes the hash value of the specified data and signs it.</source>
          <target state="translated">지정된 데이터의 해시 값을 계산하고 서명합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">해시를 계산하기 위한 입력 데이터입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Computes the hash value of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.</source>
          <target state="translated">지정된 해시 알고리즘 및 패딩 모드를 사용하여 지정된 바이트 배열의 해시 값을 계산하고 결과 해시 값을 서명합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The RSA signature for the specified data.</source>
          <target state="translated">지정된 데이터의 RSA 서명입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The input stream for which to compute the hash.</source>
          <target state="translated">해시를 계산할 입력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Computes the hash value of the specified stream using the specified hash algorithm and padding mode, and signs the resulting hash value.</source>
          <target state="translated">지정된 해시 알고리즘 및 패딩 모드를 사용하여 지정된 스트림의 해시 값을 계산하고 결과 해시 값을 서명합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The RSA signature for the specified data.</source>
          <target state="translated">지정된 데이터의 RSA 서명입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">해시를 계산하기 위한 입력 데이터입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The offset into the array at which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">데이터로 사용할 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">해시 값을 만드는 데 사용할 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Computes the hash value of a portion of the specified byte array using the specified hash algorithm and padding mode, and signs the resulting hash value.</source>
          <target state="translated">지정된 해시 알고리즘 및 패딩 모드를 사용하여 지정된 바이트 배열 일부의 해시 값을 계산하고 결과 해시 값을 서명합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The RSA signature for the specified data.</source>
          <target state="translated">지정된 데이터의 RSA 서명입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> – 1 results in an index that is beyond the upper bound of <ph id="ph4">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> – 1의 결과는 <ph id="ph4">&lt;paramref name="data" /&gt;</ph>의 상한을 초과하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash value of the data to be signed.</source>
          <target state="translated">서명할 데이터의 해시 값입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding.</source>
          <target state="translated">패딩입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>When overridden in a derived class, computes the signature for the specified hash value by encrypting it with the private key using the specified padding.</source>
          <target state="translated">파생 클래스에서 재정의할 때 지정된 패딩을 사용해서 개인 키로 암호화하여 지정된 해시 값에 대한 서명을 계산합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The RSA signature for the specified hash value.</source>
          <target state="translated">지정된 해시 값의 RSA 서명입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>A derived class must override this method.</source>
          <target state="translated">파생 클래스가 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include a public and private RSA key; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to include only the public key.</source>
          <target state="translated">공개 및 개인 RSA 키를 포함하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 공개 키만 포함하는 경우는 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>Creates and returns an XML string containing the key of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 개체의 키가 들어 있는 XML 문자열을 만들고 반환합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>An XML string containing the key of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 개체의 키가 들어 있는 XML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method creates an XML string that contains either the public and private key of the current <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> object or contains only the public key of the current <ph id="ph3">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> 메서드 중 하나를 포함 하는 XML 문자열의 현재 공용 및 개인 키를 만듭니다 <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> 개체 또는 현재 공개 키만 들어 <ph id="ph3">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method whenever you need to conveniently persist RSA key information.</source>
          <target state="translated">사용 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> 메서드 RSA 키 정보를 편리 하 게 유지 해야 할 경우.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>To initialize an <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> object with the key in an XML string, use the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> method.</source>
          <target state="translated">초기화 하는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> XML 문자열을 사용 하 여 키를 갖는 개체는 <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA.FromXmlString%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>Persisting an XML string containing a private key to an insecure location is a security threat.</source>
          <target state="translated">보안 위협이 안전 하지 않은 위치에 개인 키가 포함 된 XML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>The security of your application can be compromised if a malicious third party can access your private key.</source>
          <target state="translated">악의적인 제 3 자가 사용자의 개인 키에 액세스할 수 있는 경우 응용 프로그램의 보안을 손상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>To safely persist a private key, use a secure key container.</source>
          <target state="translated">개인 키를 안전 하 게 유지 하기 위해 보안 키 컨테이너를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>For more information about persisting private keys in a key container, see <bpt id="p1">[</bpt>How to: Store Asymmetric Keys in a Key Container<ept id="p1">](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)</ept>.</source>
          <target state="translated">키 컨테이너에 개인 키를 저장 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 키 컨테이너에 비대칭 키 저장소<ept id="p1">](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>When you pass <ph id="ph1">`true`</ph> to the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method, the resulting XML string takes the following form:</source>
          <target state="translated">전달 하는 경우 <ph id="ph1">`true`</ph> 에 <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> 메서드를 결과 XML 문자열은 다음 형식:</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RSA.ToXmlString(System.Boolean)">
          <source>When you pass <ph id="ph1">`false`</ph> to the <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> method, the resulting XML string takes the following form:</source>
          <target state="translated">전달 하는 경우 <ph id="ph1">`false`</ph> 에 <ph id="ph2">&lt;xref:System.Security.Cryptography.RSA.ToXmlString%2A&gt;</ph> 메서드를 결과 XML 문자열은 다음 형식:</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RSA">
          <source>Verifies that a digital signature is valid.</source>
          <target state="translated">디지털 서명이 유효한지 확인합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signed data.</source>
          <target state="translated">서명된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and padding, and comparing it to the provided signature.</source>
          <target state="translated">지정된 해시 알고리즘 및 패딩을 사용하여 지정된 데이터의 해시 값을 계산한 다음 이 값을 제공된 서명과 비교하여 디지털 서명이 유효한지 확인합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 유효한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signature" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signed data.</source>
          <target state="translated">서명된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and padding, and comparing it to the provided signature.</source>
          <target state="translated">지정된 해시 알고리즘 및 패딩을 사용하여 지정된 스트림의 해시 값을 계산한 다음 이 값을 제공된 서명과 비교하여 디지털 서명이 유효한지 확인합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 유효한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signature" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signed data.</source>
          <target state="translated">서명된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The starting index at which to compute the hash.</source>
          <target state="translated">해시를 계산할 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The number of bytes to hash.</source>
          <target state="translated">해시할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">데이터의 해시 값을 만드는 데 사용하는 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and padding, and comparing it to the provided signature.</source>
          <target state="translated">지정된 해시 알고리즘과 패딩을 사용하여 바이트 배열 일부에 있는 데이터의 해시 값을 계산한 다음 이 값을 제공된 서명과 비교하여 디지털 서명이 유효한지 확인합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 유효한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signature" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="padding" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="padding" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> – 1 results in an index that is beyond the upper bound of <ph id="ph4">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> – 1의 결과는 <ph id="ph4">&lt;paramref name="data" /&gt;</ph>의 상한을 초과하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash value of the signed data.</source>
          <target state="translated">서명된 데이터의 해시 값입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The signature data to be verified.</source>
          <target state="translated">확인할 서명 데이터입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The hash algorithm used to create the hash value.</source>
          <target state="translated">해시 값을 만드는 데 사용한 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>The padding mode.</source>
          <target state="translated">패딩 모드입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>Verifies that a digital signature is valid by determining the hash value in the signature using the specified hash algorithm and padding, and comparing it to the provided hash value.</source>
          <target state="translated">지정된 해시 알고리즘 및 패딩을 사용하여 서명의 해시 값을 판별한 다음 제공된 해시 값과 비교하여 디지털 서명이 유효한지 확인합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서명이 유효한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RSA.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)">
          <source>A derived class must override this method.</source>
          <target state="translated">파생 클래스가 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>