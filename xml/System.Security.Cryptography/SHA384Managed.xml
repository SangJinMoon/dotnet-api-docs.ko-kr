<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SHA384Managed.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552c906354303f1323b7714847d6ee2ade095c00bee.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c906354303f1323b7714847d6ee2ade095c00bee</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.SHA384Managed">
          <source>Computes the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384" /&gt;</ph> hash for the input data using the managed library.</source>
          <target state="translated">관리 라이브러리를 사용하여 입력 데이터에 대한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384" /&gt;</ph> 해시를 계산합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA384Managed">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">해시는 많은 양의 데이터를 나타내는 고정 된 크기의 고유 값으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA384Managed">
          <source>Hashes of two sets of data should match if and only if the corresponding data also matches.</source>
          <target state="translated">해당 데이터도 일치 하는 경우에 두 데이터 집합의 해시 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA384Managed">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">약간 변경 된 데이터에 큰 예측할 수 없는 해시 변화 시킵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA384Managed">
          <source>The hash size for the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA384Managed&gt;</ph> algorithm is 384 bits.</source>
          <target state="translated">에 대 한 해시 크기는 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA384Managed&gt;</ph> 알고리즘 384 비트입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA384Managed">
          <source>The following example computes the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA384Managed&gt;</ph> hash for <ph id="ph2">`data`</ph> and stores it in <ph id="ph3">`result`</ph>.</source>
          <target state="translated">다음 예제에서는 계산 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA384Managed&gt;</ph> 의 해시를 <ph id="ph2">`data`</ph> 에 저장 하 고 <ph id="ph3">`result`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA384Managed">
          <source>This example assumes that there is a predefined constant <ph id="ph1">`DATA_SIZE`</ph>.</source>
          <target state="translated">이 예제에서는 미리 정의 된 상수 이라고 가정 <ph id="ph1">`DATA_SIZE`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">해시는 많은 양의 데이터를 나타내는 고정 된 크기의 고유 값으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source>Hashes of two sets of data should match if and only if the corresponding data also matches.</source>
          <target state="translated">해당 데이터도 일치 하는 경우에 두 데이터 집합의 해시 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">약간 변경 된 데이터에 큰 예측할 수 없는 해시 변화 시킵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source>The hash size for the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA384Managed&gt;</ph> algorithm is 384 bits.</source>
          <target state="translated">에 대 한 해시 크기는 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA384Managed&gt;</ph> 알고리즘 384 비트입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept> If you enable the following security setting either in the Local Security Policy or as part of Group Policy you will get an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> when you attempt to use this constructor:</source>
          <target state="translated"><bpt id="p1">**</bpt>중요 한<ept id="p1">**</ept> 로컬 보안 정책에서 하나를 설정 하는 다음과 같은 보안을 사용 하거나 그룹 정책의 일부로 받아볼 수는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 이 생성자를 사용 하려고 하면:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source><bpt id="p1">**</bpt>System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>시스템 암호화: 사용 하 여 FIPS 호환 암호화, 해시, 서명에 알고리즘<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source>The Federal Information Processing Standards (FIPS) security setting is enabled.</source>
          <target state="translated">FIPS(Federal Information Processing Standard) 보안 설정이 사용된 경우.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.#ctor">
          <source>This implementation is not part of the Windows Platform FIPS-validated cryptographic algorithms.</source>
          <target state="translated">이 구현은 Windows Platform FIPS 유효성 검사 암호화 알고리즘의 일부가 아닙니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The input data.</source>
          <target state="translated">입력 데이터입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">데이터로 사용할 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, routes data written to the object into the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph> hash algorithm for computing the hash.</source>
          <target state="translated">파생 클래스에 재정의된 경우 개체에 쓰여진 데이터의 경로를 해시를 계산할 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph> 해시 알고리즘에 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>This method is not called by application code.</source>
          <target state="translated">응용 프로그램 코드에서이 메서드는 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>This abstract method performs the hash computation.</source>
          <target state="translated">이 추상 메서드는 해시 계산을 수행합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>Every write to the cryptographic stream object passes the data through this method.</source>
          <target state="translated">암호화 스트림 개체를 쓸 때마다이 메서드를 통해 데이터를 전달합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</source>
          <target state="translated">데이터의 각 블록에 대 한 올바른 해시 값이 데이터 스트림의 끝에 반환 되므로이 메서드는 해시 개체의 상태를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.HashFinal">
          <source>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 암호화 스트림 개체에서 마지막 데이터를 처리한 후 해시 계산을 완료합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.HashFinal">
          <source>The computed hash code.</source>
          <target state="translated">계산된 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.HashFinal">
          <source>This method is not called by application code.</source>
          <target state="translated">응용 프로그램 코드에서이 메서드는 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.HashFinal">
          <source>This method finalizes any partial computation and returns the correct hash value of the data stream.</source>
          <target state="translated">이 메서드는 모든 부분 계산을 종결 하 고 데이터 스트림의 올바른 해시 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA384Managed.Initialize">
          <source>Initializes an instance of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384Managed" /&gt;</ph>의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.Initialize">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">해시는 많은 양의 데이터를 나타내는 고정 된 크기의 고유 값으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.Initialize">
          <source>Hashes of two sets of data should match if and only if the corresponding data also matches.</source>
          <target state="translated">해당 데이터도 일치 하는 경우에 두 데이터 집합의 해시 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.Initialize">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">약간 변경 된 데이터에 큰 예측할 수 없는 해시 변화 시킵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.SHA384Managed.Initialize">
          <source>The hash size for the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA384Managed&gt;</ph> algorithm is 384 bits.</source>
          <target state="translated">에 대 한 해시 크기는 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA384Managed&gt;</ph> 알고리즘 384 비트입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>