<Type Name="CryptoAPITransform" FullName="System.Security.Cryptography.CryptoAPITransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e60ff12f49757a05af66c83547059344283440e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39960982" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CryptoAPITransform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CryptoAPITransform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CryptoAPITransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CryptoAPITransform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoAPITransform sealed : System::Security::Cryptography::ICryptoTransform" />
  <TypeSignature Language="F#" Value="type CryptoAPITransform = class&#xA;    interface ICryptoTransform&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d8323-101">데이터의 암호화 변환을 수행합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8323-101">Performs a cryptographic transformation of data.</span>
      </span>
      <span data-ttu-id="d8323-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8323-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8323-103">다음 코드 예제에서는 멤버를 사용 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.CryptoAPITransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanReuseTransform { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReuseTransform : bool" Usage="System.Security.Cryptography.CryptoAPITransform.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8323-104">현재 변형을 다시 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-104">Gets a value indicating whether the current transform can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8323-105">항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-105">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8323-106">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A> 속성을 현재 변환을 다시 사용할 수 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-106">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="d8323-107">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.CryptoAPITransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-107">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTransformMultipleBlocks : bool" Usage="System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8323-108">여러 개의 블록을 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-108">Gets a value indicating whether multiple blocks can be transformed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8323-109">여러 개의 블록을 변환할 수 있으면 <see langword="true" />이고, 변환할 수 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-109">
              <see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8323-110">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A> 여러 블록을 변형할 수 하는 경우를 결정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-110">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A> property to determine if multiple blocks can be transformed.</span></span> <span data-ttu-id="d8323-111">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.CryptoAPITransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-111">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="cryptoAPITransform.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8323-112">
            <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> 메서드에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-112">Releases all resources used by the <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8323-113">이 메서드는 간단한 호출으로 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-113">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d8323-114">호출 `Dispose` 에서 사용 하는 리소스는 <xref:System.Security.Cryptography.CryptoAPITransform> 다른 용도로 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-114">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.CryptoAPITransform> to be reallocated for other purposes.</span></span> <span data-ttu-id="d8323-115">에 대 한 자세한 내용은 `Dispose`를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-115">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8323-116">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A> 현재 변환에서 사용 되는 리소스를 해제 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-116">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A> method to release the resources used by the current transform.</span></span> <span data-ttu-id="d8323-117">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.CryptoAPITransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-117">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoAPITransform.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8323-118">
            <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-118">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8323-119">`Dispose` 사용을 마치면 <xref:System.Security.Cryptography.CryptoAPITransform>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-119">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.CryptoAPITransform>.</span></span> <span data-ttu-id="d8323-120">`Dispose` 메서드를 사용하면 <xref:System.Security.Cryptography.CryptoAPITransform>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-120">The `Dispose` method leaves the <xref:System.Security.Cryptography.CryptoAPITransform> in an unusable state.</span></span> <span data-ttu-id="d8323-121">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Security.Cryptography.CryptoAPITransform> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Security.Cryptography.CryptoAPITransform> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-121">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.CryptoAPITransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.CryptoAPITransform> was occupying.</span></span>  
  
 <span data-ttu-id="d8323-122">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-122">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d8323-123">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Security.Cryptography.CryptoAPITransform>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="d8323-123">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.CryptoAPITransform>.</span></span> <span data-ttu-id="d8323-124">이렇게 하지 않으면 가비지 수집기가 <xref:System.Security.Cryptography.CryptoAPITransform> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-124">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CryptoAPITransform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoAPITransform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoAPITransform ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoAPITransform.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBlockSize : int" Usage="System.Security.Cryptography.CryptoAPITransform.InputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8323-125">입력 블록 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-125">Gets the input block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8323-126">입력 블록 크기(바이트 단위)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-126">The input block size in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8323-127">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A> 입력된 블록 크기를 검색 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-127">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A> property to retrieve the input block size.</span></span> <span data-ttu-id="d8323-128">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.CryptoAPITransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-128">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyHandle">
      <MemberSignature Language="C#" Value="public IntPtr KeyHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int KeyHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.KeyHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr KeyHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyHandle : nativeint" Usage="System.Security.Cryptography.CryptoAPITransform.KeyHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8323-129">키 핸들을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-129">Gets the key handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8323-130">키 핸들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-130">The key handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d8323-131">비관리 코드를 호출할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-131">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="d8323-132">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputBlockSize : int" Usage="System.Security.Cryptography.CryptoAPITransform.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8323-133">출력 블록 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-133">Gets the output block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8323-134">출력 블록 크기(바이트 단위)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-134">The output block size in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8323-135">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A> 출력 블록 크기를 검색 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-135">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A> property to retrieve the output block size.</span></span> <span data-ttu-id="d8323-136">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.CryptoAPITransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-136">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="cryptoAPITransform.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8323-137">다른 암호화 또는 해독 작업에 다시 사용할 수 있도록 <see cref="T:System.Security.Cryptography.CryptoAPITransform" />의 내부 상태를 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-137">Resets the internal state of <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> so that it can be used again to do a different encryption or decryption.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8323-138"><xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> TransformFinalBlock를 호출 하면 메서드가 자동으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-138">The <xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> method is called automatically when you call TransformFinalBlock.</span></span> <span data-ttu-id="d8323-139">`Reset` 예를 들어 입력된 데이터를 암호화 된 가비지 상태이 고 암호 해독할 수 없는 경우 메서드가 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-139">The `Reset` method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</span></span> <span data-ttu-id="d8323-140">이 경우 예외가 발생 하 고 `Reset` 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-140">In this case, an exception is thrown and `Reset` is not called.</span></span> <span data-ttu-id="d8323-141">직접 호출 하도록 선택할 수 있습니다는 `Reset` 여기서에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="d8323-141">You can choose to manually call the `Reset` method in this case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberSignature Language="F#" Value="abstract member TransformBlock : byte[] * int * int * byte[] * int -&gt; int&#xA;override this.TransformBlock : byte[] * int * int * byte[] * int -&gt; int" Usage="cryptoAPITransform.TransformBlock (inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="d8323-142">작업을 수행할 입력입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-142">The input on which to perform the operation on.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="d8323-143">데이터 사용을 시작할 입력 바이트 배열의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-143">The offset into the input byte array from which to begin using data from.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="d8323-144">데이터로 사용할 입력 바이트 배열의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-144">The number of bytes in the input byte array to use as data.</span>
          </span>
        </param>
        <param name="outputBuffer">
          <span data-ttu-id="d8323-145">데이터를 쓸 출력입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-145">The output to which to write the data to.</span>
          </span>
        </param>
        <param name="outputOffset">
          <span data-ttu-id="d8323-146">데이터 쓰기를 시작할 출력 바이트 배열의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-146">The offset into the output byte array from which to begin writing data from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8323-147">입력 바이트 배열의 지정된 영역에 대해 변환을 계산하여 결과 변환을 출력 바이트 배열의 지정된 영역에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-147">Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8323-148">쓰여진 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-148">The number of bytes written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8323-149">다음 코드 예제에는 호출 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A> 바이트에서 변환 하는 방법 `currentPosition` 에 `sourceBytes` 배열에 쓰는 `targetBytes` 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-149">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A> method to transform the bytes from `currentPosition` in the `sourceBytes` array, writing the bytes to the `targetBytes` array.</span></span> <span data-ttu-id="d8323-150">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.CryptoAPITransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-150">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8323-151">
            <paramref name="inputBuffer" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-151">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d8323-152">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-152">-or-</span>
          </span>
          <span data-ttu-id="d8323-153">
            <paramref name="outputBuffer" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-153">The <paramref name="outputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d8323-154">입력 버퍼의 길이가 입력 오프셋과 입력 카운트의 합보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-154">The length of the input buffer is less than the sum of the input offset and the input count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d8323-155">
            <paramref name="inputOffset" />가 범위에서 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-155">
              <paramref name="inputOffset" /> is out of range.</span>
          </span>
          <span data-ttu-id="d8323-156">이 매개 변수에는 0 또는 양의 정수가 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-156">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="F#" Value="abstract member TransformFinalBlock : byte[] * int * int -&gt; byte[]&#xA;override this.TransformFinalBlock : byte[] * int * int -&gt; byte[]" Usage="cryptoAPITransform.TransformFinalBlock (inputBuffer, inputOffset, inputCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="d8323-157">작업을 수행할 입력입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-157">The input on which to perform the operation on.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="d8323-158">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-158">The offset into the byte array from which to begin using data from.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="d8323-159">데이터로 사용할 바이트 배열의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-159">The number of bytes in the byte array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8323-160">지정된 바이트 배열의 지정된 영역에 대해 변환을 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-160">Computes the transformation for the specified region of the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8323-161">계산된 변환입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-161">The computed transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8323-162">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A> 바이트의 마지막 블록을 변환 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-162">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A> method to transform the final block of bytes.</span></span> <span data-ttu-id="d8323-163">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.CryptoAPITransform> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="d8323-163">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8323-164">
            <paramref name="inputBuffer" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-164">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d8323-165">
            <paramref name="inputOffset" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-165">The <paramref name="inputOffset" /> parameter is less than zero.</span>
          </span>
          <span data-ttu-id="d8323-166">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-166">-or-</span>
          </span>
          <span data-ttu-id="d8323-167">
            <paramref name="inputCount" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-167">The <paramref name="inputCount" /> parameter is less than zero.</span>
          </span>
          <span data-ttu-id="d8323-168">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-168">-or-</span>
          </span>
          <span data-ttu-id="d8323-169">입력 버퍼의 길이가 입력 오프셋과 입력 카운트의 합보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-169">The length of the input buffer is less than the sum of the input offset and the input count.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d8323-170">
            <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /> 패딩이 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-170">The <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /> padding is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d8323-171">
            <paramref name="inputOffset" /> 매개 변수가 범위에서 벗어난 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-171">The <paramref name="inputOffset" /> parameter is out of range.</span>
          </span>
          <span data-ttu-id="d8323-172">이 매개 변수에는 0 또는 양의 정수가 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8323-172">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>