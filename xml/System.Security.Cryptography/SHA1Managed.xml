<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SHA1Managed.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae058455241a4215a0f8bd26c9c3168d1a6e34abedf61c8ff.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41a4215a0f8bd26c9c3168d1a6e34abedf61c8ff</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.SHA1Managed">
          <source>Computes the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1" /&gt;</ph> hash for the input data using the managed library.</source>
          <target state="translated">관리 라이브러리를 사용하여 입력 데이터에 대한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1" /&gt;</ph> 해시를 계산합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA1Managed">
          <source>The hash is used as a unique value of fixed size representing a large amount of data.</source>
          <target state="translated">해시는 많은 양의 데이터를 나타내는 고정 된 크기의 고유 값으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA1Managed">
          <source>Hashes of two sets of data should match if and only if the corresponding data also matches.</source>
          <target state="translated">해당 데이터도 일치 하는 경우에 두 데이터 집합의 해시 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA1Managed">
          <source>Small changes to the data result in large unpredictable changes in the hash.</source>
          <target state="translated">약간 변경 된 데이터에 큰 예측할 수 없는 해시 변화 시킵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA1Managed">
          <source>This is a purely managed implementation of <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> that does not wrap CAPI.</source>
          <target state="translated">이 순수 하 게 관리 되는 구현의 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph> CAPI 줄 바꿈을 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA1Managed">
          <source>The hash size for the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1Managed&gt;</ph> algorithm is 160 bits.</source>
          <target state="translated">에 대 한 해시 크기는 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1Managed&gt;</ph> 알고리즘은 160 비트입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA1Managed">
          <source>The following example computes the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1Managed&gt;</ph> hash for <ph id="ph2">`data`</ph> and stores it in <ph id="ph3">`result`</ph>.</source>
          <target state="translated">다음 예제에서는 계산 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA1Managed&gt;</ph> 의 해시를 <ph id="ph2">`data`</ph> 에 저장 하 고 <ph id="ph3">`result`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.SHA1Managed">
          <source>This example assumes that there is a predefined constant <ph id="ph1">`DATA_SIZE`</ph>.</source>
          <target state="translated">이 예제에서는 미리 정의 된 상수 이라고 가정 <ph id="ph1">`DATA_SIZE`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1Managed" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1Managed" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.#ctor">
          <source>This class is not compliant with the FIPS algorithm.</source>
          <target state="translated">이 클래스가 FIPS 알고르즘과 호환되지 않는 경우</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The input data.</source>
          <target state="translated">입력 데이터입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">데이터로 사용할 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
          <source>Routes data written to the object into the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1Managed" /&gt;</ph> hash algorithm for computing the hash.</source>
          <target state="translated">개체에 쓴 데이터를 해시를 계산하기 위한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1Managed" /&gt;</ph> 해시 알고리즘으로 경로 처리합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.HashFinal">
          <source>Returns the computed <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1" /&gt;</ph> hash value after all data has been written to the object.</source>
          <target state="translated">데이터를 모두 개체에 쓴 후에 계산된 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1" /&gt;</ph> 해시 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.HashFinal">
          <source>The computed hash code.</source>
          <target state="translated">계산된 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.SHA1Managed.Initialize">
          <source>Initializes an instance of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1Managed" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA1Managed" /&gt;</ph>의 인스턴스를 초기화합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>