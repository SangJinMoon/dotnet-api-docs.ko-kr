<Type Name="AsymmetricAlgorithm" FullName="System.Security.Cryptography.AsymmetricAlgorithm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef18ffe5680e2f40980c17614d772a478315b340" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39893752" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class AsymmetricAlgorithm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricAlgorithm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricAlgorithm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricAlgorithm abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type AsymmetricAlgorithm = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cf09f-101">모든 비대칭 알고리즘의 구현에서 상속해야 하는 추상 기본 클래스를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf09f-101">Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-102">비대칭 암호화 알고리즘, 공개 키 알고리즘 라고도 발신자와 수신자 모두 관련된 키 쌍을 유지 관리 하는 필요 합니다: 개인 키와 공개 키입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-102">Asymmetric cryptographic algorithms, also known as public-key algorithms, require that both sender and receiver maintain a pair of related keys: a private key and a public key.</span></span> <span data-ttu-id="cf09f-103">두 키는 엔터티의 고유한입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-103">Both keys are unique to the entity.</span></span> <span data-ttu-id="cf09f-104">공개 키를 사용할 수 있습니다; 모든 사용자에 게 이 키는 데이터 수신자에 게 전송 되는 인코딩에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-104">The public key can be made available to anyone; this key is used for encoding data that is sent to a receiver.</span></span> <span data-ttu-id="cf09f-105">개인 키를 유지 해야 수신기; 이 키를 사용 하 여 디코딩 메시지 받는 사람의 공개 키를 사용 하 여 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-105">The private key must be kept private by the receiver; this key is used for decoding messages encoded using the receiver's public key.</span></span> <span data-ttu-id="cf09f-106"><xref:System.Security.Cryptography.RSACryptoServiceProvider> 클래스는 공개 키 알고리즘의 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-106">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class is an implementation of a public-key algorithm.</span></span> <span data-ttu-id="cf09f-107">공개 키 암호화 및 알고리즘의 자세한 내용은 "공개 키 암호화" 섹션을 참조 하세요 [암호화 서비스](~/docs/standard/security/cryptographic-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-107">For an in-depth discussion of public-key encryption and algorithms, see the "Public-Key Encryption" section in [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="cf09f-108">강력한 이름 도구 (Sn.exe)를 사용 하 여 키 쌍을 만드는 방법에 대 한 정보를 참조 하세요 [방법: 공개 / 개인 키 쌍 만들기](~/docs/framework/app-domains/how-to-create-a-public-private-key-pair.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-108">For information about how to use the Strong Name tool (Sn.exe) to create key pairs, see [How to: Create a Public-Private Key Pair](~/docs/framework/app-domains/how-to-create-a-public-private-key-pair.md).</span></span>  
  
 <span data-ttu-id="cf09f-109">디지털 서명을 만드는 공개 키 시스템을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-109">You can use public-key systems to form digital signatures.</span></span> <span data-ttu-id="cf09f-110">디지털 서명에 데이터의 무결성을 보호 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-110">Digital signatures are used to help to protect the integrity of data.</span></span> <span data-ttu-id="cf09f-111">예를 들어, 메시지에 디지털 서명 하는 공개 키 시스템을 사용 하려면 보낸 사람에 게 먼저 적용할 해시 함수 메시지 다이제스트를 만드는 메시지.</span><span class="sxs-lookup"><span data-stu-id="cf09f-111">For example, to use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="cf09f-112">그런 다음 보낸 사람의 사람의 개인 서명을 만드는 데 개인 키를 사용 하 여 메시지 다이제스트를 암호화 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-112">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="cf09f-113">메시지와 서명을 받으면 수신자는 메시지 다이제스트를 복구 하려면 보낸 사람의 공개 키를 사용 하 여 서명을 해독 하 고 보낸 사람에 게는 같은 해시 알고리즘을 사용 하는 메시지 해시입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-113">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="cf09f-114">받는 사람을 계산 하는 메시지 다이제스트에는 발신자 로부터 받은 메시지 다이제스트 일치 하는 경우 수신기 전송 되는 동안 변경 되지 않았다고 가정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-114">If the message digest that the receiver computes matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</span></span> <span data-ttu-id="cf09f-115">보낸 사람의 공개 키가 일반적인 기술 되므로 누구나 서명을 확인할 수 있음을 note 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-115">Note that anyone can verify a signature, because the sender's public key is common knowledge.</span></span> <span data-ttu-id="cf09f-116">이 기술을; 메시지의 기밀성을 유지 하지 않습니다. 기밀 이어야 할 메시지에 대 한 것도 암호화 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-116">This technique does not retain the secrecy of the message; for the message to be secret, it must also be encrypted.</span></span>  
  
 <span data-ttu-id="cf09f-117">.NET Framework에서는 디지털 서명 알고리즘을 구현 하는 클래스: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>를 <xref:System.Security.Cryptography.ECDsa> (기본 클래스) 및 <xref:System.Security.Cryptography.ECDsaCng>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-117">The .NET Framework provides the following classes that implement digital signature algorithms: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa> (base class), and <xref:System.Security.Cryptography.ECDsaCng>.</span></span>  
  
 <span data-ttu-id="cf09f-118">합니다 <xref:System.Security.Cryptography> 에 대 한 구체적인 클래스를 제공 하는 네임 스페이스 <xref:System.Security.Cryptography.RSA> 및 <xref:System.Security.Cryptography.DSA> 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-118">The <xref:System.Security.Cryptography> namespace provides concrete classes for <xref:System.Security.Cryptography.RSA> and <xref:System.Security.Cryptography.DSA> only.</span></span>  
  
 <span data-ttu-id="cf09f-119">RSA 알고리즘을 사용 하 여 암호화 하 고 XML 데이터를 해독 하는 방법은 만들고 XML 디지털 서명을 확인, 다음이 문서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-119">To learn how to use the RSA algorithm to encrypt and decrypt XML data, and create and verify XML digital signatures, see these articles:</span></span>  
  
-   [<span data-ttu-id="cf09f-120">방법: 비대칭 키를 사용하여 XML 요소 암호화</span><span class="sxs-lookup"><span data-stu-id="cf09f-120">How to: Encrypt XML Elements with Asymmetric Keys</span></span>](~/docs/standard/security/how-to-encrypt-xml-elements-with-asymmetric-keys.md)  
  
-   [<span data-ttu-id="cf09f-121">방법: 비대칭 키를 사용하여 XML 요소 해독</span><span class="sxs-lookup"><span data-stu-id="cf09f-121">How to: Decrypt XML Elements with Asymmetric Keys</span></span>](~/docs/standard/security/how-to-decrypt-xml-elements-with-asymmetric-keys.md)  
  
-   [<span data-ttu-id="cf09f-122">방법: 디지털 서명으로 XML 문서 서명</span><span class="sxs-lookup"><span data-stu-id="cf09f-122">How to: Sign XML Documents with Digital Signatures</span></span>](~/docs/standard/security/how-to-sign-xml-documents-with-digital-signatures.md)  
  
-   [<span data-ttu-id="cf09f-123">방법: XML 문서의 디지털 서명 확인</span><span class="sxs-lookup"><span data-stu-id="cf09f-123">How to: Verify the Digital Signatures of XML Documents</span></span>](~/docs/standard/security/how-to-verify-the-digital-signatures-of-xml-documents.md)  
  
   
  
## Examples  
 <span data-ttu-id="cf09f-124">다음 코드 예제에서 상속 되며, 사용자 지정 비대칭 알고리즘을 구현 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-124">The following code example demonstrates how to implement a custom asymmetric algorithm inherited from the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  <span data-ttu-id="cf09f-125">추가 하는 클래스는 사용자 지정 클래스를 사용 하는 방법을 보여 주기 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-125">An additional class is provided to demonstrate how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#2)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#2)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#2)]  
  
 <span data-ttu-id="cf09f-126">사용자 지정 클래스를 사용 하는 방법에 설명 하는 추가 클래스는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-126">Here's an additional class that demonstrates how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#3)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#3)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-127">
            <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-128">추상 클래스의 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-128">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="cf09f-129">응용 프로그램 코드는 파생된 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-129">Application code creates a new instance of a derived class.</span></span> <span data-ttu-id="cf09f-130">합니다 <xref:System.Security.Cryptography.RSACryptoServiceProvider> 및 <xref:System.Security.Cryptography.DSACryptoServiceProvider> 클래스에만 현재 지원 되는 구현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-130">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> and <xref:System.Security.Cryptography.DSACryptoServiceProvider> classes are the only currently supported implementations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="cf09f-131">파생 클래스의 구현이 올바르지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-131">The implementation of the derived class is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="asymmetricAlgorithm.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-132">
            <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 클래스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-132">Releases all resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-133">이 메서드는 간단히 호출 하 여 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf09f-133">This method is a simple call to the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="cf09f-134">호출 `Dispose` 사용 하는 리소스를 사용 하면를 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스를 다른 용도로 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-134">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class to be reallocated for other purposes.</span></span> <span data-ttu-id="cf09f-135">에 대 한 자세한 내용은 `Dispose`를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-135">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf09f-136">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> 현재 리소스를 해제 하는 방법 `customCrypto` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-136">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method to release the resources of the current `customCrypto` object.</span></span> <span data-ttu-id="cf09f-137">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-137">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#1)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#1)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-138">비대칭 알고리즘을 수행하는 데 사용하는 암호화 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-138">Creates a cryptographic object used to perform the asymmetric algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="System.Security.Cryptography.AsymmetricAlgorithm.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-139">비대칭 알고리즘을 수행하는 데 사용하는 기본 암호화 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-139">Creates a default cryptographic object used to perform the asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf09f-140">기본 설정이 [&lt;cryptoClass&gt; 요소](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md)를 사용하여 변경되지 않는 한 새로운 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-140">A new <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> instance, unless the default settings have been changed with the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf09f-141">다음 코드 예제를 구현 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> 확장된 된 클래스에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf09f-141">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="cf09f-142">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-142">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#11)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#11)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.AsymmetricAlgorithm" Usage="System.Security.Cryptography.AsymmetricAlgorithm.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName">
          <span data-ttu-id="cf09f-143">사용할 비대칭 알고리즘 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-143">The asymmetric algorithm implementation to use.</span>
          </span>
          <span data-ttu-id="cf09f-144">다음 표에서는 <c>algName</c> 매개 변수의 올바른 값과 매핑할 알고리즘을 보여 줍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-144">The following table shows the valid values for the <c>algName</c> parameter and the algorithms they map to.</span>
          </span>
          <span data-ttu-id="cf09f-145">
            <list type="table">
              <listheader>
                <term> 매개 변수 값  </term>
                <description> 구현  </description>
              </listheader>
              <item>
                <term> System.Security.Cryptography.AsymmetricAlgorithm  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />
                </description>
              </item>
              <item>
                <term> RSA  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.RSA" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.RSA  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.RSA" />
                </description>
              </item>
              <item>
                <term> DSA  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.DSA" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.DSA  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.DSA" />
                </description>
              </item>
              <item>
                <term> ECDsa  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.ECDsa" />
                </description>
              </item>
              <item>
                <term> ECDsaCng  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.ECDsaCng" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.ECDsaCng  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.ECDsaCng" />
                </description>
              </item>
              <item>
                <term> ECDH  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.ECDiffieHellman" />
                </description>
              </item>
              <item>
                <term> ECDiffieHellman  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.ECDiffieHellman" />
                </description>
              </item>
              <item>
                <term> ECDiffieHellmanCng  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.ECDiffieHellmanCng  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />
                </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-145">
              <list type="table">
                <listheader>
                  <term> Parameter value  </term>
                  <description> Implements  </description>
                </listheader>
                <item>
                  <term> System.Security.Cryptography.AsymmetricAlgorithm  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />
                  </description>
                </item>
                <item>
                  <term> RSA  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.RSA" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.RSA  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.RSA" />
                  </description>
                </item>
                <item>
                  <term> DSA  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.DSA" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.DSA  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.DSA" />
                  </description>
                </item>
                <item>
                  <term> ECDsa  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.ECDsa" />
                  </description>
                </item>
                <item>
                  <term> ECDsaCng  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.ECDsaCng" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.ECDsaCng  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.ECDsaCng" />
                  </description>
                </item>
                <item>
                  <term> ECDH  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.ECDiffieHellman" />
                  </description>
                </item>
                <item>
                  <term> ECDiffieHellman  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.ECDiffieHellman" />
                  </description>
                </item>
                <item>
                  <term> ECDiffieHellmanCng  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.ECDiffieHellmanCng  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" />
                  </description>
                </item>
              </list>
            </span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf09f-146">비대칭 알고리즘의 지정된 구현에 대한 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-146">Creates an instance of the specified implementation of an asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf09f-147">지정된 비대칭 알고리즘 구현의 새 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-147">A new instance of the specified asymmetric algorithm implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf09f-148">다음 코드 예제를 구현 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> 확장된 된 클래스에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf09f-148">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="cf09f-149">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-149">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#12)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#12)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-150">
            <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-150">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="asymmetricAlgorithm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-151">
            <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-151">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-152">`Dispose` 사용을 마치면 <xref:System.Security.Cryptography.AsymmetricAlgorithm>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-152">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="cf09f-153">`Dispose` 메서드를 사용하면 <xref:System.Security.Cryptography.AsymmetricAlgorithm>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-153">The `Dispose` method leaves the <xref:System.Security.Cryptography.AsymmetricAlgorithm> in an unusable state.</span></span> <span data-ttu-id="cf09f-154">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-154">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.AsymmetricAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.AsymmetricAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="cf09f-155">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-155">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cf09f-156">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Security.Cryptography.AsymmetricAlgorithm>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="cf09f-156">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="cf09f-157">이렇게 하지 않으면 가비지 수집기가 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-157">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.AsymmetricAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="asymmetricAlgorithm.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="cf09f-158">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-158">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf09f-159">
            <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 클래스에 사용되는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-159">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-160">이 메서드는 공용 `Dispose()` 메서드 및 `Finalize` 메서드.</span><span class="sxs-lookup"><span data-stu-id="cf09f-160">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="cf09f-161">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-161">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="cf09f-162">`Finalize` 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-162">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="cf09f-163">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Security.Cryptography.AsymmetricAlgorithm>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-163">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.AsymmetricAlgorithm> references.</span></span> <span data-ttu-id="cf09f-164">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-164">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cf09f-165">
            <para>
              <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" />대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 하 고 <see langword="Finalize" />를 참조 하세요 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-165">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public virtual void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXmlString(System::String ^ xmlString);" />
      <MemberSignature Language="F#" Value="abstract member FromXmlString : string -&gt; unit&#xA;override this.FromXmlString : string -&gt; unit" Usage="asymmetricAlgorithm.FromXmlString xmlString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString">
          <span data-ttu-id="cf09f-166">
            <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체를 재생성하는 데 사용할 XML 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-166">The XML string to use to reconstruct the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf09f-167">파생 클래스에서 재정의되는 경우 XML 문자열에서 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체를 다시 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-167">When overridden in a derived class, reconstructs an <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object from an XML string.</span>
          </span>
          <span data-ttu-id="cf09f-168">그렇지 않으면 <see cref="T:System.NotImplementedException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-168">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf09f-169">다음 코드 예제를 구현 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A> 현재를 채우려면 지정 된 XML 문자열을 구문 분석 방법 <xref:System.Security.Cryptography.CspParameters> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-169">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A> method to parse the specified XML string to populate the current <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="cf09f-170">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-170">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#4)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#4)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : string" Usage="System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-171">파생 클래스에 재정의하는 경우 키 교환 알고리즘의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-171">When overridden in a derived class, gets the name of the key exchange algorithm.</span>
          </span>
          <span data-ttu-id="cf09f-172">그렇지 않으면 <see cref="T:System.NotImplementedException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-172">Otherwise, throws an <see cref="T:System.NotImplementedException" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf09f-173">키 교환 알고리즘의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-173">The name of the key exchange algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf09f-174">다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A> 키 교환 알고리즘의 이름을 반환 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-174">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A> property to return the name for the key exchange algorithm.</span></span> <span data-ttu-id="cf09f-175">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-175">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#6)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#6)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public virtual int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.KeySize : int with get, set" Usage="System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-176">비대칭 알고리즘에서 사용하는 키 모듈러스의 크기(비트 단위)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-176">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf09f-177">비대칭 알고리즘에서 사용하는 키 모듈러스의 크기(비트 단위)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-177">The size, in bits, of the key modulus used by the asymmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-178">올바른 키 크기 비대칭 알고리즘의 특정 구현에 의해 지정 되 고에 나열 된는 <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-178">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf09f-179">다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> 속성을 통해 로컬에서 식별 된 범위 내에 포함 하는 것을 확인 `keySizes` 멤버 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-179">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property to verify that it falls within the range identified in the local `keySizes` member variable.</span></span> <span data-ttu-id="cf09f-180">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-180">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#9)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#9)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="cf09f-181">키 모듈러스 크기가 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-181">The key modulus size is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeySizeValue">
      <MemberSignature Language="C#" Value="protected int KeySizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 KeySizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeySizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int KeySizeValue;" />
      <MemberSignature Language="F#" Value="val mutable KeySizeValue : int" Usage="System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-182">비대칭 알고리즘에서 사용하는 키 모듈러스의 크기(비트 단위)를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-182">Represents the size, in bits, of the key modulus used by the asymmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-183">올바른 키 크기 비대칭 알고리즘의 특정 구현에 의해 지정 되 고에 나열 된는 <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-183">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="cf09f-184">이 필드는 <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-184">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-185">비대칭 알고리즘에서 지원하는 키 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-185">Gets the key sizes that are supported by the asymmetric algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf09f-186">비대칭 알고리즘에서 지원하는 키 크기가 들어 있는 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-186">An array that contains the key sizes supported by the asymmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-187">비대칭 알고리즘에는이 배열에 있는 항목과 일치 하는 키 크기만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-187">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf09f-188">다음 코드 예제에는 호출 하는 방법을 보여 줍니다.는 <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> 검색할 속성을 <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, 및 <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-188">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property to retrieve the <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, and <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> properties.</span></span> <span data-ttu-id="cf09f-189">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-189">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#10)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#10)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalKeySizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalKeySizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizesValue;" />
      <MemberSignature Language="F#" Value="val mutable LegalKeySizesValue : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-190">비대칭 알고리즘에서 지원하는 키 크기를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-190">Specifies the key sizes that are supported by the asymmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf09f-191">비대칭 알고리즘에는이 배열에 있는 항목과 일치 하는 키 크기만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-191">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="cf09f-192">이 필드는 <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-192">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureAlgorithm : string" Usage="System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf09f-193">파생 클래스에서 구현하는 경우 서명 알고리즘 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-193">When implemented in a derived class, gets the name of the signature algorithm.</span>
          </span>
          <span data-ttu-id="cf09f-194">그렇지 않으면 항상 <see cref="T:System.NotImplementedException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-194">Otherwise, always throws a <see cref="T:System.NotImplementedException" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf09f-195">서명 알고리즘의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-195">The name of the signature algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf09f-196">다음 코드 예제에서는 재정의 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A> 서명 알고리즘의 이름을 반환 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-196">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A> property to return the name of the signature algorithm.</span></span> <span data-ttu-id="cf09f-197">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-197">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#7)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#7)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public virtual string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberSignature Language="F#" Value="abstract member ToXmlString : bool -&gt; string&#xA;override this.ToXmlString : bool -&gt; string" Usage="asymmetricAlgorithm.ToXmlString includePrivateParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="cf09f-198">private 매개 변수를 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-198">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cf09f-199">파생 클래스에서 재정의되는 경우 현재 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체의 XML 문자열 표현을 만들고 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-199">When overridden in a derived class, creates and returns an XML string representation of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span>
          </span>
          <span data-ttu-id="cf09f-200">그렇지 않으면 <see cref="T:System.NotImplementedException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-200">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cf09f-201">현재 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 개체의 XML 문자열 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf09f-201">An XML string encoding of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cf09f-202">다음 코드 예제를 호출 하는 방법에 설명 합니다 <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A> 현재에서는 XML 형식의 매개 변수를 만드는 메서드를 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-202">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A> method to create an XML representation of the parameters in the current <xref:System.Security.Cryptography.AsymmetricAlgorithm> object.</span></span> <span data-ttu-id="cf09f-203">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf09f-203">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#5)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#5)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>