<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RijndaelManagedTransform.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57da90a5889af5bb3715a18000a76ab97e64f2913.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7da90a5889af5bb3715a18000a76ab97e64f2913</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RijndaelManagedTransform">
          <source>Performs a cryptographic transformation of data using the Rijndael algorithm.</source>
          <target state="translated">Rijndael 알고리즘을 사용하여 데이터의 암호화 변환을 수행합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RijndaelManagedTransform">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RijndaelManagedTransform">
          <source>Using this class is not recommended.</source>
          <target state="translated">이 클래스를 사용 하 여 권장 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RijndaelManagedTransform">
          <source>A better practice is to use <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> with a <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object.</source>
          <target state="translated">사용 하는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RijndaelManagedTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object handles the padding issues that can occur when using <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> directly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> 사용할 때 발생할 수 있는 패딩 문제를 처리 하는 개체 <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> 직접 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RijndaelManagedTransform">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> class.</source>
          <target state="translated">예를 들어 참조는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RijndaelManagedTransform">
          <source>Both the <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A&gt;</ph> methods return an instance of the <ph id="ph3">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> class that is initialized with the key information of the current <ph id="ph4">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> object.</source>
          <target state="translated">둘 다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A&gt;</ph> 의 인스턴스를 반환 하는 메서드는 <ph id="ph3">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> 현재 키 정보를 사용 하 여 초기화 되는 클래스 <ph id="ph4">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RijndaelManagedTransform">
          <source>To encrypt or decrypt data using the Rijndael algorithm, pass the <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> object returned by these methods to a <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object.</source>
          <target state="translated">를 암호화 하거나 Rijndael 알고리즘을 사용 하 여 데이터의 암호를 해독 하려면 전달 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> 를 이러한 메서드에 의해 반환 된 개체는 <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue">
          <source>Gets the block size.</source>
          <target state="translated">블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue">
          <source>The size of the data blocks in bytes.</source>
          <target state="translated">데이터 블록의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">현재 변형을 다시 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks">
          <source>Gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">여러 개의 블록을 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if multiple blocks can be transformed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">여러 개의 블록을 변환할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 변환할 수 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /&gt;</ph> 클래스에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Clear">
          <source>This method is a simple call to <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">이 메서드는에 대 한 간단한 호출 <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">호출 <ph id="ph1">`Dispose`</ph> 에서 사용 하는 리소스는 <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> 다른 용도에 다시 할당 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">`Dispose`</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">`Dispose`</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform&gt;</ph> 개체의 <ph id="ph2">`Finalize`</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize">
          <source>Gets the input block size.</source>
          <target state="translated">입력 블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize">
          <source>The size of the input data blocks in bytes.</source>
          <target state="translated">입력 데이터 블록의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize">
          <source>Gets the output block size.</source>
          <target state="translated">출력 블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize">
          <source>The size of the output data blocks in bytes.</source>
          <target state="translated">출력 데이터 블록의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Reset">
          <source>Resets the internal state of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /&gt;</ph> so it can be used again to do a different encryption or decryption.</source>
          <target state="translated">다른 암호화 또는 해독 작업에 다시 사용할 수 있도록 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /&gt;</ph>의 내부 상태를 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> method is called automatically when you call <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> 메서드는 자동으로 호출 하는 경우 <ph id="ph2">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> 예를 들어 입력된 암호화 된 데이터 가비지 상태이 고 해독할 수 없는 경우 메서드가 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Reset">
          <source>In this case, an exception is thrown and <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> is not called.</source>
          <target state="translated">이 경우 예외가 발생 하 고 <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RijndaelManagedTransform.Reset">
          <source>You can choose to manually call the <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> method in this case.</source>
          <target state="translated">직접 호출 하도록 선택할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A&gt;</ph> 여기서에서 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The input to perform the operation on.</source>
          <target state="translated">작업을 수행할 입력입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the input byte array to begin using data from.</source>
          <target state="translated">데이터 사용을 시작할 입력 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">데이터로 사용할 입력 바이트 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The output to write the data to.</source>
          <target state="translated">데이터를 쓸 출력입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the output byte array to begin writing data from.</source>
          <target state="translated">데이터 쓰기를 시작할 출력 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</source>
          <target state="translated">입력 바이트 배열의 지정된 영역에 대해 변환을 계산하여 결과 변환을 출력 바이트 배열의 지정된 영역에 복사합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes written.</source>
          <target state="translated">쓰여진 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="outputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="outputBuffer" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The length of the input buffer is less than the sum of the input offset and the input count.</source>
          <target state="translated">입력 버퍼의 길이가 입력 오프셋과 입력 카운트의 합보다 작은 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> 매개 변수의 값이 0보다 작거나 같은 경우</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter is greater than the length of the <ph id="ph2">&lt;paramref name="inputBuffer" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> 매개 변수의 값이 <ph id="ph2">&lt;paramref name="inputBuffer" /&gt;</ph> 매개 변수의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The length of the <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter is not evenly devisable by input block size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> 매개 변수의 길이가 입력 블록 크기로 나누어 떨어지지 않는 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> 매개 변수의 값이 음수인 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The input to perform the operation on.</source>
          <target state="translated">작업을 수행할 입력입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array to begin using data from.</source>
          <target state="translated">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">데이터로 사용할 바이트 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Computes the transformation for the specified region of the specified byte array.</source>
          <target state="translated">지정된 바이트 배열의 지정된 영역에 대해 변환을 계산합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The computed transformation.</source>
          <target state="translated">계산된 변환입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> 매개 변수 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter is grater than the length of <ph id="ph2">&lt;paramref name="inputBuffer" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> 매개 변수의 값이 <ph id="ph2">&lt;paramref name="inputBuffer" /&gt;</ph> 매개 변수의 길이보다 큰 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> 매개 변수의 값이 음수인 경우</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The length of the <ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> parameter is not evenly devisable by input block size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> 매개 변수의 길이가 입력 블록 크기로 나누어 떨어지지 않는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>