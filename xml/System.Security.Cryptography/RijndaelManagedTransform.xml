<Type Name="RijndaelManagedTransform" FullName="System.Security.Cryptography.RijndaelManagedTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7da90a5889af5bb3715a18000a76ab97e64f2913" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RijndaelManagedTransform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RijndaelManagedTransform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RijndaelManagedTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RijndaelManagedTransform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class RijndaelManagedTransform sealed : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1d77d-101">Rijndael 알고리즘을 사용하여 데이터의 암호화 변환을 수행합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d77d-101">Performs a cryptographic transformation of data using the Rijndael algorithm.</span>
      </span>
      <span data-ttu-id="1d77d-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1d77d-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1d77d-103">이 클래스를 사용 하 여 권장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-103">Using this class is not recommended.</span></span> <span data-ttu-id="1d77d-104">사용 하는 것이 좋습니다 <xref:System.Security.Cryptography.RijndaelManaged> 와 <xref:System.Security.Cryptography.CryptoStream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-104">A better practice is to use <xref:System.Security.Cryptography.RijndaelManaged> with a <xref:System.Security.Cryptography.CryptoStream> object.</span></span> <span data-ttu-id="1d77d-105"><xref:System.Security.Cryptography.CryptoStream> 사용할 때 발생할 수 있는 패딩 문제를 처리 하는 개체 <xref:System.Security.Cryptography.RijndaelManagedTransform> 직접 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-105">The <xref:System.Security.Cryptography.CryptoStream> object handles the padding issues that can occur when using <xref:System.Security.Cryptography.RijndaelManagedTransform> directly.</span></span> <span data-ttu-id="1d77d-106">예를 들어 참조는 <xref:System.Security.Cryptography.RijndaelManaged> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-106">For an example, see the <xref:System.Security.Cryptography.RijndaelManaged> class.</span></span>  
  
 <span data-ttu-id="1d77d-107">둘 다는 <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> 및 <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> 의 인스턴스를 반환 하는 메서드는 <xref:System.Security.Cryptography.RijndaelManagedTransform> 현재 키 정보를 사용 하 여 초기화 되는 클래스 <xref:System.Security.Cryptography.RijndaelManaged> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-107">Both the <xref:System.Security.Cryptography.RijndaelManaged.CreateEncryptor%2A> and <xref:System.Security.Cryptography.RijndaelManaged.CreateDecryptor%2A> methods return an instance of the <xref:System.Security.Cryptography.RijndaelManagedTransform> class that is initialized with the key information of the current <xref:System.Security.Cryptography.RijndaelManaged> object.</span></span>  <span data-ttu-id="1d77d-108">를 암호화 하거나 Rijndael 알고리즘을 사용 하 여 데이터의 암호를 해독 하려면 전달 된 <xref:System.Security.Cryptography.RijndaelManagedTransform> 를 이러한 메서드에 의해 반환 된 개체는 <xref:System.Security.Cryptography.CryptoStream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-108">To encrypt or decrypt data using the Rijndael algorithm, pass the <xref:System.Security.Cryptography.RijndaelManagedTransform> object returned by these methods to a <xref:System.Security.Cryptography.CryptoStream> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="public int BlockSizeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSizeValue { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d77d-109">블록 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-109">Gets the block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d77d-110">데이터 블록의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-110">The size of the data blocks in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d77d-111">현재 변형을 다시 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-111">Gets a value indicating whether the current transform can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d77d-112">항상 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-112">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d77d-113">여러 개의 블록을 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-113">Gets a value indicating whether multiple blocks can be transformed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d77d-114">여러 개의 블록을 변환할 수 있으면 <see langword="true" />이고, 변환할 수 없으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-114">
              <see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d77d-115">
            <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> 클래스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-115">Releases all resources used by the <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d77d-116">이 메서드는에 대 한 간단한 호출 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-116">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="1d77d-117">호출 `Dispose` 에서 사용 하는 리소스는 <xref:System.Security.Cryptography.RijndaelManagedTransform> 다른 용도에 다시 할당 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-117">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.RijndaelManagedTransform> to be reallocated for other purposes.</span></span> <span data-ttu-id="1d77d-118">에 대 한 자세한 내용은 `Dispose`, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-118">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d77d-119">
            <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-119">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d77d-120">`Dispose` 사용을 마치면 <xref:System.Security.Cryptography.RijndaelManagedTransform>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-120">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RijndaelManagedTransform>.</span></span> <span data-ttu-id="1d77d-121">`Dispose` 메서드를 사용하면 <xref:System.Security.Cryptography.RijndaelManagedTransform>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-121">The `Dispose` method leaves the <xref:System.Security.Cryptography.RijndaelManagedTransform> in an unusable state.</span></span> <span data-ttu-id="1d77d-122">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야는 <xref:System.Security.Cryptography.RijndaelManagedTransform> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Security.Cryptography.RijndaelManagedTransform> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-122">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RijndaelManagedTransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RijndaelManagedTransform> was occupying.</span></span>  
  
 <span data-ttu-id="1d77d-123">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-123">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1d77d-124">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Security.Cryptography.RijndaelManagedTransform>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="1d77d-124">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RijndaelManagedTransform>.</span></span> <span data-ttu-id="1d77d-125">이렇게 하지 않으면 가비지 수집기가 <xref:System.Security.Cryptography.RijndaelManagedTransform> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-125">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RijndaelManagedTransform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d77d-126">입력 블록 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-126">Gets the input block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d77d-127">입력 데이터 블록의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-127">The size of the input data blocks in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RijndaelManagedTransform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1d77d-128">출력 블록 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-128">Gets the output block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1d77d-129">출력 데이터 블록의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-129">The size of the output data blocks in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1d77d-130">다른 암호화 또는 해독 작업에 다시 사용할 수 있도록 <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" />의 내부 상태를 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-130">Resets the internal state of <see cref="T:System.Security.Cryptography.RijndaelManagedTransform" /> so it can be used again to do a different encryption or decryption.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d77d-131"><xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> 메서드는 자동으로 호출 하는 경우 <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-131">The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is called automatically when you call <xref:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock%2A>.</span></span> <span data-ttu-id="1d77d-132"><xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> 예를 들어 입력된 암호화 된 데이터 가비지 상태이 고 해독할 수 없는 경우 메서드가 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-132">The <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</span></span> <span data-ttu-id="1d77d-133">이 경우 예외가 발생 하 고 <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1d77d-133">In this case, an exception is thrown and <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> is not called.</span></span> <span data-ttu-id="1d77d-134">직접 호출 하도록 선택할 수 있습니다는 <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> 여기서에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="1d77d-134">You can choose to manually call the <xref:System.Security.Cryptography.RijndaelManagedTransform.Reset%2A> method in this case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="1d77d-135">작업을 수행할 입력입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-135">The input to perform the operation on.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="1d77d-136">데이터 사용을 시작할 입력 바이트 배열의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-136">The offset into the input byte array to begin using data from.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="1d77d-137">데이터로 사용할 입력 바이트 배열의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-137">The number of bytes in the input byte array to use as data.</span>
          </span>
        </param>
        <param name="outputBuffer">
          <span data-ttu-id="1d77d-138">데이터를 쓸 출력입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-138">The output to write the data to.</span>
          </span>
        </param>
        <param name="outputOffset">
          <span data-ttu-id="1d77d-139">데이터 쓰기를 시작할 출력 바이트 배열의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-139">The offset into the output byte array to begin writing data from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d77d-140">입력 바이트 배열의 지정된 영역에 대해 변환을 계산하여 결과 변환을 출력 바이트 배열의 지정된 영역에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-140">Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d77d-141">쓰여진 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-141">The number of bytes written.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d77d-142">
            <paramref name="inputBuffer" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-142">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1d77d-143">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-143">-or-</span>
          </span>
          <span data-ttu-id="1d77d-144">
            <paramref name="outputBuffer" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-144">The <paramref name="outputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d77d-145">입력 버퍼의 길이가 입력 오프셋과 입력 카운트의 합보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-145">The length of the input buffer is less than the sum of the input offset and the input count.</span>
          </span>
          <span data-ttu-id="1d77d-146">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-146">-or-</span>
          </span>
          <span data-ttu-id="1d77d-147">
            <paramref name="inputCount" /> 매개 변수의 값이 0보다 작거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-147">The value of the <paramref name="inputCount" /> parameter is less than or equal to 0.</span>
          </span>
          <span data-ttu-id="1d77d-148">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-148">-or-</span>
          </span>
          <span data-ttu-id="1d77d-149">
            <paramref name="inputCount" /> 매개 변수의 값이 <paramref name="inputBuffer" /> 매개 변수의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-149">The value of the <paramref name="inputCount" /> parameter is greater than the length of the <paramref name="inputBuffer" /> parameter.</span>
          </span>
          <span data-ttu-id="1d77d-150">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-150">-or-</span>
          </span>
          <span data-ttu-id="1d77d-151">
            <paramref name="inputCount" /> 매개 변수의 길이가 입력 블록 크기로 나누어 떨어지지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-151">The length of the <paramref name="inputCount" /> parameter is not evenly devisable by input block size.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1d77d-152">
            <paramref name="inputOffset" /> 매개 변수의 값이 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-152">The value of the <paramref name="inputOffset" /> parameter is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RijndaelManagedTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="1d77d-153">작업을 수행할 입력입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-153">The input to perform the operation on.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="1d77d-154">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-154">The offset into the byte array to begin using data from.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="1d77d-155">데이터로 사용할 바이트 배열의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-155">The number of bytes in the byte array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1d77d-156">지정된 바이트 배열의 지정된 영역에 대해 변환을 계산합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-156">Computes the transformation for the specified region of the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1d77d-157">계산된 변환입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-157">The computed transformation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1d77d-158">
            <paramref name="inputBuffer" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-158">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1d77d-159">
            <paramref name="inputCount" /> 매개 변수 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-159">The value of the <paramref name="inputCount" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="1d77d-160">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-160">-or-</span>
          </span>
          <span data-ttu-id="1d77d-161">
            <paramref name="inputCount" /> 매개 변수의 값이 <paramref name="inputBuffer" /> 매개 변수의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-161">The value of the <paramref name="inputCount" /> parameter is grater than the length of <paramref name="inputBuffer" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1d77d-162">
            <paramref name="inputOffset" /> 매개 변수의 값이 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-162">The value of the <paramref name="inputOffset" /> parameter is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="1d77d-163">
            <paramref name="inputCount" /> 매개 변수의 길이가 입력 블록 크기로 나누어 떨어지지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1d77d-163">The length of the <paramref name="inputCount" /> parameter is not evenly devisable by input block size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>