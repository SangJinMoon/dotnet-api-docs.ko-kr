<Type Name="MACTripleDES" FullName="System.Security.Cryptography.MACTripleDES">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c678c069fd41d666fbda841579000c7028978bad" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MACTripleDES extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MACTripleDES" />
  <TypeSignature Language="VB.NET" Value="Public Class MACTripleDES&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class MACTripleDES : System::Security::Cryptography::KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c08d0-101">입력 데이터 <see cref="T:System.Security.Cryptography.CryptoStream" />에 대해 <see cref="T:System.Security.Cryptography.TripleDES" />를 사용하여 MAC(메시지 인증 코드)를 계산합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c08d0-101">Computes a Message Authentication Code (MAC) using <see cref="T:System.Security.Cryptography.TripleDES" /> for the input data <see cref="T:System.Security.Cryptography.CryptoStream" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08d0-102">MAC 비밀 키를 공유 하는 발신자와 수신자 보안 되지 않은 채널을 통해 보낸 메시지가 훼손 되었는지 여부를 확인 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-102">A MAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="c08d0-103">보낸 사람에 게는 원본 데이터에 대 한 MAC을 계산 하 고 모두 단일 메시지로 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-103">The sender computes the MAC for the original data, and sends both as a single message.</span></span> <span data-ttu-id="c08d0-104">수신자는 MAC를 받은 메시지에 대해 다시 계산 하 고 계산 된 MAC에 전송 된 MAC과 일치 하는지 확인</span><span class="sxs-lookup"><span data-stu-id="c08d0-104">The receiver recomputes the MAC on the received message, and checks that the computed MAC matches the transmitted MAC.</span></span>  
  
 <span data-ttu-id="c08d0-105">비밀 키의 지식이 없어도 메시지를 변경 하 고 올바른 MAC 재현 하기 때문에 데이터 또는 불일치 상태가 MAC 결과에 변경</span><span class="sxs-lookup"><span data-stu-id="c08d0-105">Any change to the data or the MAC results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct MAC.</span></span> <span data-ttu-id="c08d0-106">따라서 코드가 일치 하는 경우에 메시지가 인증 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-106">Therefore, if the codes match, the message is authenticated.</span></span>  
  
 <span data-ttu-id="c08d0-107"><xref:System.Security.Cryptography.MACTripleDES> 16 또는 24 바이트 long, 해시 시퀀스 길이 8 바이트를 생성 하는 키를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-107"><xref:System.Security.Cryptography.MACTripleDES> uses a key that is 16 or 24 bytes long, and produces a hash sequence that is 8 bytes long.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c08d0-108">다음 예에서는 라는 파일에 대 한 MAC `input.txt`를 실행 하는 예제를 포함 하는 폴더에 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-108">The following example creates a MAC for a file named `input.txt`, which is located in the folder that contains the example executable.</span></span> <span data-ttu-id="c08d0-109">MAC 및 원본 텍스트 라는 파일에 기록 됩니다 `encrypted.hsh` 같은 폴더에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-109">The MAC and the original text are written to a file named `encrypted.hsh` in the same folder.</span></span> <span data-ttu-id="c08d0-110">서명 된 파일을 읽고 및 MAC 파일의 텍스트 부분에 대 한 계산 되 고 텍스트와 함께 포함 되는 mac과 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-110">The signed file is then read, and the MAC is calculated for the text portion of the file and compared to the MAC that is included with the text.</span></span>  
  
 [!code-csharp[MAC3DES#1](~/samples/snippets/csharp/VS_Snippets_CLR/MAC3DES/CS/program.cs#1)]
 [!code-vb[MAC3DES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MAC3DES/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c08d0-111">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08d0-112">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08d0-113">이 생성자의 기본 구현을 사용 하 여 <xref:System.Security.Cryptography.TripleDES>합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-113">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="c08d0-114">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 암호화에 대한 비밀 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-114">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08d0-115">지정된 키 데이터를 사용하여 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08d0-116">이 생성자의 기본 구현을 사용 하 여 <xref:System.Security.Cryptography.TripleDES>합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-116">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span> <span data-ttu-id="c08d0-117">`rgbKey` 매개 변수는 길이가 16 또는 24 바이트 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-117">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c08d0-118">이 생성자를 사용 하는 방법의 예제를 보려면는 <xref:System.Security.Cryptography.MACTripleDES> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-118">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.MACTripleDES> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c08d0-119">
            <paramref name="rgbKey" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-119">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (string strTripleDES, byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strTripleDES, unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strTripleDES As String, rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(System::String ^ strTripleDES, cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strTripleDES" Type="System.String" />
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strTripleDES">
          <span data-ttu-id="c08d0-120">사용할 <see cref="T:System.Security.Cryptography.TripleDES" /> 구현의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-120">The name of the <see cref="T:System.Security.Cryptography.TripleDES" /> implementation to use.</span>
          </span>
        </param>
        <param name="rgbKey">
          <span data-ttu-id="c08d0-121">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 암호화에 대한 비밀 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-121">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08d0-122">키 데이터를 지정하고 <see cref="T:System.Security.Cryptography.TripleDES" />의 지정된 구현을 사용하여 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data and using the specified implementation of <see cref="T:System.Security.Cryptography.TripleDES" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08d0-123">`strTripleDES` 매개 변수는 이름이 <xref:System.Security.Cryptography.TripleDES> 구현 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-123">The `strTripleDES` parameter is the friendly name of the <xref:System.Security.Cryptography.TripleDES> implementation type.</span></span> <span data-ttu-id="c08d0-124">기본 구현은 System.Security.Cryptography.TripleDES입니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-124">The default implementation is System.Security.Cryptography.TripleDES.</span></span>  
  
 <span data-ttu-id="c08d0-125">`rgbKey` 매개 변수는 길이가 16 또는 24 바이트 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-125">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c08d0-126">
            <paramref name="rgbKey" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-126">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="c08d0-127">
            <paramref name="strTripleDES" /> 매개 변수가 <see cref="T:System.Security.Cryptography.TripleDES" /> 구현의 올바른 이름이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-127">The <paramref name="strTripleDES" /> parameter is not a valid name of a <see cref="T:System.Security.Cryptography.TripleDES" /> implementation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c08d0-128">
            <see cref="M:System.IDisposable.Dispose" /> 구현에서 메소드를 호출하면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-128">
              <see langword="true" /> if the method is called from an <see cref="M:System.IDisposable.Dispose" /> implementation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08d0-129">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 인스턴스에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-129">Releases the resources used by the <see cref="T:System.Security.Cryptography.MACTripleDES" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08d0-130">이 메서드는 public `Dispose()` 메서드 및 `Finalize` 메서드.</span><span class="sxs-lookup"><span data-stu-id="c08d0-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="c08d0-131">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 로 설정 disposing 매개 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="c08d0-132">`Finalize`는 disposing 매개 변수를 `Dispose`로 설정하여 `false`를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="c08d0-133">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Security.Cryptography.MACTripleDES>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.MACTripleDES> references.</span></span> <span data-ttu-id="c08d0-134">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c08d0-135">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c08d0-135">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="c08d0-136">재정의 하는 경우 <see langword="Dispose(Boolean)" />한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see langword="Dispose" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c08d0-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="c08d0-137">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c08d0-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="c08d0-138">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see langword="Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="c08d0-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgbData, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgbData As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgbData, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbData">
          <span data-ttu-id="c08d0-139">입력 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-139">The input data.</span>
          </span>
        </param>
        <param name="ibStart">
          <span data-ttu-id="c08d0-140">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-140">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="cbSize">
          <span data-ttu-id="c08d0-141">데이터로 사용할 배열의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-141">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08d0-142">개체에 쓰여진 데이터를 MAC(메시지 인증 코드) 계산을 위해 <see cref="T:System.Security.Cryptography.TripleDES" />암호기로 라우트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-142">Routes data written to the object into the <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor for computing the Message Authentication Code (MAC).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08d0-143">모든 데이터를 개체에 쓴 후 계산된 MAC(메시지 인증 코드)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-143">Returns the computed Message Authentication Code (MAC) after all data is written to the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c08d0-144">계산된 MAC입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-144">The computed MAC.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08d0-145">모든 데이터가 기록 되 고 나중에 더 많은 데이터를 쓸 수 없습니다 후에이 값을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-145">You can read this value only after all data is written, and you cannot write more data afterward.</span></span> <span data-ttu-id="c08d0-146">새 인스턴스를 만들고 <xref:System.Security.Cryptography.MACTripleDES> 해당 데이터에 대 한 MAC 계산 하기 위해 데이터의 각 개별 세그먼트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-146">Create a new instance of <xref:System.Security.Cryptography.MACTripleDES> for each separate segment of data to compute the MAC for that data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08d0-147">
            <see cref="T:System.Security.Cryptography.MACTripleDES" />의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-147">Initializes an instance of <see cref="T:System.Security.Cryptography.MACTripleDES" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08d0-148">이 메서드는 클래스에 대 한 기본 생성자를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-148">This method calls the default constructor for the class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08d0-149">해시 알고리즘에 사용된 패딩 모드를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-149">Gets or sets the padding mode used in the hashing algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08d0-150">해시 알고리즘에 사용된 패딩 모드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-150">The padding mode used in the hashing algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08d0-151">대부분의 일반 텍스트 메시지 완전히 블록을 작성 하는 바이트 수로 구성 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-151">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="c08d0-152">종종 마지막 블록을 채울 바이트 수가 충분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-152">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="c08d0-153">이 경우 안쪽 여백 문자열을 텍스트에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-153">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="c08d0-154">예를 들어 블록 길이가 64 비트 마지막 블록 40 비트만 포함 하는 경우 24 비트의 패딩이 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-154">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="c08d0-155">참조 <xref:System.Security.Cryptography.PaddingMode> 특정 모드에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-155">See <xref:System.Security.Cryptography.PaddingMode> for a description of specific modes.</span></span>  
  
 <span data-ttu-id="c08d0-156">이 필드는 <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c08d0-156">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="c08d0-157">패딩 모드가 잘못되어 속성을 설정할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08d0-157">The property cannot be set because the padding mode is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>