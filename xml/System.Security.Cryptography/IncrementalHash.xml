<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IncrementalHash.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58b2e239864865d83ed8aa588b335299d1a4f81c1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b2e239864865d83ed8aa588b335299d1a4f81c1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.IncrementalHash">
          <source>Provides support for computing a hash or Hash-based Message Authentication Code (HMAC) value incrementally across several segments.</source>
          <target state="translated">여러 세그먼트에서 해시 또는 HMAC(해시 기반 메시지 인증 코드) 값을 증분 방식으로 계산하는 지원을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.IncrementalHash.AlgorithmName">
          <source>Gets the name of the algorithm being performed.</source>
          <target state="translated">수행되는 알고리즘의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.IncrementalHash.AlgorithmName">
          <source>HMAC algorithms are prepended with "HMAC" to distinguish them from an unkeyed digest.</source>
          <target state="translated">HMAC 알고리즘이 "HMAC" 앞에 추가되어 키가 적용되지 않은 다이제스트와 구별합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.IncrementalHash.AlgorithmName">
          <source>The name of the algorithm being performed.</source>
          <target state="translated">수행되는 알고리즘의 이름입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])">
          <source>The data to process.</source>
          <target state="translated">처리할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])">
          <source>Appends the specified data to the data already processed in the hash or HMAC.</source>
          <target state="translated">해시 또는 HMAC에서 이미 처리된 데이터에 지정한 데이터를 추가합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> object has already been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> 개체가 이미 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source>The data to process.</source>
          <target state="translated">처리할 데이터입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to use from <bpt id="p1">&lt;c&gt;</bpt>data<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>데이터<ept id="p1">&lt;/c&gt;</ept>에서 사용할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source>Appends the specified number of bytes from the specified data, starting at the specified offset, to the data already processed in the hash or Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">지정한 오프셋에서 시작하여 해시 또는 HMAC(해시 기반 메시지 인증 코드)에서 이미 처리된 데이터까지, 지정한 데이터에서 지정한 바이트 수를 추가합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> or <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is larger than the length of <ph id="ph2">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="data" /&gt;</ph> 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the data length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>의 합계가 데이터 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> object has already been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> 개체가 이미 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)">
          <source>The name of the hash algorithm to perform.</source>
          <target state="translated">수행할 해시 알고리즘의 이름입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> for the specified algorithm.</source>
          <target state="translated">지정한 알고리즘에 대한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> instance ready to compute the hash algorithm specified by <ph id="ph2">&lt;paramref name="hashAlgorithm" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="hashAlgorithm" /&gt;</ph>에 의해 지정된 해시 알고리즘을 계산할 준비가 된 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">이 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> is not a known hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>은 알려진 해시 알고리즘이 아닙니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The name of the hash algorithm to perform within the HMAC.</source>
          <target state="translated">HMAC 내에서 수행하는 해시 알고리즘의 이름입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The secret key for the HMAC.</source>
          <target state="translated">HMAC에 대한 비밀 키입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The key can be of any length, but a key longer than the output size of the specified hash algorithm will be hashed to derive a correctly-sized key.</source>
          <target state="translated">키는 길이 제한이 없지만, 지정한 해시 알고리즘의 출력 크기보다 긴 키는 올바른 크기의 키를 파생하기 위해 해시됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>Therefore, the recommended size of the secret key is the output size of the specified hash algorithm.</source>
          <target state="translated">따라서 비밀 키의 권장되는 크기는 지정한 해시 알고리즘의 출력 크기입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> for the Hash-based Message Authentication Code (HMAC) algorithm using the specified hash algorithm and key.</source>
          <target state="translated">지정한 해시 알고리즘 및 키를 사용하여 HMAC(해시 기반 메시지 인증 코드) 알고리즘에 대한 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>An instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> class ready to compute the specified hash algorithm.</source>
          <target state="translated">지정한 해시 알고리즘을 계산할 준비가 된 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> 클래스의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string.</source>
          <target state="translated">이 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 또는 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph> is not a known hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>은 알려진 해시 알고리즘이 아닙니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.Dispose">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.GetHashAndReset">
          <source>Retrieves the hash or Hash-based Message Authentication Code (HMAC) for the data accumulated from prior calls to the <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" /&gt;</ph> method,  and resets the object to its initial state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" /&gt;</ph> 메서드에 대한 이전 호출에서 누적된 데이터의 해시 또는 HMAC(해시 기반 메시지 인증 코드)를 검색하고 개체를 초기 상태로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.GetHashAndReset">
          <source>The computed hash or HMAC.</source>
          <target state="translated">계산된 해시 또는 HMAC입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.IncrementalHash.GetHashAndReset">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> object has already been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.IncrementalHash" /&gt;</ph> 개체가 이미 삭제되었습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>