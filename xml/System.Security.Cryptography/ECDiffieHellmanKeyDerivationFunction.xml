<Type Name="ECDiffieHellmanKeyDerivationFunction" FullName="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0046f901fddf5edc12ddd39d2e8468d4434caf2" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46667253" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ECDiffieHellmanKeyDerivationFunction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="VB.NET" Value="Public Enum ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="C++ CLI" Value="public enum class ECDiffieHellmanKeyDerivationFunction" />
  <TypeSignature Language="F#" Value="type ECDiffieHellmanKeyDerivationFunction = " />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="ef94b-101">
        <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> 클래스에서 비밀 계약을 키 자료로 변환하는 데 사용할 키 파생 함수를 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef94b-101">Specifies the key derivation function that the <see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /> class will use to convert secret agreements into key material.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef94b-102"><xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> 열거형은 원시 비밀 계약을 키 자료로 변환 하는 데 사용할 알고리즘 형식을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="ef94b-102">The <xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material.</span></span> <span data-ttu-id="ef94b-103">비밀 계약에는 키 교환의 일부로 개인 키와 다른 당사자의 공개 키에서 생성 되는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ef94b-103">The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange.</span></span> <span data-ttu-id="ef94b-104">생성 되는 키 자료에 대 한 초기값을 이기는 <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ef94b-104">It is the seed value for the key material that is generated by the <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A> method.</span></span>  
  
 <span data-ttu-id="ef94b-105">합니다 <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> 속성에 대 한 키 파생 함수를 가져오려면이 열거형을 사용 합니다 <xref:System.Security.Cryptography.ECDiffieHellmanCng> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ef94b-105">The <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A> property uses this enumeration to get the key derivation function for the <xref:System.Security.Cryptography.ECDiffieHellmanCng> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="Hash" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberSignature Language="VB.NET" Value="Hash" />
      <MemberSignature Language="C++ CLI" Value="Hash" />
      <MemberSignature Language="F#" Value="Hash = 0" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef94b-106">키 자료를 생성하는 데 사용된 해시 알고리즘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-106">A hash algorithm is used to generate key material.</span>
          </span>
          <span data-ttu-id="ef94b-107">
            <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> 속성은 사용할 알고리즘의 이름을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-107">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /> property specifies the name of the algorithm to use.</span>
          </span>
          <span data-ttu-id="ef94b-108">알고리즘 이름을 지정하지 않으면 <see cref="T:System.Security.Cryptography.SHA256" />이 기본 알고리즘으로 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-108">If the algorithm name is not specified, <see cref="T:System.Security.Cryptography.SHA256" /> is used as the default algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef94b-109">지정할 수도 있습니다는 <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> 및 <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> 속성인 있지만 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef94b-109">You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.</span></span>  
  
 <span data-ttu-id="ef94b-110">생성 되는 키 자료 양이 지정된 된 알고리즘에 대 한 해시 값의 크기와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="ef94b-110">The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hmac">
      <MemberSignature Language="C#" Value="Hmac" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberSignature Language="VB.NET" Value="Hmac" />
      <MemberSignature Language="C++ CLI" Value="Hmac" />
      <MemberSignature Language="F#" Value="Hmac = 1" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef94b-111">HMAC(해시 기반 메시지 인증 코드) 알고리즘을 사용하여 키 자료를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-111">A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material.</span>
          </span>
          <span data-ttu-id="ef94b-112">
            <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> 속성은 사용할 키를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-112">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /> property specifies the key to use.</span>
          </span>
          <span data-ttu-id="ef94b-113">이 속성을 설정하거나 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> 속성을 <see langword="true" />로 설정해야 합니다. 이렇게 하지 않으면 <see cref="T:System.Security.Cryptography.CryptographicException" />를 사용할 때 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-113">Either this property must be set or the <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /> property must be set to <see langword="true" />; otherwise, a <see cref="T:System.Security.Cryptography.CryptographicException" /> is thrown when you use <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" />.</span>
          </span>
          <span data-ttu-id="ef94b-114">두 속성을 모두 설정하면 비밀 계약이 HMAC 키로 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-114">If both properties are set, the secret agreement is used as the HMAC key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef94b-115">지정할 수도 있습니다는 <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> 및 <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> 속성인 있지만 필요 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ef94b-115">You can also specify the <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A> and <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> properties, but they are not required.</span></span>  
  
 <span data-ttu-id="ef94b-116">생성 되는 키 자료의 양은 HMAC 값의 크기와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="ef94b-116">The amount of key material that is generated is equivalent to the size of the HMAC value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tls">
      <MemberSignature Language="C#" Value="Tls" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberSignature Language="VB.NET" Value="Tls" />
      <MemberSignature Language="C++ CLI" Value="Tls" />
      <MemberSignature Language="F#" Value="Tls = 2" Usage="System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ef94b-117">TLS(Transport Layer Security) 프로토콜을 사용하여 키 자료를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-117">The Transport Layer Security (TLS) protocol is used to generate key material.</span>
          </span>
          <span data-ttu-id="ef94b-118">
            <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> 및 <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> 속성을 설정해야 합니다. 이렇게 하지 않으면 <see cref="T:System.Security.Cryptography.CryptographicException" />를 사용할 때 <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef94b-118">The <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /> and <see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /> properties must be set; otherwise, a <see cref="T:System.Security.Cryptography.CryptographicException" /> is thrown when you use <see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef94b-119">이 값은 160 비트의 키 자료를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="ef94b-119">This value generates 160 bits of key material.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>