<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellmanKeyDerivationFunction.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a12324aa7080800b67a5c188c483c03abd8a7136.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a12324aa7080800b67a5c188c483c03abd8a7136</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
          <source>Specifies the key derivation function that the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class will use to convert secret agreements into key material.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> 클래스에서 비밀 계약을 키 자료로 변환하는 데 사용할 키 파생 함수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&gt;</ph> enumeration defines the type of algorithm that will be used to transform a raw secret agreement into key material.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction&gt;</ph> 열거형에는 키 자료에 원시 비밀 계약 변환 하는 데 사용할 알고리즘의 유형을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
          <source>The secret agreement is the value that is generated from a private key and the other party’s public key, as part of the key exchange.</source>
          <target state="translated">비밀 계약에는 개인 키와 다른 당사자의 공개 키, 키 교환의 일부로 생성 되는 값입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
          <source>It is the seed value for the key material that is generated by the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A&gt;</ph> method.</source>
          <target state="translated">에 의해 생성 된 키 자료에 대 한 시드 값은 고 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property uses this enumeration to get the key derivation function for the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> 속성은이 열거형에 대 한 키 파생 함수를 사용 하 여는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
          <source>A hash algorithm is used to generate key material.</source>
          <target state="translated">키 자료를 생성하는 데 사용된 해시 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /&gt;</ph> property specifies the name of the algorithm to use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm" /&gt;</ph> 속성은 사용할 알고리즘의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
          <source>If the algorithm name is not specified, <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA256" /&gt;</ph> is used as the default algorithm.</source>
          <target state="translated">알고리즘 이름을 지정하지 않으면 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA256" /&gt;</ph>이 기본 알고리즘으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
          <source>You can also specify the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> properties, but they are not required.</source>
          <target state="translated">지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> 속성, 있지만 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash">
          <source>The amount of key material that is generated is equivalent to the size of the hash value for the specified algorithm.</source>
          <target state="translated">생성 되는 키 자료의 양은 지정된 된 알고리즘에 대 한 해시 값의 크기와 같습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
          <source>A Hash-based Message Authentication Code (HMAC) algorithm is used to generate key material.</source>
          <target state="translated">HMAC(해시 기반 메시지 인증 코드) 알고리즘을 사용하여 키 자료를 생성합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /&gt;</ph> property specifies the key to use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey" /&gt;</ph> 속성은 사용할 키를 지정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
          <source>Either this property must be set or the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /&gt;</ph> property must be set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>; otherwise, a <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.CryptographicException" /&gt;</ph> is thrown when you use <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /&gt;</ph>.</source>
          <target state="translated">이 속성을 설정하거나 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey" /&gt;</ph> 속성을 <ph id="ph2">&lt;see langword="true" /&gt;</ph>로 설정해야 합니다. 이렇게 하지 않으면 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.CryptographicException" /&gt;</ph>를 사용할 때 <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
          <source>If both properties are set, the secret agreement is used as the HMAC key.</source>
          <target state="translated">두 속성을 모두 설정하면 비밀 계약이 HMAC 키로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
          <source>You can also specify the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> properties, but they are not required.</source>
          <target state="translated">지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> 속성, 있지만 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac">
          <source>The amount of key material that is generated is equivalent to the size of the HMAC value.</source>
          <target state="translated">생성 되는 키 자료의 양은 HMAC 값의 크기와 같습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls">
          <source>The Transport Layer Security (TLS) protocol is used to generate key material.</source>
          <target state="translated">TLS(Transport Layer Security) 프로토콜을 사용하여 키 자료를 생성합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /&gt;</ph> properties must be set; otherwise, a <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.CryptographicException" /&gt;</ph> is thrown when you use <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /&gt;</ph> 속성을 설정해야 합니다. 이렇게 하지 않으면 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.CryptographicException" /&gt;</ph>를 사용할 때 <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls">
          <source>This value generates 160 bits of key material.</source>
          <target state="translated">이 값은 160 비트의 키 자료를 생성합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>