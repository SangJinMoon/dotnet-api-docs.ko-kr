<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellmanPublicKey.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86cfad6c56d701276d8e7cde20aaee3791dbf5f37f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fad6c56d701276d8e7cde20aaee3791dbf5f37f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
          <source>Provides an abstract base class from which all <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> implementations must inherit.</source>
          <target state="translated">모든 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> 구현에서 상속해야 하는 추상 기본 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>A byte array that represents an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 개체를 나타내는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>This constructor is called by classes that derive from the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> class.</source>
          <target state="translated">이 생성자에서 파생 되는 클래스에서 호출 됩니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt;</ph> class is the only currently supported implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey&gt;</ph> 클래스는 현재 지원 되는 유일한 구현 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="keyBlob" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyBlob" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanPublicKey">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> 클래스에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> 클래스에 사용되는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method executes in two distinct scenarios:</source>
          <target state="translated">이 메서드는 두 가지 시나리오로 실행:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`true`</ph>, the method has been called directly or indirectly by a user's code.</source>
          <target state="translated">경우 <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`true`</ph>는 메서드가 호출 된 직접 또는 간접적으로 사용자의 코드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Managed and unmanaged resources can be disposed.</source>
          <target state="translated">관리 하 고 관리 되지 않는 리소스를 삭제 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`false`</ph>, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources.</source>
          <target state="translated">경우 <ph id="ph1">`disposing`</ph> equals <ph id="ph2">`false`</ph>는 메서드가 종료자 내부에서 런타임에 의해 호출 된 하 고 관리 되는 리소스를 참조 하지 않아야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>Only unmanaged resources can be disposed.</source>
          <target state="translated">관리 되지 않는 리소스에만 삭제 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.</source>
          <target state="translated">개체가 생성 하는 스레드와 관리 되지 않는 리소스에 대 한 정리 코드를 제공 해야 하는 경우이 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>When overridden in a derived class, exports the explicit <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated">파생 클래스에서 재정의하는 경우 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 개체에 대해 명시적 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>An object that represents the point on the curve for this key, using the explicit curve format.</source>
          <target state="translated">이 키에 대한 곡선의 점을 나타내는 개체입니다(명시적 곡선 형식 사용).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportExplicitParameters">
          <source>A derived class must override this method.</source>
          <target state="translated">파생 클래스가 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>When overridden in a derived class, exports the named or explicit <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> for an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated">파생 클래스에서 재정의하는 경우 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> 개체에 대해 명명된/명시적 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph>를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>An object that represents the point on the curve for this key.</source>
          <target state="translated">이 키에 대한 곡선의 점을 나타내는 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ExportParameters">
          <source>A derived class must override this method.</source>
          <target state="translated">파생 클래스가 이 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray">
          <source>Serializes the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> key BLOB to a byte array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 키 BLOB을 바이트 배열로 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray">
          <source>A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</source>
          <target state="translated">직렬화된 ECDH(Elliptic Curve Diffie-Hellman) 공개 키가 들어 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
          <source>Serializes the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> public key to an XML string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> 공개 키를 XML 문자열로 직렬화합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString">
          <source>An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key.</source>
          <target state="translated">직렬화된 ECDH(Elliptic Curve Diffie-Hellman) 공개 키가 들어 있는 XML 문자열입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>