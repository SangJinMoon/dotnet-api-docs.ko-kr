<Type Name="TripleDES" FullName="System.Security.Cryptography.TripleDES">
  <TypeSignature Language="C#" Value="public abstract class TripleDES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TripleDES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.TripleDES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TripleDES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class TripleDES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0d95a-101">모든 <see cref="T:System.Security.Cryptography.TripleDES" /> 구현이 파생되어야 하는 Triple Data Encryption Standard 알고리즘에 대한 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-101">Represents the base class for Triple Data Encryption Standard algorithms from which all <see cref="T:System.Security.Cryptography.TripleDES" /> implementations must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d95a-102"><xref:System.Security.Cryptography.TripleDES> 연속 된 3 개 반복을 사용 하 여는 <xref:System.Security.Cryptography.DES> 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-102"><xref:System.Security.Cryptography.TripleDES> uses three successive iterations of the <xref:System.Security.Cryptography.DES> algorithm.</span></span> <span data-ttu-id="0d95a-103">두 개 또는 세 개의 56 비트 키를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-103">It can use either two or three 56-bit keys.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d95a-104">새 대칭 암호화 알고리즘, 암호화 표준 AES (고급), ´ ù.</span><span class="sxs-lookup"><span data-stu-id="0d95a-104">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="0d95a-105">사용 하는 것이 좋습니다는 <xref:System.Security.Cryptography.Aes> 클래스와 해당 파생된 클래스 대신는 <xref:System.Security.Cryptography.TripleDES> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-105">Consider using the <xref:System.Security.Cryptography.Aes> class and its derived classes instead of the <xref:System.Security.Cryptography.TripleDES> class.</span></span> <span data-ttu-id="0d95a-106">사용 하 여 <xref:System.Security.Cryptography.TripleDES> 레거시 응용 프로그램 및 데이터와 호환성을 위해서만 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-106">Use <xref:System.Security.Cryptography.TripleDES> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="0d95a-107">이 알고리즘은 64 비트 단위로 증가 192 128 비트에서 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-107">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d95a-108">다음 코드 예제에서는 메서드에서는 <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> 지정 된 키 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 및 초기화 벡터 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>)로 지정 된 파일을 암호화 하 `inName`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-108">The following code example method uses <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`.</span></span> <span data-ttu-id="0d95a-109">지정한 파일에 암호화 된 결과 출력 합니다 `outName`합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-109">It then outputs the encrypted result to the file specified by `outName`.</span></span>  
  
 [!code-cpp[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/CS/source.cs#1)]
 [!code-vb[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0d95a-110">암호 해독 같은 방식으로;에서 처리할 수 있습니다. 사용 하 여 <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> 대신 <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-110">Decryption can be handled in the same way; use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>.</span></span> <span data-ttu-id="0d95a-111">동일한 키 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 및 초기화 벡터 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 암호화에 사용 된 암호를 해독 하는 파일을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-111">The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Cryptography.Aes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d95a-112"><see cref="T:System.Security.Cryptography.TripleDES" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.TripleDES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d95a-113">추상 클래스의 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-113">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="0d95a-114">응용 프로그램 코드에서는 파생된 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-114">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="0d95a-115">이 메서드는 보호 되는 필드의 초기화는 <xref:System.Security.Cryptography.SymmetricAlgorithm> 다음 표에 나열 된 기본 값에는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-115">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values listed in the following table.</span></span>  
  
|<span data-ttu-id="0d95a-116">필드</span><span class="sxs-lookup"><span data-stu-id="0d95a-116">Field</span></span>|<span data-ttu-id="0d95a-117">기본값</span><span class="sxs-lookup"><span data-stu-id="0d95a-117">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="0d95a-118">192</span><span class="sxs-lookup"><span data-stu-id="0d95a-118">192</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="0d95a-119">64</span><span class="sxs-lookup"><span data-stu-id="0d95a-119">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="0d95a-120">64</span><span class="sxs-lookup"><span data-stu-id="0d95a-120">64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0d95a-121"><see cref="T:System.Security.Cryptography.TripleDES" /> 알고리즘을 수행할 암호화 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-121">Creates an instance of a cryptographic object to perform the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.TripleDES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.TripleDES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As TripleDES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::TripleDES ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.TripleDES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d95a-122"><see cref="T:System.Security.Cryptography.TripleDES" /> 알고리즘을 수행할 암호화 개체의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-122">Creates an instance of a cryptographic object to perform the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="0d95a-123">암호화 개체의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-123">An instance of a cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d95a-124">
          <xref:System.Security.Cryptography.TripleDES> 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-124">Creates a new instance of the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d95a-125">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.TripleDES> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-125">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="0d95a-126">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.TripleDES> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-126">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-vb[Cryptography.3DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.TripleDES Create (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.TripleDES Create(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (str As String) As TripleDES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::TripleDES ^ Create(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.TripleDES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="0d95a-127">사용하려는 <see cref="T:System.Security.Cryptography.TripleDES" />의 특정 구현에 대한 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-127">The name of the specific implementation of <see cref="T:System.Security.Cryptography.TripleDES" /> to use.</span></span></param>
        <summary><span data-ttu-id="0d95a-128">암호화 개체의 인스턴스를 만들어 지정된 방식으로 <see cref="T:System.Security.Cryptography.TripleDES" /> 알고리즘을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-128">Creates an instance of a cryptographic object to perform the specified implementation of the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="0d95a-129">암호화 개체의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-129">An instance of a cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d95a-130">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.TripleDES> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-130">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="0d95a-131">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.TripleDES> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-131">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="0d95a-132">약한지 테스트할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-132">The secret key to test for weakness.</span></span></param>
        <summary><span data-ttu-id="0d95a-133">지정된 키가 약한지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-133">Determines whether the specified key is weak.</span></span></summary>
        <returns>
          <span data-ttu-id="0d95a-134">키가 약하면 <see langword="true" />이고, 약하지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-134"><see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d95a-135">약한 키는 암호를 해독 하기 쉬운는 만드는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-135">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="0d95a-136">텍스트 weak 키로 암호화 된 암호를 만들면 동일한 weak 키 다시 암호화 원본 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-136">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="0d95a-137">128 비트 모드에서에서 첫 번째 64 비트 마지막 64 비트와 동일 하는 경우의 weak 키가입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-137">In 128-bit mode, if the first 64 bits are the same as the last 64 bits, the key is weak.</span></span> <span data-ttu-id="0d95a-138">192 비트 모드에서에서 첫 번째 64 비트에서 두 번째 64 비트와 동일 하거나에서 두 번째 64 비트 마지막 64 비트와 동일 하는 경우의 weak 키가입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-138">In 192-bit mode, if the first 64 bits are the same as the second 64 bits or if the second 64 bits are the same as the last 64 bits, the key is weak.</span></span>  
  
 <span data-ttu-id="0d95a-139">약한 키 결과 설정 하려고 한 <xref:System.Security.Cryptography.CryptographicException>합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-139">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="0d95a-140">때 <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A> 호출 되는 임의 키를 만들려면 weak 키 반환 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-140">When <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0d95a-141"><paramref name="rgbKey" /> 매개 변수의 크기가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="0d95a-141">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d95a-142"><see cref="T:System.Security.Cryptography.TripleDES" /> 알고리즘에 대한 비밀 키를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-142">Gets or sets the secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <value><span data-ttu-id="0d95a-143"><see cref="T:System.Security.Cryptography.TripleDES" /> 알고리즘에 대한 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-143">The secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d95a-144">이 알고리즘은 64 비트 단위로 증가 192 128 비트에서 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="0d95a-144">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0d95a-145">키를 <see langword="null" />로 설정하려고 시도한 경우</span><span class="sxs-lookup"><span data-stu-id="0d95a-145">An attempt was made to set the key to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="0d95a-146">길이가 잘못된 키를 설정하려고 시도한 경우</span><span class="sxs-lookup"><span data-stu-id="0d95a-146">An attempt was made to set a key whose length is invalid.</span></span>  
  
 <span data-ttu-id="0d95a-147">또는</span><span class="sxs-lookup"><span data-stu-id="0d95a-147">-or-</span></span>  
  
 <span data-ttu-id="0d95a-148">weak 키를 설정하려고 시도한 경우(<see cref="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" /> 참조)</span><span class="sxs-lookup"><span data-stu-id="0d95a-148">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalBlockSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.LegalBlockSizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalBlockSizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>