<Type Name="DESCryptoServiceProvider" FullName="System.Security.Cryptography.DESCryptoServiceProvider">
  <TypeSignature Language="C#" Value="public sealed class DESCryptoServiceProvider : System.Security.Cryptography.DES" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DESCryptoServiceProvider extends System.Security.Cryptography.DES" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DESCryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DESCryptoServiceProvider&#xA;Inherits DES" />
  <TypeSignature Language="C++ CLI" Value="public ref class DESCryptoServiceProvider sealed : System::Security::Cryptography::DES" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DES</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4ffd8-101">래퍼 개체를 정의하여 데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 알고리즘의 CSP(암호화 서비스 공급자) 버전에 액세스합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-101">Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span></span> <span data-ttu-id="4ffd8-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffd8-103">이 알고리즘은 64 비트의 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-103">This algorithm supports a key length of 64 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ffd8-104">다음 코드 예제에서는 <xref:System.Security.Cryptography.DESCryptoServiceProvider> (구현의 <xref:System.Security.Cryptography.DES>) 지정 된 키 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 및 초기화 벡터 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>)로 지정 된 파일을 암호화 하 `inName`합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-104">The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`.</span></span> <span data-ttu-id="4ffd8-105">지정한 파일에 암호화 된 결과 출력 합니다 `outName`합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-105">It then outputs the encrypted result to the file specified by `outName`.</span></span>  
  
 [!code-cpp[Classic DES Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DES Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DES Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DES Example/CS/source.cs#1)]
 [!code-vb[Classic DES Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DES Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4ffd8-106">암호 해독 같은 방식으로;에서 처리할 수 있습니다. 사용 하 여 <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> 대신 <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-106">Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>.</span></span> <span data-ttu-id="4ffd8-107">동일한 키 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 및 초기화 벡터 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 암호화에 사용 된 암호를 해독 하는 파일을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-107">The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DESCryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DESCryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ffd8-108"><see cref="T:System.Security.Cryptography.DESCryptoServiceProvider" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DESCryptoServiceProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4ffd8-109">다음 코드 예제에서는 <xref:System.Security.Cryptography.DESCryptoServiceProvider> (구현의 <xref:System.Security.Cryptography.DES>) 지정 된 키 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 및 초기화 벡터 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>)로 지정 된 파일을 암호화 하 `inName`합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-109">The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`.</span></span> <span data-ttu-id="4ffd8-110">지정한 파일에 암호화 된 결과 출력 합니다 `outName`합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-110">It then outputs the encrypted result to the file specified by `outName`.</span></span>  
  
 [!code-cpp[Classic DES Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DES Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DES Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DES Example/CS/source.cs#1)]
 [!code-vb[Classic DES Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DES Example/VB/source.vb#1)]  
  
 <span data-ttu-id="4ffd8-111">암호 해독 같은 방식으로;에서 처리할 수 있습니다. 사용 하 여 <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> 대신 <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-111">Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>.</span></span> <span data-ttu-id="4ffd8-112">동일한 키 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 및 초기화 벡터 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 암호화에 사용 된 암호를 해독 하는 파일을 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-112">The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4ffd8-113">데이터 암호화 표준(<see cref="T:System.Security.Cryptography.DES" />) 암호화 서비스 공급자를 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-113">The Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) cryptographic service provider is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="4ffd8-114">대칭 알고리즘에 사용할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-114">The secret key to use for the symmetric algorithm.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="4ffd8-115">대칭 알고리즘에 사용할 초기화 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-115">The initialization vector to use for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="4ffd8-116">지정된 키(<see cref="T:System.Security.Cryptography.DES" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 데이터 암호화 표준(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) decryptor 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-116">Creates a symmetric Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) decryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="4ffd8-117">대칭 <see cref="T:System.Security.Cryptography.DES" /> decryptor 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-117">A symmetric <see cref="T:System.Security.Cryptography.DES" /> decryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffd8-118">이 메서드를 사용 하 여 생성 된 암호화 된 메시지를 해독는 <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> 동일한 매개 변수 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-118">This method decrypts an encrypted message that was created using the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4ffd8-119"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.OFB" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-119">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.</span></span>  
  
 <span data-ttu-id="4ffd8-120">또는</span><span class="sxs-lookup"><span data-stu-id="4ffd8-120">-or-</span></span>  
  
 <span data-ttu-id="4ffd8-121"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.CFB" />이고 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> 속성의 값이 8이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-121">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> and the value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> property is not 8.</span></span>  
  
 <span data-ttu-id="4ffd8-122">또는</span><span class="sxs-lookup"><span data-stu-id="4ffd8-122">-or-</span></span>  
  
 <span data-ttu-id="4ffd8-123">잘못된 키 크기가 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-123">An invalid key size was used.</span></span>  
  
 <span data-ttu-id="4ffd8-124">또는</span><span class="sxs-lookup"><span data-stu-id="4ffd8-124">-or-</span></span>  
  
 <span data-ttu-id="4ffd8-125">알고리즘 키 크기를 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-125">The algorithm key size was not available.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEncryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4ffd8-126">대칭 암호기 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-126">Creates a symmetric encryptor object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="4ffd8-127">대칭 알고리즘에 사용할 비밀 키입니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-127">The secret key to use for the symmetric algorithm.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="4ffd8-128">대칭 알고리즘에 사용할 초기화 벡터입니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-128">The initialization vector to use for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="4ffd8-129">지정된 키(<see cref="T:System.Security.Cryptography.DES" />)와 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 사용하여 대칭 데이터 암호화 표준(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) encryptor 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-129">Creates a symmetric Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) encryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="4ffd8-130">대칭 <see cref="T:System.Security.Cryptography.DES" /> encryptor 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-130">A symmetric <see cref="T:System.Security.Cryptography.DES" /> encryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffd8-131">사용 하 여 <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> 이 메서드의 결과 암호를 해독 하려면 같은 매개 변수 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-131">Use the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ffd8-132">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DESCryptoServiceProvider> 파일에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-132">The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="4ffd8-133">다음 코드 예제에 만들고 사용 하는 방법을 보여 줍니다는 <xref:System.Security.Cryptography.DESCryptoServiceProvider> 메모리에 대 한 데이터 암호화 및 해독 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-133">The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4ffd8-134"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.OFB" />인 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-134">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.</span></span>  
  
 <span data-ttu-id="4ffd8-135">또는</span><span class="sxs-lookup"><span data-stu-id="4ffd8-135">-or-</span></span>  
  
 <span data-ttu-id="4ffd8-136"><see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> 속성의 값이 <see cref="F:System.Security.Cryptography.CipherMode.CFB" />이고 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> 속성의 값이 8이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-136">The value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> property is <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> and the value of the <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> property is not 8.</span></span>  
  
 <span data-ttu-id="4ffd8-137">또는</span><span class="sxs-lookup"><span data-stu-id="4ffd8-137">-or-</span></span>  
  
 <span data-ttu-id="4ffd8-138">잘못된 키 크기가 사용된 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-138">An invalid key size was used.</span></span>  
  
 <span data-ttu-id="4ffd8-139">또는</span><span class="sxs-lookup"><span data-stu-id="4ffd8-139">-or-</span></span>  
  
 <span data-ttu-id="4ffd8-140">알고리즘 키 크기를 사용할 수 없는 경우</span><span class="sxs-lookup"><span data-stu-id="4ffd8-140">The algorithm key size was not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public override void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateIV();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ffd8-141">알고리즘에 사용할 임의의 초기화 벡터(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-141">Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to use for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffd8-142">이 메서드를 사용 하 여 임의 생성 <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> 경우 아무 것도 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-142">Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ffd8-143">알고리즘에 사용할 임의의 키(<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-143">Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) to be used for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ffd8-144">이 메서드를 사용 하 여 지정 되지 않으면는 임의 키를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-144">Use this method to generate a random key when none is specified.</span></span> <span data-ttu-id="4ffd8-145">이 메서드는 weak 키를 반환 하지 것입니다 (참조 <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) 또는 semi-weak 키 (참조 <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).</span><span class="sxs-lookup"><span data-stu-id="4ffd8-145">This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).</span></span>  
  
 <span data-ttu-id="4ffd8-146">이 알고리즘은 64 비트의 키 길이 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="4ffd8-146">This algorithm supports a key length of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>