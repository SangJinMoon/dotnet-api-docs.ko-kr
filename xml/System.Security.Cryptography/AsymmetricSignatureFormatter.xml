<Type Name="AsymmetricSignatureFormatter" FullName="System.Security.Cryptography.AsymmetricSignatureFormatter">
  <TypeSignature Language="C#" Value="public abstract class AsymmetricSignatureFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricSignatureFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricSignatureFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricSignatureFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricSignatureFormatter abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4aab-101">모든 비대칭 서명 포맷터의 구현이 파생되는 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-101">Represents the base class from which all implementations of asymmetric signature formatters derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aab-102">비대칭 서명 포맷터의 구현을 사용 하 여 확인 하는 디지털 서명을 만드는 <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-102">Asymmetric signature formatters create digital signatures that are verified using implementations of <xref:System.Security.Cryptography.AsymmetricSignatureDeformatter>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricSignatureFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricSignatureFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4aab-103">
          <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" />의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-103">Initializes a new instance of <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aab-104">추상 클래스의 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-104">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="c4aab-105">응용 프로그램 코드에서는 파생된 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-105">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="c4aab-106">구현을 사용 <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey%2A> 및 <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm%2A> 키 및 해시 알고리즘의 구현을 호출 하기 전에 설정할 <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-106">Use implementations of <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey%2A> and <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm%2A> to set the key and hash algorithm before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSignature">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4aab-107">서명을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-107">Creates the signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public abstract byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash"><span data-ttu-id="c4aab-108">서명할 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-108">The data to be signed.</span></span></param>
        <summary><span data-ttu-id="c4aab-109">파생 클래스에서 재정의된 경우 지정된 데이터에 대한 서명을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-109">When overridden in a derived class, creates the signature for the specified data.</span></span></summary>
        <returns><span data-ttu-id="c4aab-110"><paramref name="rgbHash" /> 매개 변수의 디지털 서명입니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-110">The digital signature for the <paramref name="rgbHash" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aab-111">이 메서드를 호출 하기 전에 키와 해시 알고리즘을 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-111">You must specify a key and a hash algorithm before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public virtual byte[] CreateSignature (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] CreateSignature(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSignature (hash As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ CreateSignature(System::Security::Cryptography::HashAlgorithm ^ hash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash"><span data-ttu-id="c4aab-112">서명을 만드는 데 사용할 해시 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-112">The hash algorithm to use to create the signature.</span></span></param>
        <summary><span data-ttu-id="c4aab-113">지정된 해시 값의 서명을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-113">Creates the signature from the specified hash value.</span></span></summary>
        <returns><span data-ttu-id="c4aab-114">지정된 해시 값의 서명입니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-114">The signature for the specified hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aab-115">이 메서드는 해시를 설정, 사용할 알고리즘을 입력된 해시 알고리즘 값의 서명을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-115">This method sets the hash algorithm to be used, then returns the signature of the input hash algorithm value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c4aab-116"><paramref name="hash" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c4aab-116">The <paramref name="hash" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetHashAlgorithm">
      <MemberSignature Language="C#" Value="public abstract void SetHashAlgorithm (string strName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHashAlgorithm(string strName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetHashAlgorithm (strName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetHashAlgorithm(System::String ^ strName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strName"><span data-ttu-id="c4aab-117">서명을 만드는 데 사용할 해시 알고리즘의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-117">The name of the hash algorithm to use for creating the signature.</span></span></param>
        <summary><span data-ttu-id="c4aab-118">파생 클래스에서 재정의된 경우 서명을 만드는 데 사용할 해시 알고리즘을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-118">When overridden in a derived class, sets the hash algorithm to use for creating the signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aab-119">해시 알고리즘의 구현을 호출 하기 전에 설정 해야 <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-119">You must set a hash algorithm before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKey(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetKey (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c4aab-120">서명을 만드는데 사용할 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" />의 구현 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-120">The instance of the implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> to use to create the signature.</span></span></param>
        <summary><span data-ttu-id="c4aab-121">파생 클래스에서 재정의된 경우 서명을 만드는 데 사용할 비대칭 알고리즘을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-121">When overridden in a derived class, sets the asymmetric algorithm to use to create the signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4aab-122">구현을 호출 하기 전에 키를 설정 해야 <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4aab-122">You must set a key before calling an implementation of <xref:System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>