<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICryptoTransform.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac563652f4d19f1a31232685084d128de9a1c2d9896.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63652f4d19f1a31232685084d128de9a1c2d9896</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ICryptoTransform">
          <source>Defines the basic operations of cryptographic transformations.</source>
          <target state="translated">암호화 변형의 기본 작업을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ICryptoTransform">
          <source>Hash algorithms are an example of cryptographic transformations (<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>).</source>
          <target state="translated">해시 알고리즘은 암호화 변환의 예제 (<ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">현재 변형을 다시 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current transform can be reused; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 변환을 다시 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
          <source>Gets a value indicating whether multiple blocks can be transformed.</source>
          <target state="translated">여러 개의 블록을 변환할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if multiple blocks can be transformed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">여러 개의 블록을 변환할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 변환할 수 없으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
          <source>Gets the input block size.</source>
          <target state="translated">입력 블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
          <source>The size of the input data blocks in bytes.</source>
          <target state="translated">입력 데이터 블록의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
          <source>Gets the output block size.</source>
          <target state="translated">출력 블록 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
          <source>The size of the output data blocks in bytes.</source>
          <target state="translated">출력 데이터 블록의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The input for which to compute the transform.</source>
          <target state="translated">변환을 계산하는 입력입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 입력 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">데이터로 사용할 입력 바이트 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The output to which to write the transform.</source>
          <target state="translated">변환을 기록하는 것으로의 출력입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">데이터 쓰기를 시작할 출력 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Transforms the specified region of the input byte array and copies the resulting transform to the specified region of the output byte array.</source>
          <target state="translated">입력 바이트 배열의 지정된 영역을 변환한 다음 변환 결과를 출력 바이트 배열의 지정된 영역으로 복사합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes written.</source>
          <target state="translated">쓰여진 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The return value of <ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform.TransformBlock%2A&gt;</ph> is the number of bytes returned to <ph id="ph2">`outputBuffer`</ph> and is always less than or equal to <ph id="ph3">&lt;xref:System.Security.Cryptography.ICryptoTransform.OutputBlockSize&gt;</ph>.</source>
          <target state="translated">반환 값 <ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform.TransformBlock%2A&gt;</ph> 에 반환 된 바이트 수는 <ph id="ph2">`outputBuffer`</ph> 되며 항상 보다 작거나 <ph id="ph3">&lt;xref:System.Security.Cryptography.ICryptoTransform.OutputBlockSize&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks&gt;</ph> is <ph id="ph2">`true`</ph>, then <ph id="ph3">`inputCount`</ph> must be any positive multiple of <ph id="ph4">&lt;xref:System.Security.Cryptography.ICryptoTransform.InputBlockSize&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks&gt;</ph> 은 <ph id="ph2">`true`</ph>, 다음 <ph id="ph3">`inputCount`</ph> 의 양의 배수 여야 <ph id="ph4">&lt;xref:System.Security.Cryptography.ICryptoTransform.InputBlockSize&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The input for which to compute the transform.</source>
          <target state="translated">변환을 계산하는 입력입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">데이터 사용을 시작할 바이트 배열의 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">데이터로 사용할 바이트 배열의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Transforms the specified region of the specified byte array.</source>
          <target state="translated">지정된 바이트 배열의 지정된 영역을 변환합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The computed transform.</source>
          <target state="translated">연산된 변환입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock%2A&gt;</ph> is a special function for transforming the last block or a partial block in the stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock%2A&gt;</ph> 마지막 블록 또는 스트림의 부분 블록을 변환 하기 위한 특수 함수가입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>It returns a new array that contains the remaining transformed bytes.</source>
          <target state="translated">나머지 변환 된 바이트를 포함 하는 새 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>A new array is returned, because the amount of information returned at the end might be larger than a single block when padding is added.</source>
          <target state="translated">안쪽 여백을 추가 될 때 끝에 반환 될 정보의 양을 단일 블록 보다 크기가 클 수도 있으므로 새 배열을 반환 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>