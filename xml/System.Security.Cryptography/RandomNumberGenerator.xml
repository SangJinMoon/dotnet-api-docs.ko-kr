<Type Name="RandomNumberGenerator" FullName="System.Security.Cryptography.RandomNumberGenerator">
  <TypeSignature Language="C#" Value="public abstract class RandomNumberGenerator : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RandomNumberGenerator extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RandomNumberGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RandomNumberGenerator&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RandomNumberGenerator abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="03912-101">임의의 암호화 수 생성기의 모든 구현이 파생될 추상 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="03912-101">Represents the abstract class from which all implementations of cryptographic random number generators derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="03912-102">임의의 암호화 수 생성기 임의의 암호화 수준 값을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="03912-102">Cryptographic random number generators create cryptographically strong random values.</span></span>

<span data-ttu-id="03912-103">호출 하는 난수 생성기를 만들려면는 @System.Security.Cryptography.RandomNumberGenerator.Create 메서드.</span><span class="sxs-lookup"><span data-stu-id="03912-103">To create a random number generator, call the @System.Security.Cryptography.RandomNumberGenerator.Create method.</span></span> <span data-ttu-id="03912-104">파생된 클래스의 생성자 호출을 통해 이것은 기본 설정 된 다른 @System.Security.Cryptography.RNGCryptoServiceProvider, 모든 플랫폼에서 사용할 수 없으면입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-104">This is prefered over calling the constructor of the derived class @System.Security.Cryptography.RNGCryptoServiceProvider, which is not available on all platforms.</span></span>
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RandomNumberGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RandomNumberGenerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03912-105">
          <see cref="T:System.Security.Cryptography.RandomNumberGenerator" />의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-105">Initializes a new instance of <see cref="T:System.Security.Cryptography.RandomNumberGenerator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03912-106">추상 클래스의 인스턴스를 만들 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="03912-106">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="03912-107">응용 프로그램 코드에서는 파생된 클래스의 새 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="03912-107">Application code will create a new instance of a derived class.</span></span> <span data-ttu-id="03912-108">임의의 암호화 수 생성기의 구현, 파생된 클래스를 사용 하 여 <xref:System.Security.Cryptography.RNGCryptoServiceProvider>합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-108">For an implementation of a cryptographic random number generator, use the derived class <xref:System.Security.Cryptography.RNGCryptoServiceProvider>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03912-109">임의의 암호화 수 생성기의 구현 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="03912-109">Creates an instance of an implementation of a cryptographic random number generator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.RandomNumberGenerator Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.RandomNumberGenerator Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::RandomNumberGenerator ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03912-110">임의의 데이터를 생성하는 데 사용할 수 있는 임의의 암호화 수 생성기의 기본 구현 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="03912-110">Creates an instance of the default implementation of a cryptographic random number generator that can be used to generate random data.</span></span></summary>
        <returns><span data-ttu-id="03912-111">임의의 암호화 수 생성기의 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-111">A new instance of a cryptographic random number generator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.RandomNumberGenerator Create (string rngName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.RandomNumberGenerator Create(string rngName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (rngName As String) As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::RandomNumberGenerator ^ Create(System::String ^ rngName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rngName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rngName"><span data-ttu-id="03912-112">사용할 난수 생성기 구현의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-112">The name of the random number generator implementation to use.</span></span></param>
        <summary><span data-ttu-id="03912-113">임의의 암호화 숫자 생성기의 지정된 구현 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="03912-113">Creates an instance of the specified implementation of a cryptographic random number generator.</span></span></summary>
        <returns><span data-ttu-id="03912-114">임의의 암호화 수 생성기의 새 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-114">A new instance of a cryptographic random number generator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03912-115">파생 클래스에서 재정의된 경우 <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> 클래스의 현재 인스턴스에서 사용하는 관리되지 않는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-115">When overridden in a derived class, releases the unmanaged resources used by the current instance of the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03912-116">파생 클래스에서 재정의되는 경우 <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> 클래스의 현재 인스턴스에서 사용하는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-116">When overridden in a derived class, releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03912-117">`Dispose` 사용을 마치면 <xref:System.Security.Cryptography.RandomNumberGenerator>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-117">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span> <span data-ttu-id="03912-118">`Dispose` 메서드를 사용하면 <xref:System.Security.Cryptography.RandomNumberGenerator>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="03912-118">The `Dispose` method leaves the <xref:System.Security.Cryptography.RandomNumberGenerator> in an unusable state.</span></span> <span data-ttu-id="03912-119">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야는 <xref:System.Security.Cryptography.RandomNumberGenerator> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <xref:System.Security.Cryptography.RandomNumberGenerator> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-119">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.RandomNumberGenerator> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.RandomNumberGenerator> was occupying.</span></span>  
  
 <span data-ttu-id="03912-120">자세한 내용은 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-120">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="03912-121">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Security.Cryptography.RandomNumberGenerator>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="03912-121">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span> <span data-ttu-id="03912-122">이렇게 하지 않으면 가비지 수집기가 <xref:System.Security.Cryptography.RandomNumberGenerator> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="03912-122">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.RandomNumberGenerator> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="03912-123">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-123"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="03912-124">파생 클래스에서 재정의된 경우 <see cref="T:System.Security.Cryptography.RandomNumberGenerator" />에서 사용하는 관리되지 않는 리소스를 해제하고 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="03912-124">When overridden in a derived class, releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.RandomNumberGenerator" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03912-125">이 메서드는 public `Dispose()` 메서드 및 `Finalize` 메서드.</span><span class="sxs-lookup"><span data-stu-id="03912-125">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="03912-126">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-126">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="03912-127">`Finalize` 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-127">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="03912-128">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Security.Cryptography.RandomNumberGenerator>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-128">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.RandomNumberGenerator> references.</span></span> <span data-ttu-id="03912-129">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-129">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="03912-130"><see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="03912-130"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="03912-131">재정의 하는 경우 <see langword="Dispose(Boolean)" />한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 하십시오 <see langword="Dispose" />합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-131">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="03912-132">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-132">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="03912-133">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see langword="Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-133">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public static void Fill (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.Fill(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(Span&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="03912-134">강력하게 암호화된 임의의 값 시퀀스로 바이트 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="03912-134">Fills an array of bytes with a cryptographically strong random sequence of values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract void GetBytes (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GetBytes (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GetBytes(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="03912-135">임의의 암호화 수준 바이트로 채울 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-135">The array to fill with cryptographically strong random bytes.</span></span></param>
        <summary><span data-ttu-id="03912-136">파생 클래스에 재정의할 경우, 임의의 암호화 수준 시퀀스 값으로 바이트 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="03912-136">When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03912-137">바이트 배열의 길이 생성 된 임의 바이트 수를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-137">The length of the byte array determines how many random bytes are produced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03912-138">다음 예제에서는 100 바이트 길이의 임의 시퀀스를 만들어에 저장 합니다. `random`합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-138">The following example creates a random sequence 100 bytes long and stores it in `random`.</span></span>  
  
 [!code-cpp[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/CS/source.cs#1)]
 [!code-vb[Classic RandomNumberGenerator.GetBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual void GetBytes (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetBytes (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetBytes(Span&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual void GetBytes (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetBytes (data As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetBytes(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="03912-139">임의의 암호화 수준 바이트로 채울 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-139">The array to fill with cryptographically strong random bytes.</span></span></param>
        <param name="offset"><span data-ttu-id="03912-140">채우기 작업을 시작할 배열의 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-140">The index of the array to start the fill operation.</span></span></param>
        <param name="count"><span data-ttu-id="03912-141">채울 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-141">The number of bytes to fill.</span></span></param>
        <summary><span data-ttu-id="03912-142">임의의 암호화 수준 시퀀스 값으로 지정된 바이트 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="03912-142">Fills the specified byte array with a cryptographically strong random sequence of values.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="03912-143"><paramref name="data" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="03912-143"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="03912-144"><paramref name="offset" /> 또는 <paramref name="count" />가 0보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="03912-144"><paramref name="offset" /> or <paramref name="count" /> is less than 0</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="03912-145"><paramref name="offset" /> 더하기 <paramref name="count" />가 <paramref name="data" />의 길이를 초과합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-145"><paramref name="offset" /> plus <paramref name="count" /> exceeds the length of <paramref name="data" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNonZeroBytes">
      <MemberSignature Language="C#" Value="public virtual void GetNonZeroBytes (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNonZeroBytes(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetNonZeroBytes (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetNonZeroBytes(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="03912-146">강력하게 암호화된 임의의 0이 아닌 바이트로 채울 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="03912-146">The array to fill with cryptographically strong random nonzero bytes.</span></span></param>
        <summary><span data-ttu-id="03912-147">파생 클래스에 재정의할 경우, 0이 아닌 임의의 암호화 수준 시퀀스 값으로 바이트 배열을 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="03912-147">When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of nonzero values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03912-148">바이트 배열의 길이 생성 된 임의 바이트 수를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-148">The length of the byte array determines how many random bytes are produced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="03912-149">다음 예제에서는 100 0이 아닌 바이트의 임의 시퀀스를 만들고 저장 `random`합니다.</span><span class="sxs-lookup"><span data-stu-id="03912-149">The following example creates a random sequence of 100 nonzero bytes and stores it in `random`.</span></span>  
  
 [!code-cpp[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/CS/source.cs#1)]
 [!code-vb[Classic RandomNumberGenerator.GetNonZeroBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic RandomNumberGenerator.GetNonZeroBytes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonZeroBytes">
      <MemberSignature Language="C#" Value="public virtual void GetNonZeroBytes (Span&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetNonZeroBytes(valuetype System.Span`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetNonZeroBytes (data As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetNonZeroBytes(Span&lt;System::Byte&gt; data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>