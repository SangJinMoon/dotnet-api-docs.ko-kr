<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICspAsymmetricAlgorithm.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54e7cf857a9f61f7e1058cc57edf662ddbe6104a6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e7cf857a9f61f7e1058cc57edf662ddbe6104a6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ICspAsymmetricAlgorithm">
          <source>Defines methods that allow an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> class to enumerate key container information, and import and export Microsoft Cryptographic API (CAPI)–compatible key blobs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> 클래스에서 키 컨테이너 정보를 열거하며 Microsoft CAPI(암호화 API) 호환 키 Blob을 가져오고 내보낼 수 있도록 하는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ICspAsymmetricAlgorithm">
          <source>Classes that extend the <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> class should implement the <ph id="ph2">&lt;xref:System.Security.Cryptography.ICspAsymmetricAlgorithm&gt;</ph> interface to enumerate key container information using a <ph id="ph3">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object, and to import and export Microsoft Cryptographic API (CAPI)–compatible key blobs.</source>
          <target state="translated">확장 하는 클래스는 <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> 클래스를 구현 해야는 <ph id="ph2">&lt;xref:System.Security.Cryptography.ICspAsymmetricAlgorithm&gt;</ph> 인터페이스를 사용 하 여 키 컨테이너 정보를 열거는 <ph id="ph3">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> 개체를 가져오거나 내보내고 Microsoft CAPI (암호화 API)를 – 호환 키 blob입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
          <target state="translated">암호화 키 쌍에 대한 추가 정보를 설명하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> object that describes additional information about a cryptographic key pair.</source>
          <target state="translated">암호화 키 쌍에 대한 추가 정보를 설명하는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo">
          <source>The returned <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> object specifies whether the key is exportable, and provides the key container name, information about the provider, and other information.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Security.Cryptography.CspKeyContainerInfo&gt;</ph> 개체의 키를 내보낼 수 및 키 컨테이너 이름, 공급자에 대 한 정보 및 기타 정보를 제공 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the private key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">개인 키를 포함하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)">
          <source>Exports a blob that contains the key information associated with an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> 개체와 연결된 키 정보를 포함하는 BLOB을 내보냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)">
          <source>A byte array that contains the key information associated with an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> 개체와 연결된 키 정보를 포함하는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob%2A&gt;</ph> method returns a blob that contains key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob%2A&gt;</ph> 메서드와는 관리 되지 않는 Microsoft CAPI (암호화 API) 호환 되는 키 정보를 포함 하는 blob를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])">
          <source>A byte array that represents an asymmetric key blob.</source>
          <target state="translated">비대칭 키 Blob을 나타내는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])">
          <source>Imports a blob that represents asymmetric key information.</source>
          <target state="translated">비대칭 키 정보를 나타내는 Blob을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob%2A&gt;</ph> method initializes the key data of an <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob%2A&gt;</ph> 메서드는 키 데이터의 초기화는 <ph id="ph2">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> 개체와 관리 되지 않는 Microsoft CAPI (암호화 API) 호환 되는 blob을 사용 하 여 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>