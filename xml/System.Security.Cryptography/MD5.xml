<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MD5.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5835e1c73246ada7e2c5f323ea0d8e2d3d81daac8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">835e1c73246ada7e2c5f323ea0d8e2d3d81daac8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.MD5">
          <source>Represents the abstract class from which all implementations of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> hash algorithm inherit.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> 해시 알고리즘의 모든 구현이 상속될 추상 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length.</source>
          <target state="translated">해시 함수 맵 길이의 이진 문자열은 임의의 고정 길이의 작은 이진 문자열에 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value; that is, hashes of two sets of data should match if the corresponding data also matches.</source>
          <target state="translated">암호화 해시 함수에 계산 상 적합; 같은 값으로 해시는 두 가지 입력을 찾을 수 없는 아닌지 속성 즉, 해당 데이터도 일치 하는 경우 두 데이터 집합의 해시 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>Small changes to the data result in large, unpredictable changes in the hash.</source>
          <target state="translated">약간 변경 된 데이터에 큰, 예측할 수 없는 해시 변화 시킵니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>The hash size for the <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> algorithm is 128 bits.</source>
          <target state="translated">에 대 한 해시 크기는 <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> 알고리즘은 128 비트입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A&gt;</ph> methods of the <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> class return the hash as an array of 16 bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> 클래스 16 바이트의 배열로 해시를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>Note that some MD5 implementations produce a 32-character, hexadecimal-formatted hash.</source>
          <target state="translated">참고 일부 MD5 구현 32 자 16 진수 지정 하거나, 해시를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>To interoperate with such implementations, format the return value of the <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A&gt;</ph> methods as a hexadecimal value.</source>
          <target state="translated">이러한 구현은와 상호 운용, 반환 값의 서식을 <ph id="ph1">&lt;xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A&gt;</ph> 16 진수 값과 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>Newer hash functions, such as the Secure Hash Algorithms SHA-256 and SHA-512, are available.</source>
          <target state="translated">보안 해시 알고리즘 s h A-256 및 s h A-512와 같은 최신 해시 함수는 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA256&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA512&gt;</ph> class instead of the <ph id="ph3">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> class.</source>
          <target state="translated">사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Security.Cryptography.SHA256&gt;</ph> 클래스 또는 <ph id="ph2">&lt;xref:System.Security.Cryptography.SHA512&gt;</ph> 클래스 대신는 <ph id="ph3">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> only for compatibility with legacy applications and data.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> 레거시 응용 프로그램 및 데이터와 호환성을 위해서만 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>The following code example computes the <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> 문자열의 해시 값을 32 자 16 진수 형식, 문자열로 해시 반환 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MD5">
          <source>The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.</source>
          <target state="translated">이 코드 예제에서 만든 해시 문자열 MD5 해시 하는 함수 (모든 플랫폼)에서 32 자 16 진수 지정 하거나, 해시 문자열을 만들고 호환 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MD5.#ctor">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph>의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.MD5.#ctor">
          <source>To create an instance of the <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> class, use the <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5.Create%2A&gt;</ph> method.</source>
          <target state="translated">인스턴스를 만드는 <ph id="ph1">&lt;xref:System.Security.Cryptography.MD5&gt;</ph> 클래스를 사용 하 여는 <ph id="ph2">&lt;xref:System.Security.Cryptography.MD5.Create%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.MD5">
          <source>Allows specific implementations of this abstract class to be created.</source>
          <target state="translated">앞으로 만들 이 추상 클래스의 특정한 구현을 허락합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MD5.Create">
          <source>Creates an instance of the default implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> 해시 알고리즘의 기본 구현 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MD5.Create">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> 해시 알고리즘의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MD5.Create">
          <source>The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</source>
          <target state="translated">FIPS(Federal Information Processing Standards) 모드를 사용하도록 설정한 상태에서 알고리즘이 사용되었지만 이 알고리즘이 FIPS와 호환되지 않는 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MD5.Create(System.String)">
          <source>The name of the specific implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> to use.</source>
          <target state="translated">사용하려는 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph>의 특정 구현에 대한 이름입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MD5.Create(System.String)">
          <source>Creates an instance of the specified implementation of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> hash algorithm.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> 해시 알고리즘의 지정된 구현의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MD5.Create(System.String)">
          <source>A new instance of the specified implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph>의 지정된 구현의 새 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.MD5.Create(System.String)">
          <source>Possible values for <ph id="ph1">`algName`</ph> are: <ph id="ph2">`System.Security.Cryptography.MD5`</ph>, <ph id="ph3">`MD5`</ph>, <ph id="ph4">`System.Security.Cryptography.MD5CryptoServiceProvider`</ph>, and <ph id="ph5">`System.Security.Cryptography.MD5Managed`</ph>.</source>
          <target state="translated">가능한 값에 대 한 <ph id="ph1">`algName`</ph> 됩니다: <ph id="ph2">`System.Security.Cryptography.MD5`</ph>, <ph id="ph3">`MD5`</ph>, <ph id="ph4">`System.Security.Cryptography.MD5CryptoServiceProvider`</ph>, 및 <ph id="ph5">`System.Security.Cryptography.MD5Managed`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MD5.Create(System.String)">
          <source>The algorithm described by the <ph id="ph1">&lt;paramref name="algName" /&gt;</ph> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algName" /&gt;</ph> 매개 변수에서 설명하는 알고리즘이 FIPS(Federal Information Processing Standards) 모드를 설정하여 사용되었지만 FIPS 호환이 아닌 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>