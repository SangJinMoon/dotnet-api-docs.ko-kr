<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Binary.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac581a70bdf5bb482364db23cd76201435d5f64f14b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81a70bdf5bb482364db23cd76201435d5f64f14b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Binary">
          <source>Represents an immutable block of binary data.</source>
          <target state="translated">변경할 수 없는 이진 데이터 블록을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.#ctor(System.Byte[])">
          <source>The bytes representing the binary data.</source>
          <target state="translated">이진 데이터를 나타내는 바이트입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.#ctor(System.Byte[])">
          <source>When<ph id="ph1">`null`</ph> is passed to this constructor instead of the required array of bytes, a <ph id="ph2">&lt;xref:System.ArgumentNullException?displayProperty=nameWithType&gt;</ph> exception is thrown.</source>
          <target state="translated">때<ph id="ph1">`null`</ph> , 바이트의 필수 배열 대신이 생성자에 전달 되는 <ph id="ph2">&lt;xref:System.ArgumentNullException?displayProperty=nameWithType&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.#ctor(System.Byte[])">
          <source>Do not rely on this behavior because it may change in the future.</source>
          <target state="translated">나중에 변경 될 수 있으므로이 동작에 의존 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Binary">
          <source>Determines whether two binary objects are equal.</source>
          <target state="translated">두 이진 개체가 서로 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to which the current object is being compared.</source>
          <target state="translated">현재 개체와 비교할 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)">
          <source>Determines whether two binary objects are equal.</source>
          <target state="translated">두 이진 개체가 서로 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two binary objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">두 이진 개체가 서로 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>과 비교할 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>가 현재 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>와 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two binary objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">두 이진 개체가 서로 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.GetHashCode">
          <source>Serves as a hash function for a particular type.</source>
          <target state="translated">특정 형식에 대한 해시 함수 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.GetHashCode">
          <source>A hash code for the current binary object.</source>
          <target state="translated">현재 이진 개체의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Binary.Length">
          <source>Gets the length of the binary object.</source>
          <target state="translated">이진 개체의 길이를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Binary.Length">
          <source>An integer representing the length.</source>
          <target state="translated">길이를 나타내는 정수입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>First binary object.</source>
          <target state="translated">첫 번째 이진 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Second binary object.</source>
          <target state="translated">두 번째 이진 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Describes the equality relationship between two binary objects.</source>
          <target state="translated">두 이진 개체 간의 같음 관계를 설명합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary objects are equal; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이진 개체가 서로 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Returns <ph id="ph1">`true`</ph> if both are <ph id="ph2">`null`</ph> but returns <ph id="ph3">`false`</ph> if only one is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">반환 <ph id="ph1">`true`</ph> 둘 다 <ph id="ph2">`null`</ph> 반환 하지만 <ph id="ph3">`false`</ph> 하나만 하나 이면 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>The array of bytes to convert into an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> 형식의 인스턴스로 변환할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>Enables arrays of bytes to be implicitly coerced to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> type in a programming language.</source>
          <target state="translated">바이트 배열을 프로그래밍 언어의 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> 형식으로 암시적으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> class containing the coerced value.</source>
          <target state="translated">변환된 값이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>When <ph id="ph1">`null`</ph> is passed to this operator instead of the required array of bytes, a [Implicit Conversion (Byte<ph id="ph2">\&lt;</ph>xref:System.ArgumentNullException?displayProperty=nameWithType&gt; exception is thrown.</source>
          <target state="translated">때 <ph id="ph1">`null`</ph> , 바이트의 필수 배열 대신이 운영자에 게 전달 되는 [암시적으로 변환 (바이트<ph id="ph2">\&lt;</ph>xref:System.ArgumentNullException?displayProperty=nameWithType &gt; 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>Do not rely on this behavior because it may change in the future.</source>
          <target state="translated">나중에 변경 될 수 있으므로이 동작에 의존 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>The first binary object.</source>
          <target state="translated">첫 번째 이진 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>The second binary object.</source>
          <target state="translated">두 번째 이진 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Describes the inequality relationship between two binary objects.</source>
          <target state="translated">두 이진 개체 간의 다름 관계를 설명합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary objects are not equal; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이진 개체가 서로 같지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Returns <ph id="ph1">`false`</ph> if both are <ph id="ph2">`null`</ph>, but returns <ph id="ph3">`true`</ph> if either is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">반환 <ph id="ph1">`false`</ph> 둘 다 <ph id="ph2">`null`</ph>를 반환 하지만 <ph id="ph3">`true`</ph> 하나에 해당 하는 경우 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.ToArray">
          <source>Returns an array of bytes that represents the current binary object.</source>
          <target state="translated">현재 이진 개체를 나타내는 바이트 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.ToArray">
          <source>A byte array that contains the value of the current binary object.</source>
          <target state="translated">현재 이진 개체의 값이 들어 있는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current binary object.</source>
          <target state="translated">현재 이진 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current binary object.</source>
          <target state="translated">현재 이진 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>