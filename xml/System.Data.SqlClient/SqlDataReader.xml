<Type Name="SqlDataReader" FullName="System.Data.SqlClient.SqlDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a701a231397a479eaff7504852800da0b9d22c9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataReader extends System.Data.Common.DbDataReader implements class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataReader&#xA;Inherits DbDataReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataReader : System::Data::Common::DbDataReader, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlDataReader = class&#xA;    inherit DbDataReader&#xA;    interface IDataReader&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="57c41-101">SQL Server 데이터베이스에서 정방향 전용 행 스트림을 읽는 방법을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="57c41-101">Provides a way of reading a forward-only stream of rows from a SQL Server database.</span>
      </span>
      <span data-ttu-id="57c41-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="57c41-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-103">만들려면는 <xref:System.Data.SqlClient.SqlDataReader>를 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 의 메서드는 <xref:System.Data.SqlClient.SqlCommand> 직접 생성자를 사용 하는 대신 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-103">To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="57c41-104">동안는 <xref:System.Data.SqlClient.SqlDataReader> 사용 되는 연결 된 <xref:System.Data.SqlClient.SqlConnection> 역할을 수행는 <xref:System.Data.SqlClient.SqlDataReader>, 되며 다른 작업이 없을 수행할 수 있습니다는 <xref:System.Data.SqlClient.SqlConnection> 닫지 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-104">While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it.</span></span> <span data-ttu-id="57c41-105">이 때 까지는 <xref:System.Data.SqlClient.SqlDataReader.Close%2A> 의 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-105">This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called.</span></span> <span data-ttu-id="57c41-106">호출한 후까지 출력 매개 변수를 검색할 수 없습니다 예를 들어 <xref:System.Data.SqlClient.SqlDataReader.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="57c41-107">변경 내용을 결과 데이터를 읽는 동안 다른 프로세스 또는 스레드별로 집합의 사용자에 게 표시 될 수 있습니다는 `SqlDataReader`합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`.</span></span> <span data-ttu-id="57c41-108">그러나 정확한 동작은 타이밍에 따라 변합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-108">However, the precise behavior is timing dependent.</span></span>  
  
 <span data-ttu-id="57c41-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> 및 <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.SqlClient.SqlDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span> <span data-ttu-id="57c41-110">하지만 <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> 속성에 액세스할 수 동안는 <xref:System.Data.SqlClient.SqlDataReader> 존재 항상 호출 <xref:System.Data.SqlClient.SqlDataReader.Close%2A> 의 값을 반환 하기 전에 <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> 반환 값이 정확 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-110">Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.</span></span>  
  
 <span data-ttu-id="57c41-111">순차적 액세스를 사용 하는 경우 (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>), <xref:System.InvalidOperationException> 발생 합니다는 <xref:System.Data.SqlClient.SqlDataReader> 위치는 앞 및 다른 읽기 이전 열에서 작업이 시도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-111">When using sequential access (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57c41-112">최적의 성능을 위해서는 <xref:System.Data.SqlClient.SqlDataReader> 불필요 한 개체를 만들거나 데이터의 불필요 한 복사본을 만들지를 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-112">For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data.</span></span> <span data-ttu-id="57c41-113">따라서 여러 번 호출 메서드에 같은 <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> 동일한 개체에 대 한 참조를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-113">Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object.</span></span> <span data-ttu-id="57c41-114">와 같은 방법으로 반환 되는 개체의 기본 값을 수정 하는 경우 각별히 주의 해야 <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-114">Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57c41-115">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, 및 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-115">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="57c41-116">이 예제에서는 콘솔 창에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-116">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="57c41-117">다음 코드를 닫습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-117">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="57c41-118"><xref:System.Data.SqlClient.SqlConnection> 끝날 때 자동으로 닫혀는 `using` 코드 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-118">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlDataReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57c41-119">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체를 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-119">Closes the <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-120">명시적으로 호출 해야는 <xref:System.Data.SqlClient.SqlDataReader.Close%2A> 메서드를 사용 하 여 통해는 <xref:System.Data.SqlClient.SqlDataReader> 사용할 연결 된 <xref:System.Data.SqlClient.SqlConnection> 다른 용도로 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-120">You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose.</span></span>  
  
 <span data-ttu-id="57c41-121">`Close` 메서드 출력 매개 변수, 반환 값에 대 한 값을 입력 하 고 `RecordsAffected`를 닫는 데 걸리는 시간은 증가 `SqlDataReader` 크거나 복잡 한 쿼리를 처리할 때 사용 했던 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-121">The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query.</span></span> <span data-ttu-id="57c41-122">반환 값과는 쿼리에 의해 영향 받는 레코드 수 없는 경우 중요 한를 닫는 데 걸리는 시간은 `SqlDataReader` 호출 하 여 줄일 수는 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> 메서드는 연관 된 <xref:System.Data.SqlClient.SqlCommand> 호출 하기 전에 개체는 `Close` 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-122">When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="57c41-123">호출 하지 마십시오 `Close` 또는 `Dispose` 연결, DataReader, 또는 다른 관리 개체에는 `Finalize` 클래스의 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-123">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="57c41-124">종료자에서만 클래스에 직접 속한 관리 되지 않는 리소스를 해제 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-124">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="57c41-125">클래스에 관리되지 않는 리소스가 없는 경우 클래스 정의에 `Finalize` 메서드를 포함하지 마세요.</span><span class="sxs-lookup"><span data-stu-id="57c41-125">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="57c41-126">자세한 내용은 참조 [가비지 수집](~/docs/standard/garbage-collection/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-126">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57c41-127">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlConnection>, `SqlCommand`, 및 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-127">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="57c41-128">이 예제에서는 콘솔 창에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-128">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="57c41-129">다음 코드를 닫습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-129">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="57c41-130"><xref:System.Data.SqlClient.SqlConnection> 끝날 때 자동으로 닫혀는 `using` 코드 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-130">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="protected System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection" Usage="System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57c41-131">
            <see cref="T:System.Data.SqlClient.SqlConnection" />와 연결된 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-131">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-132">
            <see cref="T:System.Data.SqlClient.SqlConnection" />와 연결된 <see cref="T:System.Data.SqlClient.SqlDataReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-132">The <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57c41-133">현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-133">Gets a value that indicates the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-134">현재 행의 중첩 수준입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-134">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-135">가장 바깥쪽 테이블의 중첩 수준은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-135">The outermost table has a depth of zero.</span></span> <span data-ttu-id="57c41-136">.NET Framework Data Provider for SQL Server 중첩을 지원 하지 않는 및 항상 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-136">The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57c41-137">현재 행의 열 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-137">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-138">유효한 recordset에 배치되지 않으면 0이고, 그렇지 않으면 현재 행의 열의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-138">When not positioned in a valid recordset, 0; otherwise the number of columns in the current row.</span>
          </span>
          <span data-ttu-id="57c41-139">기본값은 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-139">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-140">기본적으로 행 (예: 쿼리를 삭제)을 반환 하지 않는 쿼리를 실행 설정 <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> 0입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-140">Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0.</span></span> <span data-ttu-id="57c41-141">그러나 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-141">However.</span></span> <span data-ttu-id="57c41-142">0 개의 행을 반환 하는 쿼리와 일치 하지 않습니다이 (예: SELECT \* FROM *테이블* WHERE 1 = 2)는 쿼리에서 <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> 숨겨진된 필드를 포함 하는 테이블의 열 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-142">this should not be confused with a query that returns 0 rows (such as SELECT \* FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields.</span></span> <span data-ttu-id="57c41-143">숨김 필드를 제외하려면 <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A>를 사용하십시오.</span><span class="sxs-lookup"><span data-stu-id="57c41-143">Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="57c41-144">SQL Server의 인스턴스에 대한 현재 연결이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-144">There is no current connection to an instance of SQL Server.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="sqlDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-145">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-145">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-146">지정된 열의 값에 해당하는 Boolean 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-146">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-147">열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-147">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-148">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 이미 부울 여야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-148">No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="57c41-149">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-149">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-150">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-150">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="sqlDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-151">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-151">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-152">지정된 열의 값에 해당하는 바이트 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-152">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-153">바이트로 지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-153">The value of the specified column as a byte.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-154">변환이 수행 되지 않습니다. 따라서 검색 된 데이터 바이트를 이미 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-154">No conversions are performed; therefore, the data retrieved must already be a byte.</span></span>  
  
 <span data-ttu-id="57c41-155">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-155">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-156">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-156">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="sqlDataReader.GetBytes (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-157">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-157">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="57c41-158">읽기 작업을 시작하는 필드 내의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-158">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="57c41-159">바이트 스트림을 읽을 버퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-159">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="57c41-160">쓰기 작업을 시작할 <c>buffer</c> 내 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-160">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="57c41-161">버퍼로 복사할 최대 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-161">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-162">지정된 열 오프셋의 바이트 스트림을 지정된 버퍼 오프셋에서 시작하는 버퍼 및 배열로 읽어들입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-162">Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-163">읽은 실제 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-163">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> 필드에 사용 가능한 바이트 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="57c41-165">대부분의 경우 이것은 필드의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-165">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="57c41-166">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 `GetBytes` 바이트를 얻는 필드에서 이미 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-166">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="57c41-167">수도 있는 경우 예를 들어 경우는 <xref:System.Data.SqlClient.SqlDataReader> 버퍼에 대형 데이터 구조를 읽고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-167">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="57c41-168">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-168">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="57c41-169">버퍼를 전달 하는 경우 `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> 버퍼 오프셋된 매개 변수에 따라 나머지 크기가 아니라를 바이트 단위로 전체 필드의 길이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-169">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="57c41-170">변환이 수행 되지 않습니다. 따라서 검색 된 데이터 바이트 배열 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-170">No conversions are performed; therefore, the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="sqlDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-171">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-171">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-172">지정된 열의 값에 해당하는 단일 문자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-172">Gets the value of the specified column as a single character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-173">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-173">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-174"><xref:System.Data.SqlClient>에는 지원되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-174">Not supported for <xref:System.Data.SqlClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-175">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-175">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="sqlDataReader.GetChars (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-176">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-176">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="57c41-177">읽기 작업을 시작하는 필드 내의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-177">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="57c41-178">바이트 스트림을 읽을 버퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-178">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="57c41-179">쓰기 작업을 시작할 <c>buffer</c> 내 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-179">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="57c41-180">버퍼로 복사할 최대 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-180">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-181">지정된 버퍼 오프셋에서 시작하는 배열로서 지정된 열 오프셋에서 버퍼로 문자의 스트림을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-181">Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-182">읽은 실제 문자 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-182">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 필드에 사용할 수 있는 문자 수를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="57c41-184">자주이 필드의 길이 해당 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-184">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="57c41-185">그러나 반환 된 숫자 보다 작을 수도 있습니다는 필드의 길이 경우 `GetChars` 문자를 가져올 필드에서 이미 사용 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-185">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="57c41-186">수도 있는 경우 예를 들어 경우는 <xref:System.Data.SqlClient.SqlDataReader> 버퍼에 대형 데이터 구조를 읽고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-186">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="57c41-187">자세한 내용은 참조는 `SequentialAccess` 에 대 한 설정 <xref:System.Data.CommandBehavior>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-187">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="57c41-188">실제 읽은 문자 수는 필드의 끝에 도달할 경우 요청 된 길이 보다 작을 수 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-188">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="57c41-189">버퍼를 전달 하는 경우 `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 문자 버퍼 오프셋된 매개 변수에 따라 나머지 크기가 아니라 전체 필드의 길이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-189">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="57c41-190">변환이 수행 되지 않습니다. 따라서 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-190">No conversions are performed; therefore.</span></span> <span data-ttu-id="57c41-191">이미 검색 된 데이터는 문자 배열 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-191">the data retrieved must already be a character array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57c41-192"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 메서드가 0을 반환 `dataIndex` 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-192">The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="sqlDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-193">찾을 열의 서수 위치(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-193">The zero-based ordinal position of the column to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-194">지정된 열의 데이터 형식을 나타내는 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-194">Gets a string representing the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-195">지정된 열의 데이터 형식을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-195">The string representing the data type of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-196">백 엔드 데이터 형식의 이름을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-196">Returns the name of the back-end data type.</span></span>  
  
 <span data-ttu-id="57c41-197">`numeric` 에 대 한 SQL Server에서 동의어는 `decimal` 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-197">`numeric` is a synonym in SQL Server for the `decimal` data type.</span></span> <span data-ttu-id="57c41-198">`GetDataTypeName` decimal 또는 numeric으로 정의 된 열에 대 한 "십진수"를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-198">`GetDataTypeName` will return "decimal" for a column defined as either decimal or numeric.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="sqlDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-199">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-199">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-200">지정된 열의 값에 해당하는 <see cref="T:System.DateTime" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-200">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-201">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-201">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-202">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <xref:System.DateTime> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-202">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="57c41-203">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-203">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-204">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-204">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset GetDateTimeOffset (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset GetDateTimeOffset(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDateTimeOffset (i As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset GetDateTimeOffset(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetDateTimeOffset : int -&gt; DateTimeOffset&#xA;override this.GetDateTimeOffset : int -&gt; DateTimeOffset" Usage="sqlDataReader.GetDateTimeOffset i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-205">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-205">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-206">지정된 열의 값을 <see cref="T:System.DateTimeOffset" /> 개체로 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-206">Retrieves the value of the specified column as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-207">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-207">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-208">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <xref:System.DateTimeOffset> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-208">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object.</span></span>  
  
 <span data-ttu-id="57c41-209">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-209">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-210">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-210">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="sqlDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-211">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-211">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-212">지정된 열의 값에 해당하는 <see cref="T:System.Decimal" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-212">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-213">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-213">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-214">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <xref:System.Decimal> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-214">No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.</span></span>  
  
 <span data-ttu-id="57c41-215">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-215">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-216">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-216">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="sqlDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-217">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-217">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-218">지정된 열의 값에 해당하는 배정밀도 부동 소수점 숫자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-218">Gets the value of the specified column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-219">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-219">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-220">변환이 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-220">No conversions are performed.</span></span> <span data-ttu-id="57c41-221">따라서 검색 된 데이터는 배정밀도 부동 소수점 숫자를 이미 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-221">Therefore, the data retrieved must already be a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="57c41-222">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-222">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-223">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-223">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="sqlDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57c41-224">
            <see cref="T:System.Collections.IEnumerator" />를 반복하는 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-224">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-225">
            <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Data.SqlClient.SqlDataReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-225">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-226">이 메서드를 사용 하 여 명시적 열거자를 검색할 수 있지만 지 원하는 언어는 `foreach` 구성 하는 것이 데이터 판독기의 행을 반복 하는 직접 루프 구문을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-226">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="sqlDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-227">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-227">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-228">개체의 데이터 형식인 <see cref="T:System.Type" />을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-228">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-229">개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-229">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
          <span data-ttu-id="57c41-230">이 형식이 클라이언트에 없으면 데이터베이스에서 반환되는 UDT(사용자 정의 형식)의 경우 **GetFieldType**은 null을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-230">If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetFieldValue&lt;T&gt; (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetFieldValue&lt;T&gt;(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldValue(Of T) (i As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override T GetFieldValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldValue : int -&gt; 'T" Usage="sqlDataReader.GetFieldValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="57c41-231">반환될 값의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-231">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="57c41-232">검색할 열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-232">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-233">지정된 열의 값을 형식으로 동기적으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-233">Synchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="57c41-234">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />은 이 메서드의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-234">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> is the asynchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-235">반환된 형식 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-235">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-236">`T` 다음 형식 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-236">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="57c41-237">부울</span><span class="sxs-lookup"><span data-stu-id="57c41-237">Boolean</span></span>|<span data-ttu-id="57c41-238">Byte</span><span class="sxs-lookup"><span data-stu-id="57c41-238">Byte</span></span>|<span data-ttu-id="57c41-239">Char</span><span class="sxs-lookup"><span data-stu-id="57c41-239">Char</span></span>|<span data-ttu-id="57c41-240">DateTime</span><span class="sxs-lookup"><span data-stu-id="57c41-240">DateTime</span></span>|  
|<span data-ttu-id="57c41-241">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="57c41-241">DateTimeOffset</span></span>|<span data-ttu-id="57c41-242">Decimal</span><span class="sxs-lookup"><span data-stu-id="57c41-242">Decimal</span></span>|<span data-ttu-id="57c41-243">Double</span><span class="sxs-lookup"><span data-stu-id="57c41-243">Double</span></span>|<span data-ttu-id="57c41-244">Float</span><span class="sxs-lookup"><span data-stu-id="57c41-244">Float</span></span>|  
|<span data-ttu-id="57c41-245">GUID</span><span class="sxs-lookup"><span data-stu-id="57c41-245">Guid</span></span>|<span data-ttu-id="57c41-246">Int16</span><span class="sxs-lookup"><span data-stu-id="57c41-246">Int16</span></span>|<span data-ttu-id="57c41-247">Int32</span><span class="sxs-lookup"><span data-stu-id="57c41-247">Int32</span></span>|<span data-ttu-id="57c41-248">Int64</span><span class="sxs-lookup"><span data-stu-id="57c41-248">Int64</span></span>|  
|<span data-ttu-id="57c41-249">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="57c41-249">SqlBoolean</span></span>|<span data-ttu-id="57c41-250">SqlByte</span><span class="sxs-lookup"><span data-stu-id="57c41-250">SqlByte</span></span>|<span data-ttu-id="57c41-251">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="57c41-251">SqlDateTime</span></span>|<span data-ttu-id="57c41-252">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="57c41-252">SqlDecimal</span></span>|  
|<span data-ttu-id="57c41-253">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="57c41-253">SqlDouble</span></span>|<span data-ttu-id="57c41-254">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="57c41-254">SqlGuid</span></span>|<span data-ttu-id="57c41-255">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="57c41-255">SqlInt16</span></span>|<span data-ttu-id="57c41-256">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="57c41-256">SqlInt32</span></span>|  
|<span data-ttu-id="57c41-257">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="57c41-257">SqlInt64</span></span>|<span data-ttu-id="57c41-258">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="57c41-258">SqlMoney</span></span>|<span data-ttu-id="57c41-259">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="57c41-259">SqlSingle</span></span>|<span data-ttu-id="57c41-260">SqlString</span><span class="sxs-lookup"><span data-stu-id="57c41-260">SqlString</span></span>|  
|<span data-ttu-id="57c41-261">문자열</span><span class="sxs-lookup"><span data-stu-id="57c41-261">String</span></span>|<span data-ttu-id="57c41-262">으로 표시 된 CLR 형식일 수 있는 UDT <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-262">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="57c41-263">자세한 내용은 참조 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-263">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-264">데이터 검색 중 연결이 끊기거나 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-264">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-265">데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-265">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-266">읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-266">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="57c41-267">순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-267">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="57c41-268">진행 중인 비동기 작업이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-268">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="57c41-269">이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get\* 메서드에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-269">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-270">존재하지 않는 열을 읽으려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-270">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="57c41-271">열의 값이 SQL이 아닌 형식을 검색하는 null(<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-271">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-272">
            <paramref name="T" />는 SQL Server에서 반환되는 형식과 일치하지 않거나 캐스팅할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-272">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="sqlDataReader.GetFieldValueAsync (i, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="57c41-273">반환될 값의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-273">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="57c41-274">검색할 열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-274">The column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57c41-275">작업을 취소해야 한다는 알림을 전파하는 취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-275">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="57c41-276">취소를 보장하지는 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-276">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="57c41-277">
            <see langword="CancellationToken.None" />을 설정하면 이 메서드가 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />와 동일해집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-277">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="57c41-278">반환된 작업은 취소로 표시되어 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-278">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-279">지정된 열의 값을 형식으로 비동기적으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-279">Asynchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="57c41-280">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />은 이 메서드의 동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-280">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> is the synchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-281">반환된 형식 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-281">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-282">`T` 다음 형식 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-282">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="57c41-283">부울</span><span class="sxs-lookup"><span data-stu-id="57c41-283">Boolean</span></span>|<span data-ttu-id="57c41-284">Byte</span><span class="sxs-lookup"><span data-stu-id="57c41-284">Byte</span></span>|<span data-ttu-id="57c41-285">Char</span><span class="sxs-lookup"><span data-stu-id="57c41-285">Char</span></span>|<span data-ttu-id="57c41-286">DateTime</span><span class="sxs-lookup"><span data-stu-id="57c41-286">DateTime</span></span>|  
|<span data-ttu-id="57c41-287">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="57c41-287">DateTimeOffset</span></span>|<span data-ttu-id="57c41-288">Decimal</span><span class="sxs-lookup"><span data-stu-id="57c41-288">Decimal</span></span>|<span data-ttu-id="57c41-289">Double</span><span class="sxs-lookup"><span data-stu-id="57c41-289">Double</span></span>|<span data-ttu-id="57c41-290">Float</span><span class="sxs-lookup"><span data-stu-id="57c41-290">Float</span></span>|  
|<span data-ttu-id="57c41-291">GUID</span><span class="sxs-lookup"><span data-stu-id="57c41-291">Guid</span></span>|<span data-ttu-id="57c41-292">Int16</span><span class="sxs-lookup"><span data-stu-id="57c41-292">Int16</span></span>|<span data-ttu-id="57c41-293">Int32</span><span class="sxs-lookup"><span data-stu-id="57c41-293">Int32</span></span>|<span data-ttu-id="57c41-294">Int64</span><span class="sxs-lookup"><span data-stu-id="57c41-294">Int64</span></span>|  
|<span data-ttu-id="57c41-295">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="57c41-295">SqlBoolean</span></span>|<span data-ttu-id="57c41-296">SqlByte</span><span class="sxs-lookup"><span data-stu-id="57c41-296">SqlByte</span></span>|<span data-ttu-id="57c41-297">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="57c41-297">SqlDateTime</span></span>|<span data-ttu-id="57c41-298">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="57c41-298">SqlDecimal</span></span>|  
|<span data-ttu-id="57c41-299">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="57c41-299">SqlDouble</span></span>|<span data-ttu-id="57c41-300">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="57c41-300">SqlGuid</span></span>|<span data-ttu-id="57c41-301">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="57c41-301">SqlInt16</span></span>|<span data-ttu-id="57c41-302">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="57c41-302">SqlInt32</span></span>|  
|<span data-ttu-id="57c41-303">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="57c41-303">SqlInt64</span></span>|<span data-ttu-id="57c41-304">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="57c41-304">SqlMoney</span></span>|<span data-ttu-id="57c41-305">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="57c41-305">SqlSingle</span></span>|<span data-ttu-id="57c41-306">SqlString</span><span class="sxs-lookup"><span data-stu-id="57c41-306">SqlString</span></span>|  
|<span data-ttu-id="57c41-307">문자열</span><span class="sxs-lookup"><span data-stu-id="57c41-307">String</span></span>|<span data-ttu-id="57c41-308">으로 표시 된 CLR 형식일 수 있는 UDT <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-308">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="57c41-309">자세한 내용은 참조 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-309">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-310">데이터 검색 중 연결이 끊기거나 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-310">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-311">데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-311">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-312">읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-312">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="57c41-313">순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-313">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="57c41-314">진행 중인 비동기 작업이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-314">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="57c41-315">이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get\* 메서드에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-315">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="57c41-316">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-316">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-317">존재하지 않는 열을 읽으려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-317">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="57c41-318">열의 값이 SQL이 아닌 형식을 검색하는 null(<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />)인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-318">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-319">
            <paramref name="T" />는 SQL Server에서 반환되는 형식과 일치하지 않거나 캐스팅할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-319">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="sqlDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-320">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-320">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-321">지정된 열의 값에 해당하는 단정밀도 부동 소수점 숫자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-321">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-322">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-322">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-323">변환이 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-323">No conversions are performed.</span></span> <span data-ttu-id="57c41-324">따라서 검색 된 데이터는 단 정밀도 부동 소수점 숫자를 이미 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-324">Therefore, the data retrieved must already be a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="57c41-325">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-325">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-326">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-326">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="sqlDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-327">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-327">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-328">지정된 열의 값을 GUID(Globally Unique Identifier)로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-328">Gets the value of the specified column as a globally unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-329">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-329">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-330">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 GUID를 이미 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-330">No conversions are performed; therefore, the data retrieved must already be a GUID.</span></span>  
  
 <span data-ttu-id="57c41-331">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-331">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-332">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-332">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="sqlDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-333">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-333">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-334">지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-334">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-335">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-335">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-336">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 16 비트 부호 있는 정수를 이미 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-336">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</span></span>  
  
 <span data-ttu-id="57c41-337">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-337">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-338">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-338">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="sqlDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-339">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-339">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-340">지정된 열의 값에 해당하는 32비트 부호 있는 정수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-340">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-341">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-341">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-342">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 32 비트 부호 있는 정수를 이미 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-342">No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="57c41-343">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-343">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-344">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-344">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="sqlDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-345">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-345">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-346">지정된 열의 값에 해당하는 64비트 부호 있는 정수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-346">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-347">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-347">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-348">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 64 비트 부호 있는 정수를 이미 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-348">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</span></span>  
  
 <span data-ttu-id="57c41-349">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-349">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-350">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-350">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="sqlDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-351">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-351">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-352">지정된 열의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-352">Gets the name of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-353">지정된 열의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-353">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="sqlDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="57c41-354">열 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-354">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-355">열 이름이 지정된 경우 열 서수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-355">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-356">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-356">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-357">`GetOrdinal` 대/소문자 구분 조회를 먼저 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-357">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="57c41-358">대/소문자 구분 검색 발생 한 두 번째 실패 하면 (대/소문자 구분 비교를 수행 데이터베이스 데이터 정렬을 사용 하 여).</span><span class="sxs-lookup"><span data-stu-id="57c41-358">If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="57c41-359">비교는 대/소문자 culture 별 규칙에 의해 영향을 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-359">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="57c41-360">예를 들어, 터키어, 다음 예제에서는 잘못 된 결과가 발생의 파일 시스템에서 문자 'i'에 대 한 대/소문자 규칙을 사용 하지 않으므로 "file"의 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-360">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span> <span data-ttu-id="57c41-361">메서드에서 throw 된 `IndexOutOfRange` 서 수는 0부터 시작 하는 열을 찾을 수 없는 경우 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-361">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="57c41-362">`GetOrdinal` 가 되지 일본어가 나 너비 구분 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-362">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="57c41-363">서 수 기반 조회가 명명 된 조회 보다 효율적 이므로, 것이 없습니다 효율적 호출 `GetOrdinal` 루프 내에서.</span><span class="sxs-lookup"><span data-stu-id="57c41-363">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="57c41-364">호출 하 여 시간 절약 `GetOrdinal` 을 한 번 루프 내에서 사용할 정수 변수에 결과 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-364">Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57c41-365">다음 예제에서는 <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-365">The following example demonstrates how to use the <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-366">지정된 이름이 올바른 열 이름이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-366">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="sqlDataReader.GetProviderSpecificFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-367">열 서수를 나타내는 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-367">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-368">내부 공급자별 필드 형식의 표현인 <see langword="Object" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-368">Gets an <see langword="Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-369">내부 공급자별 필드 형식의 표현인 <see cref="T:System.Object" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-369">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="sqlDataReader.GetProviderSpecificValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-370">열 서수를 나타내는 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-370">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-371">내부 공급자별 값의 표현인 <see langword="Object" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-371">Gets an <see langword="Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-372">내부 공급자별 값의 표현인 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-372">An <see cref="T:System.Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="sqlDataReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="57c41-373">열 값을 복사할 <see cref="T:System.Object" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-373">An array of <see cref="T:System.Object" /> into which to copy the column values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-374">내부 공급자별 값의 표현인 개체로 구성된 배열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-374">Gets an array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-375">내부 공급자별 값의 표현인 개체로 구성된 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-375">The array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="sqlDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57c41-376">
            <see cref="T:System.Data.DataTable" />의 열 메타데이터를 정의하는 <see cref="T:System.Data.SqlClient.SqlDataReader" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-376">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-377">열 메타데이터를 정의하는 <see cref="T:System.Data.DataTable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-377">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-378">에 대 한는 <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> 메서드는 다음 순서 대로 각 열에 대 한 메타 데이터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-378">For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="57c41-379">DataReader 열</span><span class="sxs-lookup"><span data-stu-id="57c41-379">DataReader column</span></span>|<span data-ttu-id="57c41-380">설명</span><span class="sxs-lookup"><span data-stu-id="57c41-380">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="57c41-381">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="57c41-381">AllowDBNull</span></span>|<span data-ttu-id="57c41-382">소비자가 null 값으로는 열을 설정할 수 있는 경우 공급자는 소비자가 열을 null 값으로 설정할 수 있는지 여부를 확인할 수 없는 경우 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-382">Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="57c41-383">그렇지 않으면, 설정 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-383">Otherwise, not set.</span></span> <span data-ttu-id="57c41-384">Null 값으로 설정할 수 없습니다 하는 경우에 열에서 null 값을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-384">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="57c41-385">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="57c41-385">BaseCatalogName</span></span>|<span data-ttu-id="57c41-386">열이 포함 된 데이터 저장소에 있는 카탈로그의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-386">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="57c41-387">기본 카탈로그 이름을 확인할 수 없는 경우 NULL입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-387">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="57c41-388">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-388">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="57c41-389">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="57c41-389">BaseColumnName</span></span>|<span data-ttu-id="57c41-390">데이터 저장소의 열 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-390">The name of the column in the data store.</span></span> <span data-ttu-id="57c41-391">이 별칭을 사용 하는 경우 열 이름 열에 반환 된 열 이름으로 달라질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-391">This might be different than the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="57c41-392">데이터의 열 저장소 행 집합 열이 파생 되지만 동일 하지는 않습니다, 하는 경우 또는 기본 열 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-392">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="57c41-393">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-393">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="57c41-394">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="57c41-394">BaseSchemaName</span></span>|<span data-ttu-id="57c41-395">열이 포함 된 데이터 저장소에 있는 스키마의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-395">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="57c41-396">기본 스키마 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-396">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="57c41-397">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-397">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="57c41-398">BaseServerName</span><span class="sxs-lookup"><span data-stu-id="57c41-398">BaseServerName</span></span>|<span data-ttu-id="57c41-399">사용 하는 Microsoft SQL Server의 인스턴스 이름을 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-399">The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>|  
|<span data-ttu-id="57c41-400">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="57c41-400">BaseTableName</span></span>|<span data-ttu-id="57c41-401">테이블 또는 뷰의 열이 포함 된 데이터 저장소의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-401">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="57c41-402">기본 테이블 이름을 확인할 수 없는 경우 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-402">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="57c41-403">이 열의 기본값은 null 값입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-403">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="57c41-404">열 이름</span><span class="sxs-lookup"><span data-stu-id="57c41-404">ColumnName</span></span>|<span data-ttu-id="57c41-405">열의 이름입니다. 이 고유 아닐 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-405">The name of the column; this might not be unique.</span></span> <span data-ttu-id="57c41-406">이 확인할 수 없는 경우에 null 값이 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-406">If this cannot be determined, a null value is returned.</span></span> <span data-ttu-id="57c41-407">이 이름은 항상 현재 보기 또는 명령 텍스트에 있는 열의 최근 이름 바꾸기가 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-407">This name always reflects the most recent renaming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="57c41-408">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="57c41-408">ColumnOrdinal</span></span>|<span data-ttu-id="57c41-409">열의 0부터 시작하는 서수입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-409">The zero-based ordinal of the column.</span></span> <span data-ttu-id="57c41-410">이 열에 null 값을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-410">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="57c41-411">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="57c41-411">ColumnSize</span></span>|<span data-ttu-id="57c41-412">열에 있는 값의 가능한 최대 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-412">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="57c41-413">고정 길이 데이터 형식을 사용 하는 열에 대 한 데이터 형식의 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-413">For columns that use a fixed-length data type, this is the size of the data type.</span></span> <span data-ttu-id="57c41-414">에 대 한 `nvarchar(MAX)`, `varchar(MAX)`, 및 `varbinary(MAX)` SQL Server 데이터베이스의 최대 크기에 저장 된 열에는 2GB입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-414">For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB.</span></span> <span data-ttu-id="57c41-415">이러한 열을 저장 및 파일로 액세스 하는 경우에 파일 시스템에서 최대 크기에 제한이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-415">If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system.</span></span> <span data-ttu-id="57c41-416">사용 하는 경우이 값이 변경 된 `Type System Version` 연결 문자열에서 키워드입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-416">This value changes when using the `Type System Version` keyword in the connection string.</span></span>  <span data-ttu-id="57c41-417">새 형식에 대 한 하위 형식으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-417">For new types they are represented as downlevel types.</span></span> <span data-ttu-id="57c41-418">MAX 데이터 형식에 대 한 일반적인 4k 반환 `nvarchar` 에 대해 8000 `varchar`합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-418">The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`.</span></span> <span data-ttu-id="57c41-419">자세한 내용은 SQL Server 온라인 설명서의 TRANSACT-SQL 참조를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="57c41-419">For more information, see the Transact-SQL reference in SQL Server Books Online.</span></span>|  
|<span data-ttu-id="57c41-420">DataTypeName</span><span class="sxs-lookup"><span data-stu-id="57c41-420">DataTypeName</span></span>|<span data-ttu-id="57c41-421">지정 된 열의 데이터 형식을 나타내는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-421">Returns a string representing the data type of the specified column.</span></span>|  
|<span data-ttu-id="57c41-422">IsAliased</span><span class="sxs-lookup"><span data-stu-id="57c41-422">IsAliased</span></span>|<span data-ttu-id="57c41-423">`true`: 열 이름은 별칭입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-423">`true`: The column name is an alias.</span></span><br /><br /> <span data-ttu-id="57c41-424">`false`: 열 이름 별칭 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-424">`false`: The column name is not an alias.</span></span>|  
|<span data-ttu-id="57c41-425">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="57c41-425">IsAutoIncrement</span></span>|<span data-ttu-id="57c41-426">`true`:이 열을 고정 된 증가분의 새 행에 값을 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-426">`true`: The column assigns values to new rows in fixed increments.</span></span><br /><br /> <span data-ttu-id="57c41-427">`false`:이 열은 고정 된 증가분의 새 행에 값을 할당 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-427">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="57c41-428">이 열의 기본값은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-428">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="57c41-429">IsColumnSet</span><span class="sxs-lookup"><span data-stu-id="57c41-429">IsColumnSet</span></span>|<span data-ttu-id="57c41-430">`true`: 열이 열 집합의 멤버인 스파스 열입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-430">`true`: The column is a sparse column that is a member of a column set.</span></span>|  
|<span data-ttu-id="57c41-431">IsExpression</span><span class="sxs-lookup"><span data-stu-id="57c41-431">IsExpression</span></span>|<span data-ttu-id="57c41-432">`true`:이 열은 식.</span><span class="sxs-lookup"><span data-stu-id="57c41-432">`true`: The column is an expression.</span></span><br /><br /> <span data-ttu-id="57c41-433">`false`: 열 식이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-433">`false`: The column is not an expression.</span></span>|  
|<span data-ttu-id="57c41-434">IsHidden</span><span class="sxs-lookup"><span data-stu-id="57c41-434">IsHidden</span></span>|<span data-ttu-id="57c41-435">`true`:이 열은 숨겨집니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-435">`true`: The column is hidden.</span></span><br /><br /> <span data-ttu-id="57c41-436">`false`: 열 숨겨지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-436">`false`: The column is not hidden.</span></span>|  
|<span data-ttu-id="57c41-437">IsIdentity</span><span class="sxs-lookup"><span data-stu-id="57c41-437">IsIdentity</span></span>|<span data-ttu-id="57c41-438">`true`: 열이 id 열입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-438">`true`: The column is an identity column.</span></span><br /><br /> <span data-ttu-id="57c41-439">`false`: 열이 id 열인지 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-439">`false`: The column is not an identity column.</span></span>|  
|<span data-ttu-id="57c41-440">IsKey</span><span class="sxs-lookup"><span data-stu-id="57c41-440">IsKey</span></span>|<span data-ttu-id="57c41-441">`true`: 열이 행 집합의 열 집합 중 하나를 전체적으로 볼 때, 해당 행을 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-441">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="57c41-442">열 집합 `IsKey` 로 설정 `true` 행 집합의 행을 고유 하 게 식별 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-442">The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="57c41-443">이 열 집합이 열의 최소 집합 임을 않아도가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-443">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="57c41-444">기본 테이블 기본 키, 고유 제약 조건 또는 고유 인덱스에서이 열 집합을 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-444">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span><br /><br /> <span data-ttu-id="57c41-445">`false`:이 열은 행을 식별할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-445">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="57c41-446">IsLong</span><span class="sxs-lookup"><span data-stu-id="57c41-446">IsLong</span></span>|<span data-ttu-id="57c41-447">`true`:이 열에는 긴 BLOB (Binary Object) 매우 긴 데이터가 포함 된 포함 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-447">`true`: The column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="57c41-448">매우 긴 데이터의 정의 공급자 마다 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-448">The definition of very long data is provider-specific.</span></span><br /><br /> <span data-ttu-id="57c41-449">`false`:이 열에는 긴 BLOB (Binary Object) 매우 긴 데이터를 포함 하는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-449">`false`: The column does not contain a Binary Long Object (BLOB) that contains very long data.</span></span>|  
|<span data-ttu-id="57c41-450">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="57c41-450">IsReadOnly</span></span>|<span data-ttu-id="57c41-451">`true`:이 열을 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-451">`true`: The column cannot be modified.</span></span><br /><br /> <span data-ttu-id="57c41-452">`false`:이 열을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-452">`false`: The column can be modified.</span></span>|  
|<span data-ttu-id="57c41-453">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="57c41-453">IsRowVersion</span></span>|<span data-ttu-id="57c41-454">`true`: 열에 쓸 수 없는 영구 행 식별자가 포함 된이 고 id에만 의미가 행입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-454">`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span><br /><br /> <span data-ttu-id="57c41-455">`false`: 열에 쓸 수 없는 영구 행 식별자는이 고 행 id에만 의미가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-455">`false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="57c41-456">IsUnique</span><span class="sxs-lookup"><span data-stu-id="57c41-456">IsUnique</span></span>|<span data-ttu-id="57c41-457">`true`: 열이 유형이 `timestamp`합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-457">`true`: Column is of type `timestamp`.</span></span><br /><br /> <span data-ttu-id="57c41-458">`false`: 열 유형이 아닙니다 `timestamp`합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-458">`false`: Column is not of type `timestamp`.</span></span>|  
|<span data-ttu-id="57c41-459">NonVersionedProviderType</span><span class="sxs-lookup"><span data-stu-id="57c41-459">NonVersionedProviderType</span></span>|<span data-ttu-id="57c41-460">현재 관계 없이 열의 형식을 `Type System Version` 연결 문자열에 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-460">The type of the column irrespective of the current `Type System Version` specified in the connection string.</span></span> <span data-ttu-id="57c41-461">반환 된 값이 고 <xref:System.Data.SqlDbType> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-461">The returned value is from the <xref:System.Data.SqlDbType> enumeration.</span></span>|  
|<span data-ttu-id="57c41-462">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="57c41-462">NumericPrecision</span></span>|<span data-ttu-id="57c41-463">경우 `ProviderType` 숫자 데이터 형식 열의 최대 전체 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-463">If `ProviderType` is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="57c41-464">전체 자릿수는 열의 정의에 따라 달라 집니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-464">The precision depends on the definition of the column.</span></span> <span data-ttu-id="57c41-465">경우 `ProviderType` 형식이 아닌 숫자 데이터, 255입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-465">If `ProviderType` is not a numeric data type, this is 255.</span></span>|  
|<span data-ttu-id="57c41-466">NumericScale</span><span class="sxs-lookup"><span data-stu-id="57c41-466">NumericScale</span></span>|<span data-ttu-id="57c41-467">경우 `ProviderType` DBTYPE_DECIMAL 또는 DBTYPE_NUMERIC, 소수점 오른쪽 자릿수입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-467">If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="57c41-468">그렇지 않은 경우 255입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-468">Otherwise, this is 255.</span></span>|  
|<span data-ttu-id="57c41-469">ProviderSpecificDataType</span><span class="sxs-lookup"><span data-stu-id="57c41-469">ProviderSpecificDataType</span></span>|<span data-ttu-id="57c41-470">공급자 관련 데이터 형식을 기반으로 열의 반환는 `Type System Version` 연결 문자열에서 키워드입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-470">Returns the provider-specific data type of the column based on the `Type System Version` keyword in the connection string.</span></span>|  
|<span data-ttu-id="57c41-471">ProviderType</span><span class="sxs-lookup"><span data-stu-id="57c41-471">ProviderType</span></span>|<span data-ttu-id="57c41-472">표시기는 열의 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-472">The indicator of the column's data type.</span></span> <span data-ttu-id="57c41-473">열의 데이터 형식을 다양 행이 개체 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-473">If the data type of the column varies from row to row, this must be Object.</span></span> <span data-ttu-id="57c41-474">이 열에 null 값을 포함할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-474">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="57c41-475">UdtAssemblyQualifiedName</span><span class="sxs-lookup"><span data-stu-id="57c41-475">UdtAssemblyQualifiedName</span></span>|<span data-ttu-id="57c41-476">이 기준으로 UDT의 어셈블리의 정규화 된 이름 열이 사용자 정의 형식 (UDT), <xref:System.Type.AssemblyQualifiedName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-476">If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>.</span></span> <span data-ttu-id="57c41-477">열이 UDT가 아닌 경우이 매개 변수가 null입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-477">If the column is not a UDT, this is null.</span></span>|  
|<span data-ttu-id="57c41-478">XmlSchemaCollectionDatabase</span><span class="sxs-lookup"><span data-stu-id="57c41-478">XmlSchemaCollectionDatabase</span></span>|<span data-ttu-id="57c41-479">행에 XML 열에 대 한 정보를 포함 하는 경우이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-479">The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="57c41-480">이 값은 `null` (`Nothing` Visual basic에서) 컬렉션은 현재 데이터베이스에 정의 된 경우.</span><span class="sxs-lookup"><span data-stu-id="57c41-480">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="57c41-481">없으면 스키마 컬렉션이 없는 경우 null도는 `XmlSchemaCollectionName` 및 `XmlSchemaCollectionOwningSchema` 도 열은 null입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-481">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="57c41-482">XmlSchemaCollectionName</span><span class="sxs-lookup"><span data-stu-id="57c41-482">XmlSchemaCollectionName</span></span>|<span data-ttu-id="57c41-483">행에 XML 열에 대 한 정보를 포함 하는 경우에이 XML 인스턴스의 스키마 컬렉션의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-483">The name of the schema collection for this XML instance, if the row contains information about an XML column.</span></span> <span data-ttu-id="57c41-484">이 값은 `null` (`Nothing` Visual basic에서) 연결 된 스키마 컬렉션이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="57c41-484">This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection.</span></span> <span data-ttu-id="57c41-485">값이 null 인 경우는 `XmlSchemaCollectionDatabase` 및 `XmlSchemaCollectionOwningSchema` 도 열은 null입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-485">If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="57c41-486">XmlSchemaCollectionOwningSchema</span><span class="sxs-lookup"><span data-stu-id="57c41-486">XmlSchemaCollectionOwningSchema</span></span>|<span data-ttu-id="57c41-487">행에 XML 열에 대 한 정보를 포함 하는 경우이 XML 인스턴스의 스키마 컬렉션이 있는 소유 관계형 스키마입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-487">The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="57c41-488">이 값은 `null` (`Nothing` Visual basic에서) 컬렉션은 현재 데이터베이스에 정의 된 경우.</span><span class="sxs-lookup"><span data-stu-id="57c41-488">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="57c41-489">없으면 스키마 컬렉션이 없는 경우 null도는 `XmlSchemaCollectionDatabase` 및 `XmlSchemaCollectionName` 도 열은 null입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-489">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="57c41-490">올바른 정보를 반환 하는 메타 데이터 열, 호출 해야 되도록 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 와 `behavior` 매개 변수 설정 `KeyInfo`합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-490">To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="57c41-491">그렇지 않으면 스키마 테이블의 열 중 일부 기본값, null 또는 잘못 된 데이터를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-491">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-492">
            <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-492">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBinary">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBinary GetSqlBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBinary (i As Integer) As SqlBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBinary GetSqlBinary(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBinary : int -&gt; System.Data.SqlTypes.SqlBinary&#xA;override this.GetSqlBinary : int -&gt; System.Data.SqlTypes.SqlBinary" Usage="sqlDataReader.GetSqlBinary i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-493">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-493">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-494">
            <see cref="T:System.Data.SqlTypes.SqlBinary" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-494">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-495">
            <see cref="T:System.Data.SqlTypes.SqlBinary" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-495">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-496">변환이 수행 되지 않습니다. 따라서 검색 된 데이터에 이진 구조 있어야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-496">No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBoolean">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBoolean GetSqlBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBoolean (i As Integer) As SqlBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBoolean GetSqlBoolean(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBoolean : int -&gt; System.Data.SqlTypes.SqlBoolean&#xA;override this.GetSqlBoolean : int -&gt; System.Data.SqlTypes.SqlBoolean" Usage="sqlDataReader.GetSqlBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-497">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-497">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-498">
            <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-498">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-499">열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-499">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-500">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 이미 부울 이어야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-500">No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlByte">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlByte GetSqlByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlByte (i As Integer) As SqlByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlByte GetSqlByte(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlByte : int -&gt; System.Data.SqlTypes.SqlByte&#xA;override this.GetSqlByte : int -&gt; System.Data.SqlTypes.SqlByte" Usage="sqlDataReader.GetSqlByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-501">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-501">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-502">
            <see cref="T:System.Data.SqlTypes.SqlByte" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-502">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-503">
            <see cref="T:System.Data.SqlTypes.SqlByte" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-503">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-504">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 byte, 이거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-504">No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBytes">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlBytes GetSqlBytes(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBytes (i As Integer) As SqlBytes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBytes ^ GetSqlBytes(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBytes : int -&gt; System.Data.SqlTypes.SqlBytes&#xA;override this.GetSqlBytes : int -&gt; System.Data.SqlTypes.SqlBytes" Usage="sqlDataReader.GetSqlBytes i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBytes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-505">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-505">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-506">
            <see cref="T:System.Data.SqlTypes.SqlBytes" />로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-506">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-507">
            <see cref="T:System.Data.SqlTypes.SqlBytes" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-507">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlChars">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlChars GetSqlChars(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlChars (i As Integer) As SqlChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlChars ^ GetSqlChars(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlChars : int -&gt; System.Data.SqlTypes.SqlChars&#xA;override this.GetSqlChars : int -&gt; System.Data.SqlTypes.SqlChars" Usage="sqlDataReader.GetSqlChars i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlChars</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-508">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-508">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-509">
            <see cref="T:System.Data.SqlTypes.SqlChars" />로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-509">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-510">
            <see cref="T:System.Data.SqlTypes.SqlChars" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-510">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDateTime">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDateTime GetSqlDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDateTime (i As Integer) As SqlDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDateTime GetSqlDateTime(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDateTime : int -&gt; System.Data.SqlTypes.SqlDateTime&#xA;override this.GetSqlDateTime : int -&gt; System.Data.SqlTypes.SqlDateTime" Usage="sqlDataReader.GetSqlDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-511">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-511">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-512">
            <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-512">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-513">
            <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-513">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-514">변환이 수행 되지 않습니다. 따라서 날짜/시간 값을 검색 한 데이터에 있어야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-514">No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDecimal">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDecimal GetSqlDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDecimal (i As Integer) As SqlDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDecimal GetSqlDecimal(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDecimal : int -&gt; System.Data.SqlTypes.SqlDecimal&#xA;override this.GetSqlDecimal : int -&gt; System.Data.SqlTypes.SqlDecimal" Usage="sqlDataReader.GetSqlDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-515">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-515">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-516">
            <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-516">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-517">
            <see cref="T:System.Data.SqlTypes.SqlDecimal" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-517">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-518">변환이 수행 되지 않습니다. 따라서 검색 된 데이터에 10 진수 값 있어야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-518">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDouble">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDouble GetSqlDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDouble (i As Integer) As SqlDouble" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDouble GetSqlDouble(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDouble : int -&gt; System.Data.SqlTypes.SqlDouble&#xA;override this.GetSqlDouble : int -&gt; System.Data.SqlTypes.SqlDouble" Usage="sqlDataReader.GetSqlDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDouble</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-519">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-519">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-520">
            <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-520">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-521">
            <see cref="T:System.Data.SqlTypes.SqlDouble" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-521">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-522">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 배정밀도 부동 소수점 숫자 이거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-522">No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlGuid">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlGuid GetSqlGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlGuid (i As Integer) As SqlGuid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlGuid GetSqlGuid(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlGuid : int -&gt; System.Data.SqlTypes.SqlGuid&#xA;override this.GetSqlGuid : int -&gt; System.Data.SqlTypes.SqlGuid" Usage="sqlDataReader.GetSqlGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlGuid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-523">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-523">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-524">
            <see cref="T:System.Data.SqlTypes.SqlGuid" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-524">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-525">
            <see cref="T:System.Data.SqlTypes.SqlGuid" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-525">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-526">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 이미는 GUID 여야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-526">No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt16">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt16 GetSqlInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt16 (i As Integer) As SqlInt16" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt16 GetSqlInt16(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt16 : int -&gt; System.Data.SqlTypes.SqlInt16&#xA;override this.GetSqlInt16 : int -&gt; System.Data.SqlTypes.SqlInt16" Usage="sqlDataReader.GetSqlInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-527">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-527">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-528">
            <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-528">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-529">
            <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-529">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-530">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 16 비트 부호 있는 정수 있어야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-530">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt32">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt32 GetSqlInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt32 (i As Integer) As SqlInt32" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt32 GetSqlInt32(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt32 : int -&gt; System.Data.SqlTypes.SqlInt32&#xA;override this.GetSqlInt32 : int -&gt; System.Data.SqlTypes.SqlInt32" Usage="sqlDataReader.GetSqlInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-531">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-531">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-532">
            <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-532">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-533">
            <see cref="T:System.Data.SqlTypes.SqlInt32" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-533">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-534">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 32 비트 부호 있는 정수 이거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-534">No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt64">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt64 GetSqlInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt64 (i As Integer) As SqlInt64" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt64 GetSqlInt64(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt64 : int -&gt; System.Data.SqlTypes.SqlInt64&#xA;override this.GetSqlInt64 : int -&gt; System.Data.SqlTypes.SqlInt64" Usage="sqlDataReader.GetSqlInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-535">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-535">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-536">
            <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-536">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-537">
            <see cref="T:System.Data.SqlTypes.SqlInt64" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-537">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-538">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 64 비트 부호 있는 정수 이거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-538">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMoney">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlMoney GetSqlMoney(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMoney (i As Integer) As SqlMoney" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlMoney GetSqlMoney(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlMoney : int -&gt; System.Data.SqlTypes.SqlMoney&#xA;override this.GetSqlMoney : int -&gt; System.Data.SqlTypes.SqlMoney" Usage="sqlDataReader.GetSqlMoney i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlMoney</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-539">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-539">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-540">
            <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-540">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-541">
            <see cref="T:System.Data.SqlTypes.SqlMoney" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-541">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-542">변환이 수행 되지 않습니다. 따라서 검색 된 데이터에 10 진수 값 있어야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-542">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlSingle">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlSingle GetSqlSingle(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlSingle (i As Integer) As SqlSingle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlSingle GetSqlSingle(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlSingle : int -&gt; System.Data.SqlTypes.SqlSingle&#xA;override this.GetSqlSingle : int -&gt; System.Data.SqlTypes.SqlSingle" Usage="sqlDataReader.GetSqlSingle i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlSingle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-543">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-543">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-544">
            <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-544">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-545">
            <see cref="T:System.Data.SqlTypes.SqlSingle" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-545">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-546">변환이 수행 되지 않습니다. 따라서 검색 된 데이터에는 단 정밀도 부동 소수점 수 있어야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-546">No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlString">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlString GetSqlString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlString (i As Integer) As SqlString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlString GetSqlString(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlString : int -&gt; System.Data.SqlTypes.SqlString&#xA;override this.GetSqlString : int -&gt; System.Data.SqlTypes.SqlString" Usage="sqlDataReader.GetSqlString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-547">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-547">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-548">
            <see cref="T:System.Data.SqlTypes.SqlString" />으로 지정된 열 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-548">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-549">
            <see cref="T:System.Data.SqlTypes.SqlString" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-549">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-550">변환이 수행 되지 않습니다. 따라서 문자열로 검색 되는 데이터에 있어야 하거나 예외가 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-550">No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValue">
      <MemberSignature Language="C#" Value="public virtual object GetSqlValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSqlValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSqlValue(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlValue : int -&gt; obj&#xA;override this.GetSqlValue : int -&gt; obj" Usage="sqlDataReader.GetSqlValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-551">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-551">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-552">지정된 열의 데이터 값을 SQL Server 형식으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-552">Returns the data value in the specified column as a SQL Server type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-553">
            <see cref="T:System.Data.SqlDbType" />으로 나타낸 열 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-553">The value of the column expressed as a <see cref="T:System.Data.SqlDbType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> 네이티브 SQL Server 형식을 사용 하 여 데이터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types.</span></span> <span data-ttu-id="57c41-555">.NET Framework 형식을 사용 하 여 데이터를 검색 하려면 참조 <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-555">To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValues">
      <MemberSignature Language="C#" Value="public virtual int GetSqlValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSqlValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSqlValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlValues : obj[] -&gt; int&#xA;override this.GetSqlValues : obj[] -&gt; int" Usage="sqlDataReader.GetSqlValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="57c41-556">값을 복사할 <see cref="T:System.Object" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-556">An array of <see cref="T:System.Object" /> into which to copy the values.</span>
          </span>
          <span data-ttu-id="57c41-557">열 값은 SQL Server 형식으로 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-557">The column values are expressed as SQL Server types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-558">레코드에 있는 모든 열의 값을 SQL Server 형식으로 나타낸 값이 들어 있는 <see cref="T:System.Object" />의 배열을 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-558">Fills an array of <see cref="T:System.Object" /> that contains the values for all the columns in the record, expressed as SQL Server types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-559">복사된 열 수를 나타내는 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-559">An integer indicating the number of columns copied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-560">한 번의 호출을 CLR 형식 시스템 대신 SQL 형식 체계를 사용 하 여 레코드의 모든 열에 대 한 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-560">Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system.</span></span> <span data-ttu-id="57c41-561">길이 <xref:System.Object> 배열 레코드의 열 개수와 일치 하지 않아도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-561">The length of the <xref:System.Object> array does not need to match the number of columns in the record.</span></span> <span data-ttu-id="57c41-562">전달할 수는 <xref:System.Object> 보다 적은 수의 레코드에 포함 된 열에 포함 된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-562">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record.</span></span> <span data-ttu-id="57c41-563">데이터의 양만 <xref:System.Object> 배열 저장 열 서 수는 0에서 시작 하는 배열에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-563">Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0.</span></span> <span data-ttu-id="57c41-564">전달할 수도 있습니다는 <xref:System.Object> 배열 길이가 결과 행에 포함 된 열 수를 초과 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-564">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="57c41-565">나머지 열은 그대로 유지 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-565">Any remaining columns are untouched.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57c41-566">
            <paramref name="values" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-566">
              <paramref name="values" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlXml">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlXml GetSqlXml(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlXml (i As Integer) As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlXml ^ GetSqlXml(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlXml : int -&gt; System.Data.SqlTypes.SqlXml&#xA;override this.GetSqlXml : int -&gt; System.Data.SqlTypes.SqlXml" Usage="sqlDataReader.GetSqlXml i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-567">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-567">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-568">지정된 열의 값을 XML 값으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-568">Gets the value of the specified column as an XML value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-569">해당 필드에 저장된 XML이 들어 있는 <see cref="T:System.Data.SqlTypes.SqlXml" /> 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-569">A <see cref="T:System.Data.SqlTypes.SqlXml" /> value that contains the XML stored within the corresponding field.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-570">변환이 수행 되지 않습니다. 따라서 검색 된 데이터에는 XML 값 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-570">No conversions are performed; therefore, the data retrieved must already be an XML value.</span></span>  
  
 <span data-ttu-id="57c41-571">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-571">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="57c41-572">전달된 인덱스가 0에서 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 사이의 범위에 속하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-572">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-573">닫힌 <see cref="T:System.Data.SqlClient.SqlDataReader" />의 열을 읽거나 액세스하려고 한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-573">An attempt was made to read or access columns in a closed <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-574">검색된 데이터가 <see cref="T:System.Data.SqlTypes.SqlXml" /> 형식과 호환되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-574">The retrieved data is not compatible with the <see cref="T:System.Data.SqlTypes.SqlXml" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStream (i As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetStream(int i);" />
      <MemberSignature Language="F#" Value="override this.GetStream : int -&gt; System.IO.Stream" Usage="sqlDataReader.GetStream i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-575">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-575">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-576">이진, 이미지, varbinary, UDT 및 variant 데이터 형식을 <see cref="T:System.IO.Stream" />으로 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-576">Retrieves binary, image, varbinary, UDT, and variant data types as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-577">스트림 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-577">A stream object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-578"><xref:System.IO.Stream.ReadTimeout%2A> 값을 기본값으로 설정 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; 수정할 수 있지만 <xref:System.IO.Stream.ReadTimeout%2A> 통해 <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-578"><xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.</span></span>  
  
 <span data-ttu-id="57c41-579">Null 값 (0 바이트)는 비어 있는 것으로 반환 됩니다 <xref:System.IO.Stream>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-579">Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>.</span></span>  
  
 <span data-ttu-id="57c41-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> 발생는 <xref:System.InvalidOperationException> 에서 반환 된 개체에 사용 하는 경우에 예외 <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> 때 <xref:System.Data.CommandBehavior.SequentialAccess> 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="57c41-581"><xref:System.Data.SqlClient.SqlException> 발생 한 예외 <xref:System.IO.Stream> throw 됩니다 <xref:System.IO.IOException> 예외에 대 한 내부 예외를 검사는 <xref:System.Data.SqlClient.SqlException>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-581"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="57c41-582">다음 <xref:System.IO.Stream> 멤버에서 반환 된 개체에 사용할 수 없는 <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span><span class="sxs-lookup"><span data-stu-id="57c41-582">The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span></span>  
  
-   <span data-ttu-id="57c41-583">BeginWrite</span><span class="sxs-lookup"><span data-stu-id="57c41-583">BeginWrite</span></span>  
  
-   <span data-ttu-id="57c41-584">EndWrite</span><span class="sxs-lookup"><span data-stu-id="57c41-584">EndWrite</span></span>  
  
-   <span data-ttu-id="57c41-585">길이</span><span class="sxs-lookup"><span data-stu-id="57c41-585">Length</span></span>  
  
-   <span data-ttu-id="57c41-586">위치</span><span class="sxs-lookup"><span data-stu-id="57c41-586">Position</span></span>  
  
-   <span data-ttu-id="57c41-587">검색</span><span class="sxs-lookup"><span data-stu-id="57c41-587">Seek</span></span>  
  
-   <span data-ttu-id="57c41-588">SetLength</span><span class="sxs-lookup"><span data-stu-id="57c41-588">SetLength</span></span>  
  
-   <span data-ttu-id="57c41-589">Write</span><span class="sxs-lookup"><span data-stu-id="57c41-589">Write</span></span>  
  
-   <span data-ttu-id="57c41-590">WriteByte</span><span class="sxs-lookup"><span data-stu-id="57c41-590">WriteByte</span></span>  
  
-   <span data-ttu-id="57c41-591">WriteTimeout</span><span class="sxs-lookup"><span data-stu-id="57c41-591">WriteTimeout</span></span>  
  
 <span data-ttu-id="57c41-592">때 연결 속성 `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> 만 순차적 모두에 대 한 동기 데이터를 검색할 수 있도록 (<xref:System.Data.CommandBehavior.SequentialAccess>) 및 비순차 (<xref:System.Data.CommandBehavior.Default>) 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-592">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="57c41-593">자세한 내용은 참조 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-593">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-594">데이터 검색 중 연결이 끊기거나 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-594">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-595">데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-595">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-596">읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-596">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="57c41-597">순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-597">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="57c41-598">진행 중인 비동기 작업이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-598">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="57c41-599">이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get\* 메서드에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-599">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-600">존재하지 않는 열을 읽으려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-600">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-601">반환된 형식이 다음 중 하나가 아닙니다.  -   binary  -   image  -   varbinary  -   udt</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-601">The returned type was not one of the types below:  -   binary  -   image  -   varbinary  -   udt</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="sqlDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-602">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-602">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-603">지정된 열의 값을 문자열로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-603">Gets the value of the specified column as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-604">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-604">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-605">변환이 수행 되지 않습니다. 따라서 검색 된 데이터는 문자열 이어야 이미입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-605">No conversions are performed; therefore, the data retrieved must already be a string.</span></span>  
  
 <span data-ttu-id="57c41-606">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-606">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-607">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-607">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public override System.IO.TextReader GetTextReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.TextReader GetTextReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTextReader (i As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::TextReader ^ GetTextReader(int i);" />
      <MemberSignature Language="F#" Value="override this.GetTextReader : int -&gt; System.IO.TextReader" Usage="sqlDataReader.GetTextReader i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-608">검색할 열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-608">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-609">Char, NChar, NText, NVarChar, 텍스트, varChar 및 Variant 데이터 형식을 <see cref="T:System.IO.TextReader" />로 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-609">Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-610">반환된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-610">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-611"><xref:System.Data.SqlClient.SqlException> 발생 한 예외 <xref:System.IO.TextReader> throw 됩니다 <xref:System.IO.IOException> 예외에 대 한 내부 예외를 검사는 <xref:System.Data.SqlClient.SqlException>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-611"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="57c41-612">Null 값 (0 바이트)는 비어 있는 것으로 반환 됩니다 <xref:System.IO.TextReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-612">Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>.</span></span>  
  
 <span data-ttu-id="57c41-613"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 발생는 <xref:System.InvalidOperationException> 에서 반환 된 개체에 사용 하는 경우에 예외 <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> 때 <xref:System.Data.CommandBehavior.SequentialAccess> 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-613"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="57c41-614">때 연결 속성 `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> 만 순차적 모두에 대 한 동기 데이터를 검색할 수 있도록 (<xref:System.Data.CommandBehavior.SequentialAccess>) 및 비순차 (<xref:System.Data.CommandBehavior.Default>) 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-614">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="57c41-615">자세한 내용은 참조 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-615">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-616">데이터 검색 중 연결이 끊기거나 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-616">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-617">데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-617">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-618">읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-618">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="57c41-619">순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-619">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="57c41-620">진행 중인 비동기 작업이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-620">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="57c41-621">이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get\* 메서드에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-621">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-622">존재하지 않는 열을 읽으려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-622">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-623">반환된 형식이 다음 중 하나가 아닙니다.  -   char  -   nchar  -   ntext  -   nvarchar  -   text  -   varchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-623">The returned type was not one of the types below:  -   char  -   nchar  -   ntext  -   nvarchar  -   text  -   varchar</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public virtual TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan GetTimeSpan(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeSpan : int -&gt; TimeSpan&#xA;override this.GetTimeSpan : int -&gt; TimeSpan" Usage="sqlDataReader.GetTimeSpan i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-624">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-624">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-625">지정된 열의 값을 <see cref="T:System.TimeSpan" /> 개체로 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-625">Retrieves the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-626">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-626">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-627">변환이 수행 되지 않습니다. 따라서 검색 된 데이터가 이미 해야는 <xref:System.TimeSpan> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-627">No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.</span></span>  
  
 <span data-ttu-id="57c41-628">호출 <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> 이 메서드를 호출 하기 전에 null 값을 확인 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-628">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-629">지정된 캐스트가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-629">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="sqlDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-630">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-630">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-631">지정된 열의 값을 네이티브 형식으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-631">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-632">이 메서드는 null 데이터베이스 열에 대해서는 <see cref="T:System.DBNull" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-632">This method returns <see cref="T:System.DBNull" /> for null database columns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-633"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> .NET Framework 형식을 사용 하 여 데이터를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-633"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="sqlDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="57c41-634">특성 열을 복사할 <see cref="T:System.Object" />의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-634">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-635">현재 행의 열 값으로 개체 배열을 채웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-635">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-636">배열에 포함된 <see cref="T:System.Object" /> 인스턴스의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-636">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-637">이 메서드는 대부분의 응용 프로그램에 대 한 각 열을 개별적으로 검색 하는 대신 모든 열을 검색 하는 효율적인 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-637">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="57c41-638">전달할 수는 <xref:System.Object> 보다 적은 수의 결과 행에 포함 된 열에 포함 된 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-638">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="57c41-639">데이터의 양만 <xref:System.Object> 배열 저장 배열에 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-639">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="57c41-640">전달할 수도 있습니다는 <xref:System.Object> 배열 길이가 결과 행에 포함 된 열 수를 초과 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-640">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="57c41-641">이 메서드는 null 데이터베이스 열에 대해서는 <xref:System.DBNull>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-641">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57c41-642">다음 예제에서는 제공 된의 현재 행의 모든 값을 읽을 올바르게 크기 배열을 사용 하 여 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-642">The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="57c41-643">또한 샘플 더 작은 나 사용 가능한 열 개수 보다 클 수는 고정 크기 배열을 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-643">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#2)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlReader">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetXmlReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetXmlReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlReader (i As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ GetXmlReader(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlReader : int -&gt; System.Xml.XmlReader&#xA;override this.GetXmlReader : int -&gt; System.Xml.XmlReader" Usage="sqlDataReader.GetXmlReader i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-644">지정된 열의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-644">The value of the specified column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-645">형식 XML의 데이터를 <see cref="T:System.Xml.XmlReader" />로 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-645">Retrieves data of type XML as an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-646">반환된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-646">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-647"><xref:System.Xml.XmlReader> 에서 반환 된 개체 <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> 비동기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-647">The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations.</span></span> <span data-ttu-id="57c41-648">비동기 작업에 필요한 경우는 <xref:System.Xml.XmlReader>, 서버에서 XML 열은 nvarchar (max) 캐스팅 하 고 사용 하 여 <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> 와 <xref:System.Xml.XmlReader.Create%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-648">If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.</span></span>  
  
 <span data-ttu-id="57c41-649"><xref:System.Data.SqlClient.SqlException> 발생 한 예외 <xref:System.Xml.XmlReader> throw 됩니다 <xref:System.Xml.XmlException> 예외에 대 한 내부 예외를 검사는 <xref:System.Data.SqlClient.SqlException>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-649"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="57c41-650"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 발생는 <xref:System.InvalidOperationException> 에서 반환 된 개체에 사용 하는 경우에 예외 <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> 때 <xref:System.Data.CommandBehavior.SequentialAccess> 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-650"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="57c41-651">자세한 내용은 참조 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-651">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-652">데이터 검색 중 연결이 끊기거나 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-652">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-653">데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-653">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-654">읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-654">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="57c41-655">순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-655">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="57c41-656">진행 중인 비동기 작업이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-656">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="57c41-657">이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get\* 메서드에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-657">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-658">존재하지 않는 열을 읽으려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-658">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57c41-659">반환된 형식이 xml이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-659">The returned type was not xml.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57c41-660">
            <see cref="T:System.Data.SqlClient.SqlDataReader" />에 하나 이상의 행이 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-660">Gets a value that indicates whether the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-661">
            <see cref="T:System.Data.SqlClient.SqlDataReader" />에 행이 하나 이상 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-661">
              <see langword="true" /> if the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57c41-662">지정된 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스가 닫혔는지 여부를 나타내는 부울 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-662">Retrieves a Boolean value that indicates whether the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance has been closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-663">지정된 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스가 닫혔으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-663">
              <see langword="true" /> if the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-664">읽을 수 없으면는 <xref:System.Data.SqlClient.SqlDataReader> 닫혀 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-664">It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandBehavior">
      <MemberSignature Language="C#" Value="protected bool IsCommandBehavior (System.Data.CommandBehavior condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsCommandBehavior(valuetype System.Data.CommandBehavior condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsCommandBehavior (condition As CommandBehavior) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsCommandBehavior(System::Data::CommandBehavior condition);" />
      <MemberSignature Language="F#" Value="member this.IsCommandBehavior : System.Data.CommandBehavior -&gt; bool" Usage="sqlDataReader.IsCommandBehavior condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="57c41-665">
            <see cref="T:System.Data.CommandBehavior" /> 열거형입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-665">A <see cref="T:System.Data.CommandBehavior" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-666">지정된 <see cref="T:System.Data.CommandBehavior" />가 <see cref="T:System.Data.SqlClient.SqlDataReader" />의 명령 동작과 일치하는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-666">Determines whether the specified <see cref="T:System.Data.CommandBehavior" /> matches that of the <see cref="T:System.Data.SqlClient.SqlDataReader" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-667">지정된 <see cref="T:System.Data.CommandBehavior" />가 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-667">
              <see langword="true" /> if the specified <see cref="T:System.Data.CommandBehavior" /> is true, <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-668">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-668">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="sqlDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-669">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-669">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-670">열의 값이 존재하지 않거나 누락되었는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-670">Gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-671">지정된 열 값이 <see cref="T:System.DBNull" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-671">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-672">Get 메서드는 형식화 된를 호출 하기 전에 null 열 값을 확인 하려면이 메서드를 호출 (예를 들어 <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>등)에 오류가 발생 하지 않도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-672">Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 [!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]
 [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.IsDBNullAsync (i, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-673">검색할 열입니다(0부터 시작).</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-673">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="57c41-674">작업을 취소해야 한다는 알림을 전파하는 취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-674">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="57c41-675">취소를 보장하지는 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-675">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="57c41-676">
            <see langword="CancellationToken.None" />을 설정하면 이 메서드가 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />와 동일해집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-676">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="57c41-677">반환된 작업은 취소로 표시되어 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-677">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-678">존재하지 않거나 누락된 값이 열에 포함되었는지 여부를 나타내는 값을 가져오는 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-678">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
          <span data-ttu-id="57c41-679">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-679">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="57c41-680">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-680">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-681">지정된 열 값이 <see langword="true" />과 같으면 <see langword="DBNull" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-681">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-682">자세한 내용은 참조 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-682">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-683">데이터 검색 중 연결이 끊기거나 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-683">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-684">데이터 검색 중 <see cref="T:System.Data.SqlClient.SqlDataReader" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-684">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="57c41-685">읽을 준비가 된 데이터가 없는 경우(예를 들어, 첫 번째 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />가 호출되지 않았거나 false를 반환한 경우)</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-685">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="57c41-686">순차 모드에서 이전에 읽은 열을 읽으려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-686">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="57c41-687">진행 중인 비동기 작업이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-687">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="57c41-688">이는 스트림을 읽는 동안 호출할 수 있기 때문에 순차 모드로 실행할 때 모든 Get\* 메서드에 적용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-688">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="57c41-689">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-689">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-690">존재하지 않는 열을 읽으려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-690">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57c41-691">열 값을 네이티브 형식으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-691">Gets the value of a column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.SqlClient.SqlDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-692">열 서수(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-692">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-693">열 서수가 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-693">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-694">지정된 열의 네이티브 형식 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-694">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-695">전달된 인덱스가 0부터 <see cref="P:System.Data.IDataRecord.FieldCount" />의 범위를 벗어난 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-695">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.SqlClient.SqlDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="57c41-696">열 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-696">The column name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-697">열 이름이 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-697">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-698">지정된 열의 네이티브 형식 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-698">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-699">대/소문자 구분 조회를 먼저 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-699">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="57c41-700">실패 한 경우에 두 번째 대/소문자 구분 검색이 수행 됩니다 (대/소문자 구분 비교를 수행 데이터베이스 데이터 정렬을 사용 하 여).</span><span class="sxs-lookup"><span data-stu-id="57c41-700">If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="57c41-701">비교는 대/소문자 culture 별 규칙에 의해 영향을 예기치 않은 결과가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-701">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="57c41-702">예를 들어, 터키어, 다음 예제에서는 잘못 된 결과가 발생의 파일 시스템에서 문자 'i'에 대 한 대/소문자 규칙을 사용 하지 않으므로 "file"의 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-702">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span>  
  
 <span data-ttu-id="57c41-703">이 메서드는 일본어가 나 너비 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-703">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="57c41-704">지정된 이름의 열을 찾을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-704">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="sqlDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57c41-705">일괄 Transact-SQL 문의 결과를 읽을 때, 데이터 판독기를 다음 결과로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-705">Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-706">결과 집합이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-706">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-707">TRANSACT-SQL 일괄 처리 문을 실행 하 여 생성할 수 있는 여러 결과 처리 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-707">Used to process multiple results, which can be generated by executing batch Transact-SQL statements.</span></span>  
  
 <span data-ttu-id="57c41-708">기본적으로 데이터 판독기가 첫 번째 결과에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-708">By default, the data reader is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.NextResultAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="57c41-709">취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-709">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-710">일괄 [!INCLUDE[tsql](~/includes/tsql-md.md)] 문의 결과를 읽을 때 판독기를 다음 결과로 이동하는 <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-710">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />, which advances the data reader to the next result, when reading the results of batch [!INCLUDE[tsql](~/includes/tsql-md.md)] statements.</span>
          </span>
          <span data-ttu-id="57c41-711">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-711">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="57c41-712">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-712">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-713">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-713">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-714">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-714">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-715">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-715">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="57c41-716">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-716">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="57c41-717">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-717">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="sqlDataReader.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57c41-718">
            <see cref="T:System.Data.SqlClient.SqlDataReader" />를 다음 레코드로 이동합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-718">Advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-719">행이 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-719">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-720">기본 위치는 <xref:System.Data.SqlClient.SqlDataReader> 첫 번째 레코드 앞입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-720">The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record.</span></span> <span data-ttu-id="57c41-721">따라서 호출 해야 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 모든 데이터 액세스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-721">Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="57c41-722">하나의 `SqlDataReader` 당 관련 <xref:System.Data.SqlClient.SqlConnection> 한 번에 열려 있을 수 있습니다 및 첫 번째 닫힐 때까지 다른를 열려는 작업에 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-722">Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed.</span></span> <span data-ttu-id="57c41-723">마찬가지로는 `SqlDataReader` 사용 되는 연결 된 `SqlConnection` 중인 할 때까지 호출 <xref:System.Data.SqlClient.SqlDataReader.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-723">Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57c41-724">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, 및 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-724">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="57c41-725">이 예제에서는 콘솔 창에이 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-725">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="57c41-726">다음 코드를 닫습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-726">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="57c41-727"><xref:System.Data.SqlClient.SqlConnection> 끝날 때 자동으로 닫혀는 `using` 코드 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-727">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="57c41-728">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-728">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="57c41-729">취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-729">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-730">
            <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />를 다음 레코드로 이동하는 비동기 버전의 <see cref="T:System.Data.SqlClient.SqlDataReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-730">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />, which advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
          <span data-ttu-id="57c41-731">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-731">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="57c41-732">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-732">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-733">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-733">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-734">경우는 `behavior` 의 매개 변수 <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> 로 설정 된 `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> 작업을 반환 하기 전에 전체 행을 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-734">If the `behavior` parameter of <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> is set to `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> reads the entire row before returning the Task.</span></span>  
  
 <span data-ttu-id="57c41-735">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 코드 샘플을 비롯 한 자세한 내용은 참조 하십시오. [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-735">For more information, including code samples, about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="57c41-736">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-736">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="57c41-737">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-737">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="57c41-738">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-738">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57c41-739">Transact-SQL 문의 실행에 의해 변경, 삽입 및 삭제된 행의 개수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-739">Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-740">변경, 삽입 또는 삭제된 행 수입니다. 영향을 받은 행이 없거나 문이 실패하면 0이고, SELECT 문의 경우는 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-740">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-741"><xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> 모든 행을 닫을 때까지 속성이 설정 되지 않은 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-741">The <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>  
  
 <span data-ttu-id="57c41-742">이 속성의 값은 누적 합니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-742">The value of this property is cumulative.</span></span> <span data-ttu-id="57c41-743">예를 들어, 일괄 처리 모드의 값에 두 개의 레코드를 삽입 하면 `RecordsAffected` 은 2가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-743">For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two.</span></span>  
  
 <span data-ttu-id="57c41-744"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> 및 <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> 후 호출할 수 있는 속성만 <xref:System.Data.SqlClient.SqlDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-744"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (i As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int i) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="57c41-745">열 서수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-745">A column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57c41-746">지정된 열 서수에 대해 <see cref="T:System.Data.IDataReader" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-746">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57c41-747">지정된 열 서수에 대한 <see cref="T:System.Data.IDataReader" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-747">The <see cref="T:System.Data.IDataReader" /> instance for the specified column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-748">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="57c41-748">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="57c41-749"><xref:System.Data.SqlClient.SqlDataReader> 인스턴스가 <xref:System.Data.IDataRecord> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-749">It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57c41-750">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 중에서 숨김 상태가 아닌 필드 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-750">Gets the number of fields in the <see cref="T:System.Data.SqlClient.SqlDataReader" /> that are not hidden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57c41-751">숨김 상태가 아닌 필드 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="57c41-751">The number of fields that are not hidden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57c41-752">이 값은 <xref:System.Data.SqlClient.SqlDataReader>에 표시되는 필드 수를 확인하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-752">This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible.</span></span> <span data-ttu-id="57c41-753">예를 들어 부분 기본 키에 대해 SELECT 문을 실행하면 키의 나머지 부분이 숨김 필드로 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-753">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="57c41-754">숨김 필드는 표시되는 필드 다음에 항상 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="57c41-754">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>