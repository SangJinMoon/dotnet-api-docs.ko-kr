<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlException.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eddc259210ab8f727d9a61bb5940e8f219fb3b1f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eddc259210ab8f727d9a61bb5940e8f219fb3b1f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlException">
          <source>The exception that is thrown when SQL Server returns a warning or error.</source>
          <target state="translated">SQL Server에서 경고 또는 오류를 반환할 때 throw되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlException">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>This class is created whenever the .NET Framework Data Provider for SQL Server encounters an error generated from the server.</source>
          <target state="translated">이 클래스는.NET Framework Data Provider for SQL Server가 서버에서 생성 된 오류를 발견할 때마다 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>(Client side errors are thrown as standard common language runtime exceptions.) <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> always contains at least one instance of <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph>.</source>
          <target state="translated">(클라이언트 쪽 오류 표준 공용 언어 런타임 예외가 throw 됩니다.) <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> 의 인스턴스를 하나 이상 포함 되어 항상 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered.</source>
          <target state="translated">메시지 심각도가 10 이하인 알림 메시지 이며 사용자가 입력 한 정보의 오류에에서 의해 발생 한 문제를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Severity levels from 11 through 16 are generated by the user, and can be corrected by the user.</source>
          <target state="translated">11 ~ 16 까지의 심각도 가진 사용자가 생성 되 고 사용자가 해결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Severity levels from 17 through 25 indicate software or hardware errors.</source>
          <target state="translated">17에서 25까지의 심각도는 소프트웨어나 하드웨어 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.</source>
          <target state="translated">심각도 17, 18 또는 19 오류가 발생 하면 특정 문을 실행할 수는 있지만, 작업을 계속할 수 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.</source>
          <target state="translated">심각도가 19 이하인 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>은 열린 상태를 유지합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>When the severity level is 20 or greater, the server ordinarily closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">서버는 일반적으로 닫습니다 심각도 수준이 20 이상일 때는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>In both cases, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing the command.</source>
          <target state="translated">두 경우 모두 명령을 실행하는 메서드에서 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>을 생성합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of SQL Server Books Online.</source>
          <target state="translated">SQL Server에서 보낸 경고 및 정보 메시지에 대 한 자세한 내용은 SQL Server 온라인 설명서의 문제 해결 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> class maps to SQL Server severity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> 클래스: SQL Server 심각도에 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>The following is general information on handling exceptions.</source>
          <target state="translated">예외 처리에 대 한 일반 정보는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Your code should catch exceptions to prevent the application from crashing and to allow displaying a relevant error message to the user.</source>
          <target state="translated">코드는 응용 프로그램 충돌을 방지 하 고 사용자에 게 관련 된 오류 메시지를 표시 하도록 예외를 catch 해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>You can use database transactions to ensure that the data is consistent regardless of what happens in the client application (including a crash).</source>
          <target state="translated">데이터 충돌 등 클라이언트 응용 프로그램에서 수행 되는 작업에 관계 없이 일치 하는지 확인 하려면 데이터베이스 트랜잭션을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Features like System.Transaction.TransactionScope or the BeginTransaction method (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, and System.Data.SqlClient.SqlConnection) ensure consistent data regardless of exceptions raised by a provider.</source>
          <target state="translated">System.Transaction.TransactionScope 또는 BeginTransaction 메서드 (System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, 및 System.Data.SqlClient.SqlConnection)와 같은 기능 예외에 관계 없이 일관 된 데이터를 확인 하십시오. 공급자에서 발생 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Transactions can fail, so catch failures and retry the transaction.</source>
          <target state="translated">트랜잭션 실패, 하므로 오류를 catch 트랜잭션을 다시 시도 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Note that beginning with  .NET Framework 4.5, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> can return an inner <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>.</source>
          <target state="translated">.NET Framework 4.5로 시작 하는 참고 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> 는 내부 조인를 반환할 수 <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>The exception class of a .Net Framework data provider reports provider-specific errors.</source>
          <target state="translated">예외 클래스는.net Framework 데이터 공급자는 공급자별 오류를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>For example System.Data.Odbc has OdbcException, System.Data.OleDb has OleDbException, and System.Data.SqlClient has SqlException.</source>
          <target state="translated">예를 들어 System.Data.Odbc에 OdbcException, System.Data.OleDb OleDbException,이 많고 System.Data.SqlClient SqlException 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>For the best level of error detail, catch these exceptions and use the members of these exception classes to get details of the error.</source>
          <target state="translated">최상의 오류 세부 정보에 대 한 이러한 예외를 catch 하 고 오류의 세부 정보를 가져오려는 이러한 예외 클래스의 멤버를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>In addition to the provider-specific errors, .NET Framework data provider types can raise .NET Framework exceptions such as System.OutOfMemoryException and System.Threading.ThreadAbortException.</source>
          <target state="translated">공급자 특정 오류 뿐 아니라.NET Framework 데이터 공급자 형식 System.OutOfMemoryException 및 System.Threading.ThreadAbortException 같은.NET Framework 예외 발생 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Recovery from these exceptions may not be possible.</source>
          <target state="translated">이러한 예외에서 복구 불가능할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Bad input can cause a .NET Framework data provider type to raise an exception such as System.ArgumentException or System.IndexOutOfRangeException.</source>
          <target state="translated">잘못 된 입력 System.ArgumentException System.IndexOutOfRangeException 등에서 예외가 발생 하는.NET Framework 데이터 공급자 형식은 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Calling a method at the wrong time can raise System.InvalidOperationException.</source>
          <target state="translated">잘못 된 시간에는 메서드를 호출 하면 System.InvalidOperationException 발생 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>So, in general, write an exception handler that catches any provider specific exceptions as well as exceptions from the common language runtime.</source>
          <target state="translated">따라서 일반적으로 모든 공급자를 catch 하는 예외 처리기를 작성에서 공용 언어 런타임 예외 뿐만 아니라 특정 예외입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>These can be layered as follows:</source>
          <target state="translated">다음과 같이 계층화 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>Or:</source>
          <target state="translated">또는:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>It is also possible for a .NET Framework data provider method call to fail on a thread pool thread with no user code on the stack.</source>
          <target state="translated">스택에 사용자 코드가 없는 스레드 풀 스레드에서 실패 하 고.NET Framework 데이터 공급자 메서드 호출에 대 한도 가능 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>In this case, and when using asynchronous method calls, you must register the <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> event to handle those exceptions and avoid application crash.</source>
          <target state="translated">이 경우 비동기 메서드 호출을 사용 하는 경우를 등록 해야는 <ph id="ph1">&lt;xref:System.AppDomain.UnhandledException&gt;</ph> 이러한 예외를 처리 하 고 응용 프로그램 충돌을 방지 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlException">
          <source>The following example generates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> and then displays the exception.</source>
          <target state="translated">다음 예제에서는 생성 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> 다음 예외를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server에서 반환한 오류의 심각도 수준을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>A value from 1 to 25 that indicates the severity level of the error.</source>
          <target state="translated">오류의 심각도 수준을 나타내는 1부터 25까지의 값입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered.</source>
          <target state="translated">메시지 심각도가 10 이하인 알림 메시지 이며 사용자가 입력 한 정보의 오류에에서 의해 발생 한 문제를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>Severity levels from 11 through 16 are generated by the user, and can be corrected by the user.</source>
          <target state="translated">11 ~ 16 까지의 심각도 가진 사용자가 생성 되 고 사용자가 해결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>Severity levels from 17 through 25 indicate software or hardware errors.</source>
          <target state="translated">17에서 25까지의 심각도는 소프트웨어나 하드웨어 오류를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.</source>
          <target state="translated">심각도 17, 18 또는 19 오류가 발생 하면 특정 문을 실행할 수는 있지만, 작업을 계속할 수 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.</source>
          <target state="translated">심각도가 19 이하인 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>은 열린 상태를 유지합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>When the severity level is 20 or greater, the server ordinarily closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">서버는 일반적으로 닫습니다 심각도 수준이 20 이상일 때는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>In both cases, a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing the command.</source>
          <target state="translated">두 경우 모두 명령을 실행하는 메서드에서 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>을 생성합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of the SQL Server documentation.</source>
          <target state="translated">SQL Server에서 보낸 경고 및 정보 메시지에 대 한 자세한 내용은 SQL Server 설명서의 문제 해결 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>This is a wrapper for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Class%2A&gt;</ph> property of the first <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.</source>
          <target state="translated">이에 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Class%2A&gt;</ph> 첫 번째 속성 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Class">
          <source>The following example displays each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> within the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 각 표시 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 내에서 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.ClientConnectionId">
          <source>Represents the client connection ID.</source>
          <target state="translated">클라이언트 연결 ID를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.ClientConnectionId">
          <source>For more information, see <bpt id="p1">[</bpt>Data Tracing in ADO.NET<ept id="p1">](~/docs/framework/data/adonet/data-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>ADO.NET의 데이터 추적<ept id="p1">](~/docs/framework/data/adonet/data-tracing.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.ClientConnectionId">
          <source>Returns the client connection ID.</source>
          <target state="translated">클라이언트 연결 ID를 반환합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.ClientConnectionId">
          <source>For a code sample, see <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException.ToString%2A&gt;</ph>.</source>
          <target state="translated">코드 샘플은 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException.ToString%2A&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.Errors">
          <source>Gets a collection of one or more <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlError" /&gt;</ph> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server에서 생성된 예외에 대한 자세한 정보를 제공하는 하나 이상의 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlError" /&gt;</ph> 개체 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Errors">
          <source>The collected instances of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlError" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlError" /&gt;</ph> 클래스의 수집된 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Errors">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> class always contains at least one instance of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 클래스에는 항상의 인스턴스를 하나 이상 포함 된 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Errors">
          <source>This is a wrapper for <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph>.</source>
          <target state="translated">이 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Errors">
          <source>For more information on SQL Server engine errors, see SQL Server Books Online.</source>
          <target state="translated">SQL Server 엔진 오류에 대 한 자세한 내용은 SQL Server 온라인 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Errors">
          <source>The following example displays each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> within the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 각 표시 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 내에서 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with information about the exception.</source>
          <target state="translated">예외에 대한 정보를 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>를 설정합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">`GetObjectData`</ph> sets a <ph id="ph2">`SerializationInfo`</ph> with all the exception object data targeted for serialization.</source>
          <target state="translated"><ph id="ph1">`GetObjectData`</ph>는 serialization을 위해 대상으로 하는 모든 예외 개체 데이터를 사용하여 <ph id="ph2">`SerializationInfo`</ph>를 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the exception is reconstituted from the <ph id="ph1">`SerializationInfo`</ph> transmitted over the stream.</source>
          <target state="translated">deserialization을 수행하는 동안 스트림을 통해 전송된 <ph id="ph1">`SerializationInfo`</ph>에서 예외가 다시 구성됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="si" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="si" /&gt;</ph>매개 변수가 null 참조(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.LineNumber">
          <source>Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.</source>
          <target state="translated">오류를 생성한 Transact-SQL 명령 일괄이나 저장 프로시저의 줄 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.LineNumber">
          <source>The line number within the Transact-SQL command batch or stored procedure that generated the error.</source>
          <target state="translated">오류를 포함하는 Transact-SQL 명령 일괄이나 저장 프로시저의 줄 번호입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.LineNumber">
          <source>The line numbering starts at 1; if 0 is returned, the line number is not applicable.</source>
          <target state="translated">줄 번호 매기기 1;에서 시작 0이 반환 되는 줄 번호 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.LineNumber">
          <source>This is a wrapper for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.LineNumber%2A&gt;</ph> property of the first <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.</source>
          <target state="translated">이에 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.LineNumber%2A&gt;</ph> 첫 번째 속성 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.LineNumber">
          <source>The following example displays each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> within the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 각 표시 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 내에서 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.Number">
          <source>Gets a number that identifies the type of error.</source>
          <target state="translated">오류의 형식을 식별하는 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Number">
          <source>The number that identifies the type of error.</source>
          <target state="translated">오류의 형식을 식별하는 번호입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Number">
          <source>This is a wrapper for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Number%2A&gt;</ph> property of the first <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.</source>
          <target state="translated">이에 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Number%2A&gt;</ph> 첫 번째 속성 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Number">
          <source>For more information on SQL Server engine errors, see SQL Server Books Online.</source>
          <target state="translated">SQL Server 엔진 오류에 대 한 자세한 내용은 SQL Server 온라인 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Number">
          <source>The following example displays each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> within the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 각 표시 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 내에서 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.Procedure">
          <source>Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</source>
          <target state="translated">오류를 생성한 저장 프로시저 또는 RPC(원격 프로시저 호출)의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Procedure">
          <source>The name of the stored procedure or RPC.</source>
          <target state="translated">저장 프로시저 또는 RPC의 이름입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Procedure">
          <source>This is a wrapper for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Procedure%2A&gt;</ph> property of the first <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.</source>
          <target state="translated">이에 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Procedure%2A&gt;</ph> 첫 번째 속성 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Procedure">
          <source>The following example displays each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> within the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 각 표시 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 내에서 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.Server">
          <source>Gets the name of the computer that is running an instance of SQL Server that generated the error.</source>
          <target state="translated">오류를 생성한 SQL Server 인스턴스를 실행하는 컴퓨터의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Server">
          <source>The name of the computer running an instance of SQL Server.</source>
          <target state="translated">SQL Server.인스턴스를 실행하는 컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Server">
          <source>This is a wrapper for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Server%2A&gt;</ph> property of the first <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.</source>
          <target state="translated">이에 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Server%2A&gt;</ph> 첫 번째 속성 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Server">
          <source>The following example displays each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> within the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 각 표시 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 내에서 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.Source">
          <source>Gets the name of the provider that generated the error.</source>
          <target state="translated">오류를 생성한 공급자의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Source">
          <source>The name of the provider that generated the error.</source>
          <target state="translated">오류를 생성한 공급자의 이름입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Source">
          <source>This is a wrapper for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Source%2A&gt;</ph> property of the first <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.</source>
          <target state="translated">이에 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.Source%2A&gt;</ph> 첫 번째 속성 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.Source">
          <source>The following example displays each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> within the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 각 표시 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 내에서 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.State">
          <source>Gets a numeric error code from SQL Server that represents an error, warning or "no data found" message.</source>
          <target state="translated">오류, 경고 또는 "데이터 없음" 메시지를 나타내는 SQL Server에서 숫자 오류 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlException.State">
          <source>For more information about how to decode these values, see SQL Server Books Online.</source>
          <target state="translated">이러한 값을 디코딩하는 방법에 대한 자세한 내용은 SQL Server 온라인 설명서를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.State">
          <source>The number representing the error code.</source>
          <target state="translated">오류 코드를 나타내는 번호입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.State">
          <source>This is a wrapper for the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.State%2A&gt;</ph> property of the first <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> in the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> property.</source>
          <target state="translated">이에 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError.State%2A&gt;</ph> 첫 번째 속성 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlException.Errors%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlException.State">
          <source>The following example displays each <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> within the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 각 표시 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlError&gt;</ph> 내에서 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlErrorCollection&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlException.ToString">
          <source>Returns a string that represents the current <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlException" /&gt;</ph> object, and includes the client connection ID (for more information, see <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" /&gt;</ph>).</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlException" /&gt;</ph> 개체를 나타내고 클라이언트 연결 ID를 포함하는 문자열을 반환합니다. 자세한 내용은 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlException.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlException" /&gt;</ph> object.<ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlException" /&gt;</ph> 개체<ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlException.ToString">
          <source>The following C# example shows how a connection attempt to a valid server but non-existent database causes a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>, which includes the client connection ID:</source>
          <target state="translated">다음 C# 예제에서는 올바른 서버에 대 한 연결 시도 방법이 되지만 존재 하지 않는 데이터베이스는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>, 클라이언트 연결 ID를 포함 된:</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlException.ToString">
          <source>The following Visual Basic sample is functionally equivalent to the previous (C#) sample:</source>
          <target state="translated">다음 Visual Basic 샘플 이전 (C#) 샘플 기능적으로 같습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>