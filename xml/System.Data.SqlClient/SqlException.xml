<Type Name="SqlException" FullName="System.Data.SqlClient.SqlException">
  <TypeSignature Language="C#" Value="public sealed class SqlException : System.Data.Common.DbException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlException extends System.Data.Common.DbException" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlException&#xA;Inherits DbException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlException sealed : System::Data::Common::DbException" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="68dde-101">SQL Server에서 경고 또는 오류를 반환할 때 throw되는 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-101">The exception that is thrown when SQL Server returns a warning or error.</span></span> <span data-ttu-id="68dde-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-103">이 클래스는.NET Framework Data Provider for SQL Server가 서버에서 생성 된 오류를 발견할 때마다 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-103">This class is created whenever the .NET Framework Data Provider for SQL Server encounters an error generated from the server.</span></span> <span data-ttu-id="68dde-104">(클라이언트 쪽 오류 표준 공용 언어 런타임 예외가 throw 됩니다.) <xref:System.Data.SqlClient.SqlException> 의 인스턴스를 하나 이상 포함 되어 항상 <xref:System.Data.SqlClient.SqlError>합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-104">(Client side errors are thrown as standard common language runtime exceptions.) <xref:System.Data.SqlClient.SqlException> always contains at least one instance of <xref:System.Data.SqlClient.SqlError>.</span></span>  
  
 <span data-ttu-id="68dde-105">메시지 심각도가 10 이하인 알림 메시지 이며 사용자가 입력 한 정보의 오류에에서 의해 발생 한 문제를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-105">Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered.</span></span> <span data-ttu-id="68dde-106">11 ~ 16 까지의 심각도 가진 사용자가 생성 되 고 사용자가 해결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-106">Severity levels from 11 through 16 are generated by the user, and can be corrected by the user.</span></span> <span data-ttu-id="68dde-107">17에서 25까지의 심각도는 소프트웨어나 하드웨어 오류를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-107">Severity levels from 17 through 25 indicate software or hardware errors.</span></span> <span data-ttu-id="68dde-108">심각도 17, 18 또는 19 오류가 발생 하면 특정 문을 실행할 수는 있지만, 작업을 계속할 수 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-108">When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.</span></span>  
  
 <span data-ttu-id="68dde-109">심각도가 19 이하인 경우 <xref:System.Data.SqlClient.SqlConnection>은 열린 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-109">The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less.</span></span> <span data-ttu-id="68dde-110">서버는 일반적으로 닫습니다 심각도 수준이 20 이상일 때는 <xref:System.Data.SqlClient.SqlConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-110">When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>.</span></span> <span data-ttu-id="68dde-111">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-111">However, the user can reopen the connection and continue.</span></span> <span data-ttu-id="68dde-112">두 경우 모두 명령을 실행하는 메서드에서 <xref:System.Data.SqlClient.SqlException>을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-112">In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.</span></span>  
  
 <span data-ttu-id="68dde-113">SQL Server에서 보낸 경고 및 정보 메시지에 대 한 자세한 내용은 SQL Server 온라인 설명서의 문제 해결 섹션을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="68dde-113">For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of SQL Server Books Online.</span></span> <span data-ttu-id="68dde-114"><xref:System.Data.SqlClient.SqlException> 클래스: SQL Server 심각도에 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-114">The <xref:System.Data.SqlClient.SqlException> class maps to SQL Server severity.</span></span>  
  
 <span data-ttu-id="68dde-115">예외 처리에 대 한 일반 정보는 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-115">The following is general information on handling exceptions.</span></span> <span data-ttu-id="68dde-116">코드는 응용 프로그램 충돌을 방지 하 고 사용자에 게 관련 된 오류 메시지를 표시 하도록 예외를 catch 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-116">Your code should catch exceptions to prevent the application from crashing and to allow displaying a relevant error message to the user.</span></span>  <span data-ttu-id="68dde-117">데이터 충돌 등 클라이언트 응용 프로그램에서 수행 되는 작업에 관계 없이 일치 하는지 확인 하려면 데이터베이스 트랜잭션을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-117">You can use database transactions to ensure that the data is consistent regardless of what happens in the client application (including a crash).</span></span> <span data-ttu-id="68dde-118">System.Transaction.TransactionScope 또는 BeginTransaction 메서드 (System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, 및 System.Data.SqlClient.SqlConnection)와 같은 기능 예외에 관계 없이 일관 된 데이터를 확인 하십시오. 공급자에서 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-118">Features like System.Transaction.TransactionScope or the BeginTransaction method (in System.Data.OleDb.OleDbConnection, System.Data.ODBC.ODBCConnection, and System.Data.SqlClient.SqlConnection) ensure consistent data regardless of exceptions raised by a provider.</span></span> <span data-ttu-id="68dde-119">트랜잭션 실패, 하므로 오류를 catch 트랜잭션을 다시 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-119">Transactions can fail, so catch failures and retry the transaction.</span></span>  
  
 <span data-ttu-id="68dde-120">.NET Framework 4.5로 시작 하는 참고 <xref:System.Data.SqlClient.SqlException> 는 내부 조인를 반환할 수 <xref:System.ComponentModel.Win32Exception>합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-120">Note that beginning with  .NET Framework 4.5, <xref:System.Data.SqlClient.SqlException> can return an inner <xref:System.ComponentModel.Win32Exception>.</span></span>  
  
 <span data-ttu-id="68dde-121">예외 클래스는.net Framework 데이터 공급자는 공급자별 오류를 보고 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-121">The exception class of a .Net Framework data provider reports provider-specific errors.</span></span> <span data-ttu-id="68dde-122">예를 들어 System.Data.Odbc에 OdbcException, System.Data.OleDb OleDbException,이 많고 System.Data.SqlClient SqlException 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-122">For example System.Data.Odbc has OdbcException, System.Data.OleDb has OleDbException, and System.Data.SqlClient has SqlException.</span></span> <span data-ttu-id="68dde-123">최상의 오류 세부 정보에 대 한 이러한 예외를 catch 하 고 오류의 세부 정보를 가져오려는 이러한 예외 클래스의 멤버를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-123">For the best level of error detail, catch these exceptions and use the members of these exception classes to get details of the error.</span></span>  
  
 <span data-ttu-id="68dde-124">공급자 특정 오류 뿐 아니라.NET Framework 데이터 공급자 형식 System.OutOfMemoryException 및 System.Threading.ThreadAbortException 같은.NET Framework 예외 발생 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-124">In addition to the provider-specific errors, .NET Framework data provider types can raise .NET Framework exceptions such as System.OutOfMemoryException and System.Threading.ThreadAbortException.</span></span> <span data-ttu-id="68dde-125">이러한 예외에서 복구 불가능할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-125">Recovery from these exceptions may not be possible.</span></span>  
  
 <span data-ttu-id="68dde-126">잘못 된 입력 System.ArgumentException System.IndexOutOfRangeException 등에서 예외가 발생 하는.NET Framework 데이터 공급자 형식은 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-126">Bad input can cause a .NET Framework data provider type to raise an exception such as System.ArgumentException or System.IndexOutOfRangeException.</span></span>  <span data-ttu-id="68dde-127">잘못 된 시간에는 메서드를 호출 하면 System.InvalidOperationException 발생 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-127">Calling a method at the wrong time can raise System.InvalidOperationException.</span></span>  
  
 <span data-ttu-id="68dde-128">따라서 일반적으로 모든 공급자를 catch 하는 예외 처리기를 작성에서 공용 언어 런타임 예외 뿐만 아니라 특정 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-128">So, in general, write an exception handler that catches any provider specific exceptions as well as exceptions from the common language runtime.</span></span>  <span data-ttu-id="68dde-129">다음과 같이 계층화 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-129">These can be layered as follows:</span></span>  
  
```csharp  
try {  
   // code here  
}  
catch (SqlException odbcEx) {  
   // Handle more specific SqlException exception here.  
}  
catch (Exception ex) {  
   // Handle generic ones here.  
}  
  
```  
  
 <span data-ttu-id="68dde-130">또는:</span><span class="sxs-lookup"><span data-stu-id="68dde-130">Or:</span></span>  
  
```csharp  
try {  
   // code here  
}  
catch (Exception ex) {  
   if (ex is SqlException) {  
      // Handle more specific SqlException exception here.  
   }  
   else {  
      // Handle generic ones here.  
   }  
}  
  
```  
  
 <span data-ttu-id="68dde-131">스택에 사용자 코드가 없는 스레드 풀 스레드에서 실패 하 고.NET Framework 데이터 공급자 메서드 호출에 대 한도 가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-131">It is also possible for a .NET Framework data provider method call to fail on a thread pool thread with no user code on the stack.</span></span> <span data-ttu-id="68dde-132">이 경우 비동기 메서드 호출을 사용 하는 경우를 등록 해야는 <xref:System.AppDomain.UnhandledException> 이러한 예외를 처리 하 고 응용 프로그램 충돌을 방지 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-132">In this case, and when using asynchronous method calls, you must register the <xref:System.AppDomain.UnhandledException> event to handle those exceptions and avoid application crash.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-133">다음 예제에서는 생성 한 <xref:System.Data.SqlClient.SqlException> 다음 예외를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-133">The following example generates a <xref:System.Data.SqlClient.SqlException> and then displays the exception.</span></span>  
  
 [!code-csharp[Classic WebData SqlException Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlError" />
    <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
  </Docs>
  <Members>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public byte Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Class" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Class" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Class As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Class { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-134">.NET Framework Data Provider for SQL Server에서 반환한 오류의 심각도 수준을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-134">Gets the severity level of the error returned from the .NET Framework Data Provider for SQL Server.</span></span></summary>
        <value><span data-ttu-id="68dde-135">오류의 심각도 수준을 나타내는 1부터 25까지의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-135">A value from 1 to 25 that indicates the severity level of the error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-136">메시지 심각도가 10 이하인 알림 메시지 이며 사용자가 입력 한 정보의 오류에에서 의해 발생 한 문제를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-136">Messages that have a severity level of 10 or less are informational and indicate problems caused by mistakes in information that a user has entered.</span></span> <span data-ttu-id="68dde-137">11 ~ 16 까지의 심각도 가진 사용자가 생성 되 고 사용자가 해결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-137">Severity levels from 11 through 16 are generated by the user, and can be corrected by the user.</span></span> <span data-ttu-id="68dde-138">17에서 25까지의 심각도는 소프트웨어나 하드웨어 오류를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-138">Severity levels from 17 through 25 indicate software or hardware errors.</span></span> <span data-ttu-id="68dde-139">심각도 17, 18 또는 19 오류가 발생 하면 특정 문을 실행할 수는 있지만, 작업을 계속할 수 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-139">When a level 17, 18, or 19 error occurs, you can continue working, although you might not be able to execute a particular statement.</span></span>  
  
 <span data-ttu-id="68dde-140">심각도가 19 이하인 경우 <xref:System.Data.SqlClient.SqlConnection>은 열린 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-140">The <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less.</span></span> <span data-ttu-id="68dde-141">서버는 일반적으로 닫습니다 심각도 수준이 20 이상일 때는 <xref:System.Data.SqlClient.SqlConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-141">When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>.</span></span> <span data-ttu-id="68dde-142">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-142">However, the user can reopen the connection and continue.</span></span> <span data-ttu-id="68dde-143">두 경우 모두 명령을 실행하는 메서드에서 <xref:System.Data.SqlClient.SqlException>을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-143">In both cases, a <xref:System.Data.SqlClient.SqlException> is generated by the method executing the command.</span></span>  
  
 <span data-ttu-id="68dde-144">SQL Server에서 보낸 경고 및 정보 메시지에 대 한 자세한 내용은 SQL Server 설명서의 문제 해결 섹션을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="68dde-144">For information about the warning and informational messages sent by SQL Server, see the Troubleshooting section of the SQL Server documentation.</span></span>  
  
 <span data-ttu-id="68dde-145">이에 대 한 래퍼는 <xref:System.Data.SqlClient.SqlError.Class%2A> 첫 번째 속성 <xref:System.Data.SqlClient.SqlError> 에 <xref:System.Data.SqlClient.SqlException.Errors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-145">This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Class%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-146">다음 예제에서는 각 표시 <xref:System.Data.SqlClient.SqlError> 내에서 <xref:System.Data.SqlClient.SqlErrorCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-146">The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.</span></span>  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ClientConnectionId">
      <MemberSignature Language="C#" Value="public Guid ClientConnectionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientConnectionId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.ClientConnectionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientConnectionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ClientConnectionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-147">클라이언트 연결 ID를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-147">Represents the client connection ID.</span></span> <span data-ttu-id="68dde-148">자세한 내용은 [ADO.NET의 데이터 추적](~/docs/framework/data/adonet/data-tracing.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="68dde-148">For more information, see [Data Tracing in ADO.NET](~/docs/framework/data/adonet/data-tracing.md).</span></span></summary>
        <value><span data-ttu-id="68dde-149">클라이언트 연결 ID를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-149">Returns the client connection ID.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-150">코드 샘플은 <xref:System.Data.SqlClient.SqlException.ToString%2A>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="68dde-150">For a code sample, see <xref:System.Data.SqlClient.SqlException.ToString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlErrorCollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlErrorCollection Errors" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As SqlErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlErrorCollection ^ Errors { System::Data::SqlClient::SqlErrorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlErrorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-151">.NET Framework Data Provider for SQL Server에서 생성된 예외에 대한 자세한 정보를 제공하는 하나 이상의 <see cref="T:System.Data.SqlClient.SqlError" /> 개체 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-151">Gets a collection of one or more <see cref="T:System.Data.SqlClient.SqlError" /> objects that give detailed information about exceptions generated by the .NET Framework Data Provider for SQL Server.</span></span></summary>
        <value><span data-ttu-id="68dde-152"><see cref="T:System.Data.SqlClient.SqlError" /> 클래스의 수집된 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-152">The collected instances of the <see cref="T:System.Data.SqlClient.SqlError" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-153"><xref:System.Data.SqlClient.SqlErrorCollection> 클래스에는 항상의 인스턴스를 하나 이상 포함 된 <xref:System.Data.SqlClient.SqlError> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-153">The <xref:System.Data.SqlClient.SqlErrorCollection> class always contains at least one instance of the <xref:System.Data.SqlClient.SqlError> class.</span></span>  
  
 <span data-ttu-id="68dde-154">이 대 한 래퍼는 <xref:System.Data.SqlClient.SqlErrorCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-154">This is a wrapper for <xref:System.Data.SqlClient.SqlErrorCollection>.</span></span> <span data-ttu-id="68dde-155">SQL Server 엔진 오류에 대 한 자세한 내용은 SQL Server 온라인 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-155">For more information on SQL Server engine errors, see SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-156">다음 예제에서는 각 표시 <xref:System.Data.SqlClient.SqlError> 내에서 <xref:System.Data.SqlClient.SqlErrorCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-156">The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.</span></span>  
  
 [!code-csharp[Classic WebData SqlError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlErrorCollection" />
        <altmember cref="T:System.Data.SqlClient.SqlError" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si"><span data-ttu-id="68dde-157">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-157">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="68dde-158">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-158">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="68dde-159">예외에 대한 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-159">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-160">`GetObjectData`는 serialization을 위해 대상으로 하는 모든 예외 개체 데이터를 사용하여 `SerializationInfo`를 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-160">`GetObjectData` sets a `SerializationInfo` with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="68dde-161">deserialization을 수행하는 동안 스트림을 통해 전송된 `SerializationInfo`에서 예외가 다시 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-161">During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68dde-162"><paramref name="si" />매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)인 경우</span><span class="sxs-lookup"><span data-stu-id="68dde-162">The <paramref name="si" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-163">오류를 생성한 Transact-SQL 명령 일괄이나 저장 프로시저의 줄 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-163">Gets the line number within the Transact-SQL command batch or stored procedure that generated the error.</span></span></summary>
        <value><span data-ttu-id="68dde-164">오류를 포함하는 Transact-SQL 명령 일괄이나 저장 프로시저의 줄 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-164">The line number within the Transact-SQL command batch or stored procedure that generated the error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-165">줄 번호 매기기 1;에서 시작 0이 반환 되는 줄 번호 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-165">The line numbering starts at 1; if 0 is returned, the line number is not applicable.</span></span>  
  
 <span data-ttu-id="68dde-166">이에 대 한 래퍼는 <xref:System.Data.SqlClient.SqlError.LineNumber%2A> 첫 번째 속성 <xref:System.Data.SqlClient.SqlError> 에 <xref:System.Data.SqlClient.SqlException.Errors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-166">This is a wrapper for the <xref:System.Data.SqlClient.SqlError.LineNumber%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-167">다음 예제에서는 각 표시 <xref:System.Data.SqlClient.SqlError> 내에서 <xref:System.Data.SqlClient.SqlErrorCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-167">The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.</span></span>  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Number" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-168">오류의 형식을 식별하는 번호를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-168">Gets a number that identifies the type of error.</span></span></summary>
        <value><span data-ttu-id="68dde-169">오류의 형식을 식별하는 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-169">The number that identifies the type of error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-170">이에 대 한 래퍼는 <xref:System.Data.SqlClient.SqlError.Number%2A> 첫 번째 속성 <xref:System.Data.SqlClient.SqlError> 에 <xref:System.Data.SqlClient.SqlException.Errors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-170">This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Number%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.</span></span> <span data-ttu-id="68dde-171">SQL Server 엔진 오류에 대 한 자세한 내용은 SQL Server 온라인 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-171">For more information on SQL Server engine errors, see SQL Server Books Online.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-172">다음 예제에서는 각 표시 <xref:System.Data.SqlClient.SqlError> 내에서 <xref:System.Data.SqlClient.SqlErrorCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-172">The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.</span></span>  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Procedure">
      <MemberSignature Language="C#" Value="public string Procedure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Procedure" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Procedure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Procedure As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Procedure { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-173">오류를 생성한 저장 프로시저 또는 RPC(원격 프로시저 호출)의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-173">Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</span></span></summary>
        <value><span data-ttu-id="68dde-174">저장 프로시저 또는 RPC의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-174">The name of the stored procedure or RPC.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-175">이에 대 한 래퍼는 <xref:System.Data.SqlClient.SqlError.Procedure%2A> 첫 번째 속성 <xref:System.Data.SqlClient.SqlError> 에 <xref:System.Data.SqlClient.SqlException.Errors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-175">This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Procedure%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-176">다음 예제에서는 각 표시 <xref:System.Data.SqlClient.SqlError> 내에서 <xref:System.Data.SqlClient.SqlErrorCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-176">The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.</span></span>  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public string Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Server" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Server { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-177">오류를 생성한 SQL Server 인스턴스를 실행하는 컴퓨터의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-177">Gets the name of the computer that is running an instance of SQL Server that generated the error.</span></span></summary>
        <value><span data-ttu-id="68dde-178">SQL Server.인스턴스를 실행하는 컴퓨터의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-178">The name of the computer running an instance of SQL Server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-179">이에 대 한 래퍼는 <xref:System.Data.SqlClient.SqlError.Server%2A> 첫 번째 속성 <xref:System.Data.SqlClient.SqlError> 에 <xref:System.Data.SqlClient.SqlException.Errors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-179">This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Server%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-180">다음 예제에서는 각 표시 <xref:System.Data.SqlClient.SqlError> 내에서 <xref:System.Data.SqlClient.SqlErrorCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-180">The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.</span></span>  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.Source" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-181">오류를 생성한 공급자의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-181">Gets the name of the provider that generated the error.</span></span></summary>
        <value><span data-ttu-id="68dde-182">오류를 생성한 공급자의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-182">The name of the provider that generated the error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-183">이에 대 한 래퍼는 <xref:System.Data.SqlClient.SqlError.Source%2A> 첫 번째 속성 <xref:System.Data.SqlClient.SqlError> 에 <xref:System.Data.SqlClient.SqlException.Errors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-183">This is a wrapper for the <xref:System.Data.SqlClient.SqlError.Source%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-184">다음 예제에서는 각 표시 <xref:System.Data.SqlClient.SqlError> 내에서 <xref:System.Data.SqlClient.SqlErrorCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-184">The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.</span></span>  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.State" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public byte State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 State" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlException.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte State { System::Byte get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68dde-185">오류, 경고 또는 "데이터 없음" 메시지를 나타내는 SQL Server에서 숫자 오류 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-185">Gets a numeric error code from SQL Server that represents an error, warning or "no data found" message.</span></span> <span data-ttu-id="68dde-186">이러한 값을 디코딩하는 방법에 대한 자세한 내용은 SQL Server 온라인 설명서를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="68dde-186">For more information about how to decode these values, see SQL Server Books Online.</span></span></summary>
        <value><span data-ttu-id="68dde-187">오류 코드를 나타내는 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-187">The number representing the error code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68dde-188">이에 대 한 래퍼는 <xref:System.Data.SqlClient.SqlError.State%2A> 첫 번째 속성 <xref:System.Data.SqlClient.SqlError> 에 <xref:System.Data.SqlClient.SqlException.Errors%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-188">This is a wrapper for the <xref:System.Data.SqlClient.SqlError.State%2A> property of the first <xref:System.Data.SqlClient.SqlError> in the <xref:System.Data.SqlClient.SqlException.Errors%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68dde-189">다음 예제에서는 각 표시 <xref:System.Data.SqlClient.SqlError> 내에서 <xref:System.Data.SqlClient.SqlErrorCollection> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-189">The following example displays each <xref:System.Data.SqlClient.SqlError> within the <xref:System.Data.SqlClient.SqlErrorCollection> collection.</span></span>  
  
 [!code-csharp[Classic WebData SqlException.State Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlException.State Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlException.State Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.SqlClient.SqlException.Number" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Class" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Source" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Server" />
        <altmember cref="P:System.Data.SqlClient.SqlException.Procedure" />
        <altmember cref="P:System.Data.SqlClient.SqlException.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68dde-190">현재 <see cref="T:System.Data.SqlClient.SqlException" /> 개체를 나타내고 클라이언트 연결 ID를 포함하는 문자열을 반환합니다. 자세한 내용은 <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="68dde-190">Returns a string that represents the current <see cref="T:System.Data.SqlClient.SqlException" /> object, and includes the client connection ID (for more information, see <see cref="P:System.Data.SqlClient.SqlException.ClientConnectionId" />).</span></span></summary>
        <returns><span data-ttu-id="68dde-191">현재 <see cref="T:System.Data.SqlClient.SqlException" /> 개체<see cref="T:System.String" />를 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-191">A string that represents the current <see cref="T:System.Data.SqlClient.SqlException" /> object.<see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="68dde-192">다음 C# 예제에서는 올바른 서버에 대 한 연결 시도 방법이 되지만 존재 하지 않는 데이터베이스는 <xref:System.Data.SqlClient.SqlException>, 클라이언트 연결 ID를 포함 된:</span><span class="sxs-lookup"><span data-stu-id="68dde-192">The following C# example shows how a connection attempt to a valid server but non-existent database causes a <xref:System.Data.SqlClient.SqlException>, which includes the client connection ID:</span></span>  
  
```  
using System.Data.SqlClient;  
using System;  
  
public class A {  
   public static void Main() {  
      SqlConnection connection = new SqlConnection();  
      connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true";  
      try {  
         connection.Open();  
      }  
      catch (SqlException p) {  
         Console.WriteLine("{0}", p.ClientConnectionId);  
         Console.WriteLine("{0}", p.ToString());  
      }  
      connection.Close();  
   }  
}  
```  
  
 <span data-ttu-id="68dde-193">다음 Visual Basic 샘플 이전 (C#) 샘플 기능적으로 같습니다.</span><span class="sxs-lookup"><span data-stu-id="68dde-193">The following Visual Basic sample is functionally equivalent to the previous (C#) sample:</span></span>  
  
```  
Imports System.Data.SqlClient  
Imports System  
  
Module Module1  
  
    Sub Main()  
        Dim connection As New SqlConnection()  
        connection.ConnectionString = "Data Source=a_valid_server;Initial Catalog=Northwinda;Integrated Security=true"  
        Try  
            connection.Open()  
        Catch p As SqlException  
            Console.WriteLine("{0}", p.ClientConnectionId)  
            Console.WriteLine("{0}", p.ToString())  
        End Try  
        connection.Close()  
    End Sub  
  
End Module  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>