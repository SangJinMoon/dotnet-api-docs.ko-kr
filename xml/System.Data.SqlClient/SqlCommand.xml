<Type Name="SqlCommand" FullName="System.Data.SqlClient.SqlCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="232e437bba67fbe5cf8e4ca13ad75a55cbdba1dd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlCommand : System.Data.Common.DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCommand extends System.Data.Common.DbCommand implements class System.Data.IDbCommand, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlCommand sealed : System::Data::Common::DbCommand, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlCommand = class&#xA;    inherit DbCommand&#xA;    interface IDbCommand&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Drawing.Design.ToolboxItem, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fba2b-101">SQL Server 데이터베이스에 대해 실행할 Transact-SQL 문이나 저장 프로시저를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fba2b-101">Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database.</span>
      </span>
      <span data-ttu-id="fba2b-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fba2b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-103">인스턴스가 <xref:System.Data.SqlClient.SqlCommand> 만들어지면 읽기/쓰기 속성은 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-103">When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the read/write properties are set to their initial values.</span></span> <span data-ttu-id="fba2b-104">이러한 값의 목록에 대 한 참조는 <xref:System.Data.SqlClient.SqlCommand> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-104">For a list of these values, see the <xref:System.Data.SqlClient.SqlCommand> constructor.</span></span>  
  
 <span data-ttu-id="fba2b-105"><xref:System.Data.SqlClient.SqlCommand> SQL Server 데이터베이스에서 명령을 실행 하기 위한 다음 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-105"><xref:System.Data.SqlClient.SqlCommand> features the following methods for executing commands at a SQL Server database:</span></span>  
  
|<span data-ttu-id="fba2b-106">항목</span><span class="sxs-lookup"><span data-stu-id="fba2b-106">Item</span></span>|<span data-ttu-id="fba2b-107">설명</span><span class="sxs-lookup"><span data-stu-id="fba2b-107">Description</span></span>|  
|----------|-----------------|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>|<span data-ttu-id="fba2b-108">Transact SQL 문 또는이 설명 하는 저장된 프로시저의 비동기 실행을 시작 <xref:System.Data.SqlClient.SqlCommand>, 일반적으로 INSERT, DELETE, UPDATE 등의 명령을 실행 하 고 SET 문입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-108">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements.</span></span> <span data-ttu-id="fba2b-109">호출할 때마다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 을 호출 하 여 쌍이 되어야 합니다 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 일반적으로 별도 스레드에서 작업을 종료입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-109">Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> which finishes the operation, typically on a separate thread.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>|<span data-ttu-id="fba2b-110">Transact SQL 문 또는이 설명 하는 저장된 프로시저의 비동기 실행을 시작 <xref:System.Data.SqlClient.SqlCommand> 서버에서 하나 이상의 결과 집합으로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-110">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand> and retrieves one or more results sets from the server.</span></span> <span data-ttu-id="fba2b-111">호출할 때마다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 을 호출 하 여 쌍이 되어야 합니다 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 일반적으로 별도 스레드에서 작업을 종료입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-111">Each call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> must be paired with a call to <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> which finishes the operation, typically on a separate thread.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>|<span data-ttu-id="fba2b-112">이 <xref:System.Data.SqlClient.SqlCommand>가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-112">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <xref:System.Data.SqlClient.SqlCommand>.</span></span> <span data-ttu-id="fba2b-113">호출할 때마다 `BeginExecuteXmlReader` 을 호출 하 여 쌍이 되어야 합니다 `EndExecuteXmlReader`을 반환 하는 별도 스레드에서 일반적으로 작업을 종료 한 <xref:System.Xml.XmlReader> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-113">Each call to `BeginExecuteXmlReader` must be paired with a call to `EndExecuteXmlReader`, which finishes the operation, typically on a separate thread, and returns an <xref:System.Xml.XmlReader> object.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>|<span data-ttu-id="fba2b-114">행을 반환 하는 명령을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-114">Executes commands that return rows.</span></span> <span data-ttu-id="fba2b-115">성능 향상된을 위해 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> TRANSACT-SQL을 사용 하 여 명령을 호출 `sp_executesql` 시스템 저장 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-115">For increased performance, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> invokes commands using the Transact-SQL `sp_executesql` system stored procedure.</span></span> <span data-ttu-id="fba2b-116">따라서 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 되지 않았을 수의 원하는 효과 사용 하는 경우 TRANSACT-SQL SET 문과 같은 명령을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-116">Therefore, <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>|<span data-ttu-id="fba2b-117">Transact SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-117">Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>|<span data-ttu-id="fba2b-118">데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-118">Retrieves a single value (for example, an aggregate value) from a database.</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>|<span data-ttu-id="fba2b-119"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A>를 <xref:System.Data.SqlClient.SqlCommand.Connection%2A>에 보내고, <xref:System.Xml.XmlReader> 개체를 빌드합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-119">Sends the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> to the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> and builds an <xref:System.Xml.XmlReader> object.</span></span>|  
  
 <span data-ttu-id="fba2b-120">다시 설정할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성 및 재사용은 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-120">You can reset the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property and reuse the <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-121">그러나를 닫아야는 <xref:System.Data.SqlClient.SqlDataReader> 전에 이전 또는 새 명령을 실행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-121">However, you must close the <xref:System.Data.SqlClient.SqlDataReader> before you can execute a new or previous command.</span></span>  
  
 <span data-ttu-id="fba2b-122">경우는 <xref:System.Data.SqlClient.SqlException> 메서드를 실행 하 여 생성 되는 <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlConnection> 심각도 19 이하인 경우 열린 상태를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-122">If a <xref:System.Data.SqlClient.SqlException> is generated by the method executing a <xref:System.Data.SqlClient.SqlCommand>, the <xref:System.Data.SqlClient.SqlConnection> remains open when the severity level is 19 or less.</span></span> <span data-ttu-id="fba2b-123">서버는 일반적으로 닫습니다 심각도 수준이 20 이상일 때는 <xref:System.Data.SqlClient.SqlConnection>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-123">When the severity level is 20 or greater, the server ordinarily closes the <xref:System.Data.SqlClient.SqlConnection>.</span></span> <span data-ttu-id="fba2b-124">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-124">However, the user can reopen the connection and continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fba2b-125">서 수 이며 라고도 무명 매개 변수는 SQL Server는.NET Framework Data Provider에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-125">Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-126">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, 및 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-126">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="fba2b-127">이 예제에서는 콘솔에 작성 하는 데이터를 읽습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-127">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="fba2b-128">마지막는 <xref:System.Data.SqlClient.SqlDataReader> 차례로 <xref:System.Data.SqlClient.SqlConnection> 종료할는 `Using` 코드 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-128">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader> and then the <xref:System.Data.SqlClient.SqlConnection> as it exits the `Using` code blocks.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 <span data-ttu-id="fba2b-129">다음 샘플에는 만들고 다양 한 유형의 SqlCommand 개체를 실행 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-129">The following sample shows how to create and execute different types of SqlCommand objects.</span></span>  
  
 <span data-ttu-id="fba2b-130">먼저 다음 스크립트를 실행 하 여 샘플 데이터베이스를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-130">First you must create the sample database, by executing the following script:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE procedure [dbo].[CourseExtInfo] @CourseId int  
as  
select c.CourseID,c.Title,c.Credits,d.Name as DepartmentName  
from Course as c left outer join Department as d on c.DepartmentID=d.DepartmentID  
where c.CourseID=@CourseId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create procedure [dbo].[DepartmentInfo] @DepartmentId int,@CourseCount int output  
as  
select @CourseCount=Count(c.CourseID)  
from course as c  
where c.DepartmentID=@DepartmentId  
  
select d.DepartmentID,d.Name,d.Budget,d.StartDate,d.Administrator  
from Department as d  
where d.DepartmentID=@DepartmentId  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
Create PROCEDURE [dbo].[GetDepartmentsOfSpecifiedYear]   
@Year int,@BudgetSum money output  
AS  
BEGIN  
        SELECT @BudgetSum=SUM([Budget])  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year   
  
SELECT [DepartmentID]  
      ,[Name]  
      ,[Budget]  
      ,[StartDate]  
      ,[Administrator]  
  FROM [MySchool].[dbo].[Department]  
  Where YEAR([StartDate])=@Year  
  
END  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Person]([PersonID] [int] IDENTITY(1,1) NOT NULL,  
[LastName] [nvarchar](50) NOT NULL,  
[FirstName] [nvarchar](50) NOT NULL,  
[HireDate] [datetime] NULL,  
[EnrollmentDate] [datetime] NULL,  
 CONSTRAINT [PK_School.Student] PRIMARY KEY CLUSTERED   
(  
[PersonID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[StudentGrade]([EnrollmentID] [int] IDENTITY(1,1) NOT NULL,  
[CourseID] [nvarchar](10) NOT NULL,  
[StudentID] [int] NOT NULL,  
[Grade] [decimal](3, 2) NOT NULL,  
 CONSTRAINT [PK_StudentGrade] PRIMARY KEY CLUSTERED   
(  
[EnrollmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
create view [dbo].[EnglishCourse]  
as  
select c.CourseID,c.Title,c.Credits,c.DepartmentID  
from Course as c join Department as d on c.DepartmentID=d.DepartmentID  
where d.Name=N'English'  
  
GO  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
SET IDENTITY_INSERT [dbo].[Person] ON   
  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (1, N'Hu', N'Nan', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (2, N'Norman', N'Laura', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (3, N'Olivotto', N'Nino', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (4, N'Anand', N'Arturo', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (5, N'Jai', N'Damien', NULL, CAST(0x0000A0BF00000000 AS DateTime))  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (6, N'Holt', N'Roger', CAST(0x000097F100000000 AS DateTime), NULL)  
INSERT [dbo].[Person] ([PersonID], [LastName], [FirstName], [HireDate], [EnrollmentDate]) VALUES (7, N'Martin', N'Randall', CAST(0x00008B1A00000000 AS DateTime), NULL)  
SET IDENTITY_INSERT [dbo].[Person] OFF  
SET IDENTITY_INSERT [dbo].[StudentGrade] ON   
  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (1, N'C1045', 1, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (2, N'C1045', 2, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (3, N'C1045', 3, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (4, N'C1045', 4, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (5, N'C1045', 5, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (6, N'C1061', 1, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (7, N'C1061', 3, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (8, N'C1061', 4, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (9, N'C1061', 5, CAST(1.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (10, N'C2021', 1, CAST(2.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (11, N'C2021', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (12, N'C2021', 4, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (13, N'C2021', 5, CAST(3.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (14, N'C2042', 1, CAST(2.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (15, N'C2042', 2, CAST(3.50 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (16, N'C2042', 3, CAST(4.00 AS Decimal(3, 2)))  
INSERT [dbo].[StudentGrade] ([EnrollmentID], [CourseID], [StudentID], [Grade]) VALUES (17, N'C2042', 5, CAST(3.00 AS Decimal(3, 2)))  
SET IDENTITY_INSERT [dbo].[StudentGrade] OFF  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
ALTER TABLE [dbo].[StudentGrade]  WITH CHECK ADD  CONSTRAINT [FK_StudentGrade_Student] FOREIGN KEY([StudentID])  
REFERENCES [dbo].[Person] ([PersonID])  
GO  
ALTER TABLE [dbo].[StudentGrade] CHECK CONSTRAINT [FK_StudentGrade_Student]  
GO  
```  
  
 <span data-ttu-id="fba2b-131">다음으로, 컴파일 및 다음 명령을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-131">Next, compile and execute the following:</span></span>  
  
```  
using System;  
using System.Data;  
using System.Data.SqlClient;  
using System.Threading.Tasks;  
  
class Program {  
  
   static class SqlHelper {  
      // Set the connection, command, and then execute the command with non query.  
      public static Int32 ExecuteNonQuery(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               // There're three command types: StoredProcedure, Text, TableDirect. The TableDirect   
               // type is only for OLE DB.    
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteNonQuery();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command and only return one value.  
      public static Object ExecuteScalar(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         using (SqlConnection conn = new SqlConnection(connectionString)) {  
            using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
               cmd.CommandType = commandType;  
               cmd.Parameters.AddRange(parameters);  
  
               conn.Open();  
               return cmd.ExecuteScalar();  
            }  
         }  
      }  
  
      // Set the connection, command, and then execute the command with query and return the reader.  
      public static SqlDataReader ExecuteReader(String connectionString, String commandText,  
          CommandType commandType, params SqlParameter[] parameters) {  
         SqlConnection conn = new SqlConnection(connectionString);  
  
         using (SqlCommand cmd = new SqlCommand(commandText, conn)) {  
            cmd.CommandType = commandType;  
            cmd.Parameters.AddRange(parameters);  
  
            conn.Open();  
            // When using CommandBehavior.CloseConnection, the connection will be closed when the   
            // IDataReader is closed.  
            SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);  
  
            return reader;  
         }  
      }  
   }  
  
   static void Main(string[] args) {  
      String connectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True;Asynchronous Processing=true;";  
  
      CountCourses(connectionString, 2012);  
      Console.WriteLine();  
  
      Console.WriteLine("Following result is the departments that started from 2007:");  
      GetDepartments(connectionString, 2007);  
      Console.WriteLine();  
  
      Console.WriteLine("Add the credits when the credits of course is lower than 4.");  
      AddCredits(connectionString, 4);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static void CountCourses(String connectionString, Int32 year) {  
      String commandText = "Select Count([CourseID]) FROM [MySchool].[dbo].[Course] Where Year=@Year";  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      Object oValue = SqlHelper.ExecuteScalar(connectionString, commandText, CommandType.Text, parameterYear);  
      Int32 count;  
      if (Int32.TryParse(oValue.ToString(), out count))  
         Console.WriteLine("There {0} {1} course{2} in {3}.", count > 1 ? "are" : "is", count, count > 1 ? "s" : null, year);  
   }  
  
   // Display the Departments that start from the specified year.  
   static void GetDepartments(String connectionString, Int32 year) {  
      String commandText = "dbo.GetDepartmentsOfSpecifiedYear";  
  
      // Specify the year of StartDate  
      SqlParameter parameterYear = new SqlParameter("@Year", SqlDbType.Int);  
      parameterYear.Value = year;  
  
      // When the direction of parameter is set as Output, you can get the value after   
      // executing the command.  
      SqlParameter parameterBudget = new SqlParameter("@BudgetSum", SqlDbType.Money);  
      parameterBudget.Direction = ParameterDirection.Output;  
  
      using (SqlDataReader reader = SqlHelper.ExecuteReader(connectionString, commandText,  
          CommandType.StoredProcedure, parameterYear, parameterBudget)) {  
         Console.WriteLine("{0,-20}{1,-20}{2,-20}{3,-20}", "Name", "Budget", "StartDate",  
             "Administrator");  
         while (reader.Read()) {  
            Console.WriteLine("{0,-20}{1,-20:C}{2,-20:d}{3,-20}", reader["Name"],  
                reader["Budget"], reader["StartDate"], reader["Administrator"]);  
         }  
      }  
      Console.WriteLine("{0,-20}{1,-20:C}", "Sum:", parameterBudget.Value);  
   }  
  
   // If credits of course is lower than the certain value, the method will add the credits.  
   static void AddCredits(String connectionString, Int32 creditsLow) {  
      String commandText = "Update [MySchool].[dbo].[Course] Set Credits=Credits+1 Where Credits<@Credits";  
  
      SqlParameter parameterCredits = new SqlParameter("@Credits", creditsLow);  
  
      Int32 rows = SqlHelper.ExecuteNonQuery(connectionString, commandText, CommandType.Text, parameterCredits);  
  
      Console.WriteLine("{0} row{1} {2} updated.", rows, rows > 1 ? "s" : null, rows > 1 ? "are" : "is");  
   }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-132">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-132">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-133">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-133">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-134">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-134">The base constructor initializes all fields to their default values.</span></span> <span data-ttu-id="fba2b-135">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.SqlClient.SqlCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-135">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="fba2b-136">속성</span><span class="sxs-lookup"><span data-stu-id="fba2b-136">Properties</span></span>|<span data-ttu-id="fba2b-137">초기 값</span><span class="sxs-lookup"><span data-stu-id="fba2b-137">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|<span data-ttu-id="fba2b-138">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="fba2b-138">empty string ("")</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="fba2b-139">30</span><span class="sxs-lookup"><span data-stu-id="fba2b-139">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="fba2b-140">Null</span><span class="sxs-lookup"><span data-stu-id="fba2b-140">Null</span></span>|  
  
 <span data-ttu-id="fba2b-141">속성에 별도 호출을 통해 이러한 속성 중 하나에 대 한 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-141">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-142">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 설정 하 고는 `CommandTimeout` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-142">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets the `CommandTimeout` property.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand cmdText" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="fba2b-143">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-143">The text of the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-144">쿼리 텍스트를 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-144">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-145">인스턴스가 <xref:System.Data.SqlClient.SqlCommand> 만들어지면 다음 읽기/쓰기 속성은 초기 값으로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-145">When an instance of <xref:System.Data.SqlClient.SqlCommand> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="fba2b-146">속성</span><span class="sxs-lookup"><span data-stu-id="fba2b-146">Properties</span></span>|<span data-ttu-id="fba2b-147">초기 값</span><span class="sxs-lookup"><span data-stu-id="fba2b-147">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="fba2b-148">30</span><span class="sxs-lookup"><span data-stu-id="fba2b-148">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="fba2b-149">null</span><span class="sxs-lookup"><span data-stu-id="fba2b-149">null</span></span>|  
  
 <span data-ttu-id="fba2b-150">속성에 별도 호출을 통해 이러한 속성 중 하나에 대 한 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-150">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-151">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand>, 연결 문자열 및 명령 텍스트를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-151">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, passing in the connection string and command text.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="fba2b-152">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-152">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="fba2b-153">SQL Server의 인스턴스에 대한 연결을 나타내는 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-153">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-154">쿼리의 텍스트와 <see cref="T:System.Data.SqlClient.SqlConnection" />을 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-154">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query and a <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-155">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.SqlClient.SqlCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-155">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="fba2b-156">속성</span><span class="sxs-lookup"><span data-stu-id="fba2b-156">Properties</span></span>|<span data-ttu-id="fba2b-157">초기 값</span><span class="sxs-lookup"><span data-stu-id="fba2b-157">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="fba2b-158">30</span><span class="sxs-lookup"><span data-stu-id="fba2b-158">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="fba2b-159">새 <xref:System.Data.SqlClient.SqlConnection> 즉에 대 한 값은 `connection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-159">A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="fba2b-160">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-160">You can change the value for any of these parameters by setting the related property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-161">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-161">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.SqlCommand2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.SqlCommand2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="fba2b-162">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-162">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="fba2b-163">SQL Server의 인스턴스에 대한 연결을 나타내는 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-163">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="fba2b-164">
            <see cref="T:System.Data.SqlClient.SqlCommand" />가 실행되는 <see cref="T:System.Data.SqlClient.SqlTransaction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-164">The <see cref="T:System.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-165">쿼리의 텍스트, <see cref="T:System.Data.SqlClient.SqlConnection" /> 및 <see cref="T:System.Data.SqlClient.SqlTransaction" />을 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-165">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query, a <see cref="T:System.Data.SqlClient.SqlConnection" />, and the <see cref="T:System.Data.SqlClient.SqlTransaction" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-166">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Data.SqlClient.SqlCommand>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-166">The following table shows initial property values for an instance of <xref:System.Data.SqlClient.SqlCommand>.</span></span>  
  
|<span data-ttu-id="fba2b-167">속성</span><span class="sxs-lookup"><span data-stu-id="fba2b-167">Properties</span></span>|<span data-ttu-id="fba2b-168">초기 값</span><span class="sxs-lookup"><span data-stu-id="fba2b-168">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.SqlClient.SqlCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>|<span data-ttu-id="fba2b-169">30</span><span class="sxs-lookup"><span data-stu-id="fba2b-169">30</span></span>|  
|<xref:System.Data.SqlClient.SqlCommand.CommandType%2A>|`CommandType.Text`|  
|<xref:System.Data.SqlClient.SqlCommand.Connection%2A>|<span data-ttu-id="fba2b-170">새 <xref:System.Data.SqlClient.SqlConnection> 즉에 대 한 값은 `connection` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-170">A new <xref:System.Data.SqlClient.SqlConnection> that is the value for the `connection` parameter.</span></span>|  
  
 <span data-ttu-id="fba2b-171">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-171">You can change the value for any of these parameters by setting the related property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCommand (string cmdText, System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlTransaction transaction, System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.SqlClient.SqlConnection connection, class System.Data.SqlClient.SqlTransaction transaction, valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting columnEncryptionSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As SqlConnection, transaction As SqlTransaction, columnEncryptionSetting As SqlCommandColumnEncryptionSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlCommand(System::String ^ cmdText, System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlTransaction ^ transaction, System::Data::SqlClient::SqlCommandColumnEncryptionSetting columnEncryptionSetting);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlCommand : string * System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlTransaction * System.Data.SqlClient.SqlCommandColumnEncryptionSetting -&gt; System.Data.SqlClient.SqlCommand" Usage="new System.Data.SqlClient.SqlCommand (cmdText, connection, transaction, columnEncryptionSetting)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="transaction" Type="System.Data.SqlClient.SqlTransaction" />
        <Parameter Name="columnEncryptionSetting" Type="System.Data.SqlClient.SqlCommandColumnEncryptionSetting" />
      </Parameters>
      <Docs>
        <param name="cmdText">
          <span data-ttu-id="fba2b-172">쿼리 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-172">The text of the query.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="fba2b-173">SQL Server의 인스턴스에 대한 연결을 나타내는 <see cref="T:System.Data.SqlClient.SqlConnection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-173">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="fba2b-174">
            <see cref="T:System.Data.SqlClient.SqlCommand" />가 실행되는 <see cref="T:System.Data.SqlClient.SqlTransaction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-174">The <see cref="T:System.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span>
          </span>
        </param>
        <param name="columnEncryptionSetting">
          <span data-ttu-id="fba2b-175">암호화 설정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-175">The encryption setting.</span>
          </span>
          <span data-ttu-id="fba2b-176">자세한 내용은 [항상 암호화함](/sql/relational-databases/security/encryption/always-encrypted-database-engine)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-176">For more information, see [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-177">지정된 명령 텍스트, 연결, 트랜잭션 및 암호화 설정을 사용하여 <see cref="T:System.Data.SqlClient.SqlCommand" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-177">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with specified command text, connection, transaction, and encryption setting.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteNonQuery">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-178">이 <see cref="T:System.Data.SqlClient.SqlCommand" />가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-178">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-179">이 <see cref="T:System.Data.SqlClient.SqlCommand" />가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-179">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-180">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 이 값은 영향을 받는 행의 수를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />를 호출할 때도 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-180">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, which returns the number of affected rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-181"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드를 비동기적으로 실행 시작 된 [!INCLUDE[tsql](~/includes/tsql-md.md)] 문 또는 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 행을 반환 하지 않는 저장된 프로시저입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-181">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="fba2b-182">문이 완료 되 면 개발자가 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드를 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-182">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation.</span></span> <span data-ttu-id="fba2b-183"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드가 즉시 반환 (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 영향을 주지 않습니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), 해당 코드가 실행 될 때까지 하지만 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드 호출에서 해당 실행 해서는 안 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 같은 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-183">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-184">호출 된 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 명령 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-184">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="fba2b-185">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-185">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="fba2b-186">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-186">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="fba2b-187">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-187">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="fba2b-188">이 오버 로드는 콜백 프로시저를 지원 하지 않으므로 되기를 기다려야 명령이 완료 되었는지 여부를 확인 하려면 두 설문 조사를 사용 하 여는 <xref:System.IAsyncResult.IsCompleted%2A> 속성은 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드; 또는 완료를 위해 대기 하나 이상의 명령을 사용 하는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 반환 된 속성 <xref:System.IAsyncResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-188">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-189">다음 콘솔 응용 프로그램에서는 **AdventureWorks** 예제 데이터베이스에서 작업은 비동기적으로 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-189">The following console application creates updates data within the **AdventureWorks** sample database, doing its work asynchronously.</span></span> <span data-ttu-id="fba2b-190">이 예제에서는 장기 실행 프로세스를 에뮬레이션하기 위해 명령 텍스트에 WAITFOR 문을 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-190">In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text.</span></span> <span data-ttu-id="fba2b-191">일반적으로 명령을 느린 속도로 실행 속도 수행 하지 않고이 경우 쉽게 비동기 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-191">Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQuery#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQuery/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-192">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-192">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-193">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-193">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-194">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-194">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-195">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-195">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-196">명령 텍스트를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-196">Any error that occurred while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-197">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-197">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-198">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-198">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-199">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-199">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
          <span data-ttu-id="fba2b-200">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-200">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-201">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-201">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-202">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-202">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-203">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-203">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-204">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-204">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-205">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-205">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteNonQuery">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteNonQuery (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteNonQuery(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteNonQuery (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteNonQuery(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteNonQuery : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteNonQuery (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="fba2b-206">명령의 실행이 완료되었을 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-206">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span>
          </span>
          <span data-ttu-id="fba2b-207">콜백이 필요하지 않도록 지정하려면 <see langword="null" />(Microsoft Visual Basic에서는 <see langword="Nothing" />)을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-207">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="fba2b-208">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-208">A user-defined state object that is passed to the callback procedure.</span>
          </span>
          <span data-ttu-id="fba2b-209">
            <see cref="P:System.IAsyncResult.AsyncState" /> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-209">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-210">콜백 프로시저와 상태 정보가 주어진 상태에서 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-210">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, given a callback procedure and state information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-211">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 이 값은 영향을 받는 행의 수를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />를 호출할 때도 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-211">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />, which returns the number of affected rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-212"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하지 않는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-212">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="fba2b-213">문이 완료 되 면 개발자가 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드를 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-213">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method to finish the operation.</span></span> <span data-ttu-id="fba2b-214"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드가 즉시 반환 (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 영향을 주지 않습니다 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), 해당 코드가 실행 될 때까지 하지만 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드 호출에서 해당 실행 해서는 안 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 같은 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-214">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method returns immediately (<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect on <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>), but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-215">호출 된 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 명령 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-215">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="fba2b-216">`callback` 매개 변수를 지정할 수 있습니다는 <xref:System.AsyncCallback> 문이 완료 되 면 호출 되는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-216">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="fba2b-217">호출할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="fba2b-217">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="fba2b-218">개체를 전달할 수는 또한는 `asyncStateObject` 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-218">In addition, you can pass any object in the `asyncStateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="fba2b-219">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-219">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="fba2b-220">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-220">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="fba2b-221">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-221">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="fba2b-222">콜백 프로시저 Microsoft.NET 공용 언어 런타임에서 제공 되는 백그라운드 스레드에서 실행 되기 때문 것이 매우 중요 한 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 강력한 방법을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-222">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="fba2b-223">예를 들어 작용 해서는의 폼의 내용으로 콜백 프로시저; 내 폼을 업데이트 해야 할 해야를 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="fba2b-223">For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="fba2b-224">이 항목의 예제에서는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-224">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="fba2b-225">작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저에서 예외로 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-225">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="fba2b-226">주 응용 프로그램 아니라 콜백 프로시저에서 예외를 처리 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-226">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="fba2b-227">콜백 프로시저에서 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="fba2b-227">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-228">다음 Windows 응용 프로그램의 사용을 보여 줍니다.는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드를 한 장기 실행 명령을 에뮬레이션 하는 몇 초 간의 지연이 포함 된 TRANSACT-SQL 문을 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-228">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).</span></span>  
  
 <span data-ttu-id="fba2b-229">이 예제에서는 여러 중요 한 기술을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-229">This example demonstrates many important techniques.</span></span> <span data-ttu-id="fba2b-230">여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-230">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="fba2b-231">또한이 예제에서는 사용자가 명령을 여러 번 동시에 실행 못하도록 해야 하 고 어떻게 해야 하며 콜백 프로시저 하기 전에 폼을 닫을 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-231">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="fba2b-232">이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-232">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="fba2b-233">배치는 <xref:System.Windows.Forms.Button> 제어 및 <xref:System.Windows.Forms.Label> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-233">Put a <xref:System.Windows.Forms.Button> control and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="fba2b-234">사용자 환경에 필요에 따라 연결 문자열을 수정 하는 폼의 클래스에 다음 코드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-234">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteNonQueryForm#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteNonQueryForm/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-235">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-235">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-236">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-236">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-237">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-237">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-238">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-238">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-239">명령 텍스트를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-239">Any error that occurred while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-240">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-240">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-241">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-241">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-242">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-242">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
          <span data-ttu-id="fba2b-243">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-243">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-244">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-244">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-245">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-245">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-246">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-246">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-247">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-247">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-248">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-248">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-249">이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-249">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, and retrieves one or more result sets from the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-250">이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-250">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, and retrieves one or more result sets from the server.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-251">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 반환된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-251">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance that can be used to retrieve the returned rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-252"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-252">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="fba2b-253">문이 완료 되 면 개발자가 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 하 여 작업을 종료 하 고 검색 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 명령에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-253">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="fba2b-254"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-254">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-255">호출 된 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 명령 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-255">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="fba2b-256">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-256">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="fba2b-257">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-257">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="fba2b-258">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-258">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="fba2b-259">비동기 명령 실행 되어도 값 페치는 동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-259">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="fba2b-260">이 의미에 대 한 호출이 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-260">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="fba2b-261">이 오버 로드는 콜백 프로시저를 지원 하지 않으므로 되기를 기다려야 명령이 완료 되었는지 여부를 확인 하려면 두 설문 조사를 사용 하 여는 <xref:System.IAsyncResult.IsCompleted%2A> 속성은 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드; 또는 완료를 위해 대기 하나 이상의 명령을 사용 하는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 반환 된 속성 <xref:System.IAsyncResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-261">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="fba2b-262">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-262">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-263">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-263">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-264">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-264">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-265">다음 콘솔 응용 프로그램 데이터 판독기를 비동기적으로 검색 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-265">The following console application starts the process of retrieving a data reader asynchronously.</span></span> <span data-ttu-id="fba2b-266">결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 하는 <xref:System.IAsyncResult.IsCompleted%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-266">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="fba2b-267">코드 검색에서는 프로세스가 완료 되는 즉시는 <xref:System.Data.SqlClient.SqlDataReader> 해당 내용을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-267">As soon as the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-268">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-268">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-269">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-269">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-270">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-270">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-271">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-271">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-272">명령 텍스트를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-272">Any error that occurred while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-273">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-273">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-274">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-274">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-275">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-275">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
          <span data-ttu-id="fba2b-276">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-276">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-277">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-277">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-278">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-278">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-279">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-279">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-280">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-280">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-281">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-281">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="fba2b-282">문 실행 및 데이터 검색 옵션을 나타내는 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-282">One of the <see cref="T:System.Data.CommandBehavior" /> values, indicating options for statement execution and data retrieval.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-283">
            <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-283">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-284">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 반환된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-284">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance that can be used to retrieve the returned rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-285"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-285">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="fba2b-286">문이 완료 되 면 개발자가 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 하 여 작업을 종료 하 고 검색 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 명령에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-286">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="fba2b-287"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-287">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-288">호출 된 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 명령 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-288">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="fba2b-289">`behavior` 매개 변수는 명령 및 해당 연결의 동작을 제어 하는 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-289">The `behavior` parameter lets you specify options that control the behavior of the command and its connection.</span></span> <span data-ttu-id="fba2b-290">이러한 값을 함께 결합할 수 있습니다 (프로그래밍 언어를 사용 하 여 `OR` 연산자); 일반적으로 개발자가 사용 하 여는 `CommandBehavior.CloseConnection` 런타임에서 연결이 닫혀 있는지 확인 하는 값 때는 <xref:System.Data.SqlClient.SqlDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-290">These values can be combined together (using the programming language's `OR` operator); generally, developers use the `CommandBehavior.CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 <span data-ttu-id="fba2b-291">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-291">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="fba2b-292">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-292">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="fba2b-293">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-293">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="fba2b-294">비동기 명령 실행 되어도 값 페치는 동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-294">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="fba2b-295">이 의미에 대 한 호출이 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-295">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="fba2b-296">이 오버 로드는 콜백 프로시저를 지원 하지 않으므로 되기를 기다려야 명령이 완료 되었는지 여부를 확인 하려면 두 설문 조사를 사용 하 여는 <xref:System.IAsyncResult.IsCompleted%2A> 속성은 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드; 또는 완료를 위해 대기 하나 이상의 명령을 사용 하는 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 반환 된 속성 <xref:System.IAsyncResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-296">Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="fba2b-297">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server 결과 보냅니다 XML 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-297">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-298">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-298">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-299">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-299">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-300">다음 콘솔 응용 프로그램 데이터 판독기를 비동기적으로 검색 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-300">The following console application starts the process of retrieving a data reader asynchronously.</span></span> <span data-ttu-id="fba2b-301">결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 하는 <xref:System.IAsyncResult.IsCompleted%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-301">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="fba2b-302">코드 검색은 프로세스가 완료 되 면는 <xref:System.Data.SqlClient.SqlDataReader> 해당 내용을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-302">Once the process has completed, the code retrieves the <xref:System.Data.SqlClient.SqlDataReader> and displays its contents.</span></span>  
  
 <span data-ttu-id="fba2b-303">이 예제에서는 또한 전달는 `CommandBehavior.CloseConnection` 및 `CommandBehavior.SingleRow` 때 연결이 닫힌다고 동작 매개 변수에서 값 반환 된 <xref:System.Data.SqlClient.SqlDataReader> 닫혀 단일 행 결과 대 한 최적화할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-303">This example also passes the `CommandBehavior.CloseConnection` and `CommandBehavior.SingleRow` values in the behavior parameter, causing the connection to be closed with the returned <xref:System.Data.SqlClient.SqlDataReader> is closed, and to optimize for a single row result.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncSimple#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncSimple/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-304">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-304">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-305">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-305">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-306">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-306">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-307">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-307">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-308">명령 텍스트를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-308">Any error that occurred while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-309">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-309">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-310">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-310">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-311">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-311">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
          <span data-ttu-id="fba2b-312">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-312">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-313">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-313">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-314">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-314">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-315">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-315">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-316">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-316">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-317">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-317">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="fba2b-318">명령의 실행이 완료되었을 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-318">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span>
          </span>
          <span data-ttu-id="fba2b-319">콜백이 필요하지 않도록 지정하려면 <see langword="null" />(Microsoft Visual Basic에서는 <see langword="Nothing" />)을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-319">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="fba2b-320">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-320">A user-defined state object that is passed to the callback procedure.</span>
          </span>
          <span data-ttu-id="fba2b-321">
            <see cref="P:System.IAsyncResult.AsyncState" /> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-321">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-322">콜백 프로시저와 상태 정보가 주어진 상태에서 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-322">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and retrieves one or more result sets from the server, given a callback procedure and state information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-323">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 반환된 행을 검색하는 데 사용할 수 있는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> 인스턴스를 반환하는 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 호출할 때도 이 값이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-323">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance which can be used to retrieve the returned rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-324"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-324">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="fba2b-325">문이 완료 되 면 개발자가 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 하 여 작업을 종료 하 고 검색 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 명령에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-325">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="fba2b-326"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-326">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-327">호출의 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 명령 실행이 완료 되기 전에 원인은 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-327">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed cause the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="fba2b-328">`callback` 매개 변수를 지정할 수 있습니다는 <xref:System.AsyncCallback> 문이 완료 되 면 호출 되는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-328">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="fba2b-329">호출할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="fba2b-329">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="fba2b-330">개체를 전달할 수는 또한는 `stateObject` 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-330">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="fba2b-331">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-331">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="fba2b-332">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-332">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="fba2b-333">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-333">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="fba2b-334">비동기 명령 실행 되어도 값 페치는 동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-334">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="fba2b-335">이 의미에 대 한 호출이 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-335">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="fba2b-336">콜백 프로시저 Microsoft.NET 런타임에서 제공 되는 백그라운드 스레드에서 실행 되기 때문 것이 매우 중요 한 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 강력한 방법을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-336">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="fba2b-337">예를 들어 작용 해서는의 폼의 내용으로 콜백 프로시저; 내 폼을 업데이트 해야 할 해야를 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="fba2b-337">For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="fba2b-338">이 항목의 예제에서는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-338">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="fba2b-339">작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저에서 예외로 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-339">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="fba2b-340">주 응용 프로그램 아니라 콜백 프로시저에서 예외를 처리 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-340">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="fba2b-341">콜백 프로시저에서 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="fba2b-341">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="fba2b-342">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server 결과 보냅니다 XML 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-342">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-343">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-343">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-344">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-344">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-345">다음 Windows 응용 프로그램에서는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-345">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="fba2b-346">이 샘플 명령은 비동기적으로 실행, 결과 기다리는 동안 폼 응답 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-346">Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</span></span> <span data-ttu-id="fba2b-347">이 예제에서는 실행 하는 전달 <xref:System.Data.SqlClient.SqlCommand> 개체로 `stateObject` 매개 변수; 이렇게 하면 간단 하 게 검색할 수는 <xref:System.Data.SqlClient.SqlCommand> 코드에서 호출할 수 있도록 콜백 프로시저에서 개체는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드에 해당 하는 호출을 초기 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-347">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="fba2b-348">이 예제에서는 여러 중요 한 기술을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-348">This example demonstrates many important techniques.</span></span> <span data-ttu-id="fba2b-349">여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-349">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="fba2b-350">또한이 예제에서는 사용자가 명령을 여러 번 동시에 실행 못하도록 해야 하 고 어떻게 해야 하며 콜백 프로시저 하기 전에 폼을 닫을 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-350">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="fba2b-351">이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-351">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="fba2b-352">배치는 <xref:System.Windows.Forms.Button> 컨트롤은 <xref:System.Windows.Forms.DataGridView> 컨트롤 및 <xref:System.Windows.Forms.Label> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-352">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="fba2b-353">사용자 환경에 필요에 따라 연결 문자열을 수정 하는 폼의 클래스에 다음 코드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-353">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-354">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-354">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-355">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-355">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-356">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-356">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-357">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-357">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-358">명령 텍스트를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-358">Any error that occurred while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-359">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-359">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-360">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-360">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-361">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-361">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
          <span data-ttu-id="fba2b-362">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-362">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-363">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-363">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-364">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-364">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-365">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-365">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-366">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-366">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-367">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-367">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteReader (AsyncCallback callback, object stateObject, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteReader(class System.AsyncCallback callback, object stateObject, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteReader (callback As AsyncCallback, stateObject As Object, behavior As CommandBehavior) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteReader(AsyncCallback ^ callback, System::Object ^ stateObject, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteReader : AsyncCallback * obj * System.Data.CommandBehavior -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteReader (callback, stateObject, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="fba2b-368">명령의 실행이 완료되었을 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-368">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span>
          </span>
          <span data-ttu-id="fba2b-369">콜백이 필요하지 않도록 지정하려면 <see langword="null" />(Microsoft Visual Basic에서는 <see langword="Nothing" />)을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-369">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="fba2b-370">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-370">A user-defined state object that is passed to the callback procedure.</span>
          </span>
          <span data-ttu-id="fba2b-371">
            <see cref="P:System.IAsyncResult.AsyncState" /> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-371">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="fba2b-372">문 실행 및 데이터 검색 옵션을 나타내는 <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-372">One of the <see cref="T:System.Data.CommandBehavior" /> values, indicating options for statement execution and data retrieval.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-373">콜백 프로시저와 상태 정보가 주어진 상태에서 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 <see langword="CommandBehavior" /> 값 중 하나를 사용하여 서버에서 결과 집합을 하나 이상 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-373">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />, using one of the <see langword="CommandBehavior" /> values, and retrieving one or more result sets from the server, given a callback procedure and state information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-374">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 반환된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 인스턴스를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-374">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />, which returns a <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance which can be used to retrieve the returned rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-375"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-375">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="fba2b-376">문이 완료 되 면 개발자가 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 하 여 작업을 종료 하 고 검색 메서드는 <xref:System.Data.SqlClient.SqlDataReader> 명령에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-376">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method to finish the operation and retrieve the <xref:System.Data.SqlClient.SqlDataReader> returned by the command.</span></span> <span data-ttu-id="fba2b-377"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-377">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-378">호출 된 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 명령 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-378">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="fba2b-379">`callback` 매개 변수를 지정할 수 있습니다는 <xref:System.AsyncCallback> 문이 완료 되 면 호출 되는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-379">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="fba2b-380">호출할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="fba2b-380">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="fba2b-381">개체를 전달할 수는 또한는 `stateObject` 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-381">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="fba2b-382">`behavior` 매개 변수는 명령 및 해당 연결의 동작을 제어 하는 옵션을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-382">The `behavior` parameter lets you specify options that control the behavior of the command and its connection.</span></span> <span data-ttu-id="fba2b-383">이러한 값을 함께 결합할 수 있습니다 (프로그래밍 언어를 사용 하 여 `Or` 연산자); 일반적으로 개발자가 사용 하 여는 `CloseConnection` 런타임에서 연결이 닫혀 있는지 확인 하는 값 때는 <xref:System.Data.SqlClient.SqlDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-383">These values can be combined together (using the programming language's `Or` operator); generally, developers use the `CloseConnection` value to make sure that the connection is closed by the runtime when the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span> <span data-ttu-id="fba2b-384">개발자의 동작을 최적화할 수도 있습니다는 <xref:System.Data.SqlClient.SqlDataReader> 지정 하 여는 `SingleRow` Transact SQL 문 또는 저장된 프로시저는 단일 행만을 반환 한다는 미리 알려진 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-384">Developers can also optimize the behavior of the <xref:System.Data.SqlClient.SqlDataReader> by specifying the `SingleRow` value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.</span></span>  
  
 <span data-ttu-id="fba2b-385">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-385">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="fba2b-386">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-386">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="fba2b-387">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-387">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="fba2b-388">비동기 명령 실행 되어도 값 페치는 동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-388">Although command execution is asynchronous, value fetching is still synchronous.</span></span> <span data-ttu-id="fba2b-389">이 의미에 대 한 호출이 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-389">This means that calls to <xref:System.Data.SqlClient.SqlDataReader.Read%2A> may block if more data is required and the underlying network's read operation blocks.</span></span>  
  
 <span data-ttu-id="fba2b-390">콜백 프로시저 Microsoft.NET 공용 언어 런타임에서 제공 되는 백그라운드 스레드에서 실행 되기 때문 것이 매우 중요 한 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 강력한 방법을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-390">Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</span></span> <span data-ttu-id="fba2b-391">예를 들어 작용 해서는 콜백 프로시저 내에서 폼의 내용으로 폼을 업데이트 해야 할 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해.</span><span class="sxs-lookup"><span data-stu-id="fba2b-391">For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work.</span></span> <span data-ttu-id="fba2b-392">이 항목의 예제에서는이 동작을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-392">The example in this topic demonstrates this behavior.</span></span>  
  
 <span data-ttu-id="fba2b-393">작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저에서 예외로 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-393">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="fba2b-394">주 응용 프로그램 아니라 콜백 프로시저에서 예외를 처리 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-394">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="fba2b-395">콜백 프로시저에서 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="fba2b-395">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="fba2b-396">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-396">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-397">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-397">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-398">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-398">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-399">다음 Windows 응용 프로그램에서는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-399">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="fba2b-400">이 샘플 명령은 비동기적으로 실행, 결과 기다리는 동안 폼 응답 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-400">Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</span></span> <span data-ttu-id="fba2b-401">이 예제에서는 실행 하는 전달 <xref:System.Data.SqlClient.SqlCommand> 개체로 `stateObject` 매개 변수; 이렇게 하면 간단 하 게 검색할 수는 <xref:System.Data.SqlClient.SqlCommand> 코드에서 호출할 수 있도록 콜백 프로시저에서 개체는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드에 해당 하는 호출을 초기 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-401">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter; doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="fba2b-402">이 예제에서는 여러 중요 한 기술을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-402">This example demonstrates many important techniques.</span></span> <span data-ttu-id="fba2b-403">여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-403">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="fba2b-404">또한이 예제에서는 사용자가 명령을 여러 번 동시에 실행 못하도록 해야 하 고 어떻게 해야 하며 콜백 프로시저 하기 전에 폼을 닫을 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-404">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="fba2b-405">이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-405">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="fba2b-406">배치는 <xref:System.Windows.Forms.Button> 컨트롤은 <xref:System.Windows.Forms.DataGridView> 컨트롤 및 <xref:System.Windows.Forms.Label> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-406">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.DataGridView> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="fba2b-407">사용자 환경에 필요에 따라 연결 문자열을 수정 하는 폼의 클래스에 다음 코드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-407">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 <span data-ttu-id="fba2b-408">이 예제에서는 전달는 `CommandBehavior.CloseConnection` 값에 `behavior` 매개 변수에 반환 된 <xref:System.Data.SqlClient.SqlDataReader> 를 닫을 때 자동으로 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-408">This example passes the `CommandBehavior.CloseConnection` value in the `behavior` parameter, causing the returned <xref:System.Data.SqlClient.SqlDataReader> to automatically close its connection when it is closed.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteReaderAsyncBehavior/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-409">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-409">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-410">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-410">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-411">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-411">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-412">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-412">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-413">명령 텍스트를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-413">Any error that occurred while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-414">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-414">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-415">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-415">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-416">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-416">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
          <span data-ttu-id="fba2b-417">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-417">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-418">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-418">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-419">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-419">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-420">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-420">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-421">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-421">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-422">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-422">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecuteXmlReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-423">
            <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <see cref="T:System.Xml.XmlReader" /> 개체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-423">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : unit -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-424">
            <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <see cref="T:System.Xml.XmlReader" /> 개체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-424">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-425">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 단일 XML 값을 반환하는 <see langword="EndExecuteXmlReader" />를 호출할 때도 이 값이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-425">An <see cref="T:System.IAsyncResult" /> that can be used to poll or wait for results, or both; this value is also needed when invoking <see langword="EndExecuteXmlReader" />, which returns a single XML value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-426"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드 문을 실행 하는 동안에 동시에 다른 작업이 실행 될 수 있도록 XML로 행을 반환 하는 TRANSACT-SQL 문에 비동기적으로 실행 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-426">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="fba2b-427">문이 완료 되 면 개발자가 호출 해야 합니다는 `EndExecuteXmlReader` 명령이 작업을 완료 하 고 XML을 검색 하는 메서드를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-427">When the statement has completed, developers must call the `EndExecuteXmlReader` method to finish the operation and retrieve the XML returned by the command.</span></span> <span data-ttu-id="fba2b-428"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 `EndExecuteXmlReader` 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-428">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding `EndExecuteXmlReader` method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-429">호출 된 `EndExecuteXmlReader` 명령 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-429">Calling the `EndExecuteXmlReader` before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="fba2b-430"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성 유효한 FOR XML 절이 포함 된 TRANSACT-SQL 문의 일반적으로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-430">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</span></span> <span data-ttu-id="fba2b-431">그러나 `CommandText` 반환 하는 문을 지정할 수도 `ntext` 유효한 XML이 포함 된 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-431">However, `CommandText` can also specify a statement that returns `ntext` data that contains valid XML.</span></span>  
  
 <span data-ttu-id="fba2b-432">일반적인 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-432">A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM dbo.Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="fba2b-433">이 메서드는 단일 행, 단일 열 결과 집합을 검색할 데도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-433">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="fba2b-434">이 경우 둘 이상의 행이 반환 되는 `EndExecuteXmlReader` 연결 합니다. 메서드는 <xref:System.Xml.XmlReader> 결과의 나머지 부분에서 첫 번째 행 및 패킷 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-434">In this case, if more than one row is returned, the `EndExecuteXmlReader` method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="fba2b-435">다중 활성 결과 집합 (MARS) 기능을 사용 하면 같은 연결을 사용 하 여 여러 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-435">The multiple active result set (MARS) feature lets multiple actions use the same connection.</span></span>  
  
 <span data-ttu-id="fba2b-436">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-436">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="fba2b-437">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-437">If a large command or many parameters are sent, this method may block during writes.</span></span> <span data-ttu-id="fba2b-438">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-438">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span> <span data-ttu-id="fba2b-439">비동기 명령 실행 되어도 값 페치는 동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-439">Although command execution is asynchronous, value fetching is still synchronous.</span></span>  
  
 <span data-ttu-id="fba2b-440">콜백 프로시저를 지원 하지 않으면이 오버 로드 때문에 개발자가 어느 설문 조사를 결정 해야 명령이 완료 되었는지 여부를 사용 하 여는 <xref:System.IAsyncResult.IsCompleted%2A> 속성은 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드; 또는 완료를 위해 대기 사용 하 여 하나 이상의 명령의 <xref:System.IAsyncResult.AsyncWaitHandle%2A> 반환 된 속성 <xref:System.IAsyncResult>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-440">Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method; or wait for the completion of one or more commands using the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the returned <xref:System.IAsyncResult>.</span></span>  
  
 <span data-ttu-id="fba2b-441">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server 결과 보냅니다 XML 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-441">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-442">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-442">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-443">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-443">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-444">다음 콘솔 응용 프로그램에 XML 데이터를 비동기적으로 검색 프로세스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-444">The following console application starts the process of retrieving XML data asynchronously.</span></span> <span data-ttu-id="fba2b-445">결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 하는 <xref:System.IAsyncResult.IsCompleted%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-445">While waiting for the results, this simple application sits in a loop, investigating the <xref:System.IAsyncResult.IsCompleted%2A> property value.</span></span> <span data-ttu-id="fba2b-446">프로세스가 완료 되 면는 코드는 XML을 검색 하 고 해당 내용을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-446">Once the process has completed, the code retrieves the XML and displays its contents.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-447">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-447">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-448">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-448">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-449">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-449">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-450">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-450">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-451">명령 텍스트를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-451">Any error that occurred while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-452">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-452">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-453">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-453">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-454">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-454">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
          <span data-ttu-id="fba2b-455">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-455">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-456">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-456">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-457">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-457">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-458">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-458">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-459">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-459">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-460">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-460">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteXmlReader">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteXmlReader (AsyncCallback callback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteXmlReader(class System.AsyncCallback callback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteXmlReader (callback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteXmlReader(AsyncCallback ^ callback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteXmlReader : AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlCommand.BeginExecuteXmlReader (callback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="fba2b-461">명령의 실행이 완료되었을 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-461">An <see cref="T:System.AsyncCallback" /> delegate that is invoked when the command's execution has completed.</span>
          </span>
          <span data-ttu-id="fba2b-462">콜백이 필요하지 않도록 지정하려면 <see langword="null" />(Microsoft Visual Basic에서는 <see langword="Nothing" />)을 전달합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-462">Pass <see langword="null" /> (<see langword="Nothing" /> in Microsoft Visual Basic) to indicate that no callback is required.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="fba2b-463">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-463">A user-defined state object that is passed to the callback procedure.</span>
          </span>
          <span data-ttu-id="fba2b-464">
            <see cref="P:System.IAsyncResult.AsyncState" /> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-464">Retrieve this object from within the callback procedure using the <see cref="P:System.IAsyncResult.AsyncState" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-465">콜백 프로시저를 사용하여 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <see cref="T:System.Xml.XmlReader" /> 개체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-465">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object, using a callback procedure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-466">결과를 폴링하거나 기다리는 데 사용하거나 두 작업을 모두 수행하는 데 사용할 수 있는 <see cref="T:System.IAsyncResult" />이며, 명령의 결과를 XML로 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />를 호출할 때도 이 값이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-466">An <see cref="T:System.IAsyncResult" /> that can be used to poll, wait for results, or both; this value is also needed when the <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> is called, which returns the results of the command as XML.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-467"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 XML로 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-467">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</span></span> <span data-ttu-id="fba2b-468">문이 완료 되 면 개발자가 호출 해야 합니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드를 요청된 하는 XML 데이터를 검색 하 고 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-468">When the statement has completed, developers must call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method to finish the operation and retrieve the requested XML data.</span></span> <span data-ttu-id="fba2b-469"><xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <xref:System.Data.SqlClient.SqlCommand> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-469">The <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method returns immediately, but until the code executes the corresponding <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <xref:System.Data.SqlClient.SqlCommand> object.</span></span> <span data-ttu-id="fba2b-470">호출 된 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 명령 실행이 완료 되기 전에 <xref:System.Data.SqlClient.SqlCommand> 실행 완료 될 때까지 차단 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-470">Calling the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> before the command's execution is completed causes the <xref:System.Data.SqlClient.SqlCommand> object to block until the execution is finished.</span></span>  
  
 <span data-ttu-id="fba2b-471"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성 유효한 FOR XML 절이 포함 된 TRANSACT-SQL 문의 일반적으로 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-471">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</span></span> <span data-ttu-id="fba2b-472">그러나 `CommandText` 유효한 XML이 포함 된 데이터를 반환 하는 문을 지정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-472">However, `CommandText` can also specify a statement that returns data that contains valid XML.</span></span> <span data-ttu-id="fba2b-473">이 메서드는 단일 행, 단일 열 결과 집합을 검색할 데도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-473">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="fba2b-474">이 경우 둘 이상의 행이 반환 되는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 연결 합니다. 메서드는 <xref:System.Xml.XmlReader> 결과의 나머지 부분에서 첫 번째 행 및 패킷 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-474">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="fba2b-475">일반적인 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-475">A typical <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
SqlCommand command = new SqlCommand("SELECT ContactID, FirstName, LastName FROM Contact FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="fba2b-476">이 메서드는 단일 행, 단일 열 결과 집합을 검색할 데도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-476">This method can also be used to retrieve a single-row, single-column result set.</span></span> <span data-ttu-id="fba2b-477">이 경우 둘 이상의 행이 반환 되는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 연결 합니다. 메서드는 <xref:System.Xml.XmlReader> 결과의 나머지 부분에서 첫 번째 행 및 패킷 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-477">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="fba2b-478">다중 활성 결과 집합 (MARS) 기능을 사용 하면 같은 연결을 사용 하 여 여러 동작이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-478">The multiple active result set (MARS) feature lets multiple actions use the same connection.</span></span>  
  
 <span data-ttu-id="fba2b-479">`callback` 매개 변수를 지정할 수 있습니다는 <xref:System.AsyncCallback> 문이 완료 되 면 호출 되는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-479">The `callback` parameter lets you specify an <xref:System.AsyncCallback> delegate that is called when the statement has completed.</span></span> <span data-ttu-id="fba2b-480">호출할 수 있습니다는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="fba2b-480">You can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method from within this delegate procedure, or from any other location within your application.</span></span> <span data-ttu-id="fba2b-481">개체를 전달할 수는 또한는 `stateObject` 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <xref:System.IAsyncResult.AsyncState%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-481">In addition, you can pass any object in the `stateObject` parameter, and your callback procedure can retrieve this information using the <xref:System.IAsyncResult.AsyncState%2A> property.</span></span>  
  
 <span data-ttu-id="fba2b-482">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-482">Note that the command text and parameters are sent to the server synchronously.</span></span> <span data-ttu-id="fba2b-483">큰 명령이 나 많은 매개 변수 전달 되 면이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-483">If a large command or many parameters is sent, this method may block during writes.</span></span> <span data-ttu-id="fba2b-484">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-484">After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</span></span>  
  
 <span data-ttu-id="fba2b-485">작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저에서 예외로 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-485">All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</span></span> <span data-ttu-id="fba2b-486">주 응용 프로그램 아니라 콜백 프로시저에서 예외를 처리 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-486">You must handle the exception in the callback procedure, not in the main application.</span></span> <span data-ttu-id="fba2b-487">콜백 프로시저에서 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="fba2b-487">See the example in this topic for additional information on handling exceptions in the callback procedure.</span></span>  
  
 <span data-ttu-id="fba2b-488">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-488">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-489">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-489">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-490">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-490">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-491">다음 Windows 응용 프로그램에서는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-491">The following Windows application demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</span></span> <span data-ttu-id="fba2b-492">이 예제에서는 실행 하는 전달 <xref:System.Data.SqlClient.SqlCommand> 개체로 `stateObject` 매개를 쉽게 검색 하는 <xref:System.Data.SqlClient.SqlCommand> 코드에서 호출할 수 있도록 콜백 프로시저에서 개체는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드에 해당 하는 호출을 초기 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-492">This example passes the executing <xref:System.Data.SqlClient.SqlCommand> object as the `stateObject` parameter--doing so makes it simple to retrieve the <xref:System.Data.SqlClient.SqlCommand> object from within the callback procedure, so that the code can call the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method corresponding to the initial call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.</span></span>  
  
 <span data-ttu-id="fba2b-493">이 예제에서는 여러 중요 한 기술을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-493">This example demonstrates many important techniques.</span></span> <span data-ttu-id="fba2b-494">여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-494">This includes calling a method that interacts with the form from a separate thread.</span></span> <span data-ttu-id="fba2b-495">또한이 예제에서는 사용자가 명령을 여러 번 동시에 실행 못하도록 해야 하 고 어떻게 해야 하며 콜백 프로시저 하기 전에 폼을 닫을 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-495">In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</span></span>  
  
 <span data-ttu-id="fba2b-496">이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-496">To set up this example, create a new Windows application.</span></span> <span data-ttu-id="fba2b-497">배치는 <xref:System.Windows.Forms.Button> 컨트롤은 <xref:System.Windows.Forms.ListBox> 컨트롤 및 <xref:System.Windows.Forms.Label> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-497">Put a <xref:System.Windows.Forms.Button> control, a <xref:System.Windows.Forms.ListBox> control, and a <xref:System.Windows.Forms.Label> control on the form (accepting the default name for each control).</span></span> <span data-ttu-id="fba2b-498">사용자 환경에 필요에 따라 연결 문자열을 수정 하는 폼의 클래스에 다음 코드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-498">Add the following code to the form's class, modifying the connection string as needed for your environment.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/CS/Form1.cs#1)]
 [!code-vb[DataWorks SqlCommand.BeginExecuteXmlReaderAsync#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.BeginExecuteXmlReaderAsync/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-499">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-499">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-500">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-500">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-501">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-501">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-502">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-502">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-503">명령 텍스트를 실행하는 동안 발생한 오류입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-503">Any error that occurred while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-504">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-504">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-505">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-505">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-506">이름/값 쌍 "비동기 처리=true"가 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-506">The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
          <span data-ttu-id="fba2b-507">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-507">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-508">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-508">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-509">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-509">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-510">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-510">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-511">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-511">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-512">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-512">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
        <altmember cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="sqlCommand.Cancel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-513">
            <see cref="T:System.Data.SqlClient.SqlCommand" />의 실행을 취소하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-513">Tries to cancel the execution of a <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-514">취소할 명령이 없으면 아무 동작도 발생하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-514">If there is nothing to cancel, nothing occurs.</span></span> <span data-ttu-id="fba2b-515">그러나 진행 중인 명령이 있는 경우 취소 동작이 실패하더라도 예외가 생성되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-515">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 <span data-ttu-id="fba2b-516">호출 하는 경우 일부 드문 경우에서 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 호출 <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (묵시적 또는 명시적으로) 호출 하기 전에 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, 한 다음 호출 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, 취소 명령을 SQL Server로 전송 되지 것입니다 및 결과 집합 계속 한 후 스트림 호출 <xref:System.Data.SqlClient.SqlConnection.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-516">In some, rare, cases, if you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> then call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> (implicitily or explicitly) before calling <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, and then call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <xref:System.Data.SqlClient.SqlConnection.Close%2A>.</span></span> <span data-ttu-id="fba2b-517">이 방지 하려면 호출 하 고 있는지 확인 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> 판독기 또는 연결을 닫아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-517">To avoid this, make sure that you call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> before closing the reader or connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-518">다음 예제에서는 <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-518">The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Cancel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Cancel/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommand Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlCommand Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As SqlCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlCommand ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Data.SqlClient.SqlCommand" Usage="sqlCommand.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-519">현재 인스턴스의 복사본인 새 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-519">Creates a new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-520">이 인스턴스의 복사본인 새 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-520">A new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnEncryptionSetting">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlClient.SqlCommandColumnEncryptionSetting ColumnEncryptionSetting" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnEncryptionSetting As SqlCommandColumnEncryptionSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlCommandColumnEncryptionSetting ColumnEncryptionSetting { System::Data::SqlClient::SqlCommandColumnEncryptionSetting get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnEncryptionSetting : System.Data.SqlClient.SqlCommandColumnEncryptionSetting" Usage="System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlCommandColumnEncryptionSetting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-521">이 명령에 대한 열 암호화 설정을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-521">Gets or sets the column encryption setting for this command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-522">이 명령에 대한 열 암호화 설정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-522">The column encryption setting for this command.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.SQL.Design.SqlCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-523">데이터 소스에서 실행할 Transact-SQL 문, 테이블 이름 또는 저장 프로시저를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-523">Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-524">실행할 Transact-SQL 문이나 저장 프로시저입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-524">The Transact-SQL statement or stored procedure to execute.</span>
          </span>
          <span data-ttu-id="fba2b-525">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-525">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-526">경우는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-526">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="fba2b-527">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-527">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="fba2b-528">명령 중 하나를 호출 하는 경우이 저장된 프로시저가 실행 된 `Execute` 메서드.</span><span class="sxs-lookup"><span data-stu-id="fba2b-528">The command executes this stored procedure when you call one of the `Execute` methods.</span></span>  
  
 <span data-ttu-id="fba2b-529">Microsoft.NET Framework Data Provider for SQL Server TRANSACT-SQL 문 또는 저장된 프로시저의 명령에 의해 호출에 매개 변수 전달에 대 한 물음표 (?) 자리 표시자를 지원 하지 않는 `CommandType.Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-529">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of `CommandType.Text`.</span></span> <span data-ttu-id="fba2b-530">이 경우 명명 된 매개 변수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-530">In this case, named parameters must be used.</span></span> <span data-ttu-id="fba2b-531">예:</span><span class="sxs-lookup"><span data-stu-id="fba2b-531">For example:</span></span>  
  
```  
SELECT * FROM dbo.Customers WHERE CustomerID = @CustomerID  
```  
  
 <span data-ttu-id="fba2b-532">자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-532">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-533">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-533">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-534">명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-534">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-535">명령이 실행될 때까지 대기하는 시간(초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-535">The time in seconds to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="fba2b-536">기본값은 30초입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-536">The default is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-537">값이 0 (명령을 실행 하려고는 무기한 대기) 제한이 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-537">A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fba2b-538"><xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 속성이 비동기 메서드 호출 중에 같은 무시 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-538">The <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> property will be ignored during asynchronous method calls such as <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 <span data-ttu-id="fba2b-539"><xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 명령이 컨텍스트 연결에 대해 실행 될 때는 아무런 영향이 없습니다 (한 <xref:System.Data.SqlClient.SqlConnection> 으로 연 "컨텍스트 연결 = true" 연결 문자열에).</span><span class="sxs-lookup"><span data-stu-id="fba2b-539"><xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> has no effect when the command is executed against a context connection (a <xref:System.Data.SqlClient.SqlConnection> opened with "context connection=true" in the connection string).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fba2b-540">이 속성은 명령 실행 또는 결과 처리 하는 동안 모든 네트워크 읽기 (메서드 호출 하는 동안 읽는 모든 네트워크 패킷)에 대 한 누적 시간 제한입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-540">This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results.</span></span> <span data-ttu-id="fba2b-541">첫 번째 행이 반환 되 고 사용자 처리 시간은 포함 되지 않습니다 시간 초과가 발생할 수 있습니다, 그리고 네트워크 읽기 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-541">A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.</span></span>  
>   
>  <span data-ttu-id="fba2b-542">예를 들어 했는지, 30 초 시간으로 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 30 초 둘 다 네트워크 패킷을 읽을 수에 2 개의 네트워크 패킷을에서는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-542">For example, with a 30 second time out, if <xref:System.Data.SqlClient.SqlDataReader.Read%2A> requires two network packets, then it has 30 seconds to read both network packets.</span></span> <span data-ttu-id="fba2b-543">호출 하는 경우 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 다시 다른 30 초까지 필요한 모든 데이터를 읽을 갖습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-543">If you call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> again, it will have another 30 seconds to read any data that it requires.</span></span>  
  
```  
using System;  
using System.Data.SqlClient;  
///   
public class A {  
   ///   
   public static void Main() {  
      string connectionString = "";  
      // Wait for 5 second delay in the command  
      string queryString = "waitfor delay '00:00:05'";  
      using (SqlConnection connection = new SqlConnection(connectionString)) {  
         connection.Open();  
         SqlCommand command = new SqlCommand(queryString, connection);  
         // Setting command timeout to 1 second  
         command.CommandTimeout = 1;  
         try {  
            command.ExecuteNonQuery();  
         }  
         catch (SqlException e) {  
            Console.WriteLine("Got expected SqlException due to command timeout ");  
            Console.WriteLine(e);  
         }  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.SqlClient.SqlCommand.CommandType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.CommandType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-544">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> 속성이 해석될 방법을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-544">Gets or sets a value indicating how the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> property is to be interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-545">
            <see cref="T:System.Data.CommandType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-545">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="fba2b-546">기본값은 <see langword="Text" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-546">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-547">설정 하는 경우는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 속성을 `StoredProcedure`를 설정 해야는 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성을 저장된 프로시저의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-547">When you set the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="fba2b-548">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-548">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 <span data-ttu-id="fba2b-549">Microsoft.NET Framework Data Provider for SQL Server SQL 문에 매개 변수를 전달 하기 위해 물음표 (?) 자리 표시자를 지원 하지 않거나 사용 하 여 호출 된 저장된 프로시저는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 의 <xref:System.Data.CommandType.Text>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-549">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> of <xref:System.Data.CommandType.Text>.</span></span> <span data-ttu-id="fba2b-550">이 경우 명명 된 매개 변수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-550">In this case, named parameters must be used.</span></span> <span data-ttu-id="fba2b-551">예:</span><span class="sxs-lookup"><span data-stu-id="fba2b-551">For example:</span></span>  
  
 <span data-ttu-id="fba2b-552">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span><span class="sxs-lookup"><span data-stu-id="fba2b-552">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span></span>  
  
 <span data-ttu-id="fba2b-553">자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-553">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-554">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-554">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fba2b-555">값이 유효한 <see cref="T:System.Data.CommandType" />이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-555">The value was not a valid <see cref="T:System.Data.CommandType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); void set(System::Data::SqlClient::SqlConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-556">
            <see cref="T:System.Data.SqlClient.SqlCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.SqlClient.SqlConnection" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-556">Gets or sets the <see cref="T:System.Data.SqlClient.SqlConnection" /> used by this instance of the <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-557">데이터 소스와의 연결입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-557">The connection to a data source.</span>
          </span>
          <span data-ttu-id="fba2b-558">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-558">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-559">명령을 실행 하려고 throw 됩니다 명령을 기존 트랜잭션에 참여 하는 경우 연결이 변경 되는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-559">If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fba2b-560"><xref:System.Data.SqlClient.SqlCommand.Transaction%2A> 속성이 null이 아니고 트랜잭션이 이미 커밋 또는 롤백된 경우에는 <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>이 null로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-560">If the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> is set to null.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-561">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-561">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Connection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Connection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-562">명령이 트랜잭션에 참여하는 동안 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> 속성이 변경되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-562">The <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> property was changed while the command was enlisted in a transaction..</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandText" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />
        <altmember cref="P:System.Data.SqlClient.SqlCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="sqlCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As SqlParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlParameter ^ CreateParameter();" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.SqlClient.SqlParameter" Usage="sqlCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-563">
            <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-563">Creates a new instance of a <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-564">
            <see cref="T:System.Data.SqlClient.SqlParameter" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-564">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-565"><xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> 메서드는 강력한 형식의 버전의 <xref:System.Data.IDbCommand.CreateParameter%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-565">The <xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A> method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.SqlClient.SqlCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.SqlClient.SqlCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-566">명령 개체를 Windows Form 디자이너 컨트롤에서 표시할지를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-566">Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-567">컨트롤에 명령 개체를 표시할지를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-567">A value indicating whether the command object should be visible in a control.</span>
          </span>
          <span data-ttu-id="fba2b-568">기본값은 * * true * *입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-568">The default is **true**.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="sqlCommand.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int EndExecuteNonQuery (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndExecuteNonQuery(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteNonQuery (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndExecuteNonQuery(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteNonQuery : IAsyncResult -&gt; int" Usage="sqlCommand.EndExecuteNonQuery asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="fba2b-569">
            <see cref="T:System.IAsyncResult" /> 호출에서 반환된 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-569">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-570">Transact-SQL 문의 비동기 실행을 완료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-570">Finishes asynchronous execution of a Transact-SQL statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-571">영향을 받는 행 수입니다(<see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />와 동일한 동작).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-571">The number of rows affected (the same behavior as <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-572">호출 하는 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 실행 하는 [!INCLUDE[tsql](~/includes/tsql-md.md)] 호출 해야 문을 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 작업을 완료 하려면.</span><span class="sxs-lookup"><span data-stu-id="fba2b-572">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> to execute a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> in order to complete the operation.</span></span> <span data-ttu-id="fba2b-573">명령을 실행 하는 과정을 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-573">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="fba2b-574">사용자가 명령을 사용 하 여 해당 작업을 완료 있는지 확인할 수는 <xref:System.IAsyncResult> 에서 반환 된 인스턴스는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fba2b-574">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="fba2b-575">콜백 프로시저에 대 한 호출에 지정 된 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>,이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-575">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-576">사용을 보여 주는 예제는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> 메서드를 참조 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-576">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fba2b-577">
            <paramref name="asyncResult" /> 매개 변수는 null(Microsoft Visual Basic의 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-577">
              <paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-578">
            <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />가 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />에 대한 호출 실행을 완료하기 위해 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />를 호출함).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-578">
              <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-579">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />에 지정된 시간이 경과되었으며 <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />로 지정된 비동기 작업이 완료되지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-579">The amount of time specified in <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> elapsed and the asynchronous operation specified with <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> is not complete.</span>
          </span>
          <span data-ttu-id="fba2b-580">상황에 따라서는 <see cref="T:System.IAsyncResult" />를 <see langword="IsCompleted" />로 잘못 설정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-580">In some situations, <see cref="T:System.IAsyncResult" /> can be set to <see langword="IsCompleted" /> incorrectly.</span>
          </span>
          <span data-ttu-id="fba2b-581">이 상황이 발생하고 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" />가 호출되면 <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" />에 지정된 시간이 경과되었고 <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />로 지정된 비동기 작업이 완료되지 않은 경우 EndExecuteNonQuery로 인해 SqlException 오류가 발생할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-581">If this occurs and <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> elapsed and the asynchronous operation specified with <see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /> is not complete.</span>
          </span>
          <span data-ttu-id="fba2b-582">이 상황을 해결하려면 CommandTimeout의 값을 높이거나 비동기 작업에 의해 수행되는 작업을 줄여야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-582">To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader EndExecuteReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader EndExecuteReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteReader (asyncResult As IAsyncResult) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ EndExecuteReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteReader : IAsyncResult -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.EndExecuteReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="fba2b-583">
            <see cref="T:System.IAsyncResult" /> 호출에서 반환된 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-583">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-584">요청된 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 반환하는 Transact-SQL 문의 비동기 실행을 완료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-584">Finishes asynchronous execution of a Transact-SQL statement, returning the requested <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-585">요청된 행을 검색하는 데 사용할 수 있는 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-585">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object that can be used to retrieve the requested rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-586">호출 하는 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> TRANSACT-SQL 문을 실행 하려면 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 작업을 완료 하려면.</span><span class="sxs-lookup"><span data-stu-id="fba2b-586">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> in order to complete the operation.</span></span> <span data-ttu-id="fba2b-587">명령을 실행 하는 과정을 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-587">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="fba2b-588">사용자가 명령을 사용 하 여 해당 작업을 완료 있는지 확인할 수는 <xref:System.IAsyncResult> 에서 반환 된 인스턴스는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fba2b-588">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> method.</span></span> <span data-ttu-id="fba2b-589">콜백 프로시저에 대 한 호출에 지정 된 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>,이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-589">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-590">사용을 보여 주는 예제는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> 메서드를 참조 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-590">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fba2b-591">
            <paramref name="asyncResult" /> 매개 변수는 null(Microsoft Visual Basic의 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-591">
              <paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-592">
            <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />가 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />에 대한 호출 실행을 완료하기 위해 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" />를 호출함).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-592">
              <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader EndExecuteXmlReader (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader EndExecuteXmlReader(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteXmlReader (asyncResult As IAsyncResult) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ EndExecuteXmlReader(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteXmlReader : IAsyncResult -&gt; System.Xml.XmlReader" Usage="sqlCommand.EndExecuteXmlReader asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="fba2b-593">
            <see cref="T:System.IAsyncResult" /> 호출에서 반환된 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-593">The <see cref="T:System.IAsyncResult" /> returned by the call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-594">요청된 데이터를 XML로 반환하는 Transact-SQL 문의 비동기 실행을 완료합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-594">Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-595">결과 XML 데이터를 페치하는 데 사용할 수 있는 <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-595">An <see cref="T:System.Xml.XmlReader" /> object that can be used to fetch the resulting XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-596">호출 하는 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> TRANSACT-SQL 문을 실행 하려면 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 작업을 완료 하려면.</span><span class="sxs-lookup"><span data-stu-id="fba2b-596">When you call <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to execute a Transact-SQL statement, you must call <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> in order to complete the operation.</span></span> <span data-ttu-id="fba2b-597">명령을 실행 하는 과정을 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-597">If the process of executing the command has not yet finished, this method blocks until the operation is complete.</span></span> <span data-ttu-id="fba2b-598">사용자가 명령을 사용 하 여 해당 작업을 완료 있는지 확인할 수는 <xref:System.IAsyncResult> 에서 반환 된 인스턴스는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fba2b-598">Users can verify that the command has completed its operation by using the <xref:System.IAsyncResult> instance returned by the <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> method.</span></span> <span data-ttu-id="fba2b-599">콜백 프로시저에 대 한 호출에 지정 된 경우 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>,이 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-599">If a callback procedure was specified in the call to <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>, this method must be called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-600">사용을 보여 주는 예제는 <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> 메서드를 참조 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-600">For examples demonstrating the use of the <xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A> method, see <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fba2b-601">
            <paramref name="asyncResult" /> 매개 변수는 null(Microsoft Visual Basic의 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-601">
              <paramref name="asyncResult" /> parameter is null (<see langword="Nothing" /> in Microsoft Visual Basic)</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-602">
            <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />가 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />에 대한 호출 실행을 완료하기 위해 <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" />를 호출함).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-602">
              <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /> to complete execution of a call to <see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="sqlCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReaderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Data::Common::DbDataReader ^&gt; ^ ExecuteDbDataReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="sqlCommand.ExecuteDbDataReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="sqlCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteNonQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-603">연결에 대한 Transact-SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-603">Executes a Transact-SQL statement against the connection and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-604">영향을 받은 행 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-604">The number of rows affected.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-605">사용할 수는 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기), 카탈로그 작업을 수행 하거나 사용 하지 않고 데이터베이스의 데이터를 변경 하려면는 <xref:System.Data.DataSet> UPDATE, INSERT 또는 DELETE를 실행 하 여 문입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-605">You can use the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="fba2b-606">하지만 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> 행을 모든 출력 매개 변수가 반환 하지 또는 반환 값 매개 변수에 매핑된 데이터 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-606">Although the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> returns no rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="fba2b-607">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-607">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="fba2b-608">삽입 되거나 업데이트 되는 테이블에 트리거가 있으면, 반환 값에 트리거 또는 트리거에 영향을 받는 행의 수와 삽입 또는 업데이트 작업을 모두 영향을 받는 행 수가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-608">When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</span></span> <span data-ttu-id="fba2b-609">다른 형식의 문의 경우에는 반환 값이 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-609">For all other types of statements, the return value is -1.</span></span> <span data-ttu-id="fba2b-610">롤백이 발생 하는 경우 반환 값-1 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-610">If a rollback occurs, the return value is also -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-611">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 를 사용 하 여 빌드한 다음 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-611">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>.</span></span> <span data-ttu-id="fba2b-612">이 예제는 TRANSACT-SQL 문 (예: 업데이트, 삽입 또는 삭제) 하는 문자열 및 데이터 원본에 연결 하는 데 사용할 문자열을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-612">The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-613">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-613">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-614">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-614">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-615">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-615">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-616">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-616">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-617">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-617">An exception occurred while executing the command against a locked row.</span>
          </span>
          <span data-ttu-id="fba2b-618">Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-618">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span>
          </span>
          <span data-ttu-id="fba2b-619">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-619">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-620">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-620">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-621">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-621">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-622">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-622">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-623">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-623">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-624">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-624">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-625">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-625">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-626">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-626">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ExecuteNonQueryAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQueryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sqlCommand.ExecuteNonQueryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="fba2b-627">취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-627">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-628">연결에 대해 [!INCLUDE[tsql](~/includes/tsql-md.md)] 문을 실행하고 영향을 받는 행의 수를 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-628">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" />, which executes a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement against the connection and returns the number of rows affected.</span>
          </span>
          <span data-ttu-id="fba2b-629">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-629">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="fba2b-630">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-630">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-631">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-631">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-632">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-632">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-633">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-633">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-634">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-634">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-635">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-635">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-636">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-636">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-637">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-637">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="fba2b-638">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-638">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-639">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-639">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-640">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-640">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-641">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-641">SQL Server returned an error while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-642">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-642">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-643">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-643">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-644">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-644">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-645">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-645">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-646">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-646">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-647">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-647">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-648">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-648">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-649">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-649">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-650">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-650">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-651">경우는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-651">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="fba2b-652">명령이 호출 하는 경우이 저장된 프로시저를 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-652">The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fba2b-653">트랜잭션이 교착 상태가 될 때까지 예외가 throw 되지 않을 수 있습니다 <xref:System.Data.SqlClient.SqlDataReader.Read%2A> 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-653">If a transaction is deadlocked, an exception may not be thrown until <xref:System.Data.SqlClient.SqlDataReader.Read%2A> is called.</span></span>  
  
 <span data-ttu-id="fba2b-654">같은 연결을 사용 하 여 여러 작업에 대 한 다중 활성 결과 집합 (MARS) 기능 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-654">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="fba2b-655">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-655">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-656">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-656">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-657">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-657">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-658">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand>, 다음 TRANSACT-SQL SELECT 문을 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-658">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-659">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-659">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-660">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-660">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-661">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-661">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-662">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-662">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-663">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-663">An exception occurred while executing the command against a locked row.</span>
          </span>
          <span data-ttu-id="fba2b-664">Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-664">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span>
          </span>
          <span data-ttu-id="fba2b-665">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-665">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-666">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-666">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-667">연결의 현재 상태가 닫힘입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-667">The current state of the connection is closed.</span>
          </span>
          <span data-ttu-id="fba2b-668">
            <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />에 열린 <see cref="T:System.Data.SqlClient.SqlConnection" />이 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-668">
              <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /> requires an open <see cref="T:System.Data.SqlClient.SqlConnection" />.</span>
          </span>
          <span data-ttu-id="fba2b-669">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-669">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-670">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-670">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-671">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-671">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-672">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-672">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-673">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-673">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-674">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-674">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As SqlDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.SqlClient.SqlDataReader" Usage="sqlCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="fba2b-675">
            <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-675">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-676">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-676">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-677">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-677">A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-678">경우는 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 속성이 `StoredProcedure`, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-678">When the <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="fba2b-679">명령이 호출 하는 경우이 저장된 프로시저를 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-679">The command executes this stored procedure when you call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fba2b-680">사용 하 여 <xref:System.Data.CommandBehavior.SequentialAccess> 큰 값 및 이진 데이터를 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-680">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="fba2b-681">그렇지 않은 경우는 <xref:System.OutOfMemoryException> 발생할 수 있습니다 및 연결이 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-681">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="fba2b-682">같은 연결을 사용 하 여 여러 작업에 대 한 다중 활성 결과 집합 (MARS) 기능 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-682">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="fba2b-683">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-683">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-684">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-684">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-685">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-685">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-686">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand>, 다음 TRANSACT-SQL SELECT 문을 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-686">The following example creates a <xref:System.Data.SqlClient.SqlCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</span></span> <span data-ttu-id="fba2b-687"><xref:System.Data.CommandBehavior>이 <xref:System.Data.CommandBehavior.CloseConnection>로 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-687"><xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior.CloseConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteReader2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteReader2/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-688">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-688">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-689">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-689">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-690">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-690">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-691">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-691">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-692">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-692">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-693">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-693">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-694">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-694">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-695">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-695">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-696">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-696">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-697">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-697">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-698">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-698">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-699">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-699">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-700">[!INCLUDE[tsql](~/includes/tsql-md.md)] 문 또는 이 <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명된 저장 프로시저의 비동기 실행을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-700">Initiates the asynchronous execution of the [!INCLUDE[tsql](~/includes/tsql-md.md)] statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-701">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-701">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync () As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync();" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-702">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-702">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-703">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-703">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-704">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-704">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-705">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-705">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-706">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-706">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-707">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-707">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-708">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-708">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-709">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-709">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fba2b-710">
            <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-710">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-711">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-711">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="fba2b-712">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-712">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-713">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-713">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-714">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-714">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-715">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-715">SQL Server returned an error while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-716">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-716">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-717">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-717">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-718">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-718">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-719">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-719">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-720">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-720">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-721">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-721">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReaderAsync (behavior As CommandBehavior) As Task(Of SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="fba2b-722">문 실행 및 데이터 검색을 위한 옵션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-722">Options for statement execution and data retrieval.</span>
          </span>
          <span data-ttu-id="fba2b-723">
            <see langword="Default" />로 설정하면 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />는 전체 작업을 반환하기 전에 전체 행을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-723">When is set to <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> reads the entire row before returning a complete Task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-724">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-724">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-725">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-725">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-726">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-726">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-727">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-727">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-728">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-728">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-729">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-729">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-730">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-730">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-731">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-731">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fba2b-732">
            <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-732">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-733">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-733">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="fba2b-734">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-734">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-735">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-735">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-736">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-736">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-737">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-737">SQL Server returned an error while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-738">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-738">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-739">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-739">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-740">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-740">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-741">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-741">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-742">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-742">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-743">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-743">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="fba2b-744">취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-744">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-745">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-745">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-746">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-746">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="fba2b-747">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-747">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-748">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-748">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-749">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-749">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-750">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-750">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-751">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-751">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-752">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-752">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-753">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-753">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fba2b-754">
            <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-754">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-755">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-755">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="fba2b-756">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-756">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-757">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-757">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-758">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-758">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-759">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-759">SQL Server returned an error while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-760">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-760">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-761">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-761">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-762">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-762">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-763">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-763">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-764">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-764">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-765">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-765">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.SqlClient.SqlDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Data::SqlClient::SqlDataReader ^&gt; ^ ExecuteReaderAsync(System::Data::CommandBehavior behavior, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;" Usage="sqlCommand.ExecuteReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.SqlClient.SqlDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="fba2b-766">문 실행 및 데이터 검색을 위한 옵션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-766">Options for statement execution and data retrieval.</span>
          </span>
          <span data-ttu-id="fba2b-767">
            <see langword="Default" />로 설정하면 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />는 전체 작업을 반환하기 전에 전체 행을 읽습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-767">When is set to <see langword="Default" />, <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> reads the entire row before returning a complete Task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="fba2b-768">취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-768">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-769">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Data.SqlClient.SqlDataReader" />를 작성하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />의 비동기 버전입니다. 취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-769">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />  The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="fba2b-770">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-770">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-771">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-771">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-772">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-772">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-773">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-773">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-774">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-774">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-775">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-775">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-776">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-776">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fba2b-777">
            <see cref="T:System.Data.CommandBehavior" /> 값이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-777">An invalid <see cref="T:System.Data.CommandBehavior" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-778">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-778">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="fba2b-779">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-779">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-780">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-780">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-781">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-781">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-782">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-782">SQL Server returned an error while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-783">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-783">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-784">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-784">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-785">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-785">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-786">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-786">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-787">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-787">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-788">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-788">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="sqlCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.ExecuteScalar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-789">쿼리를 실행하고 쿼리에서 반환된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-789">Executes the query, and returns the first column of the first row in the result set returned by the query.</span>
          </span>
          <span data-ttu-id="fba2b-790">다른 열이나 행은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-790">Additional columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-791">결과 집합에서 첫 번째 행의 첫 번째 열이거나, 결과 집합이 비어 있을 경우 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-791">The first column of the first row in the result set, or a null reference (<see langword="Nothing" /> in Visual Basic) if the result set is empty.</span>
          </span>
          <span data-ttu-id="fba2b-792">최대 2,033자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-792">Returns a maximum of 2033 characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-793">사용 하 여는 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-793">Use the <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="fba2b-794">사용 하 여 보다 적은 코드가 필요는 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 메서드를 다음에서 반환 된 데이터를 사용 하 여 단일 값을 생성 해야 하는 작업을 수행 하는 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-794">This requires less code than using the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method, and then performing the operations that you need to generate the single value using the data returned by a <xref:System.Data.SqlClient.SqlDataReader>.</span></span>  
  
 <span data-ttu-id="fba2b-795">일반적인 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-795">A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
cmd.CommandText = "SELECT COUNT(*) FROM dbo.region";  
Int32 count = (Int32) cmd.ExecuteScalar();  
```  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-796">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 를 사용 하 여 빌드한 다음 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-796">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="fba2b-797">이 예제는 테이블에 삽입 되는 새 값을 나타내는 문자열 및 데이터 원본에 연결 하는 데 사용할 문자열을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-797">The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source.</span></span> <span data-ttu-id="fba2b-798">함수 반환 새 **Identity** 새 행이 삽입 되 면 열 값, 그렇지 않으면 0을 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-798">The function returns the new **Identity** column value if a new row was inserted, 0 on failure.</span></span>  
  
 [!code-csharp[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/CS/source.cs#1)]
 [!code-vb[DataWorks SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlCommand.ExecuteScalar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-799">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-799">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-800">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-800">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-801">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-801">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-802">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-802">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-803">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-803">An exception occurred while executing the command against a locked row.</span>
          </span>
          <span data-ttu-id="fba2b-804">Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-804">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span>
          </span>
          <span data-ttu-id="fba2b-805">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-805">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-806">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-806">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-807">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-807">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-808">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-808">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-809">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-809">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-810">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-810">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-811">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-811">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-812">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-812">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalarAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ExecuteScalarAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ExecuteScalarAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalarAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="sqlCommand.ExecuteScalarAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="fba2b-813">취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-813">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-814">쿼리를 비동기적으로 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 반환하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-814">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" />, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query.</span>
          </span>
          <span data-ttu-id="fba2b-815">다른 열이나 행은 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-815">Additional columns or rows are ignored.</span>
          </span>
          <span data-ttu-id="fba2b-816">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-816">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="fba2b-817">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-817">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-818">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-818">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-819">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-819">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-820">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-820">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-821">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-821">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-822">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-822">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-823">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-823">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-824">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-824">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="fba2b-825">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-825">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-826">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-826">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-827">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-827">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-828">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-828">SQL Server returned an error while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-829">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-829">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-830">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-830">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-831">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-831">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-832">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-832">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-833">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-833">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-834">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-834">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader ExecuteXmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader ExecuteXmlReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReader () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ ExecuteXmlReader();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReader : unit -&gt; System.Xml.XmlReader" Usage="sqlCommand.ExecuteXmlReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-835">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고, <see cref="T:System.Xml.XmlReader" /> 개체를 빌드합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-835">Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-836">
            <see cref="T:System.Xml.XmlReader" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-836">An <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-837">**XmlReader** 반환한이 메서드는 비동기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-837">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

 <span data-ttu-id="fba2b-838"><xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 속성은 일반적으로 지정 된 [!INCLUDE[tsql](~/includes/tsql-md.md)] 유효한 FOR XML 절을 사용 하 여 문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-838">The <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> property ordinarily specifies a [!INCLUDE[tsql](~/includes/tsql-md.md)] statement with a valid FOR XML clause.</span></span> <span data-ttu-id="fba2b-839">그러나 <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> 반환 하는 문을 지정할 수도 `ntext` 또는 `nvarchar` 유효한 XML 또는 정의 된 열의 내용이 포함 된 데이터는 `xml` 데이터 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-839">However, <xref:System.Data.SqlClient.SqlCommand.CommandText%2A> can also specify a statement that returns `ntext` or `nvarchar` data that contains valid XML, or the contents of a column defined with the `xml` data type.</span></span>  
  
 <span data-ttu-id="fba2b-840">일반적인 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 쿼리는 다음 Microsoft Visual C# 예제와 같이 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-840">A typical <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> query can be formatted as in the following Microsoft Visual C# example:</span></span>  
  
```  
SqlCommand command = new SqlCommand("SELECT * FROM dbo.Customers FOR XML AUTO, XMLDATA", SqlConn);  
```  
  
 <span data-ttu-id="fba2b-841">이 메서드는 XML 데이터가 포함 된 단일 행, 단일 열 결과 집합을 검색할 데도 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-841">This method can also be used to retrieve a single-row, single-column result set that contains XML data.</span></span> <span data-ttu-id="fba2b-842">이 경우 둘 이상의 행이 반환 되는 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 연결 합니다. 메서드는 <xref:System.Xml.XmlReader> 결과의 나머지 부분에서 첫 번째 행 및 패킷 값으로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-842">In this case, if more than one row is returned, the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method attaches the <xref:System.Xml.XmlReader> to the value on the first row, and discards the rest of the result set.</span></span>  
  
 <span data-ttu-id="fba2b-843">같은 연결을 사용 하 여 여러 작업에 대 한 다중 활성 결과 집합 (MARS) 기능 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-843">The multiple active result set (MARS) feature allows for multiple actions using the same connection.</span></span>  
  
 <span data-ttu-id="fba2b-844">사용 하는 경우 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-844">If you use <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</span></span> <span data-ttu-id="fba2b-845">이 문제를 방지 하려면 사용 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> 또는 <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> FOR XML 쿼리를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-845">To avoid this behavior, use <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> or <xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A> to read FOR XML queries.</span></span> <span data-ttu-id="fba2b-846">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 http://support.microsoft.com합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-846">For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  


## Examples  
 <span data-ttu-id="fba2b-847">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlCommand> 를 사용 하 여 빌드한 다음 실행 <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-847">The following example creates a <xref:System.Data.SqlClient.SqlCommand> and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>.</span></span> <span data-ttu-id="fba2b-848">이 예제에서는 TRANSACT-SQL에 대 한 XML SELECT 문 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-848">The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteXmlReader/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-849">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-849">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-850">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-850">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-851">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-851">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-852">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-852">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-853">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-853">An exception occurred while executing the command against a locked row.</span>
          </span>
          <span data-ttu-id="fba2b-854">Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-854">This exception is not generated when you are using Microsoft .NET Framework version 1.0.</span>
          </span>
          <span data-ttu-id="fba2b-855">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-855">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-856">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-856">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-857">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-857">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-858">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-858">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-859">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-859">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-860">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-860">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-861">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-861">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-862">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-862">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteXmlReaderAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-863">
            <see cref="T:System.Data.SqlClient.SqlCommand" />에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <see cref="T:System.Xml.XmlReader" /> 개체로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-863">Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <see cref="T:System.Data.SqlClient.SqlCommand" /> and returns results as an <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteXmlReaderAsync () As Task(Of XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync();" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-864">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Xml.XmlReader" /> 개체를 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-864">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
          <span data-ttu-id="fba2b-865">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-865">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-866">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-866">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fba2b-867">**XmlReader** 반환한이 메서드는 비동기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-867">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

<span data-ttu-id="fba2b-868">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-868">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-869">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-869">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-870">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-870">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-871">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-871">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-872">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-872">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-873">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-873">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="fba2b-874">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-874">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-875">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-875">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-876">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-876">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-877">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-877">SQL Server returned an error while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-878">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-878">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-879">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-879">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-880">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-880">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-881">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-881">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-882">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-882">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-883">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-883">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteXmlReaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt; ExecuteXmlReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Xml.XmlReader&gt; ExecuteXmlReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Xml::XmlReader ^&gt; ^ ExecuteXmlReaderAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ExecuteXmlReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;" Usage="sqlCommand.ExecuteXmlReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="fba2b-884">취소 명령입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-884">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fba2b-885">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" />를 <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />에 보내고 <see cref="T:System.Xml.XmlReader" /> 개체를 빌드하는 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />의 비동기 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-885">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" />, which sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
          <span data-ttu-id="fba2b-886">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-886">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="fba2b-887">예외는 반환된 작업 개체를 통해 보고됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-887">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-888">비동기 작업(operation)을 나타내는 작업(task)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-888">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fba2b-889">**XmlReader** 반환한이 메서드는 비동기 작업을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-889">The **XmlReader** returned by this method does not support asynchronous operations.</span></span>

<span data-ttu-id="fba2b-890">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 [비동기 프로그래밍](~/docs/framework/data/adonet/asynchronous-programming.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-890">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fba2b-891">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.Stream" />으로 설정되었을 때 **Binary** 또는 **VarBinary**가 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-891">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Binary** or **VarBinary** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="fba2b-892">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-892">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-893">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.IO.TextReader" />로 설정되었을 때 **Char**, **NChar**, **NVarChar**, **VarChar** 또는  **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-893">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Char**, **NChar**, **NVarChar**, **VarChar**, or  **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.IO.TextReader" />.</span>
          </span>
          <span data-ttu-id="fba2b-894">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 <see cref="T:System.Xml.XmlReader" />로 설정되었을 때 **Xml**이 아닌 <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" />이 사용되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-894">A <see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /> other than **Xml** was used when <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> was set to <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fba2b-895">작업 완료 전에 동일한 인스턴스에 대해 <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" />를 두 번 이상 호출</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-895">Calling <see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="fba2b-896">스트리밍 작업 동안 <see cref="T:System.Data.SqlClient.SqlConnection" />이 닫히거나 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-896">The <see cref="T:System.Data.SqlClient.SqlConnection" /> closed or dropped during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-897">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-897">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
          <span data-ttu-id="fba2b-898">
            <see langword="Context Connection=true" />가 연결 문자열에 지정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-898">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="fba2b-899">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-899">SQL Server returned an error while executing the command text.</span>
          </span>
          <span data-ttu-id="fba2b-900">스트리밍 작업 동안 시간이 초과되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-900">A timeout occurred during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-901">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-901">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="fba2b-902">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체에서 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-902">An error occurred in a <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-903">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-903">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="fba2b-904">스트리밍 작업 동안 <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> 또는 <see cref="T:System.IO.TextReader" /> 개체가 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-904">The <see cref="T:System.IO.Stream" />, <see cref="T:System.Xml.XmlReader" /> or <see cref="T:System.IO.TextReader" /> object was closed during a streaming operation.</span>
          </span>
          <span data-ttu-id="fba2b-905">스트리밍에 대한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)을 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-905">For more information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Notification">
      <MemberSignature Language="C#" Value="public System.Data.Sql.SqlNotificationRequest Notification { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Sql.SqlNotificationRequest Notification" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Notification" />
      <MemberSignature Language="VB.NET" Value="Public Property Notification As SqlNotificationRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Sql::SqlNotificationRequest ^ Notification { System::Data::Sql::SqlNotificationRequest ^ get(); void set(System::Data::Sql::SqlNotificationRequest ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Notification : System.Data.Sql.SqlNotificationRequest with get, set" Usage="System.Data.SqlClient.SqlCommand.Notification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlNotificationRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-906">이 명령에 바인딩된 <see cref="T:System.Data.Sql.SqlNotificationRequest" /> 개체를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-906">Gets or sets a value that specifies the <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object bound to this command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-907">null(기본값)로 설정하면 알림을 요청할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-907">When set to null (default), no notification should be requested.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-908">적용 되려면에 대 한 명령을 실행 하기 전에이 속성에 대 한 값을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-908">You must set the value for this property before the command is executed for it to take effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotificationAutoEnlist">
      <MemberSignature Language="C#" Value="public bool NotificationAutoEnlist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotificationAutoEnlist" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberSignature Language="VB.NET" Value="Public Property NotificationAutoEnlist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotificationAutoEnlist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotificationAutoEnlist : bool with get, set" Usage="System.Data.SqlClient.SqlCommand.NotificationAutoEnlist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-909">응용 프로그램에서 일반적인 <see cref="T:System.Data.SqlClient.SqlDependency" /> 개체의 쿼리 알림을 자동으로 받을지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-909">Gets or sets a value indicating whether the application should automatically receive query notifications from a common <see cref="T:System.Data.SqlClient.SqlDependency" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-910">* * true * * 응용 프로그램에서 쿼리 알림을 자동으로 받으면 그렇지 않은 경우 * * false * *입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-910">**true** if the application should automatically receive query notifications; otherwise **false**.</span>
          </span>
          <span data-ttu-id="fba2b-911">기본값은 * * true * *입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-911">The default value is **true**.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-912">이 기능은 SQL Server에 대 한 ASP 페이지에서 실행 되는 모든 명령에 대 한 알림을 수신 하도록 ASP.NET 응용 프로그램에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-912">This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server.</span></span> <span data-ttu-id="fba2b-913">그러면 ASP.NET 페이지를 렌더링 하는 데 사용 하는 쿼리 다른 결과 생성 될 때까지 페이지를 캐시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-913">This enables ASP.NET to cache the page until the queries used to render the page would produce a different result.</span></span> <span data-ttu-id="fba2b-914">자동 인 리스트 먼 트 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-914">Automatic enlistment.</span></span>  
  
 <span data-ttu-id="fba2b-915">이 속성은 쿼리 알림을 지원 하는 SQL Server의 버전에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-915">This property applies only to versions of SQL Server that support query notifications.</span></span> <span data-ttu-id="fba2b-916">이전 버전에서는이 속성을 설정 **true** 응용 프로그램에는 아무 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-916">For earlier versions, setting this property to **true** has no effect on the application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As SqlParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlParameterCollection ^ Parameters { System::Data::SqlClient::SqlParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.SqlClient.SqlParameterCollection" Usage="System.Data.SqlClient.SqlCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-917">
            <see cref="T:System.Data.SqlClient.SqlParameterCollection" />를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-917">Gets the <see cref="T:System.Data.SqlClient.SqlParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-918">Transact-SQL 문이나 저장 프로시저의 매개 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-918">The parameters of the Transact-SQL statement or stored procedure.</span>
          </span>
          <span data-ttu-id="fba2b-919">기본값은 빈 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-919">The default is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-920">Microsoft.NET Framework Data Provider for SQL Server SQL 문 또는 저장된 프로시저의 명령에 의해 호출에 매개 변수 전달에 대 한 물음표 (?) 자리 표시자를 지원 하지 않는 `CommandType.Text`합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-920">The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of `CommandType.Text`.</span></span> <span data-ttu-id="fba2b-921">이 경우 명명 된 매개 변수를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-921">In this case, named parameters must be used.</span></span> <span data-ttu-id="fba2b-922">예:</span><span class="sxs-lookup"><span data-stu-id="fba2b-922">For example:</span></span>  
  
 <span data-ttu-id="fba2b-923">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span><span class="sxs-lookup"><span data-stu-id="fba2b-923">SELECT \* FROM Customers WHERE CustomerID = @CustomerID</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fba2b-924">컬렉션의 매개 변수를 실행 하면 쿼리의 요구 사항을 일치 하지 않으면 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-924">If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</span></span>  
  
 <span data-ttu-id="fba2b-925">자세한 내용은 참조 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-925">For more information, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-926">다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Data.SqlClient.SqlCommand> 매개 변수를 추가 하 고는 <xref:System.Data.SqlClient.SqlParameterCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-926">The following example demonstrates how to create a <xref:System.Data.SqlClient.SqlCommand> and add parameters to the <xref:System.Data.SqlClient.SqlParameterCollection>.</span></span>  
  
 [!code-csharp[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/CS/source.cs#1)]
 [!code-vb[DataWorks SqlParameterCollection.AddWithValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParameterCollection.AddWithValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="sqlCommand.Prepare " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDbCommand.Prepare</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-927">SQL Server 인스턴스의 명령에 사용할 버전을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-927">Creates a prepared version of the command on an instance of SQL Server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-928">경우 <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> 로 설정 된 `StoredProcedure`에 대 한 호출 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 성공 해야 합니다는 아무 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-928">If <xref:System.Data.SqlClient.SqlCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> should succeed, although it may cause a no-op.</span></span>  
  
 <span data-ttu-id="fba2b-929">호출 하기 전에 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, 준비 된 문에서에서 각 매개 변수의 데이터 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-929">Before you call <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, specify the data type of each parameter in the statement to be prepared.</span></span> <span data-ttu-id="fba2b-930">가변 길이 데이터 형식의 각 매개 변수에 대해 설정 해야 합니다는 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 속성을 최대 크기로 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-930">For each parameter that has a variable length data type, you must set the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property to the maximum size needed.</span></span> <span data-ttu-id="fba2b-931"><xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 이러한 조건이 충족 되지 않는 경우 오류가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-931"><xref:System.Data.SqlClient.SqlCommand.Prepare%2A> returns an error if these conditions are not met.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fba2b-932">TRANSACT-SQL을 실행 하 여 데이터베이스 컨텍스트를 변경할 경우 `USE <database>` 문을 호출 하 여는 <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> 메서드를 다음 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 를 두 번 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-932">If the database context is changed by executing the Transact-SQL `USE <database>` statement, or by calling the <xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A> method, then <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> must be called a second time.</span></span>  
  
 <span data-ttu-id="fba2b-933">호출 하는 경우는 `Execute` 메서드를 호출한 후 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>에 지정 된 값 보다 큰 모든 매개 변수 값은 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 속성이 자동으로 매개 변수의 원래 지정 된 크기로 잘리고 잘림 오류가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-933">If you call an `Execute` method after calling <xref:System.Data.SqlClient.SqlCommand.Prepare%2A>, any parameter value that is larger than the value specified by the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</span></span>  
  
 <span data-ttu-id="fba2b-934">출력 매개 변수 (준비) 여부는 사용자 지정 데이터 형식이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-934">Output parameters (whether prepared or not) must have a user-specified data type.</span></span> <span data-ttu-id="fba2b-935">최대 가변 길이 데이터 형식 지정도 지정 해야 <xref:System.Data.SqlClient.SqlParameter.Size%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-935">If you specify a variable length data type, you must also specify the maximum <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</span></span>  
  
 <span data-ttu-id="fba2b-936">Visual Studio 2010 이전의 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 에서 예외가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-936">Prior to Visual Studio 2010, <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> threw an exception.</span></span>  <span data-ttu-id="fba2b-937">Visual Studio 2010부터,이 메서드가 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-937">Beginning in Visual Studio 2010, this method does not throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fba2b-938">다음 예제에서는 <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-938">The following example demonstrates the use of the <xref:System.Data.SqlClient.SqlCommand.Prepare%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/CS/Source.cs#1)]
 [!code-vb[Classic WebData SqlCommand.Prepare#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.Prepare/VB/Source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberSignature Language="F#" Value="member this.ResetCommandTimeout : unit -&gt; unit" Usage="sqlCommand.ResetCommandTimeout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-939">
            <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> 속성을 기본값으로 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-939">Resets the <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> property to its default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-940">기본값은 <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> 30 초입니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-940">The default value of the <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> is 30 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StatementCompleted">
      <MemberSignature Language="C#" Value="public event System.Data.StatementCompletedEventHandler StatementCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.StatementCompletedEventHandler StatementCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlCommand.StatementCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StatementCompleted As StatementCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::StatementCompletedEventHandler ^ StatementCompleted;" />
      <MemberSignature Language="F#" Value="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " Usage="member this.StatementCompleted : System.Data.StatementCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.StatementCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-941">Transact-SQL 문의 실행이 완료될 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-941">Occurs when the execution of a Transact-SQL statement completes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-942">현재 인스턴스의 복사본인 새 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-942">Creates a new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fba2b-943">이 인스턴스의 복사본인 새 <see cref="T:System.Data.SqlClient.SqlCommand" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-943">A new <see cref="T:System.Data.SqlClient.SqlCommand" /> object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As SqlTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlTransaction ^ Transaction { System::Data::SqlClient::SqlTransaction ^ get(); void set(System::Data::SqlClient::SqlTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.SqlClient.SqlTransaction with get, set" Usage="System.Data.SqlClient.SqlCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-944">
            <see cref="T:System.Data.SqlClient.SqlTransaction" />가 실행되는 <see cref="T:System.Data.SqlClient.SqlCommand" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-944">Gets or sets the <see cref="T:System.Data.SqlClient.SqlTransaction" /> within which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-945">
            <see cref="T:System.Data.SqlClient.SqlTransaction" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-945">The <see cref="T:System.Data.SqlClient.SqlTransaction" />.</span>
          </span>
          <span data-ttu-id="fba2b-946">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-946">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-947">설정할 수 없습니다.는 <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> 특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-947">You cannot set the <xref:System.Data.SqlClient.SqlCommand.Transaction%2A> property if it is already set to a specific value, and the command is in the process of executing.</span></span> <span data-ttu-id="fba2b-948">트랜잭션 속성을 설정 하는 경우는 <xref:System.Data.SqlClient.SqlTransaction> 동일 하 게 연결 되어 있지 않은 개체 <xref:System.Data.SqlClient.SqlConnection> 로 <xref:System.Data.SqlClient.SqlCommand> 개체 문을 실행 하려고 하면 다음에 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-948">If you set the transaction property to a <xref:System.Data.SqlClient.SqlTransaction> object that is not connected to the same <xref:System.Data.SqlClient.SqlConnection> as the <xref:System.Data.SqlClient.SqlCommand> object, an exception is thrown the next time that you attempt to execute a statement.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.SqlClient.SqlCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbCommand.UpdatedRowSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fba2b-949">
            <see cref="T:System.Data.Common.DbDataAdapter" />의 **Update** 메서드에 의해 사용될 때 명령 결과가 <see cref="T:System.Data.DataRow" />에 적용되는 방법을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-949">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the **Update** method of the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fba2b-950">
            <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fba2b-950">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fba2b-951">기본 <xref:System.Data.UpdateRowSource> 값은 **둘 다** 명령이 자동으로 생성 하지 않는 한 (의 경우로 <xref:System.Data.SqlClient.SqlCommandBuilder>),이 경우 기본값은 **없음**합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-951">The default <xref:System.Data.UpdateRowSource> value is **Both** unless the command is automatically generated (as in the case of the <xref:System.Data.SqlClient.SqlCommandBuilder>), in which case the default is **None**.</span></span>  
  
 <span data-ttu-id="fba2b-952">사용 하는 방법에 대 한 자세한 내용은 **UpdatedRowSource** 속성 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="fba2b-952">For more information about using the **UpdatedRowSource** property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>