<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlCommand.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15bcd8d714b76bdd9eadda8ef4611395116df7bc44.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcd8d714b76bdd9eadda8ef4611395116df7bc44</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database.</source>
          <target state="translated">SQL Server 데이터베이스에 대해 실행할 Transact-SQL 문이나 저장 프로시저를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the read/write properties are set to their initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 만들어지면 읽기/쓰기 속성은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> constructor.</source>
          <target state="translated">이러한 값의 목록에 대 한 참조는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> features the following methods for executing commands at a SQL Server database:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> SQL Server 데이터베이스에서 명령을 실행 하기 위한 다음 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Item</source>
          <target state="translated">항목</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, generally executing commands such as INSERT, DELETE, UPDATE, and SET statements.</source>
          <target state="translated">Transact SQL 문 또는이 설명 하는 저장된 프로시저의 비동기 실행을 시작 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, 일반적으로 INSERT, DELETE, UPDATE 등의 명령을 실행 하 고 SET 문입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> must be paired with a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> which finishes the operation, typically on a separate thread.</source>
          <target state="translated">호출할 때마다 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 을 호출 하 여 쌍이 되어야 합니다 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 일반적으로 별도 스레드에서 작업을 종료입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and retrieves one or more results sets from the server.</source>
          <target state="translated">Transact SQL 문 또는이 설명 하는 저장된 프로시저의 비동기 실행을 시작 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 서버에서 하나 이상의 결과 집합으로 검색 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> must be paired with a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> which finishes the operation, typically on a separate thread.</source>
          <target state="translated">호출할 때마다 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 을 호출 하 여 쌍이 되어야 합니다 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 일반적으로 별도 스레드에서 작업을 종료입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Each call to <ph id="ph1">`BeginExecuteXmlReader`</ph> must be paired with a call to <ph id="ph2">`EndExecuteXmlReader`</ph>, which finishes the operation, typically on a separate thread, and returns an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">호출할 때마다 <ph id="ph1">`BeginExecuteXmlReader`</ph> 을 호출 하 여 쌍이 되어야 합니다 <ph id="ph2">`EndExecuteXmlReader`</ph>을 반환 하는 별도 스레드에서 일반적으로 작업을 종료 한 <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Executes commands that return rows.</source>
          <target state="translated">행을 반환 하는 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For increased performance, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> invokes commands using the Transact-SQL <ph id="ph2">`sp_executesql`</ph> system stored procedure.</source>
          <target state="translated">성능 향상된을 위해 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> TRANSACT-SQL을 사용 하 여 명령을 호출 <ph id="ph2">`sp_executesql`</ph> 시스템 저장 프로시저입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> might not have the effect that you want if used to execute commands such as Transact-SQL SET statements.</source>
          <target state="translated">따라서 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 되지 않았을 수의 원하는 효과 사용 하는 경우 TRANSACT-SQL SET 문과 같은 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Executes commands such as Transact-SQL INSERT, DELETE, UPDATE, and SET statements.</source>
          <target state="translated">Transact SQL INSERT, DELETE, UPDATE 및 SET 문과 같은 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Retrieves a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Sends the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> and builds an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph>를 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>에 보내고, <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>You can reset the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property and reuse the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated">다시 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 속성 및 재사용은 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>However, you must close the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> before you can execute a new or previous command.</source>
          <target state="translated">그러나를 닫아야는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 전에 이전 또는 새 명령을 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>If a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> 메서드를 실행 하 여 생성 되는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 심각도 19 이하인 경우 열린 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>When the severity level is 20 or greater, the server ordinarily closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">서버는 일반적으로 닫습니다 심각도 수준이 20 이상일 때는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">그러나 사용자는 연결을 다시 열고 계속할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.</source>
          <target state="translated">서 수 이며 라고도 무명 매개 변수는 SQL Server는.NET Framework Data Provider에서 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and a <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The example reads through the data, writing it to the console.</source>
          <target state="translated">이 예제에서는 콘솔에 작성 하는 데이터를 읽습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Finally, the example closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and then the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> as it exits the <ph id="ph3">`Using`</ph> code blocks.</source>
          <target state="translated">마지막는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 차례로 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 종료할는 <ph id="ph3">`Using`</ph> 코드 블록입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>The following sample shows how to create and execute different types of SqlCommand objects.</source>
          <target state="translated">다음 샘플에는 만들고 다양 한 유형의 SqlCommand 개체를 실행 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>First you must create the sample database, by executing the following script:</source>
          <target state="translated">먼저 다음 스크립트를 실행 하 여 샘플 데이터베이스를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Next, compile and execute the following:</source>
          <target state="translated">다음으로, 컴파일 및 다음 명령을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The base constructor initializes all fields to their default values.</source>
          <target state="translated">기본 생성자는 모든 필드를를 기본값으로 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>Null</source>
          <target state="translated">Null</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 별도 호출을 통해 이러한 속성 중 하나에 대 한 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets the <ph id="ph2">`CommandTimeout`</ph> property.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 설정 하 고는 <ph id="ph2">`CommandTimeout`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query.</source>
          <target state="translated">쿼리 텍스트를 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is created, the following read/write properties are set to initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 만들어지면 다음 읽기/쓰기 속성은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>null</source>
          <target state="translated">null</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 별도 호출을 통해 이러한 속성 중 하나에 대 한 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, passing in the connection string and command text.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, 연결 문자열 및 명령 텍스트를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">SQL Server의 인스턴스에 대한 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query and a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">쿼리의 텍스트와 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>A new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 즉에 대 한 값은 <ph id="ph2">`connection`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>You can change the value for any of these parameters by setting the related property.</source>
          <target state="translated">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">SQL Server의 인스턴스에 대한 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> in which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>가 실행되는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with the text of the query, a <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>, and the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>.</source>
          <target state="translated">쿼리의 텍스트, <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>30</source>
          <target state="translated">30</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>A new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> that is the value for the <ph id="ph2">`connection`</ph> parameter.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 즉에 대 한 값은 <ph id="ph2">`connection`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
          <source>You can change the value for any of these parameters by setting the related property.</source>
          <target state="translated">관련된 속성을 설정 하 여 이러한 매개 변수 중 하나에 대 한 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The text of the query.</source>
          <target state="translated">쿼리 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection to an instance of SQL Server.</source>
          <target state="translated">SQL Server의 인스턴스에 대한 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> in which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>가 실행되는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>The encryption setting.</source>
          <target state="translated">암호화 설정입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>For more information, see <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>항상 암호화<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommandColumnEncryptionSetting)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> class with specified command text, connection, transaction, and encryption setting.</source>
          <target state="translated">지정된 명령 텍스트, 연결, 트랜잭션 및 암호화 설정을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>가 설명하는 저장 프로시저 또는 Transact-SQL 문의 비동기 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, which returns the number of affected rows.</source>
          <target state="translated">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>이며, 이 값은 영향을 받는 행의 수를 반환하는 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>를 호출할 때도 필요합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 메서드를 비동기적으로 실행 시작 된 <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 문 또는 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 행을 반환 하지 않는 저장된 프로시저입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.</source>
          <target state="translated">문이 완료 되 면 개발자가 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 메서드를 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 메서드가 즉시 반환 (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> 영향을 주지 않습니다 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), 해당 코드가 실행 될 때까지 하지만 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 메서드 호출에서 해당 실행 해서는 안 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 같은 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 명령 실행이 완료 되기 전에 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 실행 완료 될 때까지 차단 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">이 오버 로드는 콜백 프로시저를 지원 하지 않으므로 되기를 기다려야 명령이 완료 되었는지 여부를 확인 하려면 두 설문 조사를 사용 하 여는 <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 메서드; 또는 완료를 위해 대기 하나 이상의 명령을 사용 하는 <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 반환 된 속성 <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The following console application creates updates data within the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database, doing its work asynchronously.</source>
          <target state="translated">다음 콘솔 응용 프로그램에서는 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> 예제 데이터베이스에서 작업은 비동기적으로 수행 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>In order to emulate a long-running process, this example inserts a WAITFOR statement in the command text.</source>
          <target state="translated">이 예제에서는 장기 실행 프로세스를 에뮬레이션하기 위해 명령 텍스트에 WAITFOR 문을 삽입합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Normally, you would not take efforts to make your commands run slower, but doing this in this case makes it easier to demonstrate the asynchronous behavior.</source>
          <target state="translated">일반적으로 명령을 느린 속도로 실행 속도 수행 하지 않고이 경우 쉽게 비동기 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">명령 텍스트를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이름/값 쌍 "비동기 처리=true"가 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">명령의 실행이 완료되었을 때 호출되는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">콜백이 필요하지 않도록 지정하려면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>(Microsoft Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)을 전달합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, given a callback procedure and state information.</source>
          <target state="translated">콜백 프로시저와 상태 정보가 주어진 상태에서 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>, which returns the number of affected rows.</source>
          <target state="translated">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>이며, 이 값은 영향을 받는 행의 수를 반환하는 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>를 호출할 때도 필요합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that does not return rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하지 않는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method to finish the operation.</source>
          <target state="translated">문이 완료 되 면 개발자가 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 메서드를 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method returns immediately (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect on <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), but until the code executes the corresponding <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 메서드가 즉시 반환 (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> 영향을 주지 않습니다 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>), 해당 코드가 실행 될 때까지 하지만 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 메서드 호출에서 해당 실행 해서는 안 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 같은 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 명령 실행이 완료 되기 전에 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 실행 완료 될 때까지 차단 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> 매개 변수를 지정할 수 있습니다는 <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> 문이 완료 되 면 호출 되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서 메서드.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`asyncStateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">개체를 전달할 수는 또한는 <ph id="ph1">`asyncStateObject`</ph> 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">콜백 프로시저 Microsoft.NET 공용 언어 런타임에서 제공 되는 백그라운드 스레드에서 실행 되기 때문 것이 매우 중요 한 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 강력한 방법을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">예를 들어 작용 해서는의 폼의 내용으로 콜백 프로시저; 내 폼을 업데이트 해야 할 해야를 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">이 항목의 예제에서는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저에서 예외로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">주 응용 프로그램 아니라 콜백 프로시저에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">콜백 프로시저에서 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of several seconds (emulating a long-running command).</source>
          <target state="translated">다음 Windows 응용 프로그램의 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 메서드를 한 장기 실행 명령을 에뮬레이션 하는 몇 초 간의 지연이 포함 된 TRANSACT-SQL 문을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">이 예제에서는 여러 중요 한 기술을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">또한이 예제에서는 사용자가 명령을 여러 번 동시에 실행 못하도록 해야 하 고 어떻게 해야 하며 콜백 프로시저 하기 전에 폼을 닫을 라고 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">배치는 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 제어 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Label&gt;</ph> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">사용자 환경에 필요에 따라 연결 문자열을 수정 하는 폼의 클래스에 다음 코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">명령 텍스트를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이름/값 쌍 "비동기 처리=true"가 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, and retrieves one or more result sets from the server.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, and retrieves one or more result sets from the server.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance that can be used to retrieve the returned rows.</source>
          <target state="translated">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>이며, 반환된 행을 검색하는 데 사용할 수 있는 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 인스턴스를 반환하는 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>를 호출할 때도 이 값이 필요합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">문이 완료 되 면 개발자가 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 하 여 작업을 종료 하 고 검색 메서드는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 명령에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 명령 실행이 완료 되기 전에 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 실행 완료 될 때까지 차단 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">비동기 명령 실행 되어도 값 페치는 동기적입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">이 의미에 대 한 호출이 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">이 오버 로드는 콜백 프로시저를 지원 하지 않으므로 되기를 기다려야 명령이 완료 되었는지 여부를 확인 하려면 두 설문 조사를 사용 하 여는 <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드; 또는 완료를 위해 대기 하나 이상의 명령을 사용 하는 <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 반환 된 속성 <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The following console application starts the process of retrieving a data reader asynchronously.</source>
          <target state="translated">다음 콘솔 응용 프로그램 데이터 판독기를 비동기적으로 검색 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 하는 <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>As soon as the process has completed, the code retrieves the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and displays its contents.</source>
          <target state="translated">코드 검색에서는 프로세스가 완료 되는 즉시는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 해당 내용을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">명령 텍스트를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이름/값 쌍 "비동기 처리=true"가 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values, indicating options for statement execution and data retrieval.</source>
          <target state="translated">문 실행 및 데이터 검색 옵션을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> using one of the <ph id="ph2">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값 중 하나를 사용하여 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance that can be used to retrieve the returned rows.</source>
          <target state="translated">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>이며, 반환된 행을 검색하는 데 사용할 수 있는 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 인스턴스를 반환하는 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>를 호출할 때도 이 값이 필요합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">문이 완료 되 면 개발자가 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 하 여 작업을 종료 하 고 검색 메서드는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 명령에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 명령 실행이 완료 되기 전에 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 실행 완료 될 때까지 차단 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.</source>
          <target state="translated"><ph id="ph1">`behavior`</ph> 매개 변수는 명령 및 해당 연결의 동작을 제어 하는 옵션을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>These values can be combined together (using the programming language's <ph id="ph1">`OR`</ph> operator); generally, developers use the <ph id="ph2">`CommandBehavior.CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.</source>
          <target state="translated">이러한 값을 함께 결합할 수 있습니다 (프로그래밍 언어를 사용 하 여 <ph id="ph1">`OR`</ph> 연산자); 일반적으로 개발자가 사용 하 여는 <ph id="ph2">`CommandBehavior.CloseConnection`</ph> 런타임에서 연결이 닫혀 있는지 확인 하는 값 때는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 닫힙니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">비동기 명령 실행 되어도 값 페치는 동기적입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">이 의미에 대 한 호출이 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Because this overload does not support a callback procedure, developers must either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">이 오버 로드는 콜백 프로시저를 지원 하지 않으므로 되기를 기다려야 명령이 완료 되었는지 여부를 확인 하려면 두 설문 조사를 사용 하 여는 <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 메서드; 또는 완료를 위해 대기 하나 이상의 명령을 사용 하는 <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 반환 된 속성 <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server 결과 보냅니다 XML 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The following console application starts the process of retrieving a data reader asynchronously.</source>
          <target state="translated">다음 콘솔 응용 프로그램 데이터 판독기를 비동기적으로 검색 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 하는 <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Once the process has completed, the code retrieves the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> and displays its contents.</source>
          <target state="translated">코드 검색은 프로세스가 완료 되 면는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 해당 내용을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>This example also passes the <ph id="ph1">`CommandBehavior.CloseConnection`</ph> and <ph id="ph2">`CommandBehavior.SingleRow`</ph> values in the behavior parameter, causing the connection to be closed with the returned <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed, and to optimize for a single row result.</source>
          <target state="translated">이 예제에서는 또한 전달는 <ph id="ph1">`CommandBehavior.CloseConnection`</ph> 및 <ph id="ph2">`CommandBehavior.SingleRow`</ph> 때 연결이 닫힌다고 동작 매개 변수에서 값 반환 된 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 닫혀 단일 행 결과 대 한 최적화할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">명령 텍스트를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이름/값 쌍 "비동기 처리=true"가 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">명령의 실행이 완료되었을 때 호출되는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">콜백이 필요하지 않도록 지정하려면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>(Microsoft Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)을 전달합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and retrieves one or more result sets from the server, given a callback procedure and state information.</source>
          <target state="translated">콜백 프로시저와 상태 정보가 주어진 상태에서 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 서버에서 하나 이상의 결과 집합을 검색합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance which can be used to retrieve the returned rows.</source>
          <target state="translated">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>이며, 반환된 행을 검색하는 데 사용할 수 있는 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> 인스턴스를 반환하는 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 호출할 때도 이 값이 필요합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">문이 완료 되 면 개발자가 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 하 여 작업을 종료 하 고 검색 메서드는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 명령에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed cause the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 명령 실행이 완료 되기 전에 원인은 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 실행 완료 될 때까지 차단 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> 매개 변수를 지정할 수 있습니다는 <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> 문이 완료 되 면 호출 되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서 메서드.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">개체를 전달할 수는 또한는 <ph id="ph1">`stateObject`</ph> 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">비동기 명령 실행 되어도 값 페치는 동기적입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">이 의미에 대 한 호출이 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">콜백 프로시저 Microsoft.NET 런타임에서 제공 되는 백그라운드 스레드에서 실행 되기 때문 것이 매우 중요 한 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 강력한 방법을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For example, you must not interact with a form's contents from within your callback procedure; should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">예를 들어 작용 해서는의 폼의 내용으로 콜백 프로시저; 내 폼을 업데이트 해야 할 해야를 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">이 항목의 예제에서는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저에서 예외로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">주 응용 프로그램 아니라 콜백 프로시저에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">콜백 프로시저에서 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server 결과 보냅니다 XML 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">다음 Windows 응용 프로그램에서는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</source>
          <target state="translated">이 샘플 명령은 비동기적으로 실행, 결과 기다리는 동안 폼 응답 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter; doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">이 예제에서는 실행 하는 전달 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체로 <ph id="ph2">`stateObject`</ph> 매개 변수; 이렇게 하면 간단 하 게 검색할 수는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 코드에서 호출할 수 있도록 콜백 프로시저에서 개체는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 메서드에 해당 하는 호출을 초기 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">이 예제에서는 여러 중요 한 기술을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">또한이 예제에서는 사용자가 명령을 여러 번 동시에 실행 못하도록 해야 하 고 어떻게 해야 하며 콜백 프로시저 하기 전에 폼을 닫을 라고 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">배치는 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">사용자 환경에 필요에 따라 연결 문자열을 수정 하는 폼의 클래스에 다음 코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">명령 텍스트를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이름/값 쌍 "비동기 처리=true"가 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">명령의 실행이 완료되었을 때 호출되는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">콜백이 필요하지 않도록 지정하려면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>(Microsoft Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)을 전달합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values, indicating options for statement execution and data retrieval.</source>
          <target state="translated">문 실행 및 데이터 검색 옵션을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>, using one of the <ph id="ph2">&lt;see langword="CommandBehavior" /&gt;</ph> values, and retrieving one or more result sets from the server, given a callback procedure and state information.</source>
          <target state="translated">콜백 프로시저와 상태 정보가 주어진 상태에서 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명하는 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 <ph id="ph2">&lt;see langword="CommandBehavior" /&gt;</ph> 값 중 하나를 사용하여 서버에서 결과 집합을 하나 이상 검색합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>, which returns a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> instance which can be used to retrieve the returned rows.</source>
          <target state="translated">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>이며, 반환된 행을 검색하는 데 사용할 수 있는 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 인스턴스를 반환하는 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>를 호출할 때도 이 값이 필요합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method to finish the operation and retrieve the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> returned by the command.</source>
          <target state="translated">문이 완료 되 면 개발자가 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 하 여 작업을 종료 하 고 검색 메서드는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 명령에서 반환 합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 명령 실행이 완료 되기 전에 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 실행 완료 될 때까지 차단 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> 매개 변수를 지정할 수 있습니다는 <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> 문이 완료 되 면 호출 되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서 메서드.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">개체를 전달할 수는 또한는 <ph id="ph1">`stateObject`</ph> 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`behavior`</ph> parameter lets you specify options that control the behavior of the command and its connection.</source>
          <target state="translated"><ph id="ph1">`behavior`</ph> 매개 변수는 명령 및 해당 연결의 동작을 제어 하는 옵션을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>These values can be combined together (using the programming language's <ph id="ph1">`Or`</ph> operator); generally, developers use the <ph id="ph2">`CloseConnection`</ph> value to make sure that the connection is closed by the runtime when the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> is closed.</source>
          <target state="translated">이러한 값을 함께 결합할 수 있습니다 (프로그래밍 언어를 사용 하 여 <ph id="ph1">`Or`</ph> 연산자); 일반적으로 개발자가 사용 하 여는 <ph id="ph2">`CloseConnection`</ph> 런타임에서 연결이 닫혀 있는지 확인 하는 값 때는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 닫힙니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Developers can also optimize the behavior of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> by specifying the <ph id="ph2">`SingleRow`</ph> value when it is known in advance that the Transact-SQL statement or stored procedure only returns a single row.</source>
          <target state="translated">개발자의 동작을 최적화할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 지정 하 여는 <ph id="ph2">`SingleRow`</ph> Transact SQL 문 또는 저장된 프로시저는 단일 행만을 반환 한다는 미리 알려진 값입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">비동기 명령 실행 되어도 값 페치는 동기적입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This means that calls to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> may block if more data is required and the underlying network's read operation blocks.</source>
          <target state="translated">이 의미에 대 한 호출이 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> 에서 내부 네트워크의 읽기 작업이 중단 하 고 더 많은 데이터가 필요한 경우 중단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Because the callback procedure executes from within a background thread supplied by the Microsoft .NET common language runtime, it is very important that you take a rigorous approach to handling cross-thread interactions from within your applications.</source>
          <target state="translated">콜백 프로시저 Microsoft.NET 공용 언어 런타임에서 제공 되는 백그라운드 스레드에서 실행 되기 때문 것이 매우 중요 한 응용 프로그램 내에서 스레드 간 상호 작용을 처리 하는 강력한 방법을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For example, you must not interact with a form's contents from within your callback procedure--should you have to update the form, you must switch back to the form's thread in order to do your work.</source>
          <target state="translated">예를 들어 작용 해서는 콜백 프로시저 내에서 폼의 내용으로 폼을 업데이트 해야 할 전환 해야 하는 폼의 스레드 작업을 수행 하기 위해.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The example in this topic demonstrates this behavior.</source>
          <target state="translated">이 항목의 예제에서는이 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저에서 예외로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">주 응용 프로그램 아니라 콜백 프로시저에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">콜백 프로시저에서 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">다음 Windows 응용 프로그램에서는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Because the sample executes the command asynchronously, the form remains responsive while awaiting the results.</source>
          <target state="translated">이 샘플 명령은 비동기적으로 실행, 결과 기다리는 동안 폼 응답 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter; doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">이 예제에서는 실행 하는 전달 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체로 <ph id="ph2">`stateObject`</ph> 매개 변수; 이렇게 하면 간단 하 게 검색할 수는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 코드에서 호출할 수 있도록 콜백 프로시저에서 개체는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 메서드에 해당 하는 호출을 초기 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">이 예제에서는 여러 중요 한 기술을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">또한이 예제에서는 사용자가 명령을 여러 번 동시에 실행 못하도록 해야 하 고 어떻게 해야 하며 콜백 프로시저 하기 전에 폼을 닫을 라고 합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">배치는 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 컨트롤 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">사용자 환경에 필요에 따라 연결 문자열을 수정 하는 폼의 클래스에 다음 코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>This example passes the <ph id="ph1">`CommandBehavior.CloseConnection`</ph> value in the <ph id="ph2">`behavior`</ph> parameter, causing the returned <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> to automatically close its connection when it is closed.</source>
          <target state="translated">이 예제에서는 전달는 <ph id="ph1">`CommandBehavior.CloseConnection`</ph> 값에 <ph id="ph2">`behavior`</ph> 매개 변수에 반환 된 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> 를 닫을 때 자동으로 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">명령 텍스트를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이름/값 쌍 "비동기 처리=true"가 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll or wait for results, or both; this value is also needed when invoking <ph id="ph2">&lt;see langword="EndExecuteXmlReader" /&gt;</ph>, which returns a single XML value.</source>
          <target state="translated">결과를 폴링하거나 기다리는 데 사용하거나 또는 두 작업 모두 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>이며, 단일 XML 값을 반환하는 <ph id="ph2">&lt;see langword="EndExecuteXmlReader" /&gt;</ph>를 호출할 때도 이 값이 필요합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 메서드 문을 실행 하는 동안에 동시에 다른 작업이 실행 될 수 있도록 XML로 행을 반환 하는 TRANSACT-SQL 문에 비동기적으로 실행 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>When the statement has completed, developers must call the <ph id="ph1">`EndExecuteXmlReader`</ph> method to finish the operation and retrieve the XML returned by the command.</source>
          <target state="translated">문이 완료 되 면 개발자가 호출 해야 합니다는 <ph id="ph1">`EndExecuteXmlReader`</ph> 명령이 작업을 완료 하 고 XML을 검색 하는 메서드를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">`EndExecuteXmlReader`</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <ph id="ph2">`EndExecuteXmlReader`</ph> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Calling the <ph id="ph1">`EndExecuteXmlReader`</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">호출 된 <ph id="ph1">`EndExecuteXmlReader`</ph> 명령 실행이 완료 되기 전에 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 실행 완료 될 때까지 차단 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 속성 유효한 FOR XML 절이 포함 된 TRANSACT-SQL 문의 일반적으로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>However, <ph id="ph1">`CommandText`</ph> can also specify a statement that returns <ph id="ph2">`ntext`</ph> data that contains valid XML.</source>
          <target state="translated">그러나 <ph id="ph1">`CommandText`</ph> 반환 하는 문을 지정할 수도 <ph id="ph2">`ntext`</ph> 유효한 XML이 포함 된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">이 메서드는 단일 행, 단일 열 결과 집합을 검색할 데도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>In this case, if more than one row is returned, the <ph id="ph1">`EndExecuteXmlReader`</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">이 경우 둘 이상의 행이 반환 되는 <ph id="ph1">`EndExecuteXmlReader`</ph> 연결 합니다. 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 결과의 나머지 부분에서 첫 번째 행 및 패킷 값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The multiple active result set (MARS) feature lets multiple actions use the same connection.</source>
          <target state="translated">다중 활성 결과 집합 (MARS) 기능을 사용 하면 같은 연결을 사용 하 여 여러 동작이 있습니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>If a large command or many parameters are sent, this method may block during writes.</source>
          <target state="translated">큰 명령이 나 많은 매개 변수를 보내는 경우이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Although command execution is asynchronous, value fetching is still synchronous.</source>
          <target state="translated">비동기 명령 실행 되어도 값 페치는 동기적입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Because this overload does not support a callback procedure, developers need to either poll to determine whether the command has completed, using the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method; or wait for the completion of one or more commands using the <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>.</source>
          <target state="translated">콜백 프로시저를 지원 하지 않으면이 오버 로드 때문에 개발자가 어느 설문 조사를 결정 해야 명령이 완료 되었는지 여부를 사용 하 여는 <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 되는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 메서드; 또는 완료를 위해 대기 사용 하 여 하나 이상의 명령의 <ph id="ph4">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 반환 된 속성 <ph id="ph5">&lt;xref:System.IAsyncResult&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server returns any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server 결과 보냅니다 XML 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The following console application starts the process of retrieving XML data asynchronously.</source>
          <target state="translated">다음 콘솔 응용 프로그램에 XML 데이터를 비동기적으로 검색 프로세스를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>While waiting for the results, this simple application sits in a loop, investigating the <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property value.</source>
          <target state="translated">결과 기다리는 동안이 간단한 응용 프로그램 루프 상태를 조사 하는 <ph id="ph1">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Once the process has completed, the code retrieves the XML and displays its contents.</source>
          <target state="translated">프로세스가 완료 되 면는 코드는 XML을 검색 하 고 해당 내용을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">명령 텍스트를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이름/값 쌍 "비동기 처리=true"가 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that is invoked when the command's execution has completed.</source>
          <target state="translated">명령의 실행이 완료되었을 때 호출되는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Pass <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic) to indicate that no callback is required.</source>
          <target state="translated">콜백이 필요하지 않도록 지정하려면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>(Microsoft Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)을 전달합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A user-defined state object that is passed to the callback procedure.</source>
          <target state="translated">콜백 프로시저에 전달된 사용자 정의 상태 개체입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Retrieve this object from within the callback procedure using the <ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IAsyncResult.AsyncState" /&gt;</ph> 속성을 사용하여 콜백 프로시저에서 이 개체를 검색합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object, using a callback procedure.</source>
          <target state="translated">콜백 프로시저를 사용하여 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be used to poll, wait for results, or both; this value is also needed when the <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> is called, which returns the results of the command as XML.</source>
          <target state="translated">결과를 폴링하거나 기다리는 데 사용하거나 두 작업을 모두 수행하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>이며, 명령의 결과를 XML로 반환하는 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph>를 호출할 때도 이 값이 필요합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method starts the process of asynchronously executing a Transact-SQL statement or stored procedure that returns rows as XML, so that other tasks can run concurrently while the statement is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 메서드 비동기적으로 다른 작업에서 문을 실행 하는 동안에 동시에 실행 될 수 있도록 Transact SQL 문 또는 XML로 행을 반환 하는 저장된 프로시저를 실행 하는 과정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>When the statement has completed, developers must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method to finish the operation and retrieve the requested XML data.</source>
          <target state="translated">문이 완료 되 면 개발자가 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 메서드를 요청된 하는 XML 데이터를 검색 하 고 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method returns immediately, but until the code executes the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method call, it must not execute any other calls that start a synchronous or asynchronous execution against the same <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 메서드가 즉시 반환 하지만 해당 코드가 실행 될 때까지 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 메서드 호출에서 해당 실행 해서는 안 같은 동기 또는 비동기 실행을 시작 하는 다른 모든 호출 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> before the command's execution is completed causes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object to block until the execution is finished.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 명령 실행이 완료 되기 전에 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 실행 완료 될 때까지 차단 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a Transact-SQL statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 속성 유효한 FOR XML 절이 포함 된 TRANSACT-SQL 문의 일반적으로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>However, <ph id="ph1">`CommandText`</ph> can also specify a statement that returns data that contains valid XML.</source>
          <target state="translated">그러나 <ph id="ph1">`CommandText`</ph> 유효한 XML이 포함 된 데이터를 반환 하는 문을 지정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">이 메서드는 단일 행, 단일 열 결과 집합을 검색할 데도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">이 경우 둘 이상의 행이 반환 되는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 연결 합니다. 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 결과의 나머지 부분에서 첫 번째 행 및 패킷 값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This method can also be used to retrieve a single-row, single-column result set.</source>
          <target state="translated">이 메서드는 단일 행, 단일 열 결과 집합을 검색할 데도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">이 경우 둘 이상의 행이 반환 되는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 연결 합니다. 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 결과의 나머지 부분에서 첫 번째 행 및 패킷 값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The multiple active result set (MARS) feature lets multiple actions use the same connection.</source>
          <target state="translated">다중 활성 결과 집합 (MARS) 기능을 사용 하면 같은 연결을 사용 하 여 여러 동작이 있습니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`callback`</ph> parameter lets you specify an <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> delegate that is called when the statement has completed.</source>
          <target state="translated"><ph id="ph1">`callback`</ph> 매개 변수를 지정할 수 있습니다는 <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> 문이 완료 되 면 호출 되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method from within this delegate procedure, or from any other location within your application.</source>
          <target state="translated">호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 이 대리자 프로시저 내에서 또는 응용 프로그램 내에서 다른 위치에서 메서드.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In addition, you can pass any object in the <ph id="ph1">`stateObject`</ph> parameter, and your callback procedure can retrieve this information using the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property.</source>
          <target state="translated">개체를 전달할 수는 또한는 <ph id="ph1">`stateObject`</ph> 콜백 프로시저와 매개 변수를 사용 하 여이 정보를 검색할 수는 <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Note that the command text and parameters are sent to the server synchronously.</source>
          <target state="translated">참고는 명령 텍스트 및 매개 변수는 서버에 동기적으로 전송 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>If a large command or many parameters is sent, this method may block during writes.</source>
          <target state="translated">큰 명령이 나 많은 매개 변수 전달 되 면이 메서드는 쓰기 작업 동안 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>After the command is sent, the method returns immediately without waiting for an answer from the server--that is, reads are asynchronous.</source>
          <target state="translated">명령이 전송 되는 메서드는 서버의 응답을 기다리지 않고 즉시 반환 후 즉, 읽기는 비동기적입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>All errors that occur during the execution of the operation are thrown as exceptions in the callback procedure.</source>
          <target state="translated">작업을 실행 하는 동안 발생 하는 모든 오류 콜백 프로시저에서 예외로 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>You must handle the exception in the callback procedure, not in the main application.</source>
          <target state="translated">주 응용 프로그램 아니라 콜백 프로시저에서 예외를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>See the example in this topic for additional information on handling exceptions in the callback procedure.</source>
          <target state="translated">콜백 프로시저에서 예외 처리에 대 한 자세한 내용은이 항목의 예제를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The following Windows application demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method, executing a Transact-SQL statement that includes a delay of a few seconds (emulating a long-running command).</source>
          <target state="translated">다음 Windows 응용 프로그램에서는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 메서드를 사용하여 장기 실행 명령을 에뮬레이션하는 몇 초 간의 지연이 포함된 Transact-SQL 문을 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This example passes the executing <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object as the <ph id="ph2">`stateObject`</ph> parameter--doing so makes it simple to retrieve the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object from within the callback procedure, so that the code can call the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method corresponding to the initial call to <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">이 예제에서는 실행 하는 전달 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체로 <ph id="ph2">`stateObject`</ph> 매개를 쉽게 검색 하는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 코드에서 호출할 수 있도록 콜백 프로시저에서 개체는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 메서드에 해당 하는 호출을 초기 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This example demonstrates many important techniques.</source>
          <target state="translated">이 예제에서는 여러 중요 한 기술을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>This includes calling a method that interacts with the form from a separate thread.</source>
          <target state="translated">여기에 별도 스레드에서 폼과 상호 작용 하는 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>In addition, this example demonstrates how you must block users from executing a command multiple times concurrently, and how you must make sure that the form does not close before the callback procedure is called.</source>
          <target state="translated">또한이 예제에서는 사용자가 명령을 여러 번 동시에 실행 못하도록 해야 하 고 어떻게 해야 하며 콜백 프로시저 하기 전에 폼을 닫을 라고 합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>To set up this example, create a new Windows application.</source>
          <target state="translated">이 예제를 설정하려면 새 Windows 응용 프로그램을 만듭니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Put a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, a <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> control on the form (accepting the default name for each control).</source>
          <target state="translated">배치는 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤은 <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤 및 <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> (각 컨트롤에 대 한 기본 이름을 적용) 폼에서 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Add the following code to the form's class, modifying the connection string as needed for your environment.</source>
          <target state="translated">사용자 환경에 필요에 따라 연결 문자열을 수정 하는 폼의 클래스에 다음 코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>Any error that occurred while executing the command text.</source>
          <target state="translated">명령 텍스트를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The name/value pair "Asynchronous Processing=true" was not included within the connection string defining the connection for this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이름/값 쌍 "비동기 처리=true"가 이 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에 대한 연결을 정의하는 연결 문자열 안에 포함되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>Tries to cancel the execution of a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>의 실행을 취소하려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>If there is nothing to cancel, nothing occurs.</source>
          <target state="translated">취소할 명령이 없으면 아무 동작도 발생하지 않습니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</source>
          <target state="translated">그러나 진행 중인 명령이 있는 경우 취소 동작이 실패하더라도 예외가 생성되지 않습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>In some, rare, cases, if you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> then call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> (implicitily or explicitly) before calling <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, and then call <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, the cancel command will not be sent to SQL Server and the result set can continue to stream after you call <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>.</source>
          <target state="translated">호출 하는 경우 일부 드문 경우에서 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 호출 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader.Close%2A&gt;</ph> (묵시적 또는 명시적으로) 호출 하기 전에 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, 한 다음 호출 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph>, 취소 명령을 SQL Server로 전송 되지 것입니다 및 결과 집합 계속 한 후 스트림 호출 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>To avoid this, make sure that you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> before closing the reader or connection.</source>
          <target state="translated">이 방지 하려면 호출 하 고 있는지 확인 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> 판독기 또는 연결을 닫아야 합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Cancel">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본인 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본인 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting">
          <source>Gets or sets the column encryption setting for this command.</source>
          <target state="translated">이 명령에 대한 열 암호화 설정을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.ColumnEncryptionSetting">
          <source>The column encryption setting for this command.</source>
          <target state="translated">이 명령에 대한 열 암호화 설정입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>Gets or sets the Transact-SQL statement, table name or stored procedure to execute at the data source.</source>
          <target state="translated">데이터 소스에서 실행할 Transact-SQL 문, 테이블 이름 또는 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The Transact-SQL statement or stored procedure to execute.</source>
          <target state="translated">실행할 Transact-SQL 문이나 저장 프로시저입니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The default is an empty string.</source>
          <target state="translated">기본값은 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The user may be required to use escape character syntax if the stored procedure name contains any special characters.</source>
          <target state="translated">사용자는 저장된 프로시저 이름에 특수 문자가 포함 되어 있는 경우 이스케이프 문자 구문을 사용 하는 데 필요한 수 있습니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The command executes this stored procedure when you call one of the <ph id="ph1">`Execute`</ph> methods.</source>
          <target state="translated">명령 중 하나를 호출 하는 경우이 저장된 프로시저가 실행 된 <ph id="ph1">`Execute`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a Transact-SQL statement or a stored procedure called by a command of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">Microsoft.NET Framework Data Provider for SQL Server TRANSACT-SQL 문 또는 저장된 프로시저의 명령에 의해 호출에 매개 변수 전달에 대 한 물음표 (?) 자리 표시자를 지원 하지 않는 <ph id="ph1">`CommandType.Text`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>구성 매개 변수 및 매개 변수 데이터 형식<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandText">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</source>
          <target state="translated">명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The time in seconds to wait for the command to execute.</source>
          <target state="translated">명령이 실행될 때까지 대기하는 시간(초)입니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The default is 30 seconds.</source>
          <target state="translated">기본값은 30초입니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>A value of 0 indicates no limit (an attempt to execute a command will wait indefinitely).</source>
          <target state="translated">값이 0 (명령을 실행 하려고는 무기한 대기) 제한이 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> property will be ignored during asynchronous method calls such as <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> 속성이 비동기 메서드 호출 중에 같은 무시 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> has no effect when the command is executed against a context connection (a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> opened with "context connection=true" in the connection string).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> 명령이 컨텍스트 연결에 대해 실행 될 때는 아무런 영향이 없습니다 (한 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 으로 연 "컨텍스트 연결 = true" 연결 문자열에).</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>This property is the cumulative time-out (for all network packets that are read during the invocation of a method) for all network reads during command execution or processing of the results.</source>
          <target state="translated">이 속성은 명령 실행 또는 결과 처리 하는 동안 모든 네트워크 읽기 (메서드 호출 하는 동안 읽는 모든 네트워크 패킷)에 대 한 누적 시간 제한입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>A time-out can still occur after the first row is returned, and does not include user processing time, only network read time.</source>
          <target state="translated">첫 번째 행이 반환 되 고 사용자 처리 시간은 포함 되지 않습니다 시간 초과가 발생할 수 있습니다, 그리고 네트워크 읽기 시간입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>For example, with a 30 second time out, if <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> requires two network packets, then it has 30 seconds to read both network packets.</source>
          <target state="translated">예를 들어 했는지, 30 초 시간으로 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> 30 초 둘 다 네트워크 패킷을 읽을 수에 2 개의 네트워크 패킷을에서는 필요 합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
          <source>If you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> again, it will have another 30 seconds to read any data that it requires.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> 다시 다른 30 초까지 필요한 모든 데이터를 읽을 갖습니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>Gets or sets a value indicating how the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> property is to be interpreted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> 속성이 해석될 방법을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The default is <ph id="ph1">&lt;see langword="Text" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>When you set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property to <ph id="ph2">`StoredProcedure`</ph>, you should set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property to the name of the stored procedure.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> 속성을 <ph id="ph2">`StoredProcedure`</ph>를 설정 해야는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 속성을 저장된 프로시저의 이름입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The command executes this stored procedure when you call one of the Execute methods.</source>
          <target state="translated">Execute 메서드 중 하나를 호출 하면이 저장된 프로시저를 실행 하는 명령입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called with a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> of <ph id="ph2">&lt;xref:System.Data.CommandType.Text&gt;</ph>.</source>
          <target state="translated">Microsoft.NET Framework Data Provider for SQL Server SQL 문에 매개 변수를 전달 하기 위해 물음표 (?) 자리 표시자를 지원 하지 않거나 사용 하 여 호출 된 저장된 프로시저는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Data.CommandType.Text&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></source>
          <target state="translated">SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>구성 매개 변수 및 매개 변수 데이터 형식<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.CommandType">
          <source>The value was not a valid <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>.</source>
          <target state="translated">값이 유효한 <ph id="ph1">&lt;see cref="T:System.Data.CommandType" /&gt;</ph>이 아닙니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> used by this instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>의 이 인스턴스에서 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The connection to a data source.</source>
          <target state="translated">데이터 소스와의 연결입니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>If the command is enlisted in an existing transaction, and the connection is changed, trying to execute the command will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">명령을 실행 하려고 throw 됩니다 명령을 기존 트랜잭션에 참여 하는 경우 연결이 변경 되는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property is not null and the transaction has already been committed or rolled back, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> is set to null.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> 속성이 null이 아니고 트랜잭션이 이미 커밋 또는 롤백된 경우에는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph>이 null로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Connection">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> property was changed while the command was enlisted in a transaction..</source>
          <target state="translated">명령이 트랜잭션에 참여하는 동안 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> 속성이 변경되었습니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>Creates a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> 개체의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.CreateParameter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A&gt;</ph> method is a strongly-typed version of <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CreateParameter%2A&gt;</ph> 메서드는 강력한 형식의 버전의 <ph id="ph2">&lt;xref:System.Data.IDbCommand.CreateParameter%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>Gets or sets a value indicating whether the command object should be visible in a Windows Form Designer control.</source>
          <target state="translated">명령 개체를 Windows Form 디자이너 컨트롤에서 표시할지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>A value indicating whether the command object should be visible in a control.</source>
          <target state="translated">컨트롤에 명령 개체를 표시할지를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
          <source>The default is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">**</bpt>true<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 호출에서 반환된 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement.</source>
          <target state="translated">Transact-SQL 문의 비동기 실행을 완료합니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The number of rows affected (the same behavior as <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>).</source>
          <target state="translated">영향을 받는 행 수입니다(<ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>와 동일한 동작).</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> to execute a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement, you must call <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 실행 하는 <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 호출 해야 문을 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 작업을 완료 하려면.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">명령을 실행 하는 과정을 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> method.</source>
          <target state="translated">사용자가 명령을 사용 하 여 해당 작업을 완료 있는지 확인할 수는 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 된 인스턴스는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">콜백 프로시저에 대 한 호출에 지정 된 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>,이 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">사용을 보여 주는 예제는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery%2A&gt;</ph> 메서드를 참조 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수는 null(Microsoft Visual Basic의 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>가 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>에 대한 호출 실행을 완료하기 위해 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>를 호출함).</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>The amount of time specified in <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> elapsed and the asynchronous operation specified with <ph id="ph2">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> is not complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph>에 지정된 시간이 경과되었으며 <ph id="ph2">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>로 지정된 비동기 작업이 완료되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>In some situations, <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> can be set to <ph id="ph2">&lt;see langword="IsCompleted" /&gt;</ph> incorrectly.</source>
          <target state="translated">상황에 따라서는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>를 <ph id="ph2">&lt;see langword="IsCompleted" /&gt;</ph>로 잘못 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>If this occurs and <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph> is called, EndExecuteNonQuery could raise a SqlException error if the amount of time specified in <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> elapsed and the asynchronous operation specified with <ph id="ph3">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph> is not complete.</source>
          <target state="translated">이 상황이 발생하고 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)" /&gt;</ph>가 호출되면 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph>에 지정된 시간이 경과되었고 <ph id="ph3">&lt;see cref="Overload:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>로 지정된 비동기 작업이 완료되지 않은 경우 EndExecuteNonQuery로 인해 SqlException 오류가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
          <source>To correct this situation, you should either increase the value of CommandTimeout or reduce the work being done by the asynchronous operation.</source>
          <target state="translated">이 상황을 해결하려면 CommandTimeout의 값을 높이거나 비동기 작업에 의해 수행되는 작업을 줄여야 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 호출에서 반환된 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement, returning the requested <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated">요청된 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 반환하는 Transact-SQL 문의 비동기 실행을 완료합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object that can be used to retrieve the requested rows.</source>
          <target state="translated">요청된 행을 검색하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> TRANSACT-SQL 문을 실행 하려면 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 작업을 완료 하려면.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">명령을 실행 하는 과정을 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> method.</source>
          <target state="translated">사용자가 명령을 사용 하 여 해당 작업을 완료 있는지 확인할 수는 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 된 인스턴스는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">콜백 프로시저에 대 한 호출에 지정 된 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>,이 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">사용을 보여 주는 예제는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteReader%2A&gt;</ph> 메서드를 참조 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수는 null(Microsoft Visual Basic의 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>가 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>에 대한 호출 실행을 완료하기 위해 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteReader(System.IAsyncResult)" /&gt;</ph>를 호출함).</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by the call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 호출에서 반환된 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>Finishes asynchronous execution of a Transact-SQL statement, returning the requested data as XML.</source>
          <target state="translated">요청된 데이터를 XML로 반환하는 Transact-SQL 문의 비동기 실행을 완료합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object that can be used to fetch the resulting XML data.</source>
          <target state="translated">결과 XML 데이터를 페치하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to execute a Transact-SQL statement, you must call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> in order to complete the operation.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> TRANSACT-SQL 문을 실행 하려면 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 작업을 완료 하려면.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>If the process of executing the command has not yet finished, this method blocks until the operation is complete.</source>
          <target state="translated">명령을 실행 하는 과정을 하지 않은 경우 아직 완료 작업이 완료 될 때까지이 메서드 차단 합니다.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>Users can verify that the command has completed its operation by using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> instance returned by the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> method.</source>
          <target state="translated">사용자가 명령을 사용 하 여 해당 작업을 완료 있는지 확인할 수는 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 된 인스턴스는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>If a callback procedure was specified in the call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>, this method must be called.</source>
          <target state="translated">콜백 프로시저에 대 한 호출에 지정 된 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>,이 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source>For examples demonstrating the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> method, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">사용을 보여 주는 예제는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader%2A&gt;</ph> 메서드를 참조 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Microsoft Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수는 null(Microsoft Visual Basic의 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> was called more than once for a single command execution, or the method was mismatched against its execution method (for example, the code called <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph> to complete execution of a call to <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph>가 단일 명령 실행에 대해 두 번 이상 호출되었거나, 실행 메서드에 대해 메서드가 일치하지 않습니다(예: 코드가 <ph id="ph3">&lt;see cref="M:System.Data.SqlClient.SqlCommand.BeginExecuteNonQuery" /&gt;</ph>에 대한 호출 실행을 완료하기 위해 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)" /&gt;</ph>를 호출함).</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>Executes a Transact-SQL statement against the connection and returns the number of rows affected.</source>
          <target state="translated">연결에 대한 Transact-SQL 문을 실행하고 영향을 받는 행의 수를 반환합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The number of rows affected.</source>
          <target state="translated">영향을 받은 행 수입니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> by executing UPDATE, INSERT, or DELETE statements.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> (예를 들어 데이터베이스의 구조를 쿼리 또는 테이블과 같은 데이터베이스 개체 만들기), 카탈로그 작업을 수행 하거나 사용 하지 않고 데이터베이스의 데이터를 변경 하려면는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> UPDATE, INSERT 또는 DELETE를 실행 하 여 문입니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>Although the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> returns no rows, any output parameters or return values mapped to parameters are populated with data.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> 행을 모든 출력 매개 변수가 반환 하지 또는 반환 값 매개 변수에 매핑된 데이터 채워집니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</source>
          <target state="translated">UPDATE, INSERT 및 DELETE 문의 경우, 반환 값은 해당 명령의 영향을 받는 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>When a trigger exists on a table being inserted or updated, the return value includes the number of rows affected by both the insert or update operation and the number of rows affected by the trigger or triggers.</source>
          <target state="translated">삽입 되거나 업데이트 되는 테이블에 트리거가 있으면, 반환 값에 트리거 또는 트리거에 영향을 받는 행의 수와 삽입 또는 업데이트 작업을 모두 영향을 받는 행 수가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For all other types of statements, the return value is -1.</source>
          <target state="translated">다른 형식의 문의 경우에는 반환 값이 -1입니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>If a rollback occurs, the return value is also -1.</source>
          <target state="translated">롤백이 발생 하는 경우 반환 값-1 이기도 합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 를 사용 하 여 빌드한 다음 실행 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The example is passed a string that is a Transact-SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the data source.</source>
          <target state="translated">이 예제는 TRANSACT-SQL 문 (예: 업데이트, 삽입 또는 삭제) 하는 문자열 및 데이터 원본에 연결 하는 데 사용할 문자열을 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">취소 명령입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>, which executes a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement against the connection and returns the number of rows affected.</source>
          <target state="translated">연결에 대해 <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 문을 실행하고 영향을 받는 행의 수를 반환하는 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">예외는 반환된 작업 개체를 통해 보고됩니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고, <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고, <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">명령이 호출 하는 경우이 저장된 프로시저를 실행 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>If a transaction is deadlocked, an exception may not be thrown until <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> is called.</source>
          <target state="translated">트랜잭션이 교착 상태가 될 때까지 예외가 throw 되지 않을 수 있습니다 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">같은 연결을 사용 하 여 여러 작업에 대 한 다중 활성 결과 집합 (MARS) 기능 수 있습니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, 다음 TRANSACT-SQL SELECT 문을 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The current state of the connection is closed.</source>
          <target state="translated">연결의 현재 상태가 닫힘입니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph> requires an open <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>에 열린 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 필요합니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> using one of the <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고, <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값 중 하나를 사용하여 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> property is set to <ph id="ph2">`StoredProcedure`</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property should be set to the name of the stored procedure.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> 속성이 <ph id="ph2">`StoredProcedure`</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 저장된 프로시저의 이름으로 속성을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The command executes this stored procedure when you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>.</source>
          <target state="translated">명령이 호출 하는 경우이 저장된 프로시저를 실행 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> to retrieve large values and binary data.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Data.CommandBehavior.SequentialAccess&gt;</ph> 큰 값 및 이진 데이터를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> might occur and the connection will be closed.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph> 발생할 수 있습니다 및 연결이 닫힙니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">같은 연결을 사용 하 여 여러 작업에 대 한 다중 활성 결과 집합 (MARS) 기능 수 있습니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, 다음 TRANSACT-SQL SELECT 문을 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 하 여 실행 합니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Data.CommandBehavior.CloseConnection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.CommandBehavior&gt;</ph>이 <ph id="ph2">&lt;xref:System.Data.CommandBehavior.CloseConnection&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or stored procedure that is described by this <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명한 <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 문이나 저장 프로시저의 비동기 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlCommand">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 작성하는 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">예외는 반환된 작업 개체를 통해 보고됩니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Options for statement execution and data retrieval.</source>
          <target state="translated">문 실행 및 데이터 검색을 위한 옵션입니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>When is set to <ph id="ph1">&lt;see langword="Default" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> reads the entire row before returning a complete Task.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Default" /&gt;</ph>로 설정하면 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph>는 전체 작업을 반환하기 전에 전체 행을 읽습니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 작성하는 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">예외는 반환된 작업 개체를 통해 보고됩니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">취소 명령입니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 작성하는 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">예외는 반환된 작업 개체를 통해 보고됩니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Options for statement execution and data retrieval.</source>
          <target state="translated">문 실행 및 데이터 검색을 위한 옵션입니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>When is set to <ph id="ph1">&lt;see langword="Default" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph> reads the entire row before returning a complete Task.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Default" /&gt;</ph>로 설정하면 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /&gt;</ph>는 전체 작업을 반환하기 전에 전체 행을 읽습니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">취소 명령입니다.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>, and builds a <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph></source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph4">&lt;see cref="T:System.Data.SqlClient.SqlDataReader" /&gt;</ph>를 작성하는 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">예외는 반환된 작업 개체를 통해 보고됩니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An invalid <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> 값이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Executes the query, and returns the first column of the first row in the result set returned by the query.</source>
          <target state="translated">쿼리를 실행하고 쿼리에서 반환된 결과 집합에서 첫 번째 행의 첫 번째 열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Additional columns or rows are ignored.</source>
          <target state="translated">다른 열이나 행은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The first column of the first row in the result set, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if the result set is empty.</source>
          <target state="translated">결과 집합에서 첫 번째 행의 첫 번째 열이거나, 결과 집합이 비어 있을 경우 null 참조(Visual Basic에서는 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Returns a maximum of 2033 characters.</source>
          <target state="translated">최대 2,033자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> method to retrieve a single value (for example, an aggregate value) from a database.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> 데이터베이스에서 단일 값 (예를 들어 집계 값)를 검색 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>This requires less code than using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> method, and then performing the operations that you need to generate the single value using the data returned by a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">사용 하 여 보다 적은 코드가 필요는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 메서드를 다음에서 반환 된 데이터를 사용 하 여 단일 값을 생성 해야 하는 작업을 수행 하는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> query can be formatted as in the following C# example:</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph> 쿼리 다음 C# 예제와 같이 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 를 사용 하 여 빌드한 다음 실행 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The example is passed a string representing a new value to be inserted into a table, and a string to use to connect to the data source.</source>
          <target state="translated">이 예제는 테이블에 삽입 되는 새 값을 나타내는 문자열 및 데이터 원본에 연결 하는 데 사용할 문자열을 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The function returns the new <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> column value if a new row was inserted, 0 on failure.</source>
          <target state="translated">함수 반환 새 <bpt id="p1">**</bpt>Identity<ept id="p1">**</ept> 새 행이 삽입 되 면 열 값, 그렇지 않으면 0을 합니다.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">취소 명령입니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /&gt;</ph>, which executes the query asynchronously and returns the first column of the first row in the result set returned by the query.</source>
          <target state="translated">쿼리를 비동기적으로 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 반환하는 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalar" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Additional columns or rows are ignored.</source>
          <target state="translated">다른 열이나 행은 무시됩니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">예외는 반환된 작업 개체를 통해 보고됩니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>Sends the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고, <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> property ordinarily specifies a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement with a valid FOR XML clause.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 속성은 일반적으로 지정 된 <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> 유효한 FOR XML 절을 사용 하 여 문을 합니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>However, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> can also specify a statement that returns <ph id="ph2">`ntext`</ph> or <ph id="ph3">`nvarchar`</ph> data that contains valid XML, or the contents of a column defined with the <ph id="ph4">`xml`</ph> data type.</source>
          <target state="translated">그러나 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandText%2A&gt;</ph> 반환 하는 문을 지정할 수도 <ph id="ph2">`ntext`</ph> 또는 <ph id="ph3">`nvarchar`</ph> 유효한 XML 또는 정의 된 열의 내용이 포함 된 데이터는 <ph id="ph4">`xml`</ph> 데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A typical <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> query can be formatted as in the following Microsoft Visual C# example:</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 쿼리는 다음 Microsoft Visual C# 예제와 같이 형식을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>This method can also be used to retrieve a single-row, single-column result set that contains XML data.</source>
          <target state="translated">이 메서드는 XML 데이터가 포함 된 단일 행, 단일 열 결과 집합을 검색할 데도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>In this case, if more than one row is returned, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> method attaches the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to the value on the first row, and discards the rest of the result set.</source>
          <target state="translated">이 경우 둘 이상의 행이 반환 되는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 연결 합니다. 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 결과의 나머지 부분에서 첫 번째 행 및 패킷 값으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The multiple active result set (MARS) feature allows for multiple actions using the same connection.</source>
          <target state="translated">같은 연결을 사용 하 여 여러 작업에 대 한 다중 활성 결과 집합 (MARS) 기능 수 있습니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>If you use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> to access XML data, SQL Server will return any XML results greater than 2,033 characters in length in multiple rows of 2,033 characters each.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteReader%2A&gt;</ph> XML 데이터에 액세스 하려면 SQL Server는 반환 모든 XML 결과 2, 033 자를 넘는 2, 033 자의 여러 행의 길이입니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>To avoid this behavior, use <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> to read FOR XML queries.</source>
          <target state="translated">이 문제를 방지 하려면 사용 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.BeginExecuteXmlReader%2A&gt;</ph> FOR XML 쿼리를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information, see article Q310378, "PRB: XML Data Is Truncated When You Use SqlDataReader," in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">자세한 내용은 참조 Q310378, 문서 "PRB:: XML 데이터는 잘린 때 있습니다 사용할 SqlDataReader"에서 Microsoft 기술 자료에서 <ph id="ph1">http://support.microsoft.com</ph>합니다.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and then executes it using <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 를 사용 하 여 빌드한 다음 실행 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The example is passed a string that is a Transact-SQL FOR XML SELECT statement, and a string to use to connect to the data source.</source>
          <target state="translated">이 예제에서는 TRANSACT-SQL에 대 한 XML SELECT 문 문자열과 데이터 원본에 연결 하는 데 사용할 문자열을 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An exception occurred while executing the command against a locked row.</source>
          <target state="translated">잠긴 행에 대해 명령을 실행하는 동안 예외가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>This exception is not generated when you are using Microsoft .NET Framework version 1.0.</source>
          <target state="translated">Microsoft .NET Framework 버전 1.0을 사용하는 경우에는 이 예외가 생성되지 않습니다.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlCommand">
          <source>Initiates the asynchronous execution of the Transact-SQL statement or stored procedure that is described by this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> and returns results as an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>에서 설명한 Transact-SQL 문이나 저장 프로시저의 비동기 실행을 시작하고 결과를 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체로 반환합니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체를 빌드하는 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">예외는 반환된 작업 개체를 통해 보고됩니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">취소 명령입니다.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>, which sends the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph> to the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph> and builds an <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /&gt;</ph>를 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlCommand.Connection" /&gt;</ph>에 보내고 <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 개체를 빌드하는 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader" /&gt;</ph>의 비동기 버전입니다.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</source>
          <target state="translated">취소 토큰은 명령 제한 시간이 경과하기 전에 작업을 중단하는 요청에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be reported via the returned Task object.</source>
          <target state="translated">예외는 반환된 작업 개체를 통해 보고됩니다.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task)입니다.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">SQL Server에 대 한.NET Framework Data Provider에서 비동기 프로그래밍에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>비동기 프로그래밍<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> or <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.Stream" /&gt;</ph>으로 설정되면 <bpt id="p1">**</bpt>Binary<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>VarBinary<ept id="p2">**</ept>가 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept>, or  <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>로 설정되면 <bpt id="p1">**</bpt>Char<ept id="p1">**</ept>, <bpt id="p2">**</bpt>NChar<ept id="p2">**</ept>, <bpt id="p3">**</bpt>NVarChar<ept id="p3">**</ept>, <bpt id="p4">**</bpt>VarChar<ept id="p4">**</ept> 또는 <bpt id="p5">**</bpt>Xml<ept id="p5">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph> other than <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept> was used when <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph> was set to <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlParameter.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>로 설정된 경우 <bpt id="p1">**</bpt>Xml<ept id="p1">**</ept>이 아닌 <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlParameter.SqlDbType" /&gt;</ph>이 사용되었습니다.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">작업 완료 전에 동일한 인스턴스에 대해 <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlCommand.ExecuteScalarAsync(System.Threading.CancellationToken)" /&gt;</ph>를 두 번 이상 호출</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> closed or dropped during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>이 닫히거나 삭제되었습니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>가 연결 문자열에 지정되어 있습니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>SQL Server returned an error while executing the command text.</source>
          <target state="translated">SQL Server에서 명령 텍스트를 실행하는 동안 오류를 반환했습니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>A timeout occurred during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 시간이 초과되었습니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>An error occurred in a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체에서 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object was closed during a streaming operation.</source>
          <target state="translated">스트리밍 작업 동안 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 개체가 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReaderAsync(System.Threading.CancellationToken)">
          <source>For more information about streaming, see <bpt id="p1">[</bpt>SqlClient Streaming Support<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>.</source>
          <target state="translated">스트리밍에 대한 자세한 내용은 <bpt id="p1">[</bpt>SqlClient 스트리밍 지원<ept id="p1">](~/docs/framework/data/adonet/sqlclient-streaming-support.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>Gets or sets a value that specifies the <ph id="ph1">&lt;see cref="T:System.Data.Sql.SqlNotificationRequest" /&gt;</ph> object bound to this command.</source>
          <target state="translated">이 명령에 바인딩된 <ph id="ph1">&lt;see cref="T:System.Data.Sql.SqlNotificationRequest" /&gt;</ph> 개체를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>When set to null (default), no notification should be requested.</source>
          <target state="translated">null(기본값)로 설정하면 알림을 요청할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Notification">
          <source>You must set the value for this property before the command is executed for it to take effect.</source>
          <target state="translated">적용 되려면에 대 한 명령을 실행 하기 전에이 속성에 대 한 값을 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>Gets or sets a value indicating whether the application should automatically receive query notifications from a common <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDependency" /&gt;</ph> object.</source>
          <target state="translated">응용 프로그램에서 일반적인 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDependency" /&gt;</ph> 개체의 쿼리 알림을 자동으로 받을지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if the application should automatically receive query notifications; otherwise <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>true 이면<ept id="p1">**</ept> 응용 프로그램에서 쿼리 알림을 자동으로 받으면 그렇지 않으면 <bpt id="p2">**</bpt>false<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>The default value is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">기본값은 <bpt id="p1">**</bpt>true<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This feature is used in ASP.NET applications to receive notifications for all commands executed in an ASP page against SQL Server.</source>
          <target state="translated">이 기능은 SQL Server에 대 한 ASP 페이지에서 실행 되는 모든 명령에 대 한 알림을 수신 하도록 ASP.NET 응용 프로그램에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This enables ASP.NET to cache the page until the queries used to render the page would produce a different result.</source>
          <target state="translated">그러면 ASP.NET 페이지를 렌더링 하는 데 사용 하는 쿼리 다른 결과 생성 될 때까지 페이지를 캐시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>Automatic enlistment.</source>
          <target state="translated">자동 인 리스트 먼 트 합니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>This property applies only to versions of SQL Server that support query notifications.</source>
          <target state="translated">이 속성은 쿼리 알림을 지원 하는 SQL Server의 버전에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist">
          <source>For earlier versions, setting this property to <bpt id="p1">**</bpt>true<ept id="p1">**</ept> has no effect on the application.</source>
          <target state="translated">이전 버전에서는이 속성을 설정 <bpt id="p1">**</bpt>true<ept id="p1">**</ept> 응용 프로그램에는 아무 효과가 없습니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameterCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlParameterCollection" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The parameters of the Transact-SQL statement or stored procedure.</source>
          <target state="translated">Transact-SQL 문이나 저장 프로시저의 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The default is an empty collection.</source>
          <target state="translated">기본값은 빈 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The Microsoft .NET Framework Data Provider for SQL Server does not support the question mark (?) placeholder for passing parameters to a SQL Statement or a stored procedure called by a command of <ph id="ph1">`CommandType.Text`</ph>.</source>
          <target state="translated">Microsoft.NET Framework Data Provider for SQL Server SQL 문 또는 저장된 프로시저의 명령에 의해 호출에 매개 변수 전달에 대 한 물음표 (?) 자리 표시자를 지원 하지 않는 <ph id="ph1">`CommandType.Text`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>In this case, named parameters must be used.</source>
          <target state="translated">이 경우 명명 된 매개 변수를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></source>
          <target state="translated">SELECT * FROM Customers WHERE CustomerID = <ph id="ph1">@CustomerID</ph></target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>If the parameters in the collection do not match the requirements of the query to be executed, an error may result.</source>
          <target state="translated">컬렉션의 매개 변수를 실행 하면 쿼리의 요구 사항을 일치 하지 않으면 오류가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring Parameters and Parameter Data Types<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>구성 매개 변수 및 매개 변수 데이터 형식<ept id="p1">](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Parameters">
          <source>The following example demonstrates how to create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and add parameters to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 매개 변수를 추가 하 고는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlParameterCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Creates a prepared version of the command on an instance of SQL Server.</source>
          <target state="translated">SQL Server 인스턴스의 명령에 사용할 버전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> is set to <ph id="ph2">`StoredProcedure`</ph>, the call to <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> should succeed, although it may cause a no-op.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandType%2A&gt;</ph> 로 설정 된 <ph id="ph2">`StoredProcedure`</ph>에 대 한 호출 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> 성공 해야 합니다는 아무 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Before you call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, specify the data type of each parameter in the statement to be prepared.</source>
          <target state="translated">호출 하기 전에 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, 준비 된 문에서에서 각 매개 변수의 데이터 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>For each parameter that has a variable length data type, you must set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property to the maximum size needed.</source>
          <target state="translated">가변 길이 데이터 형식의 각 매개 변수에 대해 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> 속성을 최대 크기로 필요 합니다.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> returns an error if these conditions are not met.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> 이러한 조건이 충족 되지 않는 경우 오류가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If the database context is changed by executing the Transact-SQL <ph id="ph1">`USE &lt;database&gt;`</ph> statement, or by calling the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> method, then <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> must be called a second time.</source>
          <target state="translated">TRANSACT-SQL을 실행 하 여 데이터베이스 컨텍스트를 변경할 경우 <ph id="ph1">`USE &lt;database&gt;`</ph> 문을 호출 하 여는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> 메서드를 다음 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> 를 두 번 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If you call an <ph id="ph1">`Execute`</ph> method after calling <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>, any parameter value that is larger than the value specified by the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">`Execute`</ph> 메서드를 호출한 후 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph>에 지정 된 값 보다 큰 모든 매개 변수 값은 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph> 속성이 자동으로 매개 변수의 원래 지정 된 크기로 잘리고 잘림 오류가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Output parameters (whether prepared or not) must have a user-specified data type.</source>
          <target state="translated">출력 매개 변수 (준비) 여부는 사용자 지정 데이터 형식이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>If you specify a variable length data type, you must also specify the maximum <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>.</source>
          <target state="translated">최대 가변 길이 데이터 형식 지정도 지정 해야 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlParameter.Size%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Prior to Visual Studio 2010, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> threw an exception.</source>
          <target state="translated">Visual Studio 2010 이전의 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> 에서 예외가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>Beginning in Visual Studio 2010, this method does not throw an exception.</source>
          <target state="translated">Visual Studio 2010부터,이 메서드가 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.Prepare">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Prepare%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> property to its default value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /&gt;</ph> 속성을 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
          <source>The default value of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> is 30 seconds.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A&gt;</ph> 30 초입니다.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlCommand.StatementCompleted">
          <source>Occurs when the execution of a Transact-SQL statement completes.</source>
          <target state="translated">Transact-SQL 문의 실행이 완료될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본인 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlCommand.System#ICloneable#Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object that is a copy of this instance.</source>
          <target state="translated">이 인스턴스의 복사본인 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> within which the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> executes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>가 실행되는 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> property if it is already set to a specific value, and the command is in the process of executing.</source>
          <target state="translated">설정할 수 없습니다.는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.Transaction%2A&gt;</ph> 특정 값으로 이미 설정 되어 있으며 명령을 실행 중 경우 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.Transaction">
          <source>If you set the transaction property to a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object that is not connected to the same <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> as the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object, an exception is thrown the next time that you attempt to execute a statement.</source>
          <target state="translated">트랜잭션 속성을 설정 하는 경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> 동일 하 게 연결 되어 있지 않은 개체 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 로 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체 문을 실행 하려고 하면 다음에 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>Gets or sets how command results are applied to the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> when used by the <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> method of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>의 <bpt id="p1">**</bpt>Update<ept id="p1">**</ept> 메서드에 의해 사용될 때 명령 결과가 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>에 적용되는 방법을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>The default <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> value is <bpt id="p1">**</bpt>Both<ept id="p1">**</ept> unless the command is automatically generated (as in the case of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>), in which case the default is <bpt id="p2">**</bpt>None<ept id="p2">**</ept>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Data.UpdateRowSource&gt;</ph> 값은 <bpt id="p1">**</bpt>둘 다<ept id="p1">**</ept> 명령이 자동으로 생성 하지 않는 한 (의 경우로 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>),이 경우 기본값은 <bpt id="p2">**</bpt>없음<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
          <source>For more information about using the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property, see <bpt id="p2">[</bpt>DataAdapter Parameters<ept id="p2">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>.</source>
          <target state="translated">사용 하는 방법에 대 한 자세한 내용은 <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> 속성 참조 <bpt id="p2">[</bpt>DataAdapter 매개 변수<ept id="p2">](~/docs/framework/data/adonet/dataadapter-parameters.md)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>