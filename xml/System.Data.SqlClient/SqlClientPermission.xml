<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlClientPermission.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b7d1314bc7bcb7cb2653361bfb5af05c16189967.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7d1314bc7bcb7cb2653361bfb5af05c16189967</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlClientPermission">
          <source>Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server에서 사용자가 데이터 소스에 액세스하는 데 충분한 보안 수준을 갖도록 보장합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlClientPermission">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt;</ph> property takes precedence over the <ph id="ph2">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt;</ph> 속성 보다 우선는 <ph id="ph2">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlClientPermission">
          <source>Therefore, if you set <ph id="ph1">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> to <ph id="ph2">`false`</ph>, you must also set <ph id="ph3">&lt;xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt;</ph> to <ph id="ph4">`false`</ph> to prevent a user from making a connection using a blank password.</source>
          <target state="translated">따라서 설정 하는 경우 <ph id="ph1">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> 를 <ph id="ph2">`false`</ph>를 설정 해야 <ph id="ph3">&lt;xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A&gt;</ph> 를 <ph id="ph4">`false`</ph> 사용자 빈 암호를 사용 하는 연결 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlClientPermission">
          <source>When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</source>
          <target state="translated">ADO.NET에 대 한 코드 액세스 보안 권한을 사용할 때 올바른 패턴은 가장 제한이 심한 경우 (권한이 없는)부터 시작 하 여 코드가 수행 해야 하는 특정 작업에 필요한 특정 권한을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlClientPermission">
          <source>The opposite pattern, starting with all permissions and then denying a specific permission, is not secure, because there are many ways of expressing the same connection string.</source>
          <target state="translated">여러 가지 방법으로 동일한 연결 문자열을 표현 하는 반대 패턴 인 모든 권한을 부여한 다음 특정 권한을 부여, 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlClientPermission">
          <source>For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</source>
          <target state="translated">예를 들어, 모든 권한을 부여한 다음 연결 문자열 "server=someserver"에 대해 사용할 수 있는 권한을 주지 않아도 "server=someserver.mycompany.com"은 여전히 허용됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlClientPermission">
          <source>By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</source>
          <target state="translated">항상 권한을 전혀 부여하지 않은 상태에서 시작하여 권한 집합에 허점이 생길 위험을 줄이는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlClientPermission">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.PermissionState" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
          <source>Indicates whether a blank password is allowed.</source>
          <target state="translated">빈 암호를 사용할 수 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> enumeration takes precedence over the <ph id="ph2">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> 열거형 우선는 <ph id="ph2">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
          <source>Therefore, if you set <ph id="ph1">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> to <ph id="ph2">`false`</ph>, you must also set <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> to <ph id="ph4">`None`</ph> to prevent a user from making a connection using a blank password.</source>
          <target state="translated">따라서 설정 하는 경우 <ph id="ph1">&lt;xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A&gt;</ph> 를 <ph id="ph2">`false`</ph>를 설정 해야 <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> 를 <ph id="ph4">`None`</ph> 사용자 빈 암호를 사용 하는 연결 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
          <source>For an example demonstrating how to use security demands, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>.</source>
          <target state="translated">보안 요청을 사용 하는 방법을 보여 주는 예제를 참조 하십시오. <bpt id="p1">[</bpt>코드 액세스 보안 및 ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>The connection string.</source>
          <target state="translated">연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>The key restrictions.</source>
          <target state="translated">키 제한입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.KeyRestrictionBehavior" /&gt;</ph> enumerations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.KeyRestrictionBehavior" /&gt;</ph> 열거형 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>Adds a new connection string and a set of restricted keywords to the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> 개체에 새 연결 문자열과 제한된 키워드의 집합을 추가합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>Use this method to configure which connection strings are allowed by a particular permission object.</source>
          <target state="translated">연결 문자열은 특정 사용 권한 개체에서 허용을 구성 하려면이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>For example, use the following code fragment if you want to only allow a specific connection string and nothing else:</source>
          <target state="translated">예를 들어 특정 연결 문자열 및 다른 허용 하려는 경우 다음 코드 조각을 사용 하 여:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>The following example allows connection strings that use any database, but only on the server named MyServer, with any user and password combination and containing no other connection string keywords:</source>
          <target state="translated">다음 예제에서는 모든 데이터베이스를 사용 하지만 다른 없는 연결 문자열 키워드를 포함 하 고 사용자 및 암호 조합을와 MyServer 라는 서버에만 연결 문자열을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>The following example uses the same scenario as above but allows for a failover partner that can be used when connecting to servers configured for mirroring:</source>
          <target state="translated">다음 예에서는 위와 동일한 시나리오를 사용 하 여은 미러링 용으로 구성 하는 서버에 연결할 때 사용할 수 있는 장애 조치 파트너에 대 한:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>When using code access security permissions for ADO.NET, the correct pattern is to start with the most restrictive case (no permissions at all) and then add the specific permissions that are needed for the particular task that the code needs to perform.</source>
          <target state="translated">ADO.NET에 대 한 코드 액세스 보안 권한을 사용할 때 올바른 패턴은 가장 제한이 심한 경우 (권한이 없는)부터 시작 하 여 코드가 수행 해야 하는 특정 작업에 필요한 특정 권한을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>The opposite pattern, starting with all permissions and then trying to deny a specific permission, is not secure, because there are many ways of expressing the same connection string.</source>
          <target state="translated">여러 가지 방법으로 동일한 연결 문자열을 표현 하는 반대 패턴 인 모든 권한을 다음 특정 권한을 거부 하는 동안 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>For example, if you start with all permissions and then attempt to deny the use of the connection string "server=someserver", the string "server=someserver.mycompany.com" would still be allowed.</source>
          <target state="translated">예를 들어, 모든 권한을 부여한 다음 연결 문자열 "server=someserver"에 대해 사용할 수 있는 권한을 주지 않아도 "server=someserver.mycompany.com"은 여전히 허용됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
          <source>By always starting by granting no permissions at all, you reduce the chances that there are holes in the permission set.</source>
          <target state="translated">항상 권한을 전혀 부여하지 않은 상태에서 시작하여 권한 집합에 허점이 생길 위험을 줄이는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.Copy">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph> as an <ph id="ph2">&lt;see cref="T:System.Security.IPermission" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlClientPermission" /&gt;</ph>을 <ph id="ph2">&lt;see cref="T:System.Security.IPermission" /&gt;</ph>으로 반환합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlClientPermission.Copy">
          <source>A copy of the current permission object.</source>
          <target state="translated">현재 권한 개체의 복사본입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>