<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlBulkCopyOptions.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5637ed9a8c3fd442e62be3c243259d8fd9a685484.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">637ed9a8c3fd442e62be3c243259d8fd9a685484</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>Bitwise flag that specifies one or more options to use with an instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopy" /&gt;</ph>의 인스턴스와 함께 사용할 하나 이상의 옵션을 지정하는 비트 플래그입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> enumeration when you construct a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to change how the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> methods for that instance behave.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyOptions&gt;</ph> 열거형을 생성할 때는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 인스턴스 변경 하는 방법을 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> 해당 인스턴스에 대 한 메서드는 동작입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>The following console application demonstrates how to perform a bulk load that copies the value in the identity column of the source table to the corresponding column in the destination table, instead of generating a new value for each row's identity column.</source>
          <target state="translated">다음 콘솔 응용 프로그램에는 대상 테이블의 각 행의 id 열에 대 한 새 값을 생성 하는 대신에 해당 하는 열을 원본 테이블의 id 열에 값을 복사 하는 대량 로드를 수행 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>To see how the option changes the way the bulk load works, run the sample with the <bpt id="p1">**</bpt>dbo.BulkCopyDemoMatchingColumns<ept id="p1">**</ept> table empty.</source>
          <target state="translated">옵션에 대량 로드 작업이 작동 하는 방법을 확인 하 고 <bpt id="p1">**</bpt>dbo입니다. BulkCopyDemoMatchingColumns<ept id="p1">**</ept> 빈 테이블입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>All rows load from the source.</source>
          <target state="translated">모든 행이 소스에서 로드 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>Next, run the sample again without emptying the table.</source>
          <target state="translated">테이블을 지우지 않고 샘플을 다시 실행 다음으로 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>An exception is thrown, and the code writes a message to the console window notifying you that rows were not added because of primary key violations.</source>
          <target state="translated">예외가 발생 하 고 코드를 사용자에 게 알리는 기본 키 위반으로 인해 행이 추가 되지 않은 콘솔 창에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyOptions">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications">
          <source>When specified, <bpt id="p1">**</bpt>AllowEncryptedValueModifications<ept id="p1">**</ept> enables bulk copying of encrypted data between tables or databases, without decrypting the data.</source>
          <target state="translated"><bpt id="p1">**</bpt>AllowEncryptedValueModifications<ept id="p1">**</ept>가 지정되면 암호화된 데이터를 해독하지 않고 테이블 또는 데이터베이스 간에 대량 복사할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications">
          <source>Typically, an application would select data from encrypted columns from one table without decrypting the data (the app would connect to the database with the column encryption setting keyword set to disabled) and then would use this option to bulk insert the data, which is still encrypted.</source>
          <target state="translated">일반적으로 응용 프로그램은 데이터를 해독하지 않고 한 테이블에서 암호화된 열의 데이터를 선택(해당 앱은 사용할 수 없도록 설정된 열 암호화 설정 키워드로 데이터베이스에 연결됨)한 다음 이 옵션을 사용하여 계속 암호화되어 있는 데이터를 대량으로 삽입합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications">
          <source>For more information, see <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>항상 암호화<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.AllowEncryptedValueModifications">
          <source>Use caution when specifying <bpt id="p1">**</bpt>AllowEncryptedValueModifications<ept id="p1">**</ept> as this may lead to corrupting the database because the driver does not check if the data is indeed encrypted, or if it is correctly encrypted using the same encryption type, algorithm and key as the target column.</source>
          <target state="translated"><bpt id="p1">**</bpt>AllowEncryptedValueModifications<ept id="p1">**</ept>를 지정할 때 데이터베이스를 손상시킬 수 있으므로 주의해야 합니다. 드라이버는 데이터가 실제로 암호화되어 있는지 또는 대상 열과 동일한 암호화 형식, 알고리즘 및 키를 사용하여 올바르게 암호화되었는지를 확인하지 않기 때문입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints">
          <source>Check constraints while data is being inserted.</source>
          <target state="translated">데이터를 삽입하는 동안 제약 조건을 확인합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.CheckConstraints">
          <source>By default, constraints are not checked.</source>
          <target state="translated">기본적으로 제약 조건은 확인하지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.Default">
          <source>Use the default values for all options.</source>
          <target state="translated">모든 옵션의 기본값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.FireTriggers">
          <source>When specified, cause the server to fire the insert triggers for the rows being inserted into the database.</source>
          <target state="translated">지정된 경우 서버가 데이터베이스에 삽입될 행의 삽입 트리거를 실행합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity">
          <source>Preserve source identity values.</source>
          <target state="translated">소스 ID 값을 유지합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.KeepIdentity">
          <source>When not specified, identity values are assigned by the destination.</source>
          <target state="translated">지정되지 않은 경우 대상에서 ID 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls">
          <source>Preserve null values in the destination table regardless of the settings for default values.</source>
          <target state="translated">기본값에 대한 설정과 관계없이 대상 테이블에서 Null 값을 유지합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.KeepNulls">
          <source>When not specified, null values are replaced by default values where applicable.</source>
          <target state="translated">지정되지 않은 경우 Null 값은 기본값으로 대체됩니다(해당하는 경우).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.TableLock">
          <source>Obtain a bulk update lock for the duration of the bulk copy operation.</source>
          <target state="translated">대량 복사 작업 기간에 대한 대량 업데이트 잠금을 획득합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.TableLock">
          <source>When not specified, row locks are used.</source>
          <target state="translated">지정하지 않으면 행 잠금이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction">
          <source>When specified, each batch of the bulk-copy operation will occur within a transaction.</source>
          <target state="translated">지정된 경우 트랜잭션 내에서 대량 복사 작업의 각 일괄처리가 수행됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction">
          <source>If you indicate this option and also provide a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> object to the constructor, an <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph> occurs.</source>
          <target state="translated">이 옵션을 지정하고 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlTransaction" /&gt;</ph> 개체를 생성자에게 제공하면 <ph id="ph2">&lt;see cref="T:System.ArgumentException" /&gt;</ph>이 발생합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>