<Type Name="SqlParameter" FullName="System.Data.SqlClient.SqlParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99193b1b09fefa91f3e1d7090852d36cb5c0cd2c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37672044" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <TypeSignature Language="F#" Value="type SqlParameter = class&#xA;    inherit DbParameter&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Data.SqlClient.SqlParameter+SqlParameterConverter, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a parameter to a <see cref="T:System.Data.SqlClient.SqlCommand" /> and optionally its mapping to <see cref="T:System.Data.DataSet" /> columns. This class cannot be inherited. For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수 이름은 대/소문자를 구분하지 않습니다.  
  
> [!NOTE]
>  무명, 라고도 서 수 매개 변수는 SQL Server.NET Framework 데이터 공급자가 지원 되지 않습니다.  
  
 자세한 내용은 추가 샘플 코드와 함께 매개 변수를 사용 하는 방법을 보여주는 대해서 [명령 및 매개 변수](~/docs/framework/data/adonet/commands-and-parameters.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는의 여러 인스턴스를 만듭니다 <xref:System.Data.SqlClient.SqlParameter> 를 통해 합니다 <xref:System.Data.SqlClient.SqlParameterCollection> 컬렉션 내에서 <xref:System.Data.SqlClient.SqlDataAdapter>합니다. 이러한 매개 변수 데이터 원본에서 데이터를 선택 하 고 데이터를 배치 되는 <xref:System.Data.DataSet>합니다. 이 예에서는 가정 하는 <xref:System.Data.DataSet> 및 <xref:System.Data.SqlClient.SqlDataAdapter> 적절 한 스키마, 명령 및 연결을 사용 하 여 이미 만들어져 합니다. 자세한 내용 및 매개 변수를 사용 하 여 추가 예제를 참조 하세요 [검색 및 ADO.NET의 데이터 수정](~/docs/framework/data/adonet/retrieving-and-modifying-data.md) 하 고 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlParameterCollection" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name and the data type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 형식을 적절 하 게 하는 경우 **크기** 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 의 값에서 유추 되는 `dbType` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * obj -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name and a value of the new <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 하는 경우는 <xref:System.Object> 에 `value` 매개 변수를 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 Microsoft.NET Framework 형식에서 유추 됩니다를 <xref:System.Object>.  
  
 이 오버 로드를 사용할 때는 주의 <xref:System.Data.SqlClient.SqlParameter> 정수 매개 변수 값을 지정 하는 생성자입니다. 이 오버 로드 때문에 `value` 형식의 <xref:System.Object>, 정수 계열 값으로 변환 해야 합니다는 <xref:System.Object> 다음 C# 예제에서는 값이 0 인 경우 입력 합니다.  
  
```  
Parameter = new SqlParameter("@pname", (object)0);  
```  
  
 이 변환을 수행 하지 않는 경우 컴파일러는 호출 하려고 하는 `SqlParameter` (`string`, `SqlDbType`) 생성자 오버 로드 합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <param name="size">The length of the parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType" />, and the size.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **크기** 값에서 유추 되는 `dbType` 매개 변수 명시적으로 설정 되지 않은 경우는 `size` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, string sourceColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, sourceColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::String ^ sourceColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * string -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, sourceColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourceColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <param name="size">The length of the parameter.</param>
        <param name="sourceColumn">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType" />, the size, and the source column name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **크기** 값에서 유추 되는 `dbType` 매개 변수 명시적으로 설정 되지 않은 경우는 `size` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, direction, isNullable, precision, scale, sourceColumn, sourceVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <param name="size">The length of the parameter.</param>
        <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
        <param name="isNullable">
          <see langword="true" /> if the value of the field can be null; otherwise <see langword="false" />.</param>
        <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</param>
        <param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</param>
        <param name="sourceColumn">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
        <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection" />, the precision of the parameter, the scale of the parameter, the source column, a <see cref="T:System.Data.DataRowVersion" /> to use, and the value of the parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **크기** 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 값에서 유추 되는 `dbType` 매개 변수에서 명시적으로 설정 되지 않은 경우는 `size` 및 `precision` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object, xmlSchemaCollectionDatabase As String, xmlSchemaCollectionOwningSchema As String, xmlSchemaCollectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value, System::String ^ xmlSchemaCollectionDatabase, System::String ^ xmlSchemaCollectionOwningSchema, System::String ^ xmlSchemaCollectionName);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * System.Data.ParameterDirection * byte * byte * string * System.Data.DataRowVersion * bool * obj * string * string * string -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, direction, precision, scale, sourceColumn, sourceVersion, sourceColumnNullMapping, value, xmlSchemaCollectionDatabase, xmlSchemaCollectionOwningSchema, xmlSchemaCollectionName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="xmlSchemaCollectionDatabase" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionOwningSchema" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <param name="size">The length of the parameter.</param>
        <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
        <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</param>
        <param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</param>
        <param name="sourceColumn">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" /> if the source column is nullable; <see langword="false" /> if it is not.</param>
        <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <param name="xmlSchemaCollectionDatabase">The name of the database where the schema collection for this XML instance is located.</param>
        <param name="xmlSchemaCollectionOwningSchema">The owning relational schema where the schema collection for this XML instance is located.</param>
        <param name="xmlSchemaCollectionName">The name of the schema collection for this parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the type of the parameter, the length of the parameter the direction, the precision, the scale, the name of the source column, one of the <see cref="T:System.Data.DataRowVersion" /> values, a Boolean for source column mapping, the value of the <see langword="SqlParameter" />, the name of the database where the schema collection for this XML instance is located, the owning relational schema where the schema collection for this XML instance is located, and the name of the schema collection for this parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 값에서 유추 되는 `dbType` 매개 변수에서 명시적으로 설정 되지 않은 경우는 `size` 및 `precision` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As SqlCompareOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlCompareOptions CompareInfo { System::Data::SqlTypes::SqlCompareOptions get(); void set(System::Data::SqlTypes::SqlCompareOptions value); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Data.SqlTypes.SqlCompareOptions with get, set" Usage="System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Globalization.CompareInfo" /> object that defines how string comparisons should be performed for this parameter.</summary>
        <value>이 매개 변수에 대한 문자열 비교를 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.SqlClient.SqlParameter.DbType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.</summary>
        <value>
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. 기본값은 <see langword="NVarChar" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 고 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 연결 됩니다. 따라서 설정 합니다 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 변경 합니다 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 을 지 원하는 <xref:System.Data.SqlDbType>합니다.  
  
 지원 되는 데이터 형식의 목록, 참조 적절 한 <xref:System.Data.SqlDbType> 멤버입니다. 자세한 내용은 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.SqlClient.SqlParameter.Direction" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</summary>
        <value>
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다. 기본값은 <see langword="Input" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.ParameterDirection> 출력과 연결 된 실행은 <xref:System.Data.SqlClient.SqlCommand> 값을 반환 하지 않습니다는 <xref:System.Data.SqlClient.SqlParameter> null 값을 포함 합니다.  
  
 `Output`를 `InputOut`, 및 `ReturnValue` 호출에서 반환 하는 매개 변수 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 닫을 때까지 액세스할 수 없습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [명령 및 매개 변수](~/docs/framework/data/adonet/commands-and-parameters.md)  
  
 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)  
  
 [SQL Server 및 ADO.NET](http://msdn.microsoft.com/library/c18b1fb1-2af1-4de7-80a4-95e56fd976cb)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</exception>
      </Docs>
    </Member>
    <Member MemberName="ForceColumnEncryption">
      <MemberSignature Language="C#" Value="public bool ForceColumnEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceColumnEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceColumnEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceColumnEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ForceColumnEncryption : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enforces encryption of a parameter when using [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine). If SQL Server informs the driver that the parameter does not need to be encrypted, the query using the parameter will fail. This property provides additional protection against security attacks that involve a compromised SQL Server providing incorrect encryption metadata to the client, which may lead to data disclosure.</summary>
        <value>
          <see langword="true" /> 매개 변수에 강제 열 암호화; 있으면 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the parameter accepts null values. <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> is not used to validate the parameter’s value and will not prevent sending or receiving a null value when executing a command.</summary>
        <value>null 값이 허용되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Null 값이 사용 하 여 처리 되는 <xref:System.DBNull> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#2)]
 [!code-vb[DataWorks SqlParam.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleId">
      <MemberSignature Language="C#" Value="public int LocaleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberSignature Language="VB.NET" Value="Public Property LocaleId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LocaleId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LocaleId : int with get, set" Usage="System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the locale identifier that determines conventions and language for a particular region.</summary>
        <value>매개 변수와 연결된 로캘 식별자를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 로캘 규칙 및 특정 지리적 지역에 대 한 언어를 식별합니다. 특정 문자열 (문자 집합)를 인코딩하는 데 사용 하는 코드 페이지를 해당 문자열 또는 생성 한 환경에서 사용 하는 로캘을 기반으로 합니다. 이 속성 (입력된 매개 변수)에 대 한 설정 하거나 (출력 매개 변수)에 대 한 서버를 사용 하 여 데이터를 교환할 때 문자열로 연결할 로캘을 가져옵니다. 이 속성은 일반적으로 함께 사용 되는 <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A> 속성입니다.  
  
```  
static void CreateSqlParameterLocaleId(){  
   SqlParameter parameter = new SqlParameter("pName", SqlDbType.VarChar);  
   parameter.LocaleId = 1033;   // English - United States  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.SqlClient.SqlParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the offset to the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />의 오프셋입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Offset` 속성은 클라이언트 쪽 이진 및 문자열 데이터의 청크 사용 합니다. 예를 들어 10MB의 텍스트를 서버에서 열에 삽입 하기 위해 사용자 실행 될 수 있습니다 1MB 청크를 10 개의 매개 변수가 있는 삽입의 값을 이동 하면서 `Offset` 1MB에서 각 반복 합니다.  
  
 `Offset` 이진 형식의 경우 바이트 수 및 문자열의 문자 수를 지정합니다. 문자열의 수는 종결 문자를 포함 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#3](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#3)]
 [!code-vb[DataWorks SqlParam.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> 형태로 지정 @paramname합니다. 설정 해야 합니다 <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> 실행 하기 전에 <xref:System.Data.SqlClient.SqlCommand> 매개 변수를 사용 하는 합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.SqlClient.SqlParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum number of digits used to represent the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수입니다. 기본값은 0입니다. 이것은 데이터 공급자가 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />의 전체 자릿수를 설정한다는 것을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 속성은 사용 된 매개 변수를 <xref:System.Data.SqlDbType> 의 `Decimal`.  
  
 값을 지정할 필요가 없습니다 합니다 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 입력 매개 변수의 속성 매개 변수 값에서 유추할 수 있듯이 합니다. `Precision` 및 `Scale` 는 출력 매개 변수 및 특정 자릿수 및 소수 자릿수를 사용 하 여 null 값을 지정 하는 같은 값을 지정 하지 않고는 매개 변수에 대 한 전체 메타 데이터를 지정 해야 하는 시나리오에 필요 합니다.  
  
> [!NOTE]
>  데이터베이스에 전달 된 데이터를 강제 하려면이 속성의 사용이 지원 되지 않습니다. Round, truncate, 또는 그렇지 않은 경우 데이터베이스에 전달 하기 전에 데이터를 강제 하려면 사용 합니다 <xref:System.Math> 의 일부인 클래스를 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성입니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0에 포함 된 Microsoft.NET Framework 데이터 공급자를 확인 하지 않습니다 합니다 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 나 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값입니다. 이 데이터 소스에 삽입 되는 잘린된 데이터를 발생할 수 있습니다. .NET Framework 버전 1.0 사용 하는 경우의 유효성을 검사 합니다 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 하 고 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값을 설정 하기 전에 값입니다. .NET Framework 버전 1.1 또는 이후 버전을 사용 하면 예외가 발생 하는 경우는 <xref:System.Decimal> 잘못 된 매개 변수 값이 설정 <xref:System.Data.SqlClient.SqlParameter.Precision%2A>합니다. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 초과 하는 값을 <xref:System.Decimal> 매개 변수 크기는 여전히 잘립니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="sqlParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the type associated with this <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 때 매개 변수 값을 포함 하는 코드는 매개 변수의 형식을 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 다시 매개 변수에 전달 된 값에서 형식을 유추할 수 있도록 매개 변수 다시 설정 합니다. 둘 다에 영향을이 메서드를 호출 합니다 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 속성을 <xref:System.Data.SqlClient.SqlParameter>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSqlDbType">
      <MemberSignature Language="C#" Value="public void ResetSqlDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSqlDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSqlDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSqlDbType();" />
      <MemberSignature Language="F#" Value="member this.ResetSqlDbType : unit -&gt; unit" Usage="sqlParameter.ResetSqlDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the type associated with this <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 때 매개 변수 값을 포함 하는 코드는 매개 변수의 형식을 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 다시 매개 변수에 전달 된 값에서 형식을 유추할 수 있도록 매개 변수 다시 설정 합니다. 둘 다에 영향을이 메서드를 호출 합니다 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 속성을 <xref:System.Data.SqlClient.SqlParameter>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.SqlClient.SqlParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 자릿수입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 속성은 사용 된 매개 변수를 <xref:System.Data.SqlDbType> 의 `Decimal`.  
  
> [!WARNING]
>  경우에 데이터가 잘릴 수 있습니다는 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 속성이 명시적으로 지정 되지 않은 및 서버의 데이터 소수 자릿수 0 (기본값)에 맞지 않습니다.  
  
 값을 지정할 필요가 없습니다 합니다 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 입력 매개 변수의 속성 매개 변수 값에서 유추할 수 있듯이 합니다. `Precision` 및 `Scale` 는 출력 매개 변수 및 특정 자릿수 및 소수 자릿수를 사용 하 여 null 값을 지정 하는 같은 값을 지정 하지 않고는 매개 변수에 대 한 전체 메타 데이터를 지정 해야 하는 시나리오에 필요 합니다.  
  
> [!NOTE]
>  데이터베이스에 전달 된 데이터를 강제 하려면이 속성의 사용이 지원 되지 않습니다. Round, truncate, 또는 그렇지 않은 경우 데이터베이스에 전달 하기 전에 데이터를 강제 하려면 사용 합니다 <xref:System.Math> 의 일부인 클래스를 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성입니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0에 포함 된.NET framework 데이터 공급자를 확인 하지 않습니다 합니다 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 나 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값입니다. 이 인해 잘린된 데이터를 데이터 원본 위치에 삽입할 수 있습니다. .NET Framework 버전 1.0 사용 하는 경우의 유효성을 검사 합니다 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 하 고 <xref:System.Data.SqlClient.SqlParameter> 의 <xref:System.Decimal> 매개 변수 값을 설정 하기 전에 값입니다. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 초과 하는 값을 <xref:System.Decimal> 매개 변수 크기는 여전히 잘립니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#4](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#4)]
 [!code-vb[DataWorks SqlParam.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.SqlClient.SqlParameter.Size" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum size, in bytes, of the data within the column.</summary>
        <value>열에 있는 데이터의 최대 크기(바이트)입니다. 기본값은 매개 변수 값에서 유추됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값이이 속성의 영향을 받지 않습니다. 저장된 프로시저의 반환 매개 변수는 항상 고정 크기의 정수입니다.  
  
 가변 길이 유형 (예: nvarchar)를 사용 하 여 출력 매개 변수의 경우 매개 변수의 크기는 출력 매개 변수를 보유 하는 버퍼의 크기를 정의 합니다. 출력 매개 변수를 사용 하 여 지정 된 크기로 잘릴 수 <xref:System.Data.SqlClient.SqlParameter.Size%2A>입니다. 문자 형식의 크기와 지정 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 문자에서 됩니다.  
  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 이진 및 문자열 형식 속성은 사용 합니다. 형식의 매개 변수로 `SqlType.String`, `Size` 길이 유니코드 문자를 의미 합니다. 형식의 매개 변수로 `SqlType.Xml`, `Size` 무시 됩니다.  
  
 문자열이 아닌 데이터 형식 및 ANSI 문자열 데이터에 대 한는 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 속성 바이트 수를 나타냅니다. 유니코드 문자열 데이터는 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 문자의 수를 나타냅니다. 문자열의 수는 종결 문자를 포함 하지 않습니다.  
  
 가변 길이 데이터 형식에 대 한 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 서버로 전송할 데이터의 최대 크기에 설명 합니다. 유니코드 문자열 값에 대 한 예를 들어 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 하나 백 먼저 자로 서버로 전송 되는 데이터의 양을 제한할 수 있습니다.  
  
 경우 명시적으로 크기 집합은 지정 된 매개 변수 값의 실제 크기에서 유추 됩니다.  
  
 매개 변수 값의 소수 부분 크기 보다 크면 값이 크기에 맞게 잘리게 됩니다.  
  
 고정 길이 데이터 형식의 경우 값 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 무시 됩니다. 정보 제공 목적으로 검색할 수 있습니다 하 고 서버에 대 한 매개 변수의 값을 전송 하는 경우 공급자를 사용 하는 바이트의 최대 크기를 반환 합니다.  
  
 스트리밍에 대 한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#5](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#5)]
 [!code-vb[DataWorks SqlParam.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></summary>
        <value>
          <see cref="T:System.Data.DataSet" />으로 매핑된 소스 열의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 인 열에서 검색 되는 빈 문자열이 매개 변수의 값 이외의 값으로 설정 된 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 이름입니다. 하는 경우 <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 로 설정 된 `Input`에서 값을 가져옵니다는 <xref:System.Data.DataSet>합니다. 하는 경우 <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 로 설정 된 `Output`, 데이터 원본에서 값을 가져옵니다. A <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 의 `InputOutput` 모두의 조합입니다.  
  
 사용 하는 방법에 대 한 자세한 합니다 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 속성을 참조 하세요 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md) 및 [Dataadapter 사용 하 여 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#6](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#6)]
 [!code-vb[DataWorks SqlParam.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets or gets a value which indicates whether the source column is nullable. This allows <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> to correctly generate Update statements for nullable columns.</summary>
        <value>원본 열에 null이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 사용 되는 <xref:System.Data.SqlClient.SqlCommandBuilder> null 허용 열을 다룰 때 업데이트 명령이 제대로 생성 합니다. 일반적으로 사용 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 에서 상속 하는 개발자에 게 제한 됩니다 <xref:System.Data.SqlClient.SqlCommandBuilder>합니다.  
  
 <xref:System.Data.Common.DbCommandBuilder> 이 속성을 사용 하 여 원본 열은 null을 허용 하 고이 속성을 설정 하는지 여부를 결정할 `true` 은 null을 허용 하는 경우 및 `false` 없는 경우. 때 <xref:System.Data.SqlClient.SqlCommandBuilder> 는 검사는 Update 문을 생성는 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 각 매개 변수에 대 한 합니다. 속성이 `true`, <xref:System.Data.SqlClient.SqlCommandBuilder> 다음과 같은 WHERE 절을 생성 (이 쿼리 식에서 "FieldName"를 나타내는 필드의 이름):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 하는 경우 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 필드는 false <xref:System.Data.SqlClient.SqlCommandBuilder> 다음 WHERE 절을 생성 합니다.  
  
```  
FieldName = @OriginalFieldName  
```  
  
 또한 @IsNull_FieldName 없으면 null이 고 0 소스 필드를 포함 하는 경우 1을 포함 합니다. 이 메커니즘의 SQL Server 성능 최적화 기능을 허용 하 고 여러 공급자에서 작동 하는 일반적인 코드에 대 한 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></summary>
        <value>
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 기본값은 <see langword="Current" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 사용 된 `SqlDataAdapter.UpdateCommand` 업데이트 매개 변수 값에 대 한 원본 또는 현재 값을 사용 하는지 확인 하는 동안. 이렇게 하면 기본 키를 업데이트할 수 있습니다. 버전에이 속성은 <xref:System.Data.DataRow> 에서 사용 하는 합니다 `DataRow.Item` 속성 또는 중 하나는 `DataRow.GetChildRows` 의 메서드는 <xref:System.Data.DataRow> 개체.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#7](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#7)]
 [!code-vb[DataWorks SqlParam.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDbType">
      <MemberSignature Language="C#" Value="public System.Data.SqlDbType SqlDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlDbType SqlDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDbType As SqlDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlDbType SqlDbType { System::Data::SqlDbType get(); void set(System::Data::SqlDbType value); };" />
      <MemberSignature Language="F#" Value="member this.SqlDbType : System.Data.SqlDbType with get, set" Usage="System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.</summary>
        <value>
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. 기본값은 <see langword="NVarChar" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 고 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 연결 됩니다. 따라서 설정 합니다 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 변경 합니다 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 을 지 원하는 <xref:System.Data.SqlDbType>합니다.  
  
 지원 되는 데이터 형식의 목록, 참조 적절 한 <xref:System.Data.SqlDbType> 멤버입니다. 자세한 내용은 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
 스트리밍에 대 한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlValue">
      <MemberSignature Language="C#" Value="public object SqlValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SqlValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SqlValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlValue : obj with get, set" Usage="System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the parameter as an SQL type.</summary>
        <value>SQL 형식을 사용하는 매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 입력 매개 변수의 값에 바인딩되는 <xref:System.Data.SqlClient.SqlCommand> 서버로 전송 되는 합니다. 출력 및 반환 값 매개 변수 값은 설정 완료 되 면 합니다 <xref:System.Data.SqlClient.SqlCommand> 후는 <xref:System.Data.SqlClient.SqlDataReader> 닫혀 있습니다.  
  
 이 속성을 null 또는 <xref:System.DBNull.Value?displayProperty=nameWithType>합니다. 사용 하 여 <xref:System.DBNull.Value?displayProperty=nameWithType> 매개 변수의 값으로 NULL 값을 보낼 수 있습니다. Null을 사용 하거나 설정 하지 않으면 <xref:System.Data.SqlClient.SqlParameter.SqlValue%2A?displayProperty=nameWithType> 매개 변수에 대해 기본값을 사용 하도록 합니다.  
  
 응용 프로그램 데이터베이스 형식을 지정 하는 경우 공급자가 서버에 데이터를 보내면 해당 형식에 바인딩된 값 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하려고 합니다 <xref:System.IConvertible> 인터페이스입니다. 지정된 된 형식의 값을 사용 하 여 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.  
  
 모두를 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 하 고 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 속성을 설정 하 여 유추할 수 있습니다는 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>합니다.  
  
 합니다 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> 속성을 덮어씁니다 `SqlDataAdapter.UpdateCommand`합니다.  
  
 사용 된 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> 매개 변수 값으로 반환할 공용 언어 런타임 (CLR) 형식 속성입니다.  
  
 스트리밍에 대 한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>A new <see cref="T:System.Object" /> that is a copy of this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.SqlClient.SqlParameter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sqlParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a string that contains the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</summary>
        <returns>A string that contains the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type name for a table-valued parameter.</summary>
        <value>지정된 테이블 반환 매개 변수의 형식 이름입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public string UdtTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property UdtTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UdtTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UdtTypeName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see langword="string" /> that represents a user-defined type as a parameter.</summary>
        <value>
          <see langword="string" /> 데이터베이스의 사용자 정의 형식의 정규화 된 이름을 나타내는입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보여 주는 샘플 <xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>를 참조 하세요 [UDT 데이터 검색](http://msdn.microsoft.com/library/ms131080.aspx)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.SqlClient.SqlParameter.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the parameter.</summary>
        <value>매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 입력 매개 변수의 값에 바인딩되는 <xref:System.Data.SqlClient.SqlCommand> 서버로 전송 되는 합니다. 출력 및 반환 값 매개 변수 값은 설정 완료 되 면 합니다 <xref:System.Data.SqlClient.SqlCommand> 후는 <xref:System.Data.SqlClient.SqlDataReader> 닫혀 있습니다.  
  
 이 속성을 null 또는 <xref:System.DBNull.Value>합니다. 사용 하 여 <xref:System.DBNull.Value> 매개 변수의 값으로 NULL 값을 보낼 수 있습니다. Null을 사용 하거나 설정 하지 않으면 <xref:System.Data.SqlClient.SqlParameter.Value%2A> 매개 변수에 대해 기본값을 사용 하도록 합니다.  
  
 유니코드가 아닌 XML 데이터를 문자열로 전달 되 면 예외가 throw 됩니다.  
  
 응용 프로그램 데이터베이스 형식을 지정 하는 경우 공급자가 서버에 데이터를 보내면 해당 형식에 바인딩된 값 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하려고 합니다 <xref:System.IConvertible> 인터페이스입니다. 지정된 된 형식의 값을 사용 하 여 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.  
  
 모두를 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 고 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 속성 값을 설정 하 여 유추할 수 있습니다.  
  
 합니다 <xref:System.Data.SqlClient.SqlParameter.Value%2A> 속성을 덮어씁니다 `SqlDataAdapter.UpdateCommand`합니다.  
  
 스트리밍에 대 한 자세한 내용은 [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#8](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#8)]
 [!code-vb[DataWorks SqlParam.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionDatabase">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionDatabase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionDatabase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionDatabase : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the database where the schema collection for this XML instance is located.</summary>
        <value>이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 null (`Nothing` Microsoft Visual Basic) 컬렉션은 현재 데이터베이스에 정의 된 경우. 없으면 스키마 컬렉션이 없는 경우 null도 되 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> 및 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> 도 null입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionName">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the schema collection for this XML instance.</summary>
        <value>이 XML 인스턴스의 스키마 컬렉션의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 null (`Nothing` Microsoft Visual Basic) 연결 된 스키마 컬렉션이 없는 경우. 다음 값이 null 이면 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> 고 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> 도 null입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionOwningSchema">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionOwningSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionOwningSchema As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionOwningSchema { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionOwningSchema : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The owning relational schema where the schema collection for this XML instance is located.</summary>
        <value>이 XML 인스턴스에 대한 소유 관계형 스키마입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 null (`Nothing` Microsoft Visual Basic) 컬렉션은 현재 데이터베이스에 정의 된 경우. 없으면 스키마 컬렉션이 없는 경우 null도 되 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> 및 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> 도 null입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>