<Type Name="SqlParameter" FullName="System.Data.SqlClient.SqlParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b77abb964fc22cc3ca4ea5e480a7c854f8d4200f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30392187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Data.SqlClient.SqlParameter+SqlParameterConverter, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6dcf3-101">
        <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 매개 변수를 나타내고 <see cref="T:System.Data.DataSet" /> 열에 대한 매개 변수의 매핑을 선택적으로 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6dcf3-101">Represents a parameter to a <see cref="T:System.Data.SqlClient.SqlCommand" /> and optionally its mapping to <see cref="T:System.Data.DataSet" /> columns.</span>
      </span>
      <span data-ttu-id="6dcf3-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6dcf3-102">This class cannot be inherited.</span>
      </span>
      <span data-ttu-id="6dcf3-103">매개 변수에 대한 자세한 내용은 [매개 변수 및 매개 변수 데이터 형식 구성](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)을 참조하세요.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6dcf3-103">For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-104">매개 변수 이름은 대/소문자를 구분하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-104">Parameter names are not case sensitive.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dcf3-105">서 수 이며 라고도 무명 매개 변수는 SQL Server는.NET Framework Data Provider에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-105">Nameless, also called ordinal, parameters are not supported by the .NET Framework Data Provider for SQL Server.</span></span>  
  
 <span data-ttu-id="6dcf3-106">자세한 정보에 대 한 추가 샘플 코드와 함께 매개 변수를 사용 하는 방법을 보여 주는 참조 [명령 및 매개 변수](~/docs/framework/data/adonet/commands-and-parameters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-106">For more information, along with additional sample code demonstrating how to use parameters, see [Commands and Parameters](~/docs/framework/data/adonet/commands-and-parameters.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-107">다음 예제에서는 여러 인스턴스의 <xref:System.Data.SqlClient.SqlParameter> 통해는 <xref:System.Data.SqlClient.SqlParameterCollection> 내에서 컬렉션의 <xref:System.Data.SqlClient.SqlDataAdapter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-107">The following example creates multiple instances of <xref:System.Data.SqlClient.SqlParameter> through the <xref:System.Data.SqlClient.SqlParameterCollection> collection within the <xref:System.Data.SqlClient.SqlDataAdapter>.</span></span> <span data-ttu-id="6dcf3-108">이러한 매개 변수는 데이터 원본에서 데이터를 선택 하 고 데이터를 지정할 하는 데 사용 되는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-108">These parameters are used to select data from the data source and put the data in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="6dcf3-109">이 예에서는 가정 하는 <xref:System.Data.DataSet> 및 <xref:System.Data.SqlClient.SqlDataAdapter> 적절 한 스키마, 명령 및 연결을 사용 하 여 이미 만들어져 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-109">This example assumes that a <xref:System.Data.DataSet> and a <xref:System.Data.SqlClient.SqlDataAdapter> have already been created by using the appropriate schema, commands, and connection.</span></span> <span data-ttu-id="6dcf3-110">자세한 내용 및 매개 변수를 사용 하는 추가 예제에 대 한 참조 [데이터 검색 및 수정 ado.net에서](~/docs/framework/data/adonet/retrieving-and-modifying-data.md) 및 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-110">For more information and additional examples on using parameters, see [Retrieving and Modifying Data in ADO.NET](~/docs/framework/data/adonet/retrieving-and-modifying-data.md) and [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlParameterCollection" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-111">
            <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-111">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-112">
            <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-112">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6dcf3-113">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-113">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="6dcf3-114">매핑할 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-114">The name of the parameter to map.</span>
          </span>
        </param>
        <param name="dbType">
          <span data-ttu-id="6dcf3-115">
            <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-115">One of the <see cref="T:System.Data.SqlDbType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dcf3-116">매개 변수 이름과 데이터 형식을 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-116">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name and the data type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-117">데이터 형식 및 해당 하는 경우 **크기** 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 의 값에서 유추 되는 `dbType` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-117">The data type and, if appropriate, **Size** and <xref:System.Data.SqlClient.SqlParameter.Precision%2A> are inferred from the value of the `dbType` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-118">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-118">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dcf3-119">
            <paramref name="dbType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-119">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="6dcf3-120">매핑할 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-120">The name of the parameter to map.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6dcf3-121">
            <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-121">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dcf3-122">매개 변수 이름과 새 <see cref="T:System.Data.SqlClient.SqlParameter" />의 값을 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-122">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name and a value of the new <see cref="T:System.Data.SqlClient.SqlParameter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-123">지정 하는 경우는 <xref:System.Object> 에 `value` 매개 변수는 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 Microsoft.NET Framework 형식에서 유추는 <xref:System.Object>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-123">When you specify an <xref:System.Object> in the `value` parameter, the <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> is inferred from the Microsoft .NET Framework type of the <xref:System.Object>.</span></span>  
  
 <span data-ttu-id="6dcf3-124">이 오버 로드를 사용 하는 경우 주의 해야는 <xref:System.Data.SqlClient.SqlParameter> 정수 매개 변수 값을 지정 하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-124">Use caution when you use this overload of the <xref:System.Data.SqlClient.SqlParameter> constructor to specify integer parameter values.</span></span> <span data-ttu-id="6dcf3-125">이 오버로드는 <xref:System.Object> 형식의 `value`를 사용하므로 다음 C# 예제와 같이 값이 0인 경우 정수 계열 값을 <xref:System.Object> 형식으로 변환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-125">Because this overload takes a `value` of type <xref:System.Object>, you must convert the integral value to an <xref:System.Object> type when the value is zero, as the following C# example demonstrates.</span></span>  
  
```  
Parameter = new SqlParameter("@pname", (object)0);  
```  
  
 <span data-ttu-id="6dcf3-126">이 변환을 수행 하지 않으면 컴파일러를 호출 하는 것을 가정은 `SqlParameter` (`string`, `SqlDbType`) 생성자 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-126">If you do not perform this conversion, the compiler assumes that you are trying to call the `SqlParameter` (`string`, `SqlDbType`) constructor overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-127">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-127">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="6dcf3-128">매핑할 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-128">The name of the parameter to map.</span>
          </span>
        </param>
        <param name="dbType">
          <span data-ttu-id="6dcf3-129">
            <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-129">One of the <see cref="T:System.Data.SqlDbType" /> values.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="6dcf3-130">매개 변수의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-130">The length of the parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dcf3-131">매개 변수 이름, <see cref="T:System.Data.SqlDbType" />, 크기를 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-131">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType" />, and the size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-132">**크기** 의 값에서 유추는 `dbType` 명시적으로 설정 하지 않으면 매개 변수는 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-132">The **Size** is inferred from the value of the `dbType` parameter if it is not explicitly set in the `size` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-133">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-133">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dcf3-134">
            <paramref name="dbType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-134">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, string sourceColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, sourceColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::String ^ sourceColumn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourceColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="6dcf3-135">매핑할 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-135">The name of the parameter to map.</span>
          </span>
        </param>
        <param name="dbType">
          <span data-ttu-id="6dcf3-136">
            <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-136">One of the <see cref="T:System.Data.SqlDbType" /> values.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="6dcf3-137">매개 변수의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-137">The length of the parameter.</span>
          </span>
        </param>
        <param name="sourceColumn">
          <span data-ttu-id="6dcf3-138">이 <see cref="T:System.Data.SqlClient.SqlParameter" />가 <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />에 대한 호출에 사용되는 경우 소스 열(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />)의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-138">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dcf3-139">매개 변수 이름, <see cref="T:System.Data.SqlClient.SqlParameter" />, 크기 및 소스 열 이름을 사용하는 <see cref="T:System.Data.SqlDbType" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-139">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType" />, the size, and the source column name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-140">**크기** 의 값에서 유추는 `dbType` 명시적으로 설정 하지 않으면 매개 변수는 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-140">The **Size** is inferred from the value of the `dbType` parameter if it is not explicitly set in the `size` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-141">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-141">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dcf3-142">
            <paramref name="dbType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-142">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="6dcf3-143">매핑할 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-143">The name of the parameter to map.</span>
          </span>
        </param>
        <param name="dbType">
          <span data-ttu-id="6dcf3-144">
            <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-144">One of the <see cref="T:System.Data.SqlDbType" /> values.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="6dcf3-145">매개 변수의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-145">The length of the parameter.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="6dcf3-146">
            <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-146">One of the <see cref="T:System.Data.ParameterDirection" /> values.</span>
          </span>
        </param>
        <param name="isNullable">
          <span data-ttu-id="6dcf3-147">필드 값에 null 값이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-147">
              <see langword="true" /> if the value of the field can be null; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="precision">
          <span data-ttu-id="6dcf3-148">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 왼쪽과 오른쪽의 총 자릿수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-148">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="6dcf3-149">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 총 자릿수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-149">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</span>
          </span>
        </param>
        <param name="sourceColumn">
          <span data-ttu-id="6dcf3-150">이 <see cref="T:System.Data.SqlClient.SqlParameter" />가 <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />에 대한 호출에 사용되는 경우 소스 열(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />)의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-150">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</span>
          </span>
        </param>
        <param name="sourceVersion">
          <span data-ttu-id="6dcf3-151">
            <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-151">One of the <see cref="T:System.Data.DataRowVersion" /> values.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6dcf3-152">
            <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-152">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dcf3-153">매개 변수의 이름, 형식 및 크기와 <see cref="T:System.Data.SqlClient.SqlParameter" />, 매개 변수의 정밀도 및 배율과 소스 열, 사용할 <see cref="T:System.Data.ParameterDirection" />과 매개 변수 값을 사용하는 <see cref="T:System.Data.DataRowVersion" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-153">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection" />, the precision of the parameter, the scale of the parameter, the source column, a <see cref="T:System.Data.DataRowVersion" /> to use, and the value of the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-154">**크기** 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 의 값에서 유추 되는 `dbType` 명시적으로 설정 되지 않은 경우 매개 변수는 `size` 및 `precision` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-154">The **Size** and <xref:System.Data.SqlClient.SqlParameter.Precision%2A> are inferred from the value of the `dbType` parameter if they are not explicitly set in the `size` and `precision` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-155">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-155">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dcf3-156">
            <paramref name="dbType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-156">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object, xmlSchemaCollectionDatabase As String, xmlSchemaCollectionOwningSchema As String, xmlSchemaCollectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value, System::String ^ xmlSchemaCollectionDatabase, System::String ^ xmlSchemaCollectionOwningSchema, System::String ^ xmlSchemaCollectionName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="xmlSchemaCollectionDatabase" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionOwningSchema" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">
          <span data-ttu-id="6dcf3-157">매핑할 매개 변수의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-157">The name of the parameter to map.</span>
          </span>
        </param>
        <param name="dbType">
          <span data-ttu-id="6dcf3-158">
            <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-158">One of the <see cref="T:System.Data.SqlDbType" /> values.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="6dcf3-159">매개 변수의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-159">The length of the parameter.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="6dcf3-160">
            <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-160">One of the <see cref="T:System.Data.ParameterDirection" /> values.</span>
          </span>
        </param>
        <param name="precision">
          <span data-ttu-id="6dcf3-161">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 왼쪽과 오른쪽의 총 자릿수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-161">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</span>
          </span>
        </param>
        <param name="scale">
          <span data-ttu-id="6dcf3-162">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 총 자릿수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-162">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</span>
          </span>
        </param>
        <param name="sourceColumn">
          <span data-ttu-id="6dcf3-163">이 <see cref="T:System.Data.SqlClient.SqlParameter" />가 <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />에 대한 호출에 사용되는 경우 소스 열(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />)의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-163">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</span>
          </span>
        </param>
        <param name="sourceVersion">
          <span data-ttu-id="6dcf3-164">
            <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-164">One of the <see cref="T:System.Data.DataRowVersion" /> values.</span>
          </span>
        </param>
        <param name="sourceColumnNullMapping">
          <span data-ttu-id="6dcf3-165">원본 열에 null이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-165">
              <see langword="true" /> if the source column is nullable; <see langword="false" /> if it is not.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6dcf3-166">
            <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-166">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</span>
          </span>
        </param>
        <param name="xmlSchemaCollectionDatabase">
          <span data-ttu-id="6dcf3-167">이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-167">The name of the database where the schema collection for this XML instance is located.</span>
          </span>
        </param>
        <param name="xmlSchemaCollectionOwningSchema">
          <span data-ttu-id="6dcf3-168">이 XML 인스턴스의 스키마 컬렉션이 있는 소유 관계형 스키마입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-168">The owning relational schema where the schema collection for this XML instance is located.</span>
          </span>
        </param>
        <param name="xmlSchemaCollectionName">
          <span data-ttu-id="6dcf3-169">이 매개 변수에 대한 스키마 컬렉션의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-169">The name of the schema collection for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dcf3-170">
            <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다. 이 클래스 인스턴스는 매개 변수 이름, 매개 변수 형식, 매개 변수 길이, 매개 변수 방향, 전체 자릿수, 소수 자릿수, 소스 열의 이름, <see cref="T:System.Data.DataRowVersion" /> 값 중 하나, 소스 열 매핑에 대한 부울, <see langword="SqlParameter" /> 값, 이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름, 이 XML 인스턴스의 스키마 컬렉션이 있는 소유하는 관계형 스키마, 이 매개 변수에 대한 스키마 컬렉션의 이름을 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-170">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the type of the parameter, the length of the parameter the direction, the precision, the scale, the name of the source column, one of the <see cref="T:System.Data.DataRowVersion" /> values, a Boolean for source column mapping, the value of the <see langword="SqlParameter" />, the name of the database where the schema collection for this XML instance is located, the owning relational schema where the schema collection for this XML instance is located, and the name of the schema collection for this parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-171"><xref:System.Data.SqlClient.SqlParameter.Size%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 의 값에서 유추 되는 `dbType` 명시적으로 설정 되지 않은 경우 매개 변수는 `size` 및 `precision` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-171">The <xref:System.Data.SqlClient.SqlParameter.Size%2A> and <xref:System.Data.SqlClient.SqlParameter.Precision%2A> are inferred from the value of the `dbType` parameter if they are not explicitly set in the `size` and `precision` parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As SqlCompareOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlCompareOptions CompareInfo { System::Data::SqlTypes::SqlCompareOptions get(); void set(System::Data::SqlTypes::SqlCompareOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-172">이 매개 변수에 대해 문자열 비교를 수행하는 방법을 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-172">Gets or sets the <see cref="T:System.Globalization.CompareInfo" /> object that defines how string comparisons should be performed for this parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-173">이 매개 변수에 대한 문자열 비교를 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-173">A <see cref="T:System.Globalization.CompareInfo" /> object that defines string comparison for this parameter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-174">매개 변수의 <see cref="T:System.Data.SqlDbType" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-174">Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-175">
            <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-175">One of the <see cref="T:System.Data.SqlDbType" /> values.</span>
          </span>
          <span data-ttu-id="6dcf3-176">기본값은 <see langword="NVarChar" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-176">The default is <see langword="NVarChar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-177"><xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-177">The <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> and <xref:System.Data.SqlClient.SqlParameter.DbType%2A> are linked.</span></span> <span data-ttu-id="6dcf3-178">설정의 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 변경은 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 을 지 원하는 <xref:System.Data.SqlDbType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-178">Therefore, setting the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> changes the <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> to a supporting <xref:System.Data.SqlDbType>.</span></span>  
  
 <span data-ttu-id="6dcf3-179">지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.SqlDbType> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-179">For a list of the supported data types, see the appropriate <xref:System.Data.SqlDbType> member.</span></span> <span data-ttu-id="6dcf3-180">자세한 내용은 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-180">For more information, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-181">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-181">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-182">매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저 반환 값 매개 변수인지 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-182">Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-183">
            <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-183">One of the <see cref="T:System.Data.ParameterDirection" /> values.</span>
          </span>
          <span data-ttu-id="6dcf3-184">기본값은 <see langword="Input" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-184">The default is <see langword="Input" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-185">경우는 <xref:System.Data.ParameterDirection> 출력과 연결 된 실행은 <xref:System.Data.SqlClient.SqlCommand> 는 값을 반환 하지 않습니다는 <xref:System.Data.SqlClient.SqlParameter> null 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-185">If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.SqlClient.SqlCommand> does not return a value, the <xref:System.Data.SqlClient.SqlParameter> contains a null value.</span></span>  
  
 <span data-ttu-id="6dcf3-186">`Output``InputOut`, 및 `ReturnValue` 매개 변수를 호출 하 여 반환 된 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 닫을 때까지 액세스할 수 없습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-186">`Output`, `InputOut`, and `ReturnValue` parameters returned by calling <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> cannot be accessed until you close the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-187">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-187">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [<span data-ttu-id="6dcf3-188">명령 및 매개 변수</span><span class="sxs-lookup"><span data-stu-id="6dcf3-188">Commands and Parameters</span></span>](~/docs/framework/data/adonet/commands-and-parameters.md)  
  
 [<span data-ttu-id="6dcf3-189">DataAdapter 매개 변수</span><span class="sxs-lookup"><span data-stu-id="6dcf3-189">DataAdapter Parameters</span></span>](~/docs/framework/data/adonet/dataadapter-parameters.md)  
  
 [<span data-ttu-id="6dcf3-190">SQL Server 및 ADO.NET</span><span class="sxs-lookup"><span data-stu-id="6dcf3-190">SQL Server and ADO.NET</span></span>](http://msdn.microsoft.com/library/c18b1fb1-2af1-4de7-80a4-95e56fd976cb)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dcf3-191">속성에 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중 하나를 설정하지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-191">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ForceColumnEncryption">
      <MemberSignature Language="C#" Value="public bool ForceColumnEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceColumnEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceColumnEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceColumnEncryption { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-192">[Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine)를 사용할 경우 매개 변수의 암호화를 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-192">Enforces encryption of a parameter when using [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine).</span>
          </span>
          <span data-ttu-id="6dcf3-193">SQL Server가 매개 변수를 암호화할 필요가 없음을 드라이버에 알릴 경우 이 매개 변수를 사용하는 쿼리는 실패합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-193">If SQL Server informs the driver that the parameter does not need to be encrypted, the query using the parameter will fail.</span>
          </span>
          <span data-ttu-id="6dcf3-194">이 속성은 손상된 SQL Server가 클라이언트에 잘못된 암호화 메타데이터를 제공하여 데이터가 공개되도록 하는 보안 공격에 대해 추가적인 보호를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-194">This property provides additional protection against security attacks that involve a compromised SQL Server providing incorrect encryption metadata to the client, which may lead to data disclosure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-195">
            <see langword="true" /> 매개 변수에 강제 열 암호화; 있으면 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-195">
              <see langword="true" /> if the parameter has a force column encryption; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-196">매개 변수에 null 값이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-196">Gets or sets a value that indicates whether the parameter accepts null values.</span>
          </span>
          <span data-ttu-id="6dcf3-197">
            <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" />은 매개 변수 값의 유효성을 검사하는 데 사용되지 않으며 명령 실행 시 null 값을 주고받지 못하게 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-197">
              <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> is not used to validate the parameter’s value and will not prevent sending or receiving a null value when executing a command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-198">null 값이 허용되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-198">
              <see langword="true" /> if null values are accepted; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6dcf3-199">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-199">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-200">Null 값을 사용 하 여 처리 하는 <xref:System.DBNull> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-200">Null values are handled using the <xref:System.DBNull> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-201">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-201">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[DataWorks SqlParam.Properties#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#2)]
 [!code-vb[DataWorks SqlParam.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleId">
      <MemberSignature Language="C#" Value="public int LocaleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberSignature Language="VB.NET" Value="Public Property LocaleId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LocaleId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-202">특정 지역에 대한 규칙 및 언어를 결정하는 로캘 식별자를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-202">Gets or sets the locale identifier that determines conventions and language for a particular region.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-203">매개 변수와 연결된 로캘 식별자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-203">Returns the locale identifier associated with the parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-204">로캘 규칙과 특정 지리적 지역에 대 한 언어를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-204">The locale identifies conventions and language for a particular geographical region.</span></span> <span data-ttu-id="6dcf3-205">특정 문자열 (문자 집합)를 인코딩하는 데 사용 되는 코드 페이지 해당 문자열이 또는 생성 한 환경에서 사용 되는 로캘을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-205">The codepage used to encode a specific string (the character set) is based on the locale used by that string or the environment that produced it.</span></span> <span data-ttu-id="6dcf3-206">이 속성 (예: 입력된 매개 변수)를 설정 하거나 가져옵니다 (출력 매개 변수)은 로컬 서버를 사용 하 여 데이터를 교환할 때 문자열에 연결 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-206">This property sets (for input parameters) or gets (for output parameters) the locale to be attached to a string when exchanging data with the server.</span></span> <span data-ttu-id="6dcf3-207">이 속성은 일반적으로 함께 사용 되는 <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-207">This property is typically used together with the <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A> property.</span></span>  
  
```  
static void CreateSqlParameterLocaleId(){  
   SqlParameter parameter = new SqlParameter("pName", SqlDbType.VarChar);  
   parameter.LocaleId = 1033;   // English - United States  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-208">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성의 오프셋을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-208">Gets or sets the offset to the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-209">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />의 오프셋입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-209">The offset to the <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</span>
          </span>
          <span data-ttu-id="6dcf3-210">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-210">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-211">`Offset` 속성은 클라이언트 쪽 이진 및 문자열 데이터의 청크를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-211">The `Offset` property is used for client-side chunking of binary and string data.</span></span> <span data-ttu-id="6dcf3-212">예를 들어 10MB의 텍스트는 서버에 있는 열에 삽입 하기 위해 사용자 실행 될 수 있습니다 1MB 청크를 10 개의 매개 변수가 있는 삽입의 값을 이동 하면서 `Offset` 1MB에서 각 반복에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-212">For example, in order to insert 10MB of text into a column on a server, a user might execute 10 parameterized inserts of 1MB chunks, shifting the value of `Offset` on each iteration by 1MB.</span></span>  
  
 <span data-ttu-id="6dcf3-213">`Offset` 문자열의 문자 수와 이진 형식에 대 한 바이트 수를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-213">`Offset` specifies the number of bytes for binary types, and the number of characters for strings.</span></span> <span data-ttu-id="6dcf3-214">문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-214">The count for strings does not include the terminating character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-215">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-215">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[DataWorks SqlParam.Properties#3](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#3)]
 [!code-vb[DataWorks SqlParam.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-216">
            <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-216">Gets or sets the name of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-217">
            <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-217">The name of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</span>
          </span>
          <span data-ttu-id="6dcf3-218">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-218">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-219"><xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> 형태로 지정 @paramname합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-219">The <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> is specified in the form @paramname.</span></span> <span data-ttu-id="6dcf3-220">설정 해야 <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> 실행 하기 전에 <xref:System.Data.SqlClient.SqlCommand> 매개 변수를 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-220">You must set <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> before executing a <xref:System.Data.SqlClient.SqlCommand> that relies on parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-221">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-221">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-222">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-222">Gets or sets the maximum number of digits used to represent the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-223">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-223">The maximum number of digits used to represent the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</span>
          </span>
          <span data-ttu-id="6dcf3-224">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-224">The default value is 0.</span>
          </span>
          <span data-ttu-id="6dcf3-225">이것은 데이터 공급자가 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />의 전체 자릿수를 설정한다는 것을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-225">This indicates that the data provider sets the precision for <see cref="P:System.Data.SqlClient.SqlParameter.Value" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-226"><xref:System.Data.SqlClient.SqlParameter.Precision%2A> 속성은 매개 변수가 사용 되는 <xref:System.Data.SqlDbType> 의 `Decimal`합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-226">The <xref:System.Data.SqlClient.SqlParameter.Precision%2A> property is used by parameters that have a <xref:System.Data.SqlDbType> of `Decimal`.</span></span>  
  
 <span data-ttu-id="6dcf3-227">에 대 한 값을 지정할 필요가 없습니다는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 입력된 매개 변수에 대 한 속성으로 매개 변수 값에서 유추할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-227">You do not need to specify values for the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter.Scale%2A> properties for input parameters, as they can be inferred from the parameter value.</span></span> <span data-ttu-id="6dcf3-228">`Precision` 및 `Scale` 출력 매개 변수에 대 한 및 특정 정밀도와 배율을 null 값을 지정 하는 등의 값을 나타내지 않고는 매개 변수에 대 한 전체 메타 데이터를 지정 하려면 필요한 시나리오에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-228">`Precision` and `Scale` are required for output parameters and for scenarios where you need to specify complete metadata for a parameter without indicating a value, such as specifying a null value with a specific precision and scale.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dcf3-229">데이터베이스에 전달 되는 데이터를 강제 하려면이 속성의 사용이 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-229">Use of this property to coerce data passed to the database is not supported.</span></span> <span data-ttu-id="6dcf3-230">반올림 하거나 그렇지 않으면 데이터베이스에 전달 하기 전에 데이터를 강제를 사용 하 여는 <xref:System.Math> 의 일부인 클래스는 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-230">To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dcf3-231">.NET Framework 버전 1.0에 포함 되어 있는 Microsoft.NET Framework 데이터 공급자를 확인 하지 않습니다는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 또는 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-231">Microsoft .NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> or <xref:System.Data.SqlClient.SqlParameter.Scale%2A> of <xref:System.Decimal> parameter values.</span></span> <span data-ttu-id="6dcf3-232">이 인해 데이터 소스에 삽입 되는 데이터가 잘릴된 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-232">This can cause truncated data being inserted at the data source.</span></span> <span data-ttu-id="6dcf3-233">.NET Framework 버전 1.0 사용 하는 경우 유효성 검사는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값을 설정 하기 전에 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-233">If you are using .NET Framework version 1.0, validate the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter.Scale%2A> of <xref:System.Decimal> values before setting the parameter value.</span></span> <span data-ttu-id="6dcf3-234">.NET Framework 버전 1.1 또는 이후 버전을 사용 하면 예외가 발생 하는 경우는 <xref:System.Decimal> 잘못 된 매개 변수 값이 설정 <xref:System.Data.SqlClient.SqlParameter.Precision%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-234">When you use .NET Framework version 1.1 or a later version, an exception is thrown if a <xref:System.Decimal> parameter value is set with an invalid <xref:System.Data.SqlClient.SqlParameter.Precision%2A>.</span></span> <span data-ttu-id="6dcf3-235"><xref:System.Data.SqlClient.SqlParameter.Scale%2A> 초과 하는 값은 <xref:System.Decimal> 매개 변수 크기는 여전히 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-235"><xref:System.Data.SqlClient.SqlParameter.Scale%2A> values that exceed the <xref:System.Decimal> parameter scale are still truncated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-236">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-236">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-237">이 <see cref="T:System.Data.SqlClient.SqlParameter" />와 관련된 형식을 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-237">Resets the type associated with this <see cref="T:System.Data.SqlClient.SqlParameter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-238">명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-238">When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value.</span></span> <span data-ttu-id="6dcf3-239">이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-239">Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter.</span></span> <span data-ttu-id="6dcf3-240">둘 다이 메서드를 호출 하면는 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 속성은 <xref:System.Data.SqlClient.SqlParameter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-240">Calling this method affects both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties of the <xref:System.Data.SqlClient.SqlParameter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSqlDbType">
      <MemberSignature Language="C#" Value="public void ResetSqlDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSqlDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSqlDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSqlDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-241">이 <see cref="T:System.Data.SqlClient.SqlParameter" />와 관련된 형식을 다시 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-241">Resets the type associated with this <see cref="T:System.Data.SqlClient.SqlParameter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-242">명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-242">When executing a command that includes parameter values, code can either set the type of a parameter explicitly, or the parameter can infer its type from its value.</span></span> <span data-ttu-id="6dcf3-243">이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-243">Calling this method resets the parameter so that it can again infer its type from the value passed in the parameter.</span></span> <span data-ttu-id="6dcf3-244">둘 다이 메서드를 호출 하면는 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 속성은 <xref:System.Data.SqlClient.SqlParameter>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-244">Calling this method affects both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties of the <xref:System.Data.SqlClient.SqlParameter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-245">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 자릿수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-245">Gets or sets the number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-246">
            <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 자릿수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-246">The number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</span>
          </span>
          <span data-ttu-id="6dcf3-247">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-247">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-248"><xref:System.Data.SqlClient.SqlParameter.Scale%2A> 속성은 매개 변수가 사용 되는 <xref:System.Data.SqlDbType> 의 `Decimal`합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-248">The <xref:System.Data.SqlClient.SqlParameter.Scale%2A> property is used by parameters that have a <xref:System.Data.SqlDbType> of `Decimal`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="6dcf3-249">경우에 데이터가 잘릴 수 있습니다는 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 속성이 명시적으로 지정 되지 않은 및 서버의 데이터는 소수 자릿수 0 (기본값)에 맞지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-249">Data may be truncated if the <xref:System.Data.SqlClient.SqlParameter.Scale%2A> property is not explicitly specified and the data on the server does not fit in scale 0 (the default).</span></span>  
  
 <span data-ttu-id="6dcf3-250">에 대 한 값을 지정할 필요가 없습니다는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 입력된 매개 변수에 대 한 속성으로 매개 변수 값에서 유추할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-250">You do not need to specify values for the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter.Scale%2A> properties for input parameters, as they can be inferred from the parameter value.</span></span> <span data-ttu-id="6dcf3-251">`Precision` 및 `Scale` 출력 매개 변수에 대 한 및 특정 정밀도와 배율을 null 값을 지정 하는 등의 값을 나타내지 않고는 매개 변수에 대 한 전체 메타 데이터를 지정 하려면 필요한 시나리오에 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-251">`Precision` and `Scale` are required for output parameters and for scenarios where you need to specify complete metadata for a parameter without indicating a value, such as specifying a null value with a specific precision and scale.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dcf3-252">데이터베이스에 전달 되는 데이터를 강제 하려면이 속성의 사용이 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-252">Use of this property to coerce data passed to the database is not supported.</span></span> <span data-ttu-id="6dcf3-253">반올림 하거나 그렇지 않으면 데이터베이스에 전달 하기 전에 데이터를 강제를 사용 하 여는 <xref:System.Math> 의 일부인 클래스는 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-253">To round, truncate, or otherwise coerce data before passing it to the database, use the <xref:System.Math> class that is part of the `System` namespace prior to assigning a value to the parameter's `Value` property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6dcf3-254">.NET Framework 버전 1.0에 포함 된.NET framework 데이터 공급자를 확인 하지 않습니다는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 또는 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-254">.NET Framework data providers that are included with the .NET Framework version 1.0 do not verify the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> or <xref:System.Data.SqlClient.SqlParameter.Scale%2A> of <xref:System.Decimal> parameter values.</span></span> <span data-ttu-id="6dcf3-255">이 인해 잘린된 데이터를 데이터 소스에서 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-255">This can cause truncated data to be inserted at the data source.</span></span> <span data-ttu-id="6dcf3-256">.NET Framework 버전 1.0 사용 하는 경우 유효성 검사는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter> 의 <xref:System.Decimal> 매개 변수 값을 설정 하기 전에 값입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-256">If you are using .NET Framework version 1.0, validate the <xref:System.Data.SqlClient.SqlParameter.Precision%2A> and <xref:System.Data.SqlClient.SqlParameter> of <xref:System.Decimal> values before setting the parameter value.</span></span> <span data-ttu-id="6dcf3-257"><xref:System.Data.SqlClient.SqlParameter.Scale%2A> 초과 하는 값은 <xref:System.Decimal> 매개 변수 크기는 여전히 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-257"><xref:System.Data.SqlClient.SqlParameter.Scale%2A> values that exceed the <xref:System.Decimal> parameter scale are still truncated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-258">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-258">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[DataWorks SqlParam.Properties#4](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#4)]
 [!code-vb[DataWorks SqlParam.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-259">열에 있는 데이터의 최대 크기(바이트)를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-259">Gets or sets the maximum size, in bytes, of the data within the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-260">열에 있는 데이터의 최대 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-260">The maximum size, in bytes, of the data within the column.</span>
          </span>
          <span data-ttu-id="6dcf3-261">기본값은 매개 변수 값에서 유추됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-261">The default value is inferred from the parameter value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-262">반환 값이이 속성의 영향을 받지 않습니다. 저장된 프로시저에서 반환 매개 변수는 항상 고정 크기의 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-262">Return values are not affected by this property; return parameters from stored procedures are always fixed-size integers.</span></span>  
  
 <span data-ttu-id="6dcf3-263">가변 길이 유형 (예: nvarchar)와 출력 매개 변수의 경우 매개 변수의 크기는 출력 매개 변수를 보유 하는 버퍼의 크기를 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-263">For output parameters with a variable length type (nvarchar, for example), the size of the parameter defines the size of the buffer holding the output parameter.</span></span> <span data-ttu-id="6dcf3-264">출력 매개 변수 (으)로 지정 된 크기 수 <xref:System.Data.SqlClient.SqlParameter.Size%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-264">The output parameter can be truncated to a size specified with <xref:System.Data.SqlClient.SqlParameter.Size%2A>.</span></span> <span data-ttu-id="6dcf3-265">로 지정 된 크기는 문자 형식에 대 한 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 는 문자로 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-265">For character types, the size specified with <xref:System.Data.SqlClient.SqlParameter.Size%2A> is in characters.</span></span>  
  
 <span data-ttu-id="6dcf3-266"><xref:System.Data.SqlClient.SqlParameter.Size%2A> 속성 이진 및 문자열 형식에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-266">The <xref:System.Data.SqlClient.SqlParameter.Size%2A> property is used for binary and string types.</span></span> <span data-ttu-id="6dcf3-267">형식의 매개 변수로 `SqlType.String`, `Size` 길이 유니코드 문자를 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-267">For parameters of type `SqlType.String`, `Size` means length in Unicode characters.</span></span> <span data-ttu-id="6dcf3-268">형식의 매개 변수로 `SqlType.Xml`, `Size` 는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-268">For parameters of type `SqlType.Xml`, `Size` is ignored.</span></span>  
  
 <span data-ttu-id="6dcf3-269">문자열이 아닌 데이터 형식 및 ANSI 문자열 데이터에 대 한는 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 속성 바이트 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-269">For nonstring data types and ANSI string data, the <xref:System.Data.SqlClient.SqlParameter.Size%2A> property refers to the number of bytes.</span></span> <span data-ttu-id="6dcf3-270">유니코드 문자열 데이터에 대 한 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 문자의 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-270">For Unicode string data, <xref:System.Data.SqlClient.SqlParameter.Size%2A> refers to the number of characters.</span></span> <span data-ttu-id="6dcf3-271">문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-271">The count for strings does not include the terminating character.</span></span>  
  
 <span data-ttu-id="6dcf3-272">가변 길이 데이터 형식에 대 한 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 서버에 전송할 데이터의 최대 양에 대해 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-272">For variable-length data types, <xref:System.Data.SqlClient.SqlParameter.Size%2A> describes the maximum amount of data to transmit to the server.</span></span> <span data-ttu-id="6dcf3-273">유니코드 문자열 값에 대 한 예를 들어 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 하나 백 먼저 자로 서버에 전송 되는 데이터의 양을 제한 하기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-273">For example, for a Unicode string value, <xref:System.Data.SqlClient.SqlParameter.Size%2A> could be used to limit the amount of data sent to the server to the first one hundred characters.</span></span>  
  
 <span data-ttu-id="6dcf3-274">명시적으로 하는 경우 집합 크기 지정 된 매개 변수 값의 실제 크기에서 유추 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-274">If not explicitly set, the size is inferred from the actual size of the specified parameter value.</span></span>  
  
 <span data-ttu-id="6dcf3-275">매개 변수 값의 소수 부분이 크기 보다 큰 경우 값은 크기에 맞게 잘릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-275">If the fractional part of the parameter value is greater than the size, then the value will be truncated to match the size.</span></span>  
  
 <span data-ttu-id="6dcf3-276">에 대 한 고정 길이 데이터 형식, 값 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-276">For fixed length data types, the value of <xref:System.Data.SqlClient.SqlParameter.Size%2A> is ignored.</span></span> <span data-ttu-id="6dcf3-277">정보 제공 목적으로 검색할 수 있습니다 하 고 공급자 서버에 매개 변수 값을 전송할 때 사용 하는 바이트의 최대 크기를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-277">It can be retrieved for informational purposes, and returns the maximum amount of bytes the provider uses when transmitting the value of the parameter to the server.</span></span>  
  
 <span data-ttu-id="6dcf3-278">스트리밍에 대 한 정보를 참조 하십시오. [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-278">For information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-279">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-279">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[DataWorks SqlParam.Properties#5](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#5)]
 [!code-vb[DataWorks SqlParam.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-280">
            <see cref="T:System.Data.DataSet" />으로 매핑되고 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />를 로드하거나 반환하는 데 사용되는 소스 열의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-280">Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-281">
            <see cref="T:System.Data.DataSet" />으로 매핑된 소스 열의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-281">The name of the source column mapped to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="6dcf3-282">기본값은 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-282">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-283">때 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 인 열에서 검색 되는 빈 문자열이 매개 변수의 값 이외의 값으로 설정 되어는 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-283">When <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> is set to anything other than an empty string, the value of the parameter is retrieved from the column with the <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> name.</span></span> <span data-ttu-id="6dcf3-284">경우 <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 로 설정 된 `Input`에서 값을 가져옵니다는 <xref:System.Data.DataSet>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-284">If <xref:System.Data.SqlClient.SqlParameter.Direction%2A> is set to `Input`, the value is taken from the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="6dcf3-285">경우 <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 로 설정 된 `Output`, 데이터 원본에서 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-285">If <xref:System.Data.SqlClient.SqlParameter.Direction%2A> is set to `Output`, the value is taken from the data source.</span></span> <span data-ttu-id="6dcf3-286">A <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 의 `InputOutput` 둘의 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-286">A <xref:System.Data.SqlClient.SqlParameter.Direction%2A> of `InputOutput` is a combination of both.</span></span>  
  
 <span data-ttu-id="6dcf3-287">사용 하는 방법에 대 한 자세한 내용은 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 속성 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md) 및 [Dataadapter로 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-287">For more information about how to use the <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> property, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md) and [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-288">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-288">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[DataWorks SqlParam.Properties#6](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#6)]
 [!code-vb[DataWorks SqlParam.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-289">소스 열에 null이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-289">Sets or gets a value which indicates whether the source column is nullable.</span>
          </span>
          <span data-ttu-id="6dcf3-290">이를 통해 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" />에서 null 허용 열에 대한 Update 문을 올바르게 생성할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-290">This allows <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> to correctly generate Update statements for nullable columns.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-291">원본 열에 null이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-291">
              <see langword="true" /> if the source column is nullable; <see langword="false" /> if it is not.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-292"><xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 사용 되는 <xref:System.Data.SqlClient.SqlCommandBuilder> null 허용 열을 다룰 때 제대로 업데이트 명령을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-292"><xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> is used by the <xref:System.Data.SqlClient.SqlCommandBuilder> to correctly generate update commands when dealing with nullable columns.</span></span> <span data-ttu-id="6dcf3-293">일반적으로 사용의 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 으로 제한 됩니다 <xref:System.Data.SqlClient.SqlCommandBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-293">Generally, use of <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> is limited to developers inheriting from <xref:System.Data.SqlClient.SqlCommandBuilder>.</span></span>  
  
 <span data-ttu-id="6dcf3-294"><xref:System.Data.Common.DbCommandBuilder> 원본 열이 null을 허용 하 고이 속성을 설정 하는지 여부를 확인 하려면이 속성을 사용 하 여 `true` 은 null을 허용 하는 경우 및 `false` 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-294"><xref:System.Data.Common.DbCommandBuilder> uses this property to determine whether the source column is nullable, and sets this property to `true` if it is nullable, and `false` if it is not.</span></span> <span data-ttu-id="6dcf3-295">때 <xref:System.Data.SqlClient.SqlCommandBuilder> 가 검사 하는 Update 문을 생성는 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 각 매개 변수에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-295">When <xref:System.Data.SqlClient.SqlCommandBuilder> is generating its Update statement, it examines the <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> for each parameter.</span></span> <span data-ttu-id="6dcf3-296">속성이 `true`, <xref:System.Data.SqlClient.SqlCommandBuilder> 다음과 같은 WHERE 절을 생성 (이 쿼리 식은 "FieldName" 나타냅니다 필드의 이름):</span><span class="sxs-lookup"><span data-stu-id="6dcf3-296">If the property is `true`, <xref:System.Data.SqlClient.SqlCommandBuilder> generates a WHERE clauses like the following (in this query expression, "FieldName" represents the name of the field):</span></span>  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 <span data-ttu-id="6dcf3-297">경우 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> false 인 경우이 필드는에 대 한 <xref:System.Data.SqlClient.SqlCommandBuilder> 다음 WHERE 절을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-297">If <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> for the field is false, <xref:System.Data.SqlClient.SqlCommandBuilder> generates the following WHERE clause:</span></span>  
  
```  
FieldName = @OriginalFieldName  
```  
  
 <span data-ttu-id="6dcf3-298">또한 @IsNull_FieldName 원본 필드 및 포함 된 경우 null, 0 그렇지 않은 경우 1을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-298">In addition, @IsNull_FieldName contains 1 if the source field contains null, and 0 if it does not.</span></span> <span data-ttu-id="6dcf3-299">이 메커니즘의 SQL Server 성능 최적화 기능을 허용 하 고 여러 공급자 들 간에 작동 하는 일반적인 코드에 대 한 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-299">This mechanism allows for a performance optimization in SQL Server, and provides for common code that works across multiple providers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-300">
            <see cref="T:System.Data.DataRowVersion" />를 로드할 때 사용할 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-300">Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-301">
            <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-301">One of the <see cref="T:System.Data.DataRowVersion" /> values.</span>
          </span>
          <span data-ttu-id="6dcf3-302">기본값은 <see langword="Current" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-302">The default is <see langword="Current" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-303">이 속성은 사용 된 `SqlDataAdapter.UpdateCommand` 업데이트 매개 변수 값에 대 한 원본 또는 현재 값을 사용 하는지 확인 하는 동안 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-303">This property is used by the `SqlDataAdapter.UpdateCommand` during an update to determine whether the original or current value is used for a parameter value.</span></span> <span data-ttu-id="6dcf3-304">이렇게 하면 기본 키를 업데이트할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-304">This lets primary keys be updated.</span></span> <span data-ttu-id="6dcf3-305">이 속성의 버전에는 <xref:System.Data.DataRow> 에서 사용 하는 `DataRow.Item` 속성 또는 중 하나는 `DataRow.GetChildRows` 의 메서드는 <xref:System.Data.DataRow> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-305">This property is set to the version of the <xref:System.Data.DataRow> used by the `DataRow.Item` property, or one of the `DataRow.GetChildRows` methods of the <xref:System.Data.DataRow> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-306">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-306">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[DataWorks SqlParam.Properties#7](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#7)]
 [!code-vb[DataWorks SqlParam.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDbType">
      <MemberSignature Language="C#" Value="public System.Data.SqlDbType SqlDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlDbType SqlDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDbType As SqlDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlDbType SqlDbType { System::Data::SqlDbType get(); void set(System::Data::SqlDbType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-307">매개 변수의 <see cref="T:System.Data.SqlDbType" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-307">Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-308">
            <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-308">One of the <see cref="T:System.Data.SqlDbType" /> values.</span>
          </span>
          <span data-ttu-id="6dcf3-309">기본값은 <see langword="NVarChar" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-309">The default is <see langword="NVarChar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-310"><xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-310">The <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> and <xref:System.Data.SqlClient.SqlParameter.DbType%2A> are linked.</span></span> <span data-ttu-id="6dcf3-311">설정의 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 변경은 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 을 지 원하는 <xref:System.Data.SqlDbType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-311">Therefore, setting the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> changes the <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> to a supporting <xref:System.Data.SqlDbType>.</span></span>  
  
 <span data-ttu-id="6dcf3-312">지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.SqlDbType> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-312">For a list of the supported data types, see the appropriate <xref:System.Data.SqlDbType> member.</span></span> <span data-ttu-id="6dcf3-313">자세한 내용은 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-313">For more information, see [DataAdapter Parameters](~/docs/framework/data/adonet/dataadapter-parameters.md).</span></span>  
  
 <span data-ttu-id="6dcf3-314">스트리밍에 대 한 정보를 참조 하십시오. [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-314">For information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlValue">
      <MemberSignature Language="C#" Value="public object SqlValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SqlValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SqlValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-315">매개 변수의 값을 SQL 형식으로 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-315">Gets or sets the value of the parameter as an SQL type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-316">SQL 형식을 사용하는 매개 변수의 값인 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-316">An <see cref="T:System.Object" /> that is the value of the parameter, using SQL types.</span>
          </span>
          <span data-ttu-id="6dcf3-317">기본값은 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-317">The default value is null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-318">에 바인딩된 값에 대 한 입력된 매개 변수는 <xref:System.Data.SqlClient.SqlCommand> 서버로 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-318">For input parameters, the value is bound to the <xref:System.Data.SqlClient.SqlCommand> that is sent to the server.</span></span> <span data-ttu-id="6dcf3-319">완료에는 값이 설정 출력 및 반환 값 매개 변수는 <xref:System.Data.SqlClient.SqlCommand> 후는 <xref:System.Data.SqlClient.SqlDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-319">For output and return value parameters, the value is set on completion of the <xref:System.Data.SqlClient.SqlCommand> and after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 <span data-ttu-id="6dcf3-320">이 속성을 null 또는 <xref:System.DBNull.Value?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-320">This property can be set to null or <xref:System.DBNull.Value?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6dcf3-321">사용 하 여 <xref:System.DBNull.Value?displayProperty=nameWithType> 매개 변수의 값으로 NULL 값을 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-321">Use <xref:System.DBNull.Value?displayProperty=nameWithType> to send a NULL value as the value of the parameter.</span></span> <span data-ttu-id="6dcf3-322">Null을 사용 하거나 설정 하지 않은 <xref:System.Data.SqlClient.SqlParameter.SqlValue%2A?displayProperty=nameWithType> 매개 변수에 대해 기본값을 사용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-322">Use null or do not set <xref:System.Data.SqlClient.SqlParameter.SqlValue%2A?displayProperty=nameWithType> to use the default value for the parameter.</span></span>  
  
 <span data-ttu-id="6dcf3-323">응용 프로그램 데이터베이스 형식을 지정 하는 경우 바인딩된 값 공급자가 서버에 데이터를 보낼 때 해당 형식으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-323">If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server.</span></span> <span data-ttu-id="6dcf3-324">공급자가 지 원하는 경우 모든 유형의 값을 변환 하는 <xref:System.IConvertible> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-324">The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6dcf3-325">지정된 된 형식의 값과 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-325">Conversion errors may result if the specified type is not compatible with the value.</span></span>  
  
 <span data-ttu-id="6dcf3-326">둘 다는 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 속성을 설정 하 여 유추할 수는 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-326">Both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties can be inferred by setting the <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6dcf3-327"><xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> 속성을 덮어씁니다 `SqlDataAdapter.UpdateCommand`합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-327">The <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> property is overwritten by `SqlDataAdapter.UpdateCommand`.</span></span>  
  
 <span data-ttu-id="6dcf3-328">사용 하 여는 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> 런타임 (CLR) 형식으로 공용 언어 매개 변수 값을 반환 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-328">Use the <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> property to return parameter values as common language runtime (CLR) types.</span></span>  
  
 <span data-ttu-id="6dcf3-329">스트리밍에 대 한 정보를 참조 하십시오. [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-329">For information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-330">이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-330">For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dcf3-331">이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-331">A new <see cref="T:System.Object" /> that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-332">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="6dcf3-332">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6dcf3-333"><xref:System.Data.SqlClient.SqlParameter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-333">It can be used only when the <xref:System.Data.SqlClient.SqlParameter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-334">
            <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />이 포함된 문자열을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-334">Gets a string that contains the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dcf3-335">
            <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />이 포함된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-335">A string that contains the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-336">테이블 반환 매개 변수의 형식 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-336">Gets or sets the type name for a table-valued parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-337">지정된 테이블 반환 매개 변수의 형식 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-337">The type name of the specified table-valued parameter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public string UdtTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property UdtTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UdtTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-338">사용자 정의 형식을 매개 변수로 나타내는 <see langword="string" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-338">Gets or sets a <see langword="string" /> that represents a user-defined type as a parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-339">데이터베이스에서 사용자 정의 형식의 정규화된 이름을 나타내는 <see langword="string" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-339">A <see langword="string" /> that represents the fully qualified name of a user-defined type in the database.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-340">보여 주는 샘플 <xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>, 참조 [UDT 데이터 검색](http://msdn.microsoft.com/library/ms131080.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-340">For a sample demonstrating <xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>, see [Retrieving UDT Data](http://msdn.microsoft.com/library/ms131080.aspx).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-341">매개 변수의 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-341">Gets or sets the value of the parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-342">매개 변수의 값인 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-342">An <see cref="T:System.Object" /> that is the value of the parameter.</span>
          </span>
          <span data-ttu-id="6dcf3-343">기본값은 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-343">The default value is null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-344">에 바인딩된 값에 대 한 입력된 매개 변수는 <xref:System.Data.SqlClient.SqlCommand> 서버로 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-344">For input parameters, the value is bound to the <xref:System.Data.SqlClient.SqlCommand> that is sent to the server.</span></span> <span data-ttu-id="6dcf3-345">완료에는 값이 설정 출력 및 반환 값 매개 변수는 <xref:System.Data.SqlClient.SqlCommand> 후는 <xref:System.Data.SqlClient.SqlDataReader> 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-345">For output and return value parameters, the value is set on completion of the <xref:System.Data.SqlClient.SqlCommand> and after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 <span data-ttu-id="6dcf3-346">이 속성을 null 또는 <xref:System.DBNull.Value>합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-346">This property can be set to null or <xref:System.DBNull.Value>.</span></span> <span data-ttu-id="6dcf3-347">사용 하 여 <xref:System.DBNull.Value> 매개 변수의 값으로 NULL 값을 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-347">Use <xref:System.DBNull.Value> to send a NULL value as the value of the parameter.</span></span> <span data-ttu-id="6dcf3-348">Null을 사용 하거나 설정 하지 않은 <xref:System.Data.SqlClient.SqlParameter.Value%2A> 매개 변수에 대해 기본값을 사용 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-348">Use null or do not set <xref:System.Data.SqlClient.SqlParameter.Value%2A> to use the default value for the parameter.</span></span>  
  
 <span data-ttu-id="6dcf3-349">유니코드가 아닌 XML 데이터를 문자열로 전달 되 면 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-349">An exception is thrown if non-Unicode XML data is passed as a string.</span></span>  
  
 <span data-ttu-id="6dcf3-350">응용 프로그램 데이터베이스 형식을 지정 하는 경우 바인딩된 값 공급자가 서버에 데이터를 보낼 때 해당 형식으로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-350">If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server.</span></span> <span data-ttu-id="6dcf3-351">공급자가 지 원하는 경우 모든 유형의 값을 변환 하는 <xref:System.IConvertible> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-351">The provider tries to convert any type of value if it supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="6dcf3-352">지정된 된 형식의 값과 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-352">Conversion errors may result if the specified type is not compatible with the value.</span></span>  
  
 <span data-ttu-id="6dcf3-353">둘 다는 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 속성 값을 설정 하 여 유추할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-353">Both the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> and <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> properties can be inferred by setting the Value.</span></span>  
  
 <span data-ttu-id="6dcf3-354"><xref:System.Data.SqlClient.SqlParameter.Value%2A> 속성을 덮어씁니다 `SqlDataAdapter.UpdateCommand`합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-354">The <xref:System.Data.SqlClient.SqlParameter.Value%2A> property is overwritten by `SqlDataAdapter.UpdateCommand`.</span></span>  
  
 <span data-ttu-id="6dcf3-355">스트리밍에 대 한 정보를 참조 하십시오. [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-355">For information about streaming, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dcf3-356">다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-356">The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.</span></span>  
  
 [!code-csharp[DataWorks SqlParam.Properties#8](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#8)]
 [!code-vb[DataWorks SqlParam.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionDatabase">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionDatabase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionDatabase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-357">이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-357">Gets the name of the database where the schema collection for this XML instance is located.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-358">이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-358">The name of the database where the schema collection for this XML instance is located.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-359">이 값은 null (`Nothing` Microsoft Visual Basic) 컬렉션은 현재 데이터베이스에 정의 된 경우.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-359">This value is null (`Nothing` in Microsoft Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="6dcf3-360">없으면 스키마 컬렉션이 없는 경우 null도 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> 및 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> 도 null입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-360">It is also null if there is no schema collection, in which case <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> are also null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionName">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-361">이 XML 인스턴스의 스키마 컬렉션의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-361">Gets the name of the schema collection for this XML instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-362">이 XML 인스턴스의 스키마 컬렉션의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-362">The name of the schema collection for this XML instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-363">이 값은 null (`Nothing` Microsoft Visual Basic) 연결 된 스키마 컬렉션이 있는 경우.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-363">This value is null (`Nothing` in Microsoft Visual Basic) if there is no associated schema collection.</span></span> <span data-ttu-id="6dcf3-364">다음 값이 null 이면 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> 및 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> 도 null입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-364">If the value is null, then <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> are also null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionOwningSchema">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionOwningSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionOwningSchema As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionOwningSchema { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dcf3-365">이 XML 인스턴스의 스키마 컬렉션이 있는 소유 관계형 스키마입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-365">The owning relational schema where the schema collection for this XML instance is located.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dcf3-366">이 XML 인스턴스에 대한 소유 관계형 스키마입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dcf3-366">The owning relational schema for this XML instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dcf3-367">이 값은 null (`Nothing` Microsoft Visual Basic) 컬렉션은 현재 데이터베이스에 정의 된 경우.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-367">This value is null (`Nothing` in Microsoft Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="6dcf3-368">없으면 스키마 컬렉션이 없는 경우 null도 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> 및 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> 도 null입니다.</span><span class="sxs-lookup"><span data-stu-id="6dcf3-368">It is also null if there is no schema collection, in which case <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> and <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> are also null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>