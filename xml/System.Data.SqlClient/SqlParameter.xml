<Type Name="SqlParameter" FullName="System.Data.SqlClient.SqlParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b77abb964fc22cc3ca4ea5e480a7c854f8d4200f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30392187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Data.SqlClient.SqlParameter+SqlParameterConverter, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Data.SqlClient.SqlCommand" />에 대한 매개 변수를 나타내고 <see cref="T:System.Data.DataSet" /> 열에 대한 매개 변수의 매핑을 선택적으로 나타냅니다. 이 클래스는 상속될 수 없습니다. 매개 변수에 대한 자세한 내용은 [매개 변수 및 매개 변수 데이터 형식 구성](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)을 참조하세요.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 매개 변수 이름은 대/소문자를 구분하지 않습니다.  
  
> [!NOTE]
>  서 수 이며 라고도 무명 매개 변수는 SQL Server는.NET Framework Data Provider에서 지원 되지 않습니다.  
  
 자세한 정보에 대 한 추가 샘플 코드와 함께 매개 변수를 사용 하는 방법을 보여 주는 참조 [명령 및 매개 변수](~/docs/framework/data/adonet/commands-and-parameters.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 여러 인스턴스의 <xref:System.Data.SqlClient.SqlParameter> 통해는 <xref:System.Data.SqlClient.SqlParameterCollection> 내에서 컬렉션의 <xref:System.Data.SqlClient.SqlDataAdapter>합니다. 이러한 매개 변수는 데이터 원본에서 데이터를 선택 하 고 데이터를 지정할 하는 데 사용 되는 <xref:System.Data.DataSet>합니다. 이 예에서는 가정 하는 <xref:System.Data.DataSet> 및 <xref:System.Data.SqlClient.SqlDataAdapter> 적절 한 스키마, 명령 및 연결을 사용 하 여 이미 만들어져 있습니다. 자세한 내용 및 매개 변수를 사용 하는 추가 예제에 대 한 참조 [데이터 검색 및 수정 ado.net에서](~/docs/framework/data/adonet/retrieving-and-modifying-data.md) 및 [구성 매개 변수 및 매개 변수 데이터 형식](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)합니다.  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlParameterCollection" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
      </Parameters>
      <Docs>
        <param name="parameterName">매핑할 매개 변수의 이름입니다.</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</param>
        <summary>매개 변수 이름과 데이터 형식을 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 형식 및 해당 하는 경우 **크기** 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 의 값에서 유추 되는 `dbType` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">매핑할 매개 변수의 이름입니다.</param>
        <param name="value">
          <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다.</param>
        <summary>매개 변수 이름과 새 <see cref="T:System.Data.SqlClient.SqlParameter" />의 값을 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 지정 하는 경우는 <xref:System.Object> 에 `value` 매개 변수는 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 Microsoft.NET Framework 형식에서 유추는 <xref:System.Object>합니다.  
  
 이 오버 로드를 사용 하는 경우 주의 해야는 <xref:System.Data.SqlClient.SqlParameter> 정수 매개 변수 값을 지정 하는 생성자입니다. 이 오버로드는 <xref:System.Object> 형식의 `value`를 사용하므로 다음 C# 예제와 같이 값이 0인 경우 정수 계열 값을 <xref:System.Object> 형식으로 변환해야 합니다.  
  
```  
Parameter = new SqlParameter("@pname", (object)0);  
```  
  
 이 변환을 수행 하지 않으면 컴파일러를 호출 하는 것을 가정은 `SqlParameter` (`string`, `SqlDbType`) 생성자 오버 로드 합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">매핑할 매개 변수의 이름입니다.</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <summary>매개 변수 이름, <see cref="T:System.Data.SqlDbType" />, 크기를 사용하는 <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **크기** 의 값에서 유추는 `dbType` 명시적으로 설정 하지 않으면 매개 변수는 `size` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, string sourceColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, sourceColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::String ^ sourceColumn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourceColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">매핑할 매개 변수의 이름입니다.</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="sourceColumn">이 <see cref="T:System.Data.SqlClient.SqlParameter" />가 <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />에 대한 호출에 사용되는 경우 소스 열(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />)의 이름입니다.</param>
        <summary>매개 변수 이름, <see cref="T:System.Data.SqlClient.SqlParameter" />, 크기 및 소스 열 이름을 사용하는 <see cref="T:System.Data.SqlDbType" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **크기** 의 값에서 유추는 `dbType` 명시적으로 설정 하지 않으면 매개 변수는 `size` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">매핑할 매개 변수의 이름입니다.</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="direction">
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</param>
        <param name="isNullable">
          필드 값에 null 값이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</param>
        <param name="precision">
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 왼쪽과 오른쪽의 총 자릿수입니다.</param>
        <param name="scale">
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 총 자릿수입니다.</param>
        <param name="sourceColumn">이 <see cref="T:System.Data.SqlClient.SqlParameter" />가 <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />에 대한 호출에 사용되는 경우 소스 열(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />)의 이름입니다.</param>
        <param name="sourceVersion">
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <param name="value">
          <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다.</param>
        <summary>매개 변수의 이름, 형식 및 크기와 <see cref="T:System.Data.SqlClient.SqlParameter" />, 매개 변수의 정밀도 및 배율과 소스 열, 사용할 <see cref="T:System.Data.ParameterDirection" />과 매개 변수 값을 사용하는 <see cref="T:System.Data.DataRowVersion" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **크기** 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 의 값에서 유추 되는 `dbType` 명시적으로 설정 되지 않은 경우 매개 변수는 `size` 및 `precision` 매개 변수입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dbType" /> 매개 변수에 지정한 값이 올바르지 않은 백 엔드 데이터 형식입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object, xmlSchemaCollectionDatabase As String, xmlSchemaCollectionOwningSchema As String, xmlSchemaCollectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value, System::String ^ xmlSchemaCollectionDatabase, System::String ^ xmlSchemaCollectionOwningSchema, System::String ^ xmlSchemaCollectionName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="xmlSchemaCollectionDatabase" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionOwningSchema" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">매핑할 매개 변수의 이름입니다.</param>
        <param name="dbType">
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다.</param>
        <param name="size">매개 변수의 길이입니다.</param>
        <param name="direction">
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다.</param>
        <param name="precision">
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 왼쪽과 오른쪽의 총 자릿수입니다.</param>
        <param name="scale">
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 총 자릿수입니다.</param>
        <param name="sourceColumn">이 <see cref="T:System.Data.SqlClient.SqlParameter" />가 <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />에 대한 호출에 사용되는 경우 소스 열(<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />)의 이름입니다.</param>
        <param name="sourceVersion">
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다.</param>
        <param name="sourceColumnNullMapping">
          원본 열에 null이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</param>
        <param name="value">
          <see cref="T:System.Object" />의 값인 <see cref="T:System.Data.SqlClient.SqlParameter" />입니다.</param>
        <param name="xmlSchemaCollectionDatabase">이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름입니다.</param>
        <param name="xmlSchemaCollectionOwningSchema">이 XML 인스턴스의 스키마 컬렉션이 있는 소유 관계형 스키마입니다.</param>
        <param name="xmlSchemaCollectionName">이 매개 변수에 대한 스키마 컬렉션의 이름입니다.</param>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlParameter" /> 클래스의 새 인스턴스를 초기화합니다. 이 클래스 인스턴스는 매개 변수 이름, 매개 변수 형식, 매개 변수 길이, 매개 변수 방향, 전체 자릿수, 소수 자릿수, 소스 열의 이름, <see cref="T:System.Data.DataRowVersion" /> 값 중 하나, 소스 열 매핑에 대한 부울, <see langword="SqlParameter" /> 값, 이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름, 이 XML 인스턴스의 스키마 컬렉션이 있는 소유하는 관계형 스키마, 이 매개 변수에 대한 스키마 컬렉션의 이름을 사용합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 의 값에서 유추 되는 `dbType` 명시적으로 설정 되지 않은 경우 매개 변수는 `size` 및 `precision` 매개 변수입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As SqlCompareOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlCompareOptions CompareInfo { System::Data::SqlTypes::SqlCompareOptions get(); void set(System::Data::SqlTypes::SqlCompareOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 매개 변수에 대해 문자열 비교를 수행하는 방법을 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체를 가져오거나 설정합니다.</summary>
        <value>이 매개 변수에 대한 문자열 비교를 정의하는 <see cref="T:System.Globalization.CompareInfo" /> 개체입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 <see cref="T:System.Data.SqlDbType" />을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. 기본값은 <see langword="NVarChar" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 연결 됩니다. 설정의 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 변경은 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 을 지 원하는 <xref:System.Data.SqlDbType>합니다.  
  
 지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.SqlDbType> 멤버입니다. 자세한 내용은 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수가 입력 전용, 출력 전용, 양방향 또는 저장 프로시저 반환 값 매개 변수인지 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.ParameterDirection" /> 값 중 하나입니다. 기본값은 <see langword="Input" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Data.ParameterDirection> 출력과 연결 된 실행은 <xref:System.Data.SqlClient.SqlCommand> 는 값을 반환 하지 않습니다는 <xref:System.Data.SqlClient.SqlParameter> null 값을 포함 합니다.  
  
 `Output``InputOut`, 및 `ReturnValue` 매개 변수를 호출 하 여 반환 된 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> 닫을 때까지 액세스할 수 없습니다는 <xref:System.Data.SqlClient.SqlDataReader>합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [명령 및 매개 변수](~/docs/framework/data/adonet/commands-and-parameters.md)  
  
 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)  
  
 [SQL Server 및 ADO.NET](http://msdn.microsoft.com/library/c18b1fb1-2af1-4de7-80a4-95e56fd976cb)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성에 유효한 <see cref="T:System.Data.ParameterDirection" /> 값 중 하나를 설정하지 않은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ForceColumnEncryption">
      <MemberSignature Language="C#" Value="public bool ForceColumnEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceColumnEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceColumnEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceColumnEncryption { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine)를 사용할 경우 매개 변수의 암호화를 적용합니다. SQL Server가 매개 변수를 암호화할 필요가 없음을 드라이버에 알릴 경우 이 매개 변수를 사용하는 쿼리는 실패합니다. 이 속성은 손상된 SQL Server가 클라이언트에 잘못된 암호화 메타데이터를 제공하여 데이터가 공개되도록 하는 보안 공격에 대해 추가적인 보호를 제공합니다.</summary>
        <value>
          <see langword="true" /> 매개 변수에 강제 열 암호화; 있으면 그렇지 않으면 <see langword="false" />합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수에 null 값이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다. <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" />은 매개 변수 값의 유효성을 검사하는 데 사용되지 않으며 명령 실행 시 null 값을 주고받지 못하게 합니다.</summary>
        <value>
          null 값이 허용되면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Null 값을 사용 하 여 처리 하는 <xref:System.DBNull> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#2)]
 [!code-vb[DataWorks SqlParam.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleId">
      <MemberSignature Language="C#" Value="public int LocaleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberSignature Language="VB.NET" Value="Public Property LocaleId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LocaleId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>특정 지역에 대한 규칙 및 언어를 결정하는 로캘 식별자를 가져오거나 설정합니다.</summary>
        <value>매개 변수와 연결된 로캘 식별자를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 로캘 규칙과 특정 지리적 지역에 대 한 언어를 식별합니다. 특정 문자열 (문자 집합)를 인코딩하는 데 사용 되는 코드 페이지 해당 문자열이 또는 생성 한 환경에서 사용 되는 로캘을 기반으로 합니다. 이 속성 (예: 입력된 매개 변수)를 설정 하거나 가져옵니다 (출력 매개 변수)은 로컬 서버를 사용 하 여 데이터를 교환할 때 문자열에 연결 되어야 합니다. 이 속성은 일반적으로 함께 사용 되는 <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A> 속성입니다.  
  
```  
static void CreateSqlParameterLocaleId(){  
   SqlParameter parameter = new SqlParameter("pName", SqlDbType.VarChar);  
   parameter.LocaleId = 1033;   // English - United States  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성의 오프셋을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />의 오프셋입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Offset` 속성은 클라이언트 쪽 이진 및 문자열 데이터의 청크를 사용 합니다. 예를 들어 10MB의 텍스트는 서버에 있는 열에 삽입 하기 위해 사용자 실행 될 수 있습니다 1MB 청크를 10 개의 매개 변수가 있는 삽입의 값을 이동 하면서 `Offset` 1MB에서 각 반복에서 합니다.  
  
 `Offset` 문자열의 문자 수와 이진 형식에 대 한 바이트 수를 지정합니다. 문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#3](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#3)]
 [!code-vb[DataWorks SqlParam.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlParameter" />의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> 형태로 지정 @paramname합니다. 설정 해야 <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A> 실행 하기 전에 <xref:System.Data.SqlClient.SqlCommand> 매개 변수를 사용 하는 합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 속성을 나타내는 데 사용되는 최대 자릿수입니다. 기본값은 0입니다. 이것은 데이터 공급자가 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />의 전체 자릿수를 설정한다는 것을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 속성은 매개 변수가 사용 되는 <xref:System.Data.SqlDbType> 의 `Decimal`합니다.  
  
 에 대 한 값을 지정할 필요가 없습니다는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 입력된 매개 변수에 대 한 속성으로 매개 변수 값에서 유추할 수 있습니다. `Precision` 및 `Scale` 출력 매개 변수에 대 한 및 특정 정밀도와 배율을 null 값을 지정 하는 등의 값을 나타내지 않고는 매개 변수에 대 한 전체 메타 데이터를 지정 하려면 필요한 시나리오에 필요 합니다.  
  
> [!NOTE]
>  데이터베이스에 전달 되는 데이터를 강제 하려면이 속성의 사용이 지원 되지 않습니다. 반올림 하거나 그렇지 않으면 데이터베이스에 전달 하기 전에 데이터를 강제를 사용 하 여는 <xref:System.Math> 의 일부인 클래스는 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성입니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0에 포함 되어 있는 Microsoft.NET Framework 데이터 공급자를 확인 하지 않습니다는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 또는 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값입니다. 이 인해 데이터 소스에 삽입 되는 데이터가 잘릴된 수 있습니다. .NET Framework 버전 1.0 사용 하는 경우 유효성 검사는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값을 설정 하기 전에 값입니다. .NET Framework 버전 1.1 또는 이후 버전을 사용 하면 예외가 발생 하는 경우는 <xref:System.Decimal> 잘못 된 매개 변수 값이 설정 <xref:System.Data.SqlClient.SqlParameter.Precision%2A>합니다. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 초과 하는 값은 <xref:System.Decimal> 매개 변수 크기는 여전히 잘립니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlParameter" />와 관련된 형식을 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다. 둘 다이 메서드를 호출 하면는 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 속성은 <xref:System.Data.SqlClient.SqlParameter>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSqlDbType">
      <MemberSignature Language="C#" Value="public void ResetSqlDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSqlDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSqlDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSqlDbType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 <see cref="T:System.Data.SqlClient.SqlParameter" />와 관련된 형식을 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 명령을 실행할 때 매개 변수 값을 포함 하는 코드 형식의 매개 변수를 명시적으로 설정 하거나 수 또는 매개 변수 값에서 형식을 유추할 수 있습니다. 이 메서드를 호출 하 여 다시 매개 변수에 전달 된 값에서 해당 형식을 유추할 수 있는 매개 변수 다시 설정 합니다. 둘 다이 메서드를 호출 하면는 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 의 속성은 <xref:System.Data.SqlClient.SqlParameter>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 자릿수를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" />가 확인되는 소수점 이하 자릿수입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 속성은 매개 변수가 사용 되는 <xref:System.Data.SqlDbType> 의 `Decimal`합니다.  
  
> [!WARNING]
>  경우에 데이터가 잘릴 수 있습니다는 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 속성이 명시적으로 지정 되지 않은 및 서버의 데이터는 소수 자릿수 0 (기본값)에 맞지 않습니다.  
  
 에 대 한 값을 지정할 필요가 없습니다는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 입력된 매개 변수에 대 한 속성으로 매개 변수 값에서 유추할 수 있습니다. `Precision` 및 `Scale` 출력 매개 변수에 대 한 및 특정 정밀도와 배율을 null 값을 지정 하는 등의 값을 나타내지 않고는 매개 변수에 대 한 전체 메타 데이터를 지정 하려면 필요한 시나리오에 필요 합니다.  
  
> [!NOTE]
>  데이터베이스에 전달 되는 데이터를 강제 하려면이 속성의 사용이 지원 되지 않습니다. 반올림 하거나 그렇지 않으면 데이터베이스에 전달 하기 전에 데이터를 강제를 사용 하 여는 <xref:System.Math> 의 일부인 클래스는 `System` 네임 스페이스에 매개 변수의 값을 할당 하기 전에 `Value` 속성입니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0에 포함 된.NET framework 데이터 공급자를 확인 하지 않습니다는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 또는 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 의 <xref:System.Decimal> 매개 변수 값입니다. 이 인해 잘린된 데이터를 데이터 소스에서 삽입할 수 있습니다. .NET Framework 버전 1.0 사용 하는 경우 유효성 검사는 <xref:System.Data.SqlClient.SqlParameter.Precision%2A> 및 <xref:System.Data.SqlClient.SqlParameter> 의 <xref:System.Decimal> 매개 변수 값을 설정 하기 전에 값입니다. <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 초과 하는 값은 <xref:System.Decimal> 매개 변수 크기는 여전히 잘립니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#4](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#4)]
 [!code-vb[DataWorks SqlParam.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>열에 있는 데이터의 최대 크기(바이트)를 가져오거나 설정합니다.</summary>
        <value>열에 있는 데이터의 최대 크기(바이트)입니다. 기본값은 매개 변수 값에서 유추됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 값이이 속성의 영향을 받지 않습니다. 저장된 프로시저에서 반환 매개 변수는 항상 고정 크기의 정수입니다.  
  
 가변 길이 유형 (예: nvarchar)와 출력 매개 변수의 경우 매개 변수의 크기는 출력 매개 변수를 보유 하는 버퍼의 크기를 정의 합니다. 출력 매개 변수 (으)로 지정 된 크기 수 <xref:System.Data.SqlClient.SqlParameter.Size%2A>합니다. 로 지정 된 크기는 문자 형식에 대 한 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 는 문자로 계산 합니다.  
  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 속성 이진 및 문자열 형식에 사용 됩니다. 형식의 매개 변수로 `SqlType.String`, `Size` 길이 유니코드 문자를 의미 합니다. 형식의 매개 변수로 `SqlType.Xml`, `Size` 는 무시 됩니다.  
  
 문자열이 아닌 데이터 형식 및 ANSI 문자열 데이터에 대 한는 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 속성 바이트 수를 나타냅니다. 유니코드 문자열 데이터에 대 한 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 문자의 수를 나타냅니다. 문자열에 대 한 개수 종결 문자를 포함 하지 않습니다.  
  
 가변 길이 데이터 형식에 대 한 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 서버에 전송할 데이터의 최대 양에 대해 설명 합니다. 유니코드 문자열 값에 대 한 예를 들어 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 하나 백 먼저 자로 서버에 전송 되는 데이터의 양을 제한 하기 위해 사용할 수 있습니다.  
  
 명시적으로 하는 경우 집합 크기 지정 된 매개 변수 값의 실제 크기에서 유추 됩니다.  
  
 매개 변수 값의 소수 부분이 크기 보다 큰 경우 값은 크기에 맞게 잘릴 수 있습니다.  
  
 에 대 한 고정 길이 데이터 형식, 값 <xref:System.Data.SqlClient.SqlParameter.Size%2A> 는 무시 됩니다. 정보 제공 목적으로 검색할 수 있습니다 하 고 공급자 서버에 매개 변수 값을 전송할 때 사용 하는 바이트의 최대 크기를 반환 합니다.  
  
 스트리밍에 대 한 정보를 참조 하십시오. [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#5](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#5)]
 [!code-vb[DataWorks SqlParam.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataSet" />으로 매핑되고 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />를 로드하거나 반환하는 데 사용되는 소스 열의 이름을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.DataSet" />으로 매핑된 소스 열의 이름입니다. 기본값은 빈 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 인 열에서 검색 되는 빈 문자열이 매개 변수의 값 이외의 값으로 설정 되어는 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 이름입니다. 경우 <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 로 설정 된 `Input`에서 값을 가져옵니다는 <xref:System.Data.DataSet>합니다. 경우 <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 로 설정 된 `Output`, 데이터 원본에서 값을 가져옵니다. A <xref:System.Data.SqlClient.SqlParameter.Direction%2A> 의 `InputOutput` 둘의 조합입니다.  
  
 사용 하는 방법에 대 한 자세한 내용은 <xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A> 속성 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md) 및 [Dataadapter로 데이터 원본 업데이트](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#6](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#6)]
 [!code-vb[DataWorks SqlParam.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스 열에 null이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다. 이를 통해 <see cref="T:System.Data.SqlClient.SqlCommandBuilder" />에서 null 허용 열에 대한 Update 문을 올바르게 생성할 수 있습니다.</summary>
        <value>
          원본 열에 null이 허용되면 <see langword="true" />이고, 허용되지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 사용 되는 <xref:System.Data.SqlClient.SqlCommandBuilder> null 허용 열을 다룰 때 제대로 업데이트 명령을 생성 합니다. 일반적으로 사용의 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 으로 제한 됩니다 <xref:System.Data.SqlClient.SqlCommandBuilder>합니다.  
  
 <xref:System.Data.Common.DbCommandBuilder> 원본 열이 null을 허용 하 고이 속성을 설정 하는지 여부를 확인 하려면이 속성을 사용 하 여 `true` 은 null을 허용 하는 경우 및 `false` 없는 경우. 때 <xref:System.Data.SqlClient.SqlCommandBuilder> 가 검사 하는 Update 문을 생성는 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 각 매개 변수에 대 한 합니다. 속성이 `true`, <xref:System.Data.SqlClient.SqlCommandBuilder> 다음과 같은 WHERE 절을 생성 (이 쿼리 식은 "FieldName" 나타냅니다 필드의 이름):  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 경우 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> false 인 경우이 필드는에 대 한 <xref:System.Data.SqlClient.SqlCommandBuilder> 다음 WHERE 절을 생성 합니다.  
  
```  
FieldName = @OriginalFieldName  
```  
  
 또한 @IsNull_FieldName 원본 필드 및 포함 된 경우 null, 0 그렇지 않은 경우 1을 포함 합니다. 이 메커니즘의 SQL Server 성능 최적화 기능을 허용 하 고 여러 공급자 들 간에 작동 하는 일반적인 코드에 대 한 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataRowVersion" />를 로드할 때 사용할 <see cref="P:System.Data.SqlClient.SqlParameter.Value" />을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 기본값은 <see langword="Current" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 사용 된 `SqlDataAdapter.UpdateCommand` 업데이트 매개 변수 값에 대 한 원본 또는 현재 값을 사용 하는지 확인 하는 동안 합니다. 이렇게 하면 기본 키를 업데이트할 수 있습니다. 이 속성의 버전에는 <xref:System.Data.DataRow> 에서 사용 하는 `DataRow.Item` 속성 또는 중 하나는 `DataRow.GetChildRows` 의 메서드는 <xref:System.Data.DataRow> 개체입니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#7](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#7)]
 [!code-vb[DataWorks SqlParam.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDbType">
      <MemberSignature Language="C#" Value="public System.Data.SqlDbType SqlDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlDbType SqlDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDbType As SqlDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlDbType SqlDbType { System::Data::SqlDbType get(); void set(System::Data::SqlDbType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 <see cref="T:System.Data.SqlDbType" />을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. 기본값은 <see langword="NVarChar" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 연결 됩니다. 설정의 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 변경은 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 을 지 원하는 <xref:System.Data.SqlDbType>합니다.  
  
 지원 되는 데이터 형식의 목록에 대 한 적절 한 참조 <xref:System.Data.SqlDbType> 멤버입니다. 자세한 내용은 참조 [DataAdapter 매개 변수](~/docs/framework/data/adonet/dataadapter-parameters.md)합니다.  
  
 스트리밍에 대 한 정보를 참조 하십시오. [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlValue">
      <MemberSignature Language="C#" Value="public object SqlValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SqlValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SqlValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 값을 SQL 형식으로 가져오거나 설정합니다.</summary>
        <value>SQL 형식을 사용하는 매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 바인딩된 값에 대 한 입력된 매개 변수는 <xref:System.Data.SqlClient.SqlCommand> 서버로 보내집니다. 완료에는 값이 설정 출력 및 반환 값 매개 변수는 <xref:System.Data.SqlClient.SqlCommand> 후는 <xref:System.Data.SqlClient.SqlDataReader> 닫힙니다.  
  
 이 속성을 null 또는 <xref:System.DBNull.Value?displayProperty=nameWithType>합니다. 사용 하 여 <xref:System.DBNull.Value?displayProperty=nameWithType> 매개 변수의 값으로 NULL 값을 보낼 수 있습니다. Null을 사용 하거나 설정 하지 않은 <xref:System.Data.SqlClient.SqlParameter.SqlValue%2A?displayProperty=nameWithType> 매개 변수에 대해 기본값을 사용 하도록 합니다.  
  
 응용 프로그램 데이터베이스 형식을 지정 하는 경우 바인딩된 값 공급자가 서버에 데이터를 보낼 때 해당 형식으로 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하는 <xref:System.IConvertible> 인터페이스입니다. 지정된 된 형식의 값과 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.  
  
 둘 다는 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 속성을 설정 하 여 유추할 수는 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>합니다.  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> 속성을 덮어씁니다 `SqlDataAdapter.UpdateCommand`합니다.  
  
 사용 하 여는 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType> 런타임 (CLR) 형식으로 공용 언어 매개 변수 값을 반환 하는 속성입니다.  
  
 스트리밍에 대 한 정보를 참조 하십시오. [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />를 참조하세요.</summary>
        <returns>이 인스턴스의 복사본인 새 <see cref="T:System.Object" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, <xref:System.Data.SqlClient.SqlParameter> 인스턴스가 <xref:System.ICloneable> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />이 포함된 문자열을 가져옵니다.</summary>
        <returns>
          <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />이 포함된 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블 반환 매개 변수의 형식 이름을 가져오거나 설정합니다.</summary>
        <value>지정된 테이블 반환 매개 변수의 형식 이름입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public string UdtTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property UdtTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UdtTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 정의 형식을 매개 변수로 나타내는 <see langword="string" />을 가져오거나 설정합니다.</summary>
        <value>데이터베이스에서 사용자 정의 형식의 정규화된 이름을 나타내는 <see langword="string" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보여 주는 샘플 <xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>, 참조 [UDT 데이터 검색](http://msdn.microsoft.com/library/ms131080.aspx)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>매개 변수의 값을 가져오거나 설정합니다.</summary>
        <value>매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 바인딩된 값에 대 한 입력된 매개 변수는 <xref:System.Data.SqlClient.SqlCommand> 서버로 보내집니다. 완료에는 값이 설정 출력 및 반환 값 매개 변수는 <xref:System.Data.SqlClient.SqlCommand> 후는 <xref:System.Data.SqlClient.SqlDataReader> 닫힙니다.  
  
 이 속성을 null 또는 <xref:System.DBNull.Value>합니다. 사용 하 여 <xref:System.DBNull.Value> 매개 변수의 값으로 NULL 값을 보낼 수 있습니다. Null을 사용 하거나 설정 하지 않은 <xref:System.Data.SqlClient.SqlParameter.Value%2A> 매개 변수에 대해 기본값을 사용 하도록 합니다.  
  
 유니코드가 아닌 XML 데이터를 문자열로 전달 되 면 예외가 throw 됩니다.  
  
 응용 프로그램 데이터베이스 형식을 지정 하는 경우 바인딩된 값 공급자가 서버에 데이터를 보낼 때 해당 형식으로 변환 됩니다. 공급자가 지 원하는 경우 모든 유형의 값을 변환 하는 <xref:System.IConvertible> 인터페이스입니다. 지정된 된 형식의 값과 호환 되지 않는 경우 변환 오류가 발생할 수 있습니다.  
  
 둘 다는 <xref:System.Data.SqlClient.SqlParameter.DbType%2A> 및 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> 속성 값을 설정 하 여 유추할 수 있습니다.  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A> 속성을 덮어씁니다 `SqlDataAdapter.UpdateCommand`합니다.  
  
 스트리밍에 대 한 정보를 참조 하십시오. [SqlClient 스트리밍 지원](~/docs/framework/data/adonet/sqlclient-streaming-support.md)합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Data.SqlClient.SqlParameter> 속성 중 일부를 설정 합니다.  
  
 [!code-csharp[DataWorks SqlParam.Properties#8](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#8)]
 [!code-vb[DataWorks SqlParam.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionDatabase">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionDatabase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionDatabase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름을 가져옵니다.</summary>
        <value>이 XML 인스턴스의 스키마 컬렉션이 있는 데이터베이스의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 null (`Nothing` Microsoft Visual Basic) 컬렉션은 현재 데이터베이스에 정의 된 경우. 없으면 스키마 컬렉션이 없는 경우 null도 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> 및 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> 도 null입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionName">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 XML 인스턴스의 스키마 컬렉션의 이름을 가져옵니다.</summary>
        <value>이 XML 인스턴스의 스키마 컬렉션의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 null (`Nothing` Microsoft Visual Basic) 연결 된 스키마 컬렉션이 있는 경우. 다음 값이 null 이면 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> 및 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> 도 null입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionOwningSchema">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionOwningSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionOwningSchema As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionOwningSchema { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 XML 인스턴스의 스키마 컬렉션이 있는 소유 관계형 스키마입니다.</summary>
        <value>이 XML 인스턴스에 대한 소유 관계형 스키마입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 값은 null (`Nothing` Microsoft Visual Basic) 컬렉션은 현재 데이터베이스에 정의 된 경우. 없으면 스키마 컬렉션이 없는 경우 null도 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A> 및 <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> 도 null입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>