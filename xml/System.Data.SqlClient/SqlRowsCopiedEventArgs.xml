<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlRowsCopiedEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a47f14929df592702646e24a5c879bcca9f35e43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a47f14929df592702646e24a5c879bcca9f35e43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlRowsCopiedEventArgs">
          <source>Represents the set of arguments passed to the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlRowsCopiedEventHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlRowsCopiedEventHandler" /&gt;</ph>에 전달된 인수 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that indicates the number of rows copied during the current bulk copy operation.</source>
          <target state="translated">현재 대량 복사 작업 과정에서 복사되는 행의 수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlRowsCopiedEventArgs" /&gt;</ph> object.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlRowsCopiedEventArgs" /&gt;</ph> 개체의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlRowsCopiedEventArgs.#ctor(System.Int64)">
          <source>The value in the <ph id="ph1">`rowsCopied`</ph> parameter is reset on each call to any one of the <ph id="ph2">`SqlBulkCopy.WriteToServer`</ph> methods.</source>
          <target state="translated">값은 <ph id="ph1">`rowsCopied`</ph> 매개 변수 중 하나를 호출할 때마다 다시 설정 됩니다는 <ph id="ph2">`SqlBulkCopy.WriteToServer`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source>Gets or sets a value that indicates whether the bulk copy operation should be aborted.</source>
          <target state="translated">대량 복사 작업이 중단되어야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the bulk copy operation should be aborted; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">대량 복사 작업을 중단해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> property to cancel a bulk copy operation.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> 대량 복사 작업을 취소 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source>Set <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> to <ph id="ph2">`true`</ph> to abort the bulk copy operation.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 대량 복사 작업을 중단 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source>If you call the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> method from <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>, an exception is generated, and the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object state does not change.</source>
          <target state="translated">호출 하는 경우는 <bpt id="p1">**</bpt>닫기<ept id="p1">**</ept> 메서드에서 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied&gt;</ph>, 예외가 생성 됩니다 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 개체 상태 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source>If an application specifically creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> object in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> constructor, the transaction is not rolled back.</source>
          <target state="translated">특히 응용 프로그램을 만드는 경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 생성자 트랜잭션이 롤백되지 않습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source>The application is responsible for determining whether it is required to rollback the operation, and if so, it must call the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">응용 프로그램은 롤백 작업을 해야 하는 경우 호출 해야 하는지 여부를 결정 합니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source>If the application does not create a transaction, the internal transaction corresponding to the current batch is automatically rolled back.</source>
          <target state="translated">응용 프로그램에서 트랜잭션을 만들지 않는 경우 해당 현재 일괄 처리 하는 내부 트랜잭션이 자동으로 롤백됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort">
          <source>However, changes related to previous batches within the bulk copy operation are retained, because the transactions for them already have been committed.</source>
          <target state="translated">그러나 이전 일괄 처리 내에서 대량 복사 작업에 관련 된 변경 내용 유지 되므로에 트랜잭션이 이미 커밋되지 되었기 때문에.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied">
          <source>Gets a value that returns the number of rows copied during the current bulk copy operation.</source>
          <target state="translated">현재 복사 작업 과정에서 복사되는 행의 수를 반환하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied">
          <source><ph id="ph1">&lt;see langword="int" /&gt;</ph> that returns the number of rows copied.</source>
          <target state="translated">복사되는 행의 수를 반환하는 <ph id="ph1">&lt;see langword="int" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied">
          <source>The value in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied%2A&gt;</ph> property is reset on each call to any of the <ph id="ph2">`SqlBulkCopy.WriteToServer`</ph> methods.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.RowsCopied%2A&gt;</ph> 속성 중 하나를 호출할 때마다 다시 설정 됩니다는 <ph id="ph2">`SqlBulkCopy.WriteToServer`</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>