<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlDataAdapter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c262d135008abdf05b28c5f242ad91f6f215ac7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c262d135008abdf05b28c5f242ad91f6f215ac7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>Represents a set of data commands and a database connection that are used to fill the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and update a SQL Server database.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>을 채우고 SQL Server 데이터베이스를 업데이트하는 데 사용되는 데이터 명령 집합과 데이터베이스 연결을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, serves as a bridge between a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and SQL Server for retrieving and saving data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, 사이의 브리지 역할을 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 및 SQL Server를 검색 하 고 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> provides this bridge by mapping <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>, which changes the data in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> to match the data in the data source, and <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, which changes the data in the data source to match the data in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>, using the appropriate Transact-SQL statements against the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 매핑하는 방법으로이 연결을 제공 <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>, 데이터를 변경 하는 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 데이터 원본의 데이터와 일치 하도록 및 <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>의 데이터와 일치 하도록 데이터 원본에서 데이터를 변경는 <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph>를 사용 하 여는 데이터 원본에 대해 적절 한 TRANSACT-SQL 문입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>The update is performed on a by-row basis.</source>
          <target state="translated">이 업데이트는 행 단위로에서 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>For every inserted, modified, and deleted row, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method determines the type of change that has been performed on it (<ph id="ph2">`Insert`</ph>, <ph id="ph3">`Update`</ph>, or <ph id="ph4">`Delete`</ph>).</source>
          <target state="translated">모든 삽입, 수정 및 삭제 된 행에 대해는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> 메서드에 수행 된 변경의 유형을 결정 (<ph id="ph2">`Insert`</ph>, <ph id="ph3">`Update`</ph>, 또는 <ph id="ph4">`Delete`</ph>).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>Depending on the type of change, the <ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update`</ph>, or <ph id="ph3">`Delete`</ph> command template executes to propagate the modified row to the data source.</source>
          <target state="translated">변경 유형에 따라는 <ph id="ph1">`Insert`</ph>, <ph id="ph2">`Update`</ph>, 또는 <ph id="ph3">`Delete`</ph> 명령 템플릿이 실행 데이터 원본에 수정된 된 행을 전파 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>When the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> fills a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, it creates the necessary tables and columns for the returned data if they do not already exist.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 채웁니다는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 존재 하지 않을 경우 필요한 테이블 및 반환된 된 데이터에 대 한 열을 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>However, primary key information is not included in the implicitly created schema unless the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>.</source>
          <target state="translated">그러나 기본 키 정보에에서 없는 암시적으로 만든된 스키마 하지 않는 한는 <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>You may also have the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> create the schema of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, including primary key information, before filling it with data using <ph id="ph3">`FillSchema`</ph>.</source>
          <target state="translated">설정할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 의 스키마를 만들기는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>를 사용 하 여 데이터를 채우기 전에 기본 키 정보를 포함 하 여 <ph id="ph3">`FillSchema`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>기존 제약 조건 데이터 집합에 추가<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is used in conjunction with <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> to increase performance when connecting to a SQL Server database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 와 함께에서 사용 되는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> SQL Server 데이터베이스에 연결할 때 성능을 향상 시키려면 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>If you are using SQL Server stored procedures to edit or delete data using a <ph id="ph1">`DataAdapter`</ph>, make sure that you do not use SET NOCOUNT ON in the stored procedure definition.</source>
          <target state="translated">SQL Server 저장 프로시저를 통해 <ph id="ph1">`DataAdapter`</ph>로 데이터를 편집하거나 삭제하는 경우에는 저장 프로시저 정의에 SET NOCOUNT ON을 사용하면 안 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>This causes the rows affected count returned to be zero, which the <ph id="ph1">`DataAdapter`</ph> interprets as a concurrency conflict.</source>
          <target state="translated">SET NOCOUNT ON을 사용하는 경우 반환되는 행 개수가 0이 되어 <ph id="ph1">`DataAdapter`</ph>가 이를 동시성 충돌로 인식합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>In this event, a <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> will be thrown.</source>
          <target state="translated">그 결과 <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>이 throw됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> also includes the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> properties to facilitate the loading and updating of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 도 포함 되어는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Data.Common.DataAdapter.TableMappings%2A&gt;</ph> 속성을 쉽게 로드 하 고 데이터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the read/write properties are set to initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 만들어지면 읽기/쓰기 속성은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> constructor.</source>
          <target state="translated">이러한 값의 목록에 대 한 참조는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> are generic templates that are automatically filled with individual values from every modified row through the parameters mechanism.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> 는 매개 변수 메커니즘을 통해 자동으로 수정 된 모든 행의 개별 값으로 채워진 제네릭 템플릿입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, a parameter should be added to the <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>에 추가 되어야 하는 매개 변수는 <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, 또는 <ph id="ph4">`DeleteCommand`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbParameter.SourceColumn%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DbParameter&gt;</ph> object should be set to the name of the column.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbParameter.SourceColumn%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Data.Common.DbParameter&gt;</ph> 개체의 열 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>This setting indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
          <target state="translated">이 설정은 매개 변수의 값을 수동으로 설정 되어 있지 않지만 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will occur if the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method is called and the table contains a user-defined type that is not available on the client computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 경우 발생 합니다는 <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> 메서드가 호출 되 고 테이블에는 클라이언트 컴퓨터에서 사용할 수 없는 사용자 정의 형식이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>For more information, see <bpt id="p1">[</bpt>Creating and Using User-Defined Types<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=139492)</ept> in SQL Server Books Online.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>만들기 및 사용자 형식<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=139492)</ept> SQL Server 온라인 설명서의 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> to select records from a database and populate a <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with the selected rows.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 레코드를 선택 하는 데이터베이스에서 채우기는 <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> 선택한 행과 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>The filled <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is then returned.</source>
          <target state="translated">채워진 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>To accomplish this, the method is passed an initialized <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, a connection string, and a query string that is a Transact-SQL SELECT statement.</source>
          <target state="translated">이를 위해 메서드를 전달 초기화 된 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 연결 문자열 및 쿼리 문자열은 TRANSACT-SQL SELECT 문입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlDataAdapter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> that is a Transact-SQL SELECT statement or stored procedure and is set as the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Transact-SQL SELECT 문 또는 저장 프로시저이고 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>의 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> 속성으로 설정될 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> as the <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 속성으로서 지정된 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>를 사용하여 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property to the value specified in the <ph id="ph3">`selectCommand`</ph> parameter.</source>
          <target state="translated">이 구현에서 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 생성자는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 속성에 지정 된 값을는 <ph id="ph3">`selectCommand`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> (or any of the other command properties) is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> (또는 다른 명령 속성 중 하나) 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that is a Transact-SQL SELECT statement or stored procedure to be used by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Transact-SQL SELECT 문 또는 저장 프로시저이고 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>의 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> 속성에서 사용될 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> that represents the connection.</source>
          <target state="translated">해당 연결을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">연결 문자열에서 <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>를 사용 중이 아니면 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph>을 사용하여 연결 문자열에서 사용자 ID와 암호를 텍스트로 지정할 때보다 사용자 ID와 암호를 보다 안전하게 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> and a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> 개체를 사용하여 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> opens and closes a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> if it is not already open.</source>
          <target state="translated">이 구현에서 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 열고 닫습니다는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 열려 있지 않으면입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>This can be useful in an application that must call the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method for two or more <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> objects.</source>
          <target state="translated">이 호출 해야 하는 응용 프로그램에 유용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> 둘 이상에 대 한 메서드 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is already open, you must explicitly call <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Dispose<ept id="p2">**</ept> to close it.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 가 이미 열려 명시적으로 호출 해야 <bpt id="p1">**</bpt>닫습니다<ept id="p1">**</ept> 또는 <bpt id="p2">**</bpt>Dispose<ept id="p2">**</ept> 를 닫습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>You can change the value of either of these properties through a separate call to the property.</source>
          <target state="translated">속성에 별도 호출을 통해 이러한 속성 중 하나의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that is a Transact-SQL SELECT statement or stored procedure to be used by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Transact-SQL SELECT 문 또는 저장 프로시저이고 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>의 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> 속성에서 사용될 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>The connection string.</source>
          <target state="translated">연결 문자열입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>If your connection string does not use <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, you can use <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</source>
          <target state="translated">연결 문자열에서 <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>를 사용 중이 아니면 <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph>을 사용하여 연결 문자열에서 사용자 ID와 암호를 텍스트로 지정할 때보다 사용자 ID와 암호를 보다 안전하게 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class with a <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> and a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>와 연결 문자열을 사용하여 <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> constructor uses the <ph id="ph2">`selectCommandText`</ph> parameter to set the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 생성자 사용 하 여는 <ph id="ph2">`selectCommandText`</ph> 매개 변수를 설정의 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> will create and maintain the connection created with the <ph id="ph2">`selectConnectionString`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 만들고 사용 하 여 만든 연결을 유지 하는 <ph id="ph2">`selectConnectionString`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> is created, the following read/write properties are set to the following initial values.</source>
          <target state="translated">인스턴스가 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 만들어지면 다음 읽기/쓰기 속성은 다음과 같은 초기 값으로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>Properties</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">속성에 대 한 별도 호출을 통해 이러한 속성의 값을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</source>
          <target state="translated">레코드를 데이터 집합으로부터 삭제할 Transact-SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the database that correspond to deleted rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>의 삭제된 행과 일치하는 데이터베이스의 레코드를 삭제하는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 중에 사용되는 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 속성을 사용 하 여는 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, a parameter should be added to the <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>에 추가 되어야 하는 매개 변수는 <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, 또는 <ph id="ph4">`DeleteCommand`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 매개 변수의 속성 열의 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
          <target state="translated">이 매개 변수 값을 수동으로 설정 되어 있지 않지만 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 설정는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
          <source>It assumes you have already created a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 간주 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</source>
          <target state="translated">새로운 레코드를 데이터 소스에 삽입할 Transact-SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records into the database that correspond to new rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>의 새 행과 일치하는 데이터베이스에 레코드를 삽입하는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 중에 사용되는 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 속성을 사용 하 여는 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>If execution of this command returns rows, these rows can be added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated">이 명령 실행 하 여 행이 반환 하는 경우 이러한 행에 추가할 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 어떻게 설정 하느냐에 따라는 <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> 의 속성은 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, a parameter should be added to <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>에 매개 변수를 추가 해야 <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, 또는 <ph id="ph4">`DeleteCommand`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 매개 변수의 속성 열의 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>This indicates that the value of the parameter is not set manually, but is taken from the particular column in the currently processed row.</source>
          <target state="translated">이 매개 변수 값을 수동으로 설정 되어 있지 않지만 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 설정는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
          <source>It assumes you have already created a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 간주 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>Occurs during <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> after a command is executed against the data source.</source>
          <target state="translated">데이터 소스에 대해 명령이 실행된 후에 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>를 수행하는 동안 발생합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The attempt to update is made, so the event fires.</source>
          <target state="translated">업데이트를 시도했으므로 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The order of execution is as follows:</source>
          <target state="translated">실행 순서는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 매개 변수 값으로 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과에 배치 되는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">에 지정 되므로 출력 매개 변수가 있는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>가 호출된 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The following example shows how to use both the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated&gt;</ph> events.</source>
          <target state="translated">모두를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> event returns this output:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> 이 출력 이벤트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)</source>
          <target state="translated">이벤트 인수: (command=System.Data.SqlClient.SqlCommand commandType 2 상태 = = 0)</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated&gt;</ph> event returns this output:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated&gt;</ph> 이 출력 이벤트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
          <source>event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)</source>
          <target state="translated">이벤트 인수: (command=System.Data.SqlClient.SqlCommand commandType recordsAffected 2 = = 1 row=System.Data.DataRow[37] 상태 = 0)</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>Occurs during <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> before a command is executed against the data source.</source>
          <target state="translated">데이터 소스에 대해 명령이 실행되기 전에 <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>를 수행하는 동안 발생합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The attempt to update is made, so the event fires.</source>
          <target state="translated">업데이트를 시도했으므로 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, 업데이트 하는 데이터 행 단위로 발생 하는 두 가지 이벤트가 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The order of execution is as follows:</source>
          <target state="translated">실행 순서는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 매개 변수 값으로 이동 됩니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The command executes.</source>
          <target state="translated">명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">명령으로 설정 되어 있으면 <ph id="ph1">`FirstReturnedRecord`</ph>, 첫 번째 반환 결과에 배치 되는 <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">에 지정 되므로 출력 매개 변수가 있는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> 이벤트가 발생합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>가 호출된 경우</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The following example shows how to use both the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated&gt;</ph> events.</source>
          <target state="translated">모두를 사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> event returns this output:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating&gt;</ph> 이 출력 이벤트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)</source>
          <target state="translated">이벤트 인수: (command=System.Data.SqlClient.SqlCommand commandType 2 상태 = = 0)</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated&gt;</ph> event returns this output:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated&gt;</ph> 이 출력 이벤트를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
          <source>event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)</source>
          <target state="translated">이벤트 인수: (command=System.Data.SqlClient.SqlCommand commandType recordsAffected 2 = = 1 row=System.Data.DataRow[37] 상태 = 0)</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
          <source>Gets or sets a Transact-SQL statement or stored procedure used to select records in the data source.</source>
          <target state="translated">데이터 소스에서 레코드를 선택하는 데 사용하는 Transact-SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> to select records from the database for placement in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>의 배치를 위한 데이터베이스에서 레코드를 선택하는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> 중에 사용되는 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> does not return any rows, no tables are added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 모든 행을 반환 하지 않는에 테이블이 추가 되는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, 예외가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 설정는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
          <source>It assumes you have already created a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 간주 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Data.IDbDataAdapter.DeleteCommand" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Data.IDbDataAdapter.DeleteCommand" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated">데이터 집합에서 삭제된 행에 대해 데이터 소스의 레코드를 삭제하기 위해 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 중에 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Data.IDbDataAdapter.InsertCommand" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Data.IDbDataAdapter.InsertCommand" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source for new rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>를 수행하는 동안 데이터 집합의 새 행에 대한 레코드를 데이터 소스에 삽입하는 데 사용되는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Data.IDbDataAdapter.SelectCommand" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Data.IDbDataAdapter.SelectCommand" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>을 수행하는 동안 데이터 소스에서 데이터 집합에 배치할 레코드를 선택하는 데 사용되는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Data.IDbDataAdapter.UpdateCommand" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="P:System.Data.IDbDataAdapter.UpdateCommand" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IdbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IdbCommand" /&gt;</ph>를 수행하는 동안 데이터 집합의 수정된 행에 대한 레코드를 데이터 소스에서 업데이트하는 데 사용되는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>.</source>
          <target state="translated">이 멤버에 대한 설명은 <ph id="ph1">&lt;see cref="M:System.ICloneable.Clone" /&gt;</ph>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone">
          <source>A new object that is a copy of the current instance.</source>
          <target state="translated">현재 인스턴스의 복사본인 새 개체입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>Gets or sets the number of rows that are processed in each round-trip to the server.</source>
          <target state="translated">서버에 대한 각 라운드트립에서 처리된 행의 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>The number of rows to process per-batch.</source>
          <target state="translated">일괄 작업 당 처리할 행의 수입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value is</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값은</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Effect</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 효과</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> There is no limit on the batch size..</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 일괄 처리 크기에는 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Disables batch updating.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 일괄 처리 업데이트를 사용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <ph id="ph5">&amp;gt;</ph>1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <ph id="ph5">&amp;gt;</ph>1</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Changes are sent using batches of <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /&gt;</ph> operations at a time.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 변경 내용의 일괄 처리를 사용 하 여 전송 되므로 <ph id="ph3">&lt;see cref="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize" /&gt;</ph> 한 번에 작업입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>When setting this to a value other than 1, all the commands associated with the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> have to have their <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property set to <ph id="ph2">&lt;see langword="None" /&gt;</ph> or <ph id="ph3">&lt;see langword="OutputParameters" /&gt;</ph>.</source>
          <target state="translated">연결 된 모든 명령을이 값 1이 아닌 값을 설정 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> 있어야 해당 <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> 속성이로 설정 <ph id="ph2">&lt;see langword="None" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="OutputParameters" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>An exception is thrown otherwise.</source>
          <target state="translated">그렇지 않으면 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</source>
          <target state="translated">일괄 작업 처리 지원을 활성화하거나 비활성화하는 값을 가져오거나 설정하고 일괄 작업에서 실행할 수 있는 명령의 수를 지정합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A&gt;</ph> property to update a data source with changes from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize%2A&gt;</ph> 속성 변경 내용으로 데이터 소스를 업데이트 하는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>This can increase application performance by reducing the number of round-trips to the server.</source>
          <target state="translated">서버에 왕복 횟수를 줄여 응용 프로그램 성능을 향상 시킬 수이 있습니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>Executing an extremely large batch could decrease performance.</source>
          <target state="translated">너무 큰 배치를 실행하면 성능이 저하될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>Therefore, you should test for the optimum batch size setting before implementing your application.</source>
          <target state="translated">따라서 응용 프로그램을 구현하기 전에 최적의 배치 크기 설정을 테스트해야 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> is thrown if the value is set to a number less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> 값 수로 설정 된 경우 throw 되 0 보다 작은 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>Gets or sets a Transact-SQL statement or stored procedure used to update records in the data source.</source>
          <target state="translated">데이터 소스에서 레코드를 업데이트하는 데 사용하는 Transact-SQL 문이나 저장 프로시저를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the database that correspond to modified rows in the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph>의 수정된 행과 일치하는 데이터베이스의 레코드를 업데이트하는 <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> 중에 사용되는 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> can be generated automatically if you set the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> property and use the <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">동안 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>경우이 속성은 설정 되지 않으며 기본 키 정보에 있는지는 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> 설정 하는 경우 자동으로 생성할 수는 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph> 속성을 사용 하 여는 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>Then, any additional commands that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>.</source>
          <target state="translated">설정 하지 않으면 모든 추가 명령이 생성 한 다음,는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">이 생성 논리는 키 열에 대 한 정보가 필요는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>commandbuilder 생성 명령을<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>When <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> is not cloned.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> 할당 되는 이전에 만든 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 가 복제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> 이전에 만든에 대 한 참조를 유지 관리 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>If execution of this command returns rows, the updated rows may be merged with the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending on how you set the <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> property of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object.</source>
          <target state="translated">행을 반환 하는이 명령 실행 하는 경우 업데이트 된 행으로 병합 될 수 있습니다는 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 어떻게 설정 하느냐에 따라는 <bpt id="p1">**</bpt>UpdatedRowSource<ept id="p1">**</ept> 의 속성은 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>For every column that you propagate to the data source on <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, a parameter should be added to <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, or <ph id="ph4">`DeleteCommand`</ph>.</source>
          <target state="translated">데이터 소스에 전파 하는 모든 열에 대 한 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>에 매개 변수를 추가 해야 <ph id="ph2">`InsertCommand`</ph>, <ph id="ph3">`UpdateCommand`</ph>, 또는 <ph id="ph4">`DeleteCommand`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>The <ph id="ph1">`SourceColumn`</ph> property of the parameter should be set to the name of the column.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> 매개 변수의 속성 열의 이름으로 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>This indicates that the value of the parameter is not set manually, but taken from the particular column in the currently processed row.</source>
          <target state="translated">이 매개 변수 값은 수동으로 설정 되지 않고 현재 처리 된 행의 특정 열에서 가져온 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> properties.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> 설정는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
          <source>It assumes you have already created a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object.</source>
          <target state="translated">이미 만든 것으로 간주 한 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> 개체입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>