<Type Name="SqlBulkCopyColumnMappingCollection" FullName="System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
  <TypeSignature Language="C#" Value="public sealed class SqlBulkCopyColumnMappingCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopyColumnMappingCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlBulkCopyColumnMappingCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlBulkCopyColumnMappingCollection sealed : System::Collections::CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="c206f-101"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />에서 상속한 <see cref="T:System.Collections.CollectionBase" /> 개체의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-101">Collection of <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> objects that inherits from <see cref="T:System.Collections.CollectionBase" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c206f-102">열 매핑은 데이터 원본 및 대상 테이블 간의 매핑을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-102">Column mappings define the mapping between data source and the target table.</span></span>  
  
 <span data-ttu-id="c206f-103">매핑이 정의 되지 않은 경우-즉,는 <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> 컬렉션이 비어-열 서 수 위치에 따라 암시적으로 매핑됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-103">If mappings are not defined—that is, the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is empty—the columns are mapped implicitly based on ordinal position.</span></span> <span data-ttu-id="c206f-104">이렇게 하려면 소스 및 대상 스키마 일치 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-104">For this to work, source and target schemas must match.</span></span> <span data-ttu-id="c206f-105">그렇지 않은 경우는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-105">If they do not, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="c206f-106">경우는 <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> 컬렉션이 비어 있지 않으면, 모든 열을 데이터 원본에는 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-106">If the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is not empty, not every column present in the data source has to be specified.</span></span> <span data-ttu-id="c206f-107">컬렉션에 의해 매핑되지 않은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-107">Those not mapped by the collection are ignored.</span></span>  
  
 <span data-ttu-id="c206f-108">이름 또는 서 수 소스 및 대상 열을 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-108">You can refer to source and target columns by either name or ordinal.</span></span> <span data-ttu-id="c206f-109">이름 및 동일한 매핑 컬렉션에서 서 수 열 참조를 혼합할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-109">You can mix by-name and by-ordinal column references in the same mappings collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c206f-110">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 **AdventureWorks** 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</span><span class="sxs-lookup"><span data-stu-id="c206f-110">The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database.</span></span> <span data-ttu-id="c206f-111">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-111">Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</span></span> <span data-ttu-id="c206f-112"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> 에 추가 되는 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection> 에 대 한는 <xref:System.Data.SqlClient.SqlBulkCopy> 대량 복사에 대 한 열 맵을 만들 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-112"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> are added to the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection> for the <xref:System.Data.SqlClient.SqlBulkCopy> object to create a column map for the bulk copy.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-113">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-113">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-114">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-114">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-115">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-115">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollection/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c206f-116"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />에 새 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-116">Adds a new <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> to the <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (System.Data.SqlClient.SqlBulkCopyColumnMapping bulkCopyColumnMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(class System.Data.SqlClient.SqlBulkCopyColumnMapping bulkCopyColumnMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (bulkCopyColumnMapping As SqlBulkCopyColumnMapping) As SqlBulkCopyColumnMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlBulkCopyColumnMapping ^ Add(System::Data::SqlClient::SqlBulkCopyColumnMapping ^ bulkCopyColumnMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bulkCopyColumnMapping" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="bulkCopyColumnMapping"><span data-ttu-id="c206f-117">컬렉션에 추가될 매핑을 설명하는 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-117">The <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object that describes the mapping to be added to the collection.</span></span></param>
        <summary><span data-ttu-id="c206f-118">지정된 매핑을 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-118">Adds the specified mapping to the <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />.</span></span></summary>
        <returns><span data-ttu-id="c206f-119"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-119">A <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c206f-120">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 **AdventureWorks** 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</span><span class="sxs-lookup"><span data-stu-id="c206f-120">The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database.</span></span> <span data-ttu-id="c206f-121">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-121">Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</span></span> <span data-ttu-id="c206f-122"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> 개체는 대량 복사에 대 한 열 맵을 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-122"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-123">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-123">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-124">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-124">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-125">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-125">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMapping#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMapping/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (int sourceColumnIndex, int destinationColumnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(int32 sourceColumnIndex, int32 destinationColumnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (sourceColumnIndex As Integer, destinationColumnIndex As Integer) As SqlBulkCopyColumnMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlBulkCopyColumnMapping ^ Add(int sourceColumnIndex, int destinationColumnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumnIndex" Type="System.Int32" />
        <Parameter Name="destinationColumnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceColumnIndex"><span data-ttu-id="c206f-126">데이터 소스 내에 있는 소스 열의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-126">The ordinal position of the source column within the data source.</span></span></param>
        <param name="destinationColumnIndex"><span data-ttu-id="c206f-127">대상 테이블 내에 있는 대상 열의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-127">The ordinal position of the destination column within the destination table.</span></span></param>
        <summary><span data-ttu-id="c206f-128">소스 및 대상 열을 모두 지정하는 서수를 사용하여 새 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />을 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-128">Creates a new <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> and adds it to the collection, using ordinals to specify both source and destination columns.</span></span></summary>
        <returns><span data-ttu-id="c206f-129">열 매핑입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-129">A column mapping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c206f-130">컬렉션에서 매핑을 균일 해야: 모든 정수/정수 쌍, 모든 문자열/문자열 쌍, 모든 정수/문자열 쌍 또는 문자열/정수 쌍을 모두 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-130">Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs.</span></span> <span data-ttu-id="c206f-131">컬렉션에 이미 다른 사용자와 다른 매핑을 추가 하려는 경우는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-131">If you try to add a mapping that is different from others already in the collection, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c206f-132">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 **AdventureWorks** 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</span><span class="sxs-lookup"><span data-stu-id="c206f-132">The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database.</span></span> <span data-ttu-id="c206f-133">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-133">Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</span></span> <span data-ttu-id="c206f-134"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> 개체의 원본 및 대상 열 서 수 위치를 사용 하 여 대량 복사에 대 한 열 맵을 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-134"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy using the ordinal position of the source and destination columns.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-135">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-135">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-136">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-136">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-137">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-137">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollectionOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (int sourceColumnIndex, string destinationColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(int32 sourceColumnIndex, string destinationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (sourceColumnIndex As Integer, destinationColumn As String) As SqlBulkCopyColumnMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlBulkCopyColumnMapping ^ Add(int sourceColumnIndex, System::String ^ destinationColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumnIndex" Type="System.Int32" />
        <Parameter Name="destinationColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumnIndex"><span data-ttu-id="c206f-138">데이터 소스 내에 있는 소스 열의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-138">The ordinal position of the source column within the data source.</span></span></param>
        <param name="destinationColumn"><span data-ttu-id="c206f-139">대상 테이블 내에 있는 대상 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-139">The name of the destination column within the destination table.</span></span></param>
        <summary><span data-ttu-id="c206f-140">소스 열에 대한 서수와 대상 열에 대한 문자열을 사용하여 새 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />을 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-140">Creates a new <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> and adds it to the collection, using an ordinal for the source column and a string for the destination column.</span></span></summary>
        <returns><span data-ttu-id="c206f-141">열 매핑입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-141">A column mapping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c206f-142">컬렉션에서 매핑을 균일 해야: 모든 정수/정수 쌍, 모든 문자열/문자열 쌍, 모든 정수/문자열 쌍 또는 문자열/정수 쌍을 모두 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-142">Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs.</span></span> <span data-ttu-id="c206f-143">컬렉션에 이미 다른 사용자와 다른 매핑을 추가 하려는 경우는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-143">If you try to add a mapping that is different from others already in the collection, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c206f-144">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 **AdventureWorks** 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</span><span class="sxs-lookup"><span data-stu-id="c206f-144">The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database.</span></span> <span data-ttu-id="c206f-145">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-145">Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</span></span> <span data-ttu-id="c206f-146"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> 개체는 대량 복사에 대 한 열 맵을 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-146"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-147">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-147">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-148">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-148">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-149">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-149">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingIndexColName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingIndexColName/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingIndexColName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingIndexColName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (string sourceColumn, int destinationColumnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(string sourceColumn, int32 destinationColumnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (sourceColumn As String, destinationColumnIndex As Integer) As SqlBulkCopyColumnMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlBulkCopyColumnMapping ^ Add(System::String ^ sourceColumn, int destinationColumnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="destinationColumnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceColumn"><span data-ttu-id="c206f-150">데이터 소스 내에 있는 소스 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-150">The name of the source column within the data source.</span></span></param>
        <param name="destinationColumnIndex"><span data-ttu-id="c206f-151">대상 테이블 내에 있는 대상 열의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-151">The ordinal position of the destination column within the destination table.</span></span></param>
        <summary><span data-ttu-id="c206f-152">소스 열을 설명하는 열 이름과 대상 열을 지정하는 서수를 사용하여 새 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />을 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-152">Creates a new <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> and adds it to the collection, using a column name to describe the source column and an ordinal to specify the destination column.</span></span></summary>
        <returns><span data-ttu-id="c206f-153">열 매핑입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-153">A column mapping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c206f-154">컬렉션에서 매핑을 균일 해야: 모든 정수/정수 쌍, 모든 문자열/문자열 쌍, 모든 정수/문자열 쌍 또는 문자열/정수 쌍을 모두 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-154">Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs.</span></span> <span data-ttu-id="c206f-155">컬렉션에 이미 다른 사용자와 다른 매핑을 추가 하려는 경우는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-155">If you try to add a mapping that is different from others already in the collection, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c206f-156">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 **AdventureWorks** 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</span><span class="sxs-lookup"><span data-stu-id="c206f-156">The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database.</span></span> <span data-ttu-id="c206f-157">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-157">Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</span></span> <span data-ttu-id="c206f-158"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> 개체는 대량 복사에 대 한 열 맵을 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-158"><xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> objects are used to create a column map for the bulk copy.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-159">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-159">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-160">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-160">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-161">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-161">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingColNameIndex#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingColNameIndex/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingColNameIndex#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingColNameIndex/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping Add (string sourceColumn, string destinationColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Add(string sourceColumn, string destinationColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (sourceColumn As String, destinationColumn As String) As SqlBulkCopyColumnMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::SqlClient::SqlBulkCopyColumnMapping ^ Add(System::String ^ sourceColumn, System::String ^ destinationColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="destinationColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceColumn"><span data-ttu-id="c206f-162">데이터 소스 내에 있는 소스 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-162">The name of the source column within the data source.</span></span></param>
        <param name="destinationColumn"><span data-ttu-id="c206f-163">대상 테이블 내에 있는 대상 열의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-163">The name of the destination column within the destination table.</span></span></param>
        <summary><span data-ttu-id="c206f-164">소스 및 대상 열을 모두 지정하는 열 이름을 사용하여 새 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />을 만들어 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-164">Creates a new <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> and adds it to the collection, using column names to specify both source and destination columns.</span></span></summary>
        <returns><span data-ttu-id="c206f-165">열 매핑입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-165">A column mapping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c206f-166">컬렉션에서 매핑을 균일 해야: 모든 정수/정수 쌍, 모든 문자열/문자열 쌍, 모든 정수/문자열 쌍 또는 문자열/정수 쌍을 모두 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-166">Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs.</span></span> <span data-ttu-id="c206f-167">컬렉션에 이미 다른 사용자와 다른 매핑을 추가 하려는 경우는 <xref:System.InvalidOperationException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-167">If you try to add a mapping that is different from others already in the collection, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c206f-168">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 **AdventureWorks** 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</span><span class="sxs-lookup"><span data-stu-id="c206f-168">The following example bulk copies data from a source table in the **AdventureWorks** sample database to a destination table in the same database.</span></span> <span data-ttu-id="c206f-169">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-169">Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</span></span> <span data-ttu-id="c206f-170">코드는 만듭니다는 <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> 열 이름을 지정 하 여 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-170">The code creates a <xref:System.Data.SqlClient.SqlBulkCopyColumnMapping> object by specifying the column names.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-171">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-171">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-172">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-172">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-173">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-173">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollection/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingCollection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingCollection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c206f-174">컬렉션의 내용을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-174">Clears the contents of the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c206f-175"><xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> 단일을 사용 하는 경우에 가장 일반적으로 메서드는 <xref:System.Data.SqlClient.SqlBulkCopy> 인스턴스를 둘 이상의 대량 복사 작업을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-175">The <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> method is most commonly used when you use a single <xref:System.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation.</span></span> <span data-ttu-id="c206f-176">한 번의 대량 복사 작업에 대 한 열 매핑을 만들 경우 지워야는 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection> 후는 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 메서드 및 다음 대량 복사 처리 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="c206f-176">If you create column mappings for one bulk copy operation, you must clear the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection> after the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method and before processing the next bulk copy.</span></span>  
  
 <span data-ttu-id="c206f-177">동일한를 사용 하 여 여러 대량 복사를 수행 <xref:System.Data.SqlClient.SqlBulkCopy> 인스턴스는 일반적으로 보다 더 효율적일 수는 성능 관점에서 별도 사용 하 여 <xref:System.Data.SqlClient.SqlBulkCopy> 각 작업에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-177">Performing several bulk copies using the same <xref:System.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:System.Data.SqlClient.SqlBulkCopy> for each operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c206f-178">다음 예제에서는 두 가지 대량 복사 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-178">The following example performs two bulk copy operations.</span></span> <span data-ttu-id="c206f-179">첫 번째 작업에는 판매 주문 헤더 정보를 복사 하 고 두 번째 판매 주문 세부 정보를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-179">The first operation copies sales order header information, and the second copies sales order details.</span></span> <span data-ttu-id="c206f-180">필요 하지는 않지만 엄격 하 게이 예에서 (원본 및 대상 열의 서 수 위치가 일치 않기 때문에),이 예제에서는 각 대량 복사 작업에 대 한 열 매핑을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-180">Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation.</span></span> <span data-ttu-id="c206f-181"><xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> 첫 번째 대량 복사가 수행 되 고 다음 대량 전에 복사본의 열 매핑을 정의 후 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-181">The <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> method must be used after the first bulk copy is performed and before the next bulk copy's column mappings are defined.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-182">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-182">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-183">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-183">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-184">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-184">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingOrdersDetails#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdersDetails/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingOrdersDetails#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingOrdersDetails/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.SqlClient.SqlBulkCopyColumnMapping value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Data.SqlClient.SqlBulkCopyColumnMapping value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As SqlBulkCopyColumnMapping) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Data::SqlClient::SqlBulkCopyColumnMapping ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c206f-185">올바른 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-185">A valid <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="c206f-186">지정된 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-186">Gets a value indicating whether a specified <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object exists in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="c206f-187">지정된 매핑이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-187"><see langword="true" /> if the specified mapping exists in the collection; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.SqlClient.SqlBulkCopyColumnMapping[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.SqlClient.SqlBulkCopyColumnMapping[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As SqlBulkCopyColumnMapping(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::SqlClient::SqlBulkCopyColumnMapping ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c206f-188"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-188">The one-dimensional <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> array that is the destination of the elements copied from <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />.</span></span> <span data-ttu-id="c206f-189">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-189">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="c206f-190"><c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-190">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c206f-191"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />의 요소를 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 항목 배열의 특정 인덱스에서 시작하는 위치에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-191">Copies the elements of the <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> to an array of <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> items, starting at a particular index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.SqlClient.SqlBulkCopyColumnMapping value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.SqlClient.SqlBulkCopyColumnMapping value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As SqlBulkCopyColumnMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::SqlClient::SqlBulkCopyColumnMapping ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c206f-192">검색할 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-192">The <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object for which to search.</span></span></param>
        <summary><span data-ttu-id="c206f-193">지정된 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체의 인덱스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-193">Gets the index of the specified <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.</span></span></summary>
        <returns><span data-ttu-id="c206f-194">열 매핑이 컬렉션에 있으면 해당 열 매핑의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-194">The zero-based index of the column mapping, or -1 if the column mapping is not found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Data.SqlClient.SqlBulkCopyColumnMapping value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Data.SqlClient.SqlBulkCopyColumnMapping value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As SqlBulkCopyColumnMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Data::SqlClient::SqlBulkCopyColumnMapping ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c206f-195"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> 내에서 새 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />을 삽입할 위치의 정수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-195">Integer value of the location within the <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /> at which to insert the new <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />.</span></span></param>
        <param name="value">
          <span data-ttu-id="c206f-196">컬렉션에 삽입될 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-196"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object to be inserted in the collection.</span></span></param>
        <summary><span data-ttu-id="c206f-197">새 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />을 지정된 인덱스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-197">Insert a new <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> at the index specified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMapping this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlBulkCopyColumnMapping Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As SqlBulkCopyColumnMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlBulkCopyColumnMapping ^ default[int] { System::Data::SqlClient::SqlBulkCopyColumnMapping ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c206f-198">찾을 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-198">The zero-based index of the <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> to find.</span></span></param>
        <summary><span data-ttu-id="c206f-199">지정된 인덱스의 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-199">Gets the <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object at the specified index.</span></span></summary>
        <value><span data-ttu-id="c206f-200"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-200">A <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.SqlClient.SqlBulkCopyColumnMapping value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.SqlClient.SqlBulkCopyColumnMapping value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As SqlBulkCopyColumnMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::SqlClient::SqlBulkCopyColumnMapping ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlClient.SqlBulkCopyColumnMapping" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c206f-201">컬렉션에서 제거할 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-201"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="c206f-202"><see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />에서 지정된 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />요소를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-202">Removes the specified <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> element from the <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c206f-203"><xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> 단일을 사용 하는 경우에 가장 일반적으로 메서드는 <xref:System.Data.SqlClient.SqlBulkCopy> 인스턴스를 둘 이상의 대량 복사 작업을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-203">The <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> method is most commonly used when you use a single <xref:System.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation.</span></span> <span data-ttu-id="c206f-204">더 이상 후에 적용 되는 매핑을 제거 해야 한 대량 복사 작업에 대 한 열 매핑을 만들면는 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 메서드를 호출한 다음 대량 복사에 대 한 매핑을 정의 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="c206f-204">If you create column mappings for one bulk copy operation, you must remove mappings that no longer apply after the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called and before defining mapping for the next bulk copy.</span></span> <span data-ttu-id="c206f-205">사용 하 여 전체 컬렉션을 지울 수는 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> 메서드 또는 개별적으로 사용 하 여 매핑을 제거할은 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> 메서드 또는 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c206f-205">You can clear the entire collection by using the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> method, or remove mappings individually using the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> method or the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="c206f-206">동일한를 사용 하 여 여러 대량 복사를 수행 <xref:System.Data.SqlClient.SqlBulkCopy> 인스턴스는 일반적으로 보다 더 효율적일 수는 성능 관점에서 별도 사용 하 여 <xref:System.Data.SqlClient.SqlBulkCopy> 각 작업에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-206">Performing several bulk copies using the same <xref:System.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:System.Data.SqlClient.SqlBulkCopy> for each operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c206f-207">다음 예제에서는 두 가지 대량 복사 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-207">The following example performs two bulk copy operations.</span></span> <span data-ttu-id="c206f-208">첫 번째 작업에는 판매 주문 헤더 정보를 복사 하 고 두 번째 판매 주문 세부 정보를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-208">The first operation copies sales order header information, and the second copies sales order details.</span></span> <span data-ttu-id="c206f-209">필요 하지는 않지만 엄격 하 게이 예에서 (원본 및 대상 열의 서 수 위치가 일치 않기 때문에),이 예제에서는 각 대량 복사 작업에 대 한 열 매핑을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-209">Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation.</span></span> <span data-ttu-id="c206f-210">두 대량 복사에 대 한 매핑이 포함 된 **SalesOrderID**대량 복사 작업, 예제 제거에 전체 컬렉션을 제외 하 고 모든 매핑 선택 취소 하는 대신 하므로 **SalesOrderID** 매핑한 다음 두 번째 대량 복사 작업에 대 한 적절 한 매핑을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-210">Both bulk copies include a mapping for the **SalesOrderID**, so rather than clearing the entire collection between bulk copy operations, the example removes all mappings except for the **SalesOrderID** mapping and then adds the appropriate mappings for the second bulk copy operation.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-211">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-211">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-212">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-212">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-213">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-213">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingRemove#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingRemove/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingRemove#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingRemove/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c206f-214">컬렉션에서 제거할 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 개체의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-214">The zero-based index of the <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> object to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="c206f-215">컬렉션에서 지정된 인덱스의 매핑을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-215">Removes the mapping at the specified index from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c206f-216"><xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> 단일을 사용 하는 경우에 가장 일반적으로 메서드는 <xref:System.Data.SqlClient.SqlBulkCopy> 인스턴스를 둘 이상의 대량 복사 작업을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-216">The <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> method is most commonly used when you use a single <xref:System.Data.SqlClient.SqlBulkCopy> instance to process more than one bulk copy operation.</span></span> <span data-ttu-id="c206f-217">더 이상 후에 적용 되는 매핑을 제거 해야 한 대량 복사 작업에 대 한 열 매핑을 만들면는 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 메서드를 호출한 다음 대량 복사에 대 한 매핑을 정의 하기 전에.</span><span class="sxs-lookup"><span data-stu-id="c206f-217">If you create column mappings for one bulk copy operation, you must remove mappings that no longer apply after the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called and before defining mapping for the next bulk copy.</span></span> <span data-ttu-id="c206f-218">사용 하 여 전체 컬렉션을 지울 수는 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> 메서드 또는 개별적으로 사용 하 여 매핑을 제거할은 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> 메서드 또는 <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="c206f-218">You can clear the entire collection by using the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A> method, or remove mappings individually using the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A> method or the <xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="c206f-219">동일한를 사용 하 여 여러 대량 복사를 수행 <xref:System.Data.SqlClient.SqlBulkCopy> 인스턴스는 일반적으로 보다 더 효율적일 수는 성능 관점에서 별도 사용 하 여 <xref:System.Data.SqlClient.SqlBulkCopy> 각 작업에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-219">Performing several bulk copies using the same <xref:System.Data.SqlClient.SqlBulkCopy> instance will usually be more efficient from a performance point of view than using a separate <xref:System.Data.SqlClient.SqlBulkCopy> for each operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c206f-220">다음 예제에서는 두 가지 대량 복사 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-220">The following example performs two bulk copy operations.</span></span> <span data-ttu-id="c206f-221">첫 번째 작업에는 판매 주문 헤더 정보를 복사 하 고 두 번째 판매 주문 세부 정보를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-221">The first operation copies sales order header information, and the second copies sales order details.</span></span> <span data-ttu-id="c206f-222">필요 하지는 않지만 엄격 하 게이 예에서 (원본 및 대상 열의 서 수 위치가 일치 않기 때문에),이 예제에서는 각 대량 복사 작업에 대 한 열 매핑을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-222">Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation.</span></span> <span data-ttu-id="c206f-223">두 대량 복사에 대 한 매핑이 포함 된 **SalesOrderID**대량 복사 작업, 예제 제거에 전체 컬렉션을 제외 하 고 모든 매핑 선택 취소 하는 대신 하므로 **SalesOrderID** 매핑한 다음 두 번째 대량 복사 작업에 대 한 적절 한 매핑을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-223">Both bulk copies include a mapping for the **SalesOrderID**, so rather than clearing the entire collection between bulk copy operations, the example removes all mappings except for the **SalesOrderID** mapping and then adds the appropriate mappings for the second bulk copy operation.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c206f-224">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 [대량 복사 예제 설정](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-224">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="c206f-225">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 **SqlBulkCopy** 만 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-225">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="c206f-226">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 `INSERT … SELECT` 문의 데이터를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c206f-226">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT … SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ColumnMappingRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingRemoveAt/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ColumnMappingRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ColumnMappingRemoveAt/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>