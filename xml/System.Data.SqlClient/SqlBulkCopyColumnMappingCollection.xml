<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlBulkCopyColumnMappingCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b1c978e79d13a5a2248dbfd6ce316e3c8f327242.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1c978e79d13a5a2248dbfd6ce316e3c8f327242</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>Collection of <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> objects that inherits from <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>에서 상속한 <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>Column mappings define the mapping between data source and the target table.</source>
          <target state="translated">열 매핑은 데이터 원본 및 대상 테이블 간의 매핑을 정의합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>If mappings are not defined—that is, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection is empty—the columns are mapped implicitly based on ordinal position.</source>
          <target state="translated">매핑이 정의 되지 않은 경우-즉,는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> 컬렉션이 비어-열 서 수 위치에 따라 암시적으로 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>For this to work, source and target schemas must match.</source>
          <target state="translated">이렇게 하려면 소스 및 대상 스키마 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>If they do not, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> collection is not empty, not every column present in the data source has to be specified.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A&gt;</ph> 컬렉션이 비어 있지 않으면, 모든 열을 데이터 원본에는 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>Those not mapped by the collection are ignored.</source>
          <target state="translated">컬렉션에 의해 매핑되지 않은 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>You can refer to source and target columns by either name or ordinal.</source>
          <target state="translated">이름 또는 서 수 소스 및 대상 열을 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>You can mix by-name and by-ordinal column references in the same mappings collection.</source>
          <target state="translated">이름 및 동일한 매핑 컬렉션에서 서 수 열 참조를 혼합할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>The following example bulk copies data from a source table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database to a destination table in the same database.</source>
          <target state="translated">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</source>
          <target state="translated">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> are added to the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&gt;</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> object to create a column map for the bulk copy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> 에 추가 되는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&gt;</ph> 에 대 한는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 대량 복사에 대 한 열 맵을 만들 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection">
          <source>Adds a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>에 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph>을 추가합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object that describes the mapping to be added to the collection.</source>
          <target state="translated">컬렉션에 추가될 매핑을 설명하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Adds the specified mapping to the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph>.</source>
          <target state="translated">지정된 매핑을 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph>에 추가합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>The following example bulk copies data from a source table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database to a destination table in the same database.</source>
          <target state="translated">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</source>
          <target state="translated">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> objects are used to create a column map for the bulk copy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> 개체는 대량 복사에 대 한 열 맵을 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>The ordinal position of the source column within the data source.</source>
          <target state="translated">데이터 소스 내에 있는 소스 열의 위치입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>The ordinal position of the destination column within the destination table.</source>
          <target state="translated">대상 테이블 내에 있는 대상 열의 위치입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> and adds it to the collection, using ordinals to specify both source and destination columns.</source>
          <target state="translated">소스 및 대상 열을 모두 지정하는 서수를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>을 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>A column mapping.</source>
          <target state="translated">열 매핑입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs.</source>
          <target state="translated">컬렉션에서 매핑을 균일 해야: 모든 정수/정수 쌍, 모든 문자열/문자열 쌍, 모든 정수/문자열 쌍 또는 문자열/정수 쌍을 모두 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>If you try to add a mapping that is different from others already in the collection, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">컬렉션에 이미 다른 사용자와 다른 매핑을 추가 하려는 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>The following example bulk copies data from a source table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database to a destination table in the same database.</source>
          <target state="translated">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</source>
          <target state="translated">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> objects are used to create a column map for the bulk copy using the ordinal position of the source and destination columns.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> 개체의 원본 및 대상 열 서 수 위치를 사용 하 여 대량 복사에 대 한 열 맵을 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.Int32)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>The ordinal position of the source column within the data source.</source>
          <target state="translated">데이터 소스 내에 있는 소스 열의 위치입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>The name of the destination column within the destination table.</source>
          <target state="translated">대상 테이블 내에 있는 대상 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> and adds it to the collection, using an ordinal for the source column and a string for the destination column.</source>
          <target state="translated">소스 열에 대한 서수와 대상 열에 대한 문자열을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>을 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>A column mapping.</source>
          <target state="translated">열 매핑입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs.</source>
          <target state="translated">컬렉션에서 매핑을 균일 해야: 모든 정수/정수 쌍, 모든 문자열/문자열 쌍, 모든 정수/문자열 쌍 또는 문자열/정수 쌍을 모두 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>If you try to add a mapping that is different from others already in the collection, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">컬렉션에 이미 다른 사용자와 다른 매핑을 추가 하려는 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>The following example bulk copies data from a source table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database to a destination table in the same database.</source>
          <target state="translated">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</source>
          <target state="translated">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> objects are used to create a column map for the bulk copy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> 개체는 대량 복사에 대 한 열 맵을 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.Int32,System.String)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>The name of the source column within the data source.</source>
          <target state="translated">데이터 소스 내에 있는 소스 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>The ordinal position of the destination column within the destination table.</source>
          <target state="translated">대상 테이블 내에 있는 대상 열의 위치입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> and adds it to the collection, using a column name to describe the source column and an ordinal to specify the destination column.</source>
          <target state="translated">소스 열을 설명하는 열 이름과 대상 열을 지정하는 서수를 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>을 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>A column mapping.</source>
          <target state="translated">열 매핑입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs.</source>
          <target state="translated">컬렉션에서 매핑을 균일 해야: 모든 정수/정수 쌍, 모든 문자열/문자열 쌍, 모든 정수/문자열 쌍 또는 문자열/정수 쌍을 모두 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>If you try to add a mapping that is different from others already in the collection, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">컬렉션에 이미 다른 사용자와 다른 매핑을 추가 하려는 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>The following example bulk copies data from a source table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database to a destination table in the same database.</source>
          <target state="translated">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</source>
          <target state="translated">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> objects are used to create a column map for the bulk copy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> 개체는 대량 복사에 대 한 열 맵을 만드는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.Int32)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>The name of the source column within the data source.</source>
          <target state="translated">데이터 소스 내에 있는 소스 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>The name of the destination column within the destination table.</source>
          <target state="translated">대상 테이블 내에 있는 대상 열의 이름입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> and adds it to the collection, using column names to specify both source and destination columns.</source>
          <target state="translated">소스 및 대상 열을 모두 지정하는 열 이름을 사용하여 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>을 만들어 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>A column mapping.</source>
          <target state="translated">열 매핑입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>Mappings in a collection must be uniform: either all integer/integer pairs, all string/string pairs, all integer/string pairs, or all string/integer pairs.</source>
          <target state="translated">컬렉션에서 매핑을 균일 해야: 모든 정수/정수 쌍, 모든 문자열/문자열 쌍, 모든 정수/문자열 쌍 또는 문자열/정수 쌍을 모두 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>If you try to add a mapping that is different from others already in the collection, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">컬렉션에 이미 다른 사용자와 다른 매핑을 추가 하려는 경우는 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>The following example bulk copies data from a source table in the <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> sample database to a destination table in the same database.</source>
          <target state="translated">원본 테이블에서 데이터를 다음 예제에서는 대량 복사는 <bpt id="p1">**</bpt>AdventureWorks<ept id="p1">**</ept> 동일한 데이터베이스에 대상 테이블에 대 한 예제 데이터베이스.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>Although the number of columns in the destination matches the number of columns in the source, the column names and ordinal positions do not match.</source>
          <target state="translated">원본에 있는 열의 수와 일치 하는 대상의 열 수 있지만 열 이름 및 서 수 위치 일치 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>The code creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> object by specifying the column names.</source>
          <target state="translated">코드는 만듭니다는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMapping&gt;</ph> 열 이름을 지정 하 여 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Add(System.String,System.String)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>Clears the contents of the collection.</source>
          <target state="translated">컬렉션의 내용을 지웁니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A&gt;</ph> method is most commonly used when you use a single <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to process more than one bulk copy operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A&gt;</ph> 단일을 사용 하는 경우에 가장 일반적으로 메서드는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 인스턴스를 둘 이상의 대량 복사 작업을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>If you create column mappings for one bulk copy operation, you must clear the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&gt;</ph> after the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method and before processing the next bulk copy.</source>
          <target state="translated">한 번의 대량 복사 작업에 대 한 열 매핑을 만들 경우 지워야는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection&gt;</ph> 후는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> 메서드 및 다음 대량 복사 처리 하기 전에.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>Performing several bulk copies using the same <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance will usually be more efficient from a performance point of view than using a separate <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> for each operation.</source>
          <target state="translated">동일한를 사용 하 여 여러 대량 복사를 수행 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 인스턴스는 일반적으로 보다 더 효율적일 수는 성능 관점에서 별도 사용 하 여 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 각 작업에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>The following example performs two bulk copy operations.</source>
          <target state="translated">다음 예제에서는 두 가지 대량 복사 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>The first operation copies sales order header information, and the second copies sales order details.</source>
          <target state="translated">첫 번째 작업에는 판매 주문 헤더 정보를 복사 하 고 두 번째 판매 주문 세부 정보를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation.</source>
          <target state="translated">필요 하지는 않지만 엄격 하 게이 예에서 (원본 및 대상 열의 서 수 위치가 일치 않기 때문에),이 예제에서는 각 대량 복사 작업에 대 한 열 매핑을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A&gt;</ph> method must be used after the first bulk copy is performed and before the next bulk copy's column mappings are defined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A&gt;</ph> 첫 번째 대량 복사가 수행 되 고 다음 대량 전에 복사본의 열 매핑을 정의 후 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>A valid <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object.</source>
          <target state="translated">올바른 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Gets a value indicating whether a specified <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object exists in the collection.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Contains(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified mapping exists in the collection; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 매핑이 컬렉션에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> array that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>에서 복사한 요소의 대상인 1차원 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.CopyTo(System.Data.SqlClient.SqlBulkCopyColumnMapping[],System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph> to an array of <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> items, starting at a particular index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph>의 요소를 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 항목 배열의 특정 인덱스에서 시작하는 위치에 복사합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object for which to search.</source>
          <target state="translated">검색할 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Gets the index of the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체의 인덱스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.IndexOf(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>The zero-based index of the column mapping, or -1 if the column mapping is not found in the collection.</source>
          <target state="translated">열 매핑이 컬렉션에 있으면 해당 열 매핑의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Integer value of the location within the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph> at which to insert the new <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph> 내에서 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>을 삽입할 위치의 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object to be inserted in the collection.</source>
          <target state="translated">컬렉션에 삽입될 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Insert(System.Int32,System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Insert a new <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> at the index specified.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>을 지정된 인덱스에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> to find.</source>
          <target state="translated">찾을 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object at the specified index.</source>
          <target state="translated">지정된 인덱스의 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Item(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object to be removed from the collection.</source>
          <target state="translated">컬렉션에서 제거할 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> element from the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph>에서 지정된 <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" /&gt;</ph>요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A&gt;</ph> method is most commonly used when you use a single <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to process more than one bulk copy operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A&gt;</ph> 단일을 사용 하는 경우에 가장 일반적으로 메서드는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 인스턴스를 둘 이상의 대량 복사 작업을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>If you create column mappings for one bulk copy operation, you must remove mappings that no longer apply after the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called and before defining mapping for the next bulk copy.</source>
          <target state="translated">더 이상 후에 적용 되는 매핑을 제거 해야 한 대량 복사 작업에 대 한 열 매핑을 만들면는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> 메서드를 호출한 다음 대량 복사에 대 한 매핑을 정의 하기 전에.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>You can clear the entire collection by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A&gt;</ph> method, or remove mappings individually using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 전체 컬렉션을 지울 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A&gt;</ph> 메서드 또는 개별적으로 사용 하 여 매핑을 제거할은 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A&gt;</ph> 메서드 또는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Performing several bulk copies using the same <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance will usually be more efficient from a performance point of view than using a separate <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> for each operation.</source>
          <target state="translated">동일한를 사용 하 여 여러 대량 복사를 수행 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 인스턴스는 일반적으로 보다 더 효율적일 수는 성능 관점에서 별도 사용 하 여 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 각 작업에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>The following example performs two bulk copy operations.</source>
          <target state="translated">다음 예제에서는 두 가지 대량 복사 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>The first operation copies sales order header information, and the second copies sales order details.</source>
          <target state="translated">첫 번째 작업에는 판매 주문 헤더 정보를 복사 하 고 두 번째 판매 주문 세부 정보를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation.</source>
          <target state="translated">필요 하지는 않지만 엄격 하 게이 예에서 (원본 및 대상 열의 서 수 위치가 일치 않기 때문에),이 예제에서는 각 대량 복사 작업에 대 한 열 매핑을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>Both bulk copies include a mapping for the <bpt id="p1">**</bpt>SalesOrderID<ept id="p1">**</ept>, so rather than clearing the entire collection between bulk copy operations, the example removes all mappings except for the <bpt id="p2">**</bpt>SalesOrderID<ept id="p2">**</ept> mapping and then adds the appropriate mappings for the second bulk copy operation.</source>
          <target state="translated">두 대량 복사에 대 한 매핑이 포함 된 <bpt id="p1">**</bpt>SalesOrderID<ept id="p1">**</ept>대량 복사 작업, 예제 제거에 전체 컬렉션을 제외 하 고 모든 매핑 선택 취소 하는 대신 하므로 <bpt id="p2">**</bpt>SalesOrderID<ept id="p2">**</ept> 매핑한 다음 두 번째 대량 복사 작업에 대 한 적절 한 매핑을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove(System.Data.SqlClient.SqlBulkCopyColumnMapping)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> object to be removed from the collection.</source>
          <target state="translated">컬렉션에서 제거할 <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /&gt;</ph> 개체의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>Removes the mapping at the specified index from the collection.</source>
          <target state="translated">컬렉션에서 지정된 인덱스의 매핑을 제거합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A&gt;</ph> method is most commonly used when you use a single <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance to process more than one bulk copy operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A&gt;</ph> 단일을 사용 하는 경우에 가장 일반적으로 메서드는 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 인스턴스를 둘 이상의 대량 복사 작업을 처리 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>If you create column mappings for one bulk copy operation, you must remove mappings that no longer apply after the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> method is called and before defining mapping for the next bulk copy.</source>
          <target state="translated">더 이상 후에 적용 되는 매핑을 제거 해야 한 대량 복사 작업에 대 한 열 매핑을 만들면는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A&gt;</ph> 메서드를 호출한 다음 대량 복사에 대 한 매핑을 정의 하기 전에.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>You can clear the entire collection by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A&gt;</ph> method, or remove mappings individually using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 전체 컬렉션을 지울 수는 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Clear%2A&gt;</ph> 메서드 또는 개별적으로 사용 하 여 매핑을 제거할은 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.Remove%2A&gt;</ph> 메서드 또는 <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>Performing several bulk copies using the same <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> instance will usually be more efficient from a performance point of view than using a separate <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> for each operation.</source>
          <target state="translated">동일한를 사용 하 여 여러 대량 복사를 수행 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 인스턴스는 일반적으로 보다 더 효율적일 수는 성능 관점에서 별도 사용 하 여 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlBulkCopy&gt;</ph> 각 작업에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>The following example performs two bulk copy operations.</source>
          <target state="translated">다음 예제에서는 두 가지 대량 복사 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>The first operation copies sales order header information, and the second copies sales order details.</source>
          <target state="translated">첫 번째 작업에는 판매 주문 헤더 정보를 복사 하 고 두 번째 판매 주문 세부 정보를 복사 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>Although not strictly necessary in this example (because the ordinal positions of the source and destination columns do match), the example defines column mappings for each bulk copy operation.</source>
          <target state="translated">필요 하지는 않지만 엄격 하 게이 예에서 (원본 및 대상 열의 서 수 위치가 일치 않기 때문에),이 예제에서는 각 대량 복사 작업에 대 한 열 매핑을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>Both bulk copies include a mapping for the <bpt id="p1">**</bpt>SalesOrderID<ept id="p1">**</ept>, so rather than clearing the entire collection between bulk copy operations, the example removes all mappings except for the <bpt id="p2">**</bpt>SalesOrderID<ept id="p2">**</ept> mapping and then adds the appropriate mappings for the second bulk copy operation.</source>
          <target state="translated">두 대량 복사에 대 한 매핑이 포함 된 <bpt id="p1">**</bpt>SalesOrderID<ept id="p1">**</ept>대량 복사 작업, 예제 제거에 전체 컬렉션을 제외 하 고 모든 매핑 선택 취소 하는 대신 하므로 <bpt id="p2">**</bpt>SalesOrderID<ept id="p2">**</ept> 매핑한 다음 두 번째 대량 복사 작업에 대 한 적절 한 매핑을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>This sample will not run unless you have created the work tables as described in <bpt id="p1">[</bpt>Bulk Copy Example Setup<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>.</source>
          <target state="translated">이 샘플을 만들지 않은 경우 작업 테이블에 설명 된 대로 실행 되지 것입니다 <bpt id="p1">[</bpt>대량 복사 예제 설정<ept id="p1">](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>This code is provided to demonstrate the syntax for using <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> only.</source>
          <target state="translated">이 코드는 사용 하는 구문을 보여 주기 위해 제공 됩니다 <bpt id="p1">**</bpt>SqlBulkCopy<ept id="p1">**</ept> 만 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlBulkCopyColumnMappingCollection.RemoveAt(System.Int32)">
          <source>If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL <ph id="ph1">`INSERT … SELECT`</ph> statement to copy the data.</source>
          <target state="translated">더 쉽고 빠르게 Transact SQL 사용할 소스 테이블과 대상 테이블이 동일한 SQL Server 인스턴스에 있는 경우 <ph id="ph1">`INSERT … SELECT`</ph> 문의 데이터를 복사 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>