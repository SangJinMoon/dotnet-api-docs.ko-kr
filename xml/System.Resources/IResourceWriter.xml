<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IResourceWriter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58dba7d85f9728eb6e1fdc317242b5776a5a86af0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dba7d85f9728eb6e1fdc317242b5776a5a86af0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.IResourceWriter">
          <source>Provides the base functionality for writing resources to an output file or stream.</source>
          <target state="translated">출력 파일 또는 스트림에 리소스를 쓰는 기본 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Resource writers are used to write resources to files in a particular file format.</source>
          <target state="translated">리소스 writer는 특정 파일 형식에는 파일에 리소스를 쓰는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file).</source>
          <target state="translated">리소스 파일 (예:.txt,.resx, 또는 이진.resources 파일 이외의 것에 리소스를 저장) 작성 되는 방식을 제어 하려는 경우이 인터페이스를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Otherwise, use the default <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class, which writes resources to a binary .resources file, or the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> class, which writes resources to an XML resource (.resx) file.</source>
          <target state="translated">그렇지 않은 경우 기본값을 사용 하 여 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 이진.resources 파일에 리소스를 쓰는, 클래스 또는 <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> XML 리소스 (.resx) 파일에 리소스를 기록 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Resources.IResourceWriter">
          <source>Adds a resource to the list of resources to be written to an output file or output stream.</source>
          <target state="translated">출력 파일 또는 출력 스트림에 쓸 리소스 목록에 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Name of a resource.</source>
          <target state="translated">리소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Value of a resource as an 8-bit unsigned integer array.</source>
          <target state="translated">부호 없는 8비트 정수 배열로 기록될 리소스 값입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Adds an 8-bit unsigned integer array as a named resource to the list of resources to be written.</source>
          <target state="translated">부호 없는 8비트 정수 배열을 기록할 리소스 목록에 명명된 리소스로 추가합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resources are not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">리소스 기록 됩니다는 <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The name of the resource.</source>
          <target state="translated">리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The value of the resource.</source>
          <target state="translated">리소스의 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>Adds a named resource of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to the list of resources to be written.</source>
          <target state="translated">기록할 리소스 목록에 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 형식의 명명된 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">리소스 기록 되는 <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`value`</ph> might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used.</source>
          <target state="translated"><ph id="ph1">`value`</ph> 수에 따라 리소스 작성기를 사용 하는 형식 변환기를 제공 해야 할 수 있으므로, 직렬화 가능 해야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The value of the resource.</source>
          <target state="translated">리소스의 값입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>Adds a named resource of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to the list of resources to be written.</source>
          <target state="translated">기록할 리소스 목록에 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 형식의 명명된 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">리소스 기록 되는 <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.Close">
          <source>Closes the underlying resource file or stream, ensuring all the data has been written to the file.</source>
          <target state="translated">모든 데이터가 파일에 쓰여졌는지 확인하고 내부 리소스 파일 또는 스트림을 닫습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Close">
          <source>If necessary, <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> will call the <ph id="ph2">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method to output the resources to the underlying file or stream before closing it.</source>
          <target state="translated">필요한 경우 <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> 호출 됩니다는 <ph id="ph2">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 메서드를 닫기 전에 리소스를 원본으로 사용 하는 파일이 나 스트림에 출력 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.Generate">
          <source>Writes all the resources added by the <ph id="ph1">&lt;see cref="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" /&gt;</ph> method to the output file or stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" /&gt;</ph> 메서드에서 추가한 모든 리소스를 출력 파일 또는 스트림에 기록합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> does not close the output file or output stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 출력 파일 또는 출력 스트림에 닫히지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source>Instead, consider calling the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">대신, 호출 해 보십시오는 <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> is useful when you want to create a resource file, but you don't want to close the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 리소스 파일을 만들려고 할 수 있지만 출력 스트림을 닫지 하지 않을 때 유용 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> can be called only once.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 한 번만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source>After you call <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>, all <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> methods other than <ph id="ph3">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>모든 <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> 이외의 <ph id="ph3">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>