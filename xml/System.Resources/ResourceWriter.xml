<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResourceWriter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c8904a91116396045e9b5669d9767d0e81cdc42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c8904a91116396045e9b5669d9767d0e81cdc42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Writes resources in the system-default format to an output file or an output stream.</source>
          <target state="translated">출력 파일 또는 출력 스트림에 시스템 기본 형식으로 리소스를 기록합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> provides a default implementation of the <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 기본 구현을 제공는 <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>It enables you to programmatically create a binary resource (.resources) file.</source>
          <target state="translated">프로그래밍 방식으로 이진 리소스 (.resources) 파일을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Resources are specified as name and value pairs using the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> method.</source>
          <target state="translated">리소스를 사용 하 여 이름 / 값 쌍으로 지정 된 된 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> will not allow a .resources file to have names that vary only by case.</source>
          <target state="translated">리소스 이름 조회에 사용 하는 경우 대/소문자 구분은 있지만 제작 도구를 보다 쉽게 지원 하 고 버그, <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 가 대/소문자만 다른 이름이.resources 파일을 허용 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class enables you to create string, object, and binary resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 클래스를 사용 하면 문자열, 개체 및 이진 리소스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Binary resources can be written to the resource file as a byte array or a stream.</source>
          <target state="translated">이진 리소스 스트림 또는 바이트 배열 리소스 파일을 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">이 형식이 구현 하는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">직접 형식의 dispose를 호출 해당 <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 에서 메서드는 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 <ph id="ph1">`using`</ph> (C#에서) 또는 <ph id="ph2">`Using`</ph> (Visual Basic)에서는 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스 항목입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To create a resources file, create a <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> with a unique file name, call <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> at least once, call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> to write the resources file to disk, and then call <ph id="ph4">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> to close the file.</source>
          <target state="translated">리소스 파일을 만들려면는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 호출 고유한 파일 이름을 포함 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> 을 한 번 이상 호출 <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 를 디스크에 리소스 파일을 작성 한 다음 호출 <ph id="ph4">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> 파일을 닫습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> will implicitly call <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> if you do not explicitly call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> 암시적으로 호출 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 명시적으로 호출 하지 않으면 <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The resources will not necessarily be written in the same order they were added.</source>
          <target state="translated">리소스 추가 된 동일한 순서로 반드시 기록 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>To retrieve resources from a binary .resources file created by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class, you can use the <ph id="ph2">&lt;xref:System.Resources.ResourceManager&gt;</ph> class, which lets you retrieve named resources, or the <ph id="ph3">&lt;xref:System.Resources.ResourceReader&gt;</ph> class, which lets you enumerate all the resources in the file.</source>
          <target state="translated">작성 된 이진.resources 파일에서 리소스를 검색할는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 사용할 수 있습니다 클래스는 <ph id="ph2">&lt;xref:System.Resources.ResourceManager&gt;</ph> 명명 된 리소스를 검색할 수 있습니다, 클래스 또는 <ph id="ph3">&lt;xref:System.Resources.ResourceReader&gt;</ph> 클래스 파일에는 모든 리소스를 열거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResourceWriter">
          <source>The following example writes several strings into the myResources.resources file.</source>
          <target state="translated">다음 예제에서는 myResources.resources 파일에 여러 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The output stream.</source>
          <target state="translated">출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class that writes the resources to the provided stream.</source>
          <target state="translated">제공된 스트림에 리소스를 쓰는 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The following code example defines a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class that writes to a specified stream.</source>
          <target state="translated">새 인스턴스를 정의 하는 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 지정 된 스트림에 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The code adds resources to the writer and writes the resources to the stream.</source>
          <target state="translated">코드는 리소스 작성기에 추가 하 고 리소스를 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is not writable.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 매개 변수를 쓸 수 없는 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The output file name.</source>
          <target state="translated">출력 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> class that writes the resources to the specified file.</source>
          <target state="translated">지정된 파일에 리소스를 쓰는 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The following code example defines a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class that will write to a specified file.</source>
          <target state="translated">새 인스턴스를 정의 하는 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 지정된 된 파일에 기록 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The code adds resources to the writer and writes the resources to the file.</source>
          <target state="translated">코드는 리소스 작성기에 추가 하 고 파일에 리소스를 씁니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Resources.ResourceWriter">
          <source>Adds a resource to the list of resources to be written.</source>
          <target state="translated">기록할 리소스 목록에 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The name of the resource.</source>
          <target state="translated">리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Value of the resource as an 8-bit unsigned integer array.</source>
          <target state="translated">리소스의 값은 부호 없는 8비트 정수 배열입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Adds a named resource specified as a byte array to the list of resources to be written.</source>
          <target state="translated">기록할 리소스 목록에 바이트 배열로 지정된 명명된 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">리소스 기록 됩니다 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">으로 작성 된 리소스를 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> 메서드를 호출 하 여는 <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> method to add a graphics image that has been read as an array of bytes to a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29&gt;</ph> 바이트의 배열로 읽은 그래픽 이미지를 추가 하는 메서드는 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 또는 대소문자만 다른 이름이 이미 이 <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>에 추가된 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>가 닫혀 있으므로 해당 해시 테이블을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The name of the resource to add.</source>
          <target state="translated">추가할 리소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The value of the resource to add.</source>
          <target state="translated">추가할 리소스의 값입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The resource must support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">리소스는 <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> 속성을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>Adds a named resource specified as a stream to the list of resources to be written.</source>
          <target state="translated">기록할 리소스 목록에 스트림으로 지정된 명명된 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>You can specify any stream that supports the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> property for <ph id="ph2">`value`</ph>.</source>
          <target state="translated">지 원하는 스트림을 지정할 수는 <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> 속성에 대 한 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">으로 작성 된 리소스를 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> 메서드를 호출 하 여는 <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> method to add a graphics image that has been saved to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> object to a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29&gt;</ph> 에 저장 되어 있는 그래픽 이미지를 추가 하는 방법을 <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 또는 대소문자만 다른 이름이 이미 이 <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>에 추가된 경우</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>The stream does not support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">스트림은 <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> 속성을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>이 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The name of the resource.</source>
          <target state="translated">리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The value of the resource.</source>
          <target state="translated">리소스의 값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Adds a named resource specified as an object to the list of resources to be written.</source>
          <target state="translated">기록할 리소스 목록에 개체로 지정된 명명된 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`value`</ph> must be serializable.</source>
          <target state="translated"><ph id="ph1">`value`</ph>는 serialize할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">리소스 기록 되는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">으로 작성 된 리소스를 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> 메서드를 호출 하 여는 <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> method to add object data to a binary resources file.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> 개체 데이터를 이진 리소스 파일을 추가 하는 메서드.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`DonorColumns`</ph> is a custom class whose fields contain the names of columns to be displayed in the user interface.</source>
          <target state="translated"><ph id="ph1">`DonorColumns`</ph> 해당 필드는 사용자 인터페이스에 표시할 열의 이름을 포함 하는 사용자 지정 클래스가입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Note that the class is marked with the <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">클래스는 표시 되는 <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>Ordinarily, the class would be defined in a separate assembly, and a reference to it would be provided to the compiler at compile time.</source>
          <target state="translated">클래스는 별도 어셈블리에 정의 됩니다 및 컴파일 타임에에 대 한 참조를 컴파일러에 제공 되는 일반적으로 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 또는 대소문자만 다른 이름이 이미 이 <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>에 추가된 경우</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>가 닫혀 있으므로 해당 해시 테이블을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The value of the resource.</source>
          <target state="translated">리소스의 값입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>Adds a string resource to the list of resources to be written.</source>
          <target state="translated">기록할 리소스 목록에 문자열 리소스를 추가합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">리소스 기록 됩니다 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">으로 작성 된 리소스를 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> 메서드를 호출 하 여는 <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> method to add string resources to a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> 문자열 리소스를 추가 하는 메서드는 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this ResourceWriter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 또는 대소문자만 다른 이름이 이미 이 ResourceWriter에 추가된 경우</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>가 닫혀 있으므로 해당 해시 테이블을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The name of the resource to add.</source>
          <target state="translated">추가할 리소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The value of the resource to add.</source>
          <target state="translated">추가할 리소스의 값입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The resource must support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">리소스는 <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> 속성을 지원해야 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to close the stream after the <ph id="ph2">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> method is called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> 메서드를 호출한 후 스트림을 닫으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the <ph id="ph1">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> method is called.</source>
          <target state="translated">기록할 리소스 목록에 스트림으로 지정된 명명된 리소스를 추가하고 <ph id="ph1">&lt;see cref="M:System.Resources.ResourceWriter.Generate" /&gt;</ph> 메서드를 호출한 후 해당 스트림을 닫을지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>You can specify any stream that supports the <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> property for <ph id="ph2">`value`</ph>.</source>
          <target state="translated">지 원하는 스트림을 지정할 수는 <ph id="ph1">&lt;xref:System.IO.Stream.Length%2A?displayProperty=nameWithType&gt;</ph> 속성에 대 한 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>You can retrieve the resources written by the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> method by calling the <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">으로 작성 된 리소스를 검색할 수 있습니다는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> 메서드를 호출 하 여는 <ph id="ph2">&lt;xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> method to add a graphics image that has been saved to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> object to a <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29&gt;</ph> 에 저장 되어 있는 그래픽 이미지를 추가 하는 방법을 <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 또는 대소문자만 다른 이름이 이미 이 <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>에 추가된 경우</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>The stream does not support the <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> property.</source>
          <target state="translated">스트림은 <ph id="ph1">&lt;see cref="P:System.IO.Stream.Length" /&gt;</ph> 속성을 지원하지 않습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>이 닫혀 있는 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A name that identifies the resource that contains the added data.</source>
          <target state="translated">추가된 데이터가 포함된 리소스를 식별하는 이름입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The type name of the added data.</source>
          <target state="translated">추가된 데이터의 형식 이름입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A byte array that contains the binary representation of the added data.</source>
          <target state="translated">추가된 데이터의 이진 표현을 포함하는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Adds a unit of data as a resource to the list of resources to be written.</source>
          <target state="translated">기록할 리소스 목록에 리소스로 데이터 단위를 추가합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> 이진 형식으로 리소스를 추가 하려면 메서드 (즉, 바이트의 배열로) 기록할 리소스 목록에 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself.</source>
          <target state="translated">리소스 및 데이터 자체의 이진 표현에 포함 된 데이터의 형식 이름 리소스의 이름을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>After you have added each resource you require, use the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method to write the list of resources to the resources file or stream that was specified in the <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">필요한 각 리소스를 추가한 후 사용 하 여는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 에 지정 된 리소스 목록에 리소스 파일에 쓰거나 스트림에 메서드는 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`typeName`</ph> is a string that represents the data type of the resource.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph> 리소스의 데이터 형식을 나타내는 문자열이입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>It can be any of the following values:</source>
          <target state="translated">다음 값 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The string representation of a <ph id="ph1">`ResourceTypeCode`</ph> enumeration member that indicates the data type of the resource.</source>
          <target state="translated">문자열 표현을 <ph id="ph1">`ResourceTypeCode`</ph> 리소스의 데이터 형식을 나타내는 열거형 멤버입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`ResourceTypeCode`</ph> is a private enumeration that is used by  to indicate that a special binary format is used to store one of 19 common data types.</source>
          <target state="translated"><ph id="ph1">`ResourceTypeCode`</ph> 19 일반적인 데이터 형식 중 하나를 저장 하는 특수 이진 형식을 사용 함을 나타내는 데 사용 되는 개인 열거형입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>These include the .NET Framework primitive data types (<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Char&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, <ph id="ph10">&lt;xref:System.SByte&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph12">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph13">&lt;xref:System.UInt64&gt;</ph>), as well as <ph id="ph14">&lt;xref:System.String&gt;</ph>, <ph id="ph15">&lt;xref:System.DateTime&gt;</ph>, and <ph id="ph16">&lt;xref:System.TimeSpan&gt;</ph>.</source>
          <target state="translated">여기에.NET Framework 기본 데이터 형식 (<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>, <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Char&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.Double&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, <ph id="ph10">&lt;xref:System.SByte&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph12">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph13">&lt;xref:System.UInt64&gt;</ph>),으로 <ph id="ph14">&lt;xref:System.String&gt;</ph>, <ph id="ph15">&lt;xref:System.DateTime&gt;</ph>, 및 <ph id="ph16">&lt;xref:System.TimeSpan&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>In addition, the <ph id="ph1">`ResourceTypeCode`</ph> enumeration includes the values shown in the following table.</source>
          <target state="translated">또한는 <ph id="ph1">`ResourceTypeCode`</ph> 열거형에는 다음 표에 표시 된 값에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">`ResourceTypeCode`</ph> value</source>
          <target state="translated"><ph id="ph1">`ResourceTypeCode`</ph> 값</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is a byte array.</source>
          <target state="translated">데이터는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is a null reference.</source>
          <target state="translated">데이터는 null 참조입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The data is stored in a stream.</source>
          <target state="translated">데이터는 스트림을에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A string that contains the fully qualified name of the type whose binary data is assigned to the <ph id="ph1">`serializedData`</ph> argument (for example, <ph id="ph2">`System.String`</ph>).</source>
          <target state="translated">이진 데이터에 할당 된 형식의 정규화 된 이름을 포함 하는 문자열은 <ph id="ph1">`serializedData`</ph> 인수 (예를 들어 <ph id="ph2">`System.String`</ph>).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</source>
          <target state="translated">또한.NET Framework 클래스 라이브러리에 포함 되지 않은 형식에서 문자열은 이름, 버전, 문화권 및 유형을 포함 하는 어셈블리의 공개 키 포함 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>For example, the following string indicates that the serialized data represents an instance of the <ph id="ph1">`Person`</ph> type in the <ph id="ph2">`Extensions`</ph> namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</source>
          <target state="translated">Serialize 된 데이터의 인스턴스를 나타낸다는 것 다음 문자열을 의미 하는 예를 들어는 <ph id="ph1">`Person`</ph> 에 입력는 <ph id="ph2">`Extensions`</ph> 가 없는 공개 키와 지정 된 문화권이 유틸리티 라는 어셈블리의 버전 1.0에서에서 발견 되는 네임 스페이스에 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>A parallel method for reading resource data written with the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method is <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">로 작성 된 리소스 데이터를 읽기 위한 병렬 메서드는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> 방법은 <ph id="ph2">&lt;xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> method to write two integer values to a .resources file, and then uses a <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> object to retrieve them.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> 메서드가 두 개 정수를 작성할 수.resources 파일에 값을 사용 하 여 한 <ph id="ph2">&lt;xref:System.Resources.ResourceReader&gt;</ph> 을 검색 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="serializedData" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="serializedData" /&gt;</ph>가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> (or a name that varies only by capitalization) has already been added to this <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>(또는 대문자 표시만 다른 이름)이 이 <ph id="ph2">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> 개체에 이미 추가되었습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object is not initialized.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> 개체가 초기화되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])">
          <source>The probable cause is that the <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> object is closed.</source>
          <target state="translated">가능한 원인은 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> 개체가 닫혀 있기 때문입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>Saves the resources to the output stream and then closes it.</source>
          <target state="translated">리소스를 출력 스트림에 저장한 다음 닫습니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> is called implicitly by <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>, if required.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 암시적으로 호출 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>, 필요한 경우.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> 메서드가 모든 리소스를 작성할 수의 개체는 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 출력 스트림에 클래스입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Close">
          <source>The code then shuts down the writer.</source>
          <target state="translated">다음 코드는 작성기를 종료 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>An I/O error has occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Close">
          <source>An error has occurred during serialization of the object.</source>
          <target state="translated">개체를 serialize하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>Allows users to close the resource file or stream, explicitly releasing resources.</source>
          <target state="translated">리소스 파일 또는 스트림을 닫아서 명시적으로 리소스를 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The implementation of this method is the same as <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">이 메서드 구현은와 같습니다 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Dispose%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Dispose%2A&gt;</ph> 메서드가 모든 리소스를 작성할 수의 개체는 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 출력 스트림에 클래스입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>The code then shuts down the writer and make the writer's resources available for other processes.</source>
          <target state="translated">다음 코드는 작성기를 종료 하 고 작성기 리소스를 다른 프로세스에 사용할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>An I/O error has occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Dispose">
          <source>An error has occurred during serialization of the object.</source>
          <target state="translated">개체를 serialize하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>Saves all resources to the output stream in the system default format.</source>
          <target state="translated">모든 리소스를 시스템 기본 형식으로 출력 스트림에 저장합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method is called implicitly by the <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> method if it is not called by your application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 메서드를 암시적으로 호출 된 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> 메서드 응용 프로그램 코드에서 호출 하지 않은 경우.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> can only be called once, after all calls to <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> have been made.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 에 대 한 모든 호출 후 한 번만 호출할 수 있습니다 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.AddResourceData%2A&gt;</ph> 지정 되었습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.</source>
          <target state="translated">리소스를 쓰는 동안 예외가 발생 하는 경우 출력 스트림에 잘못 된 정보를 쓸 수 없도록 닫힙니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> does not close the output stream in normal cases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 정상적인 경우에서 출력 스트림에 닫히지 않습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>, or simply call <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>.</source>
          <target state="translated">호출 해야를.resources 파일 사용 하 여 추가 데이터를 결합 하는 하거나 스트림에 대 한 액세스를 나중에 필요 하지 않으면 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> 호출한 후 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph>를 호출 하기만 하면 또는 <ph id="ph3">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResourceWriter.Generate">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> method to write all resource objects in a <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class to the output stream</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Resources.ResourceWriter.Generate%2A&gt;</ph> 메서드가 모든 리소스를 작성할 수의 개체는 <ph id="ph2">&lt;xref:System.Resources.ResourceWriter&gt;</ph> 출력 스트림에 클래스</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>An error occurred during serialization of the object.</source>
          <target state="translated">개체를 serialize하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Resources.ResourceWriter.Generate">
          <source>This <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph> has been closed and its hash table is unavailable.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Resources.ResourceWriter" /&gt;</ph>가 닫혀 있으므로 해당 해시 테이블을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source>Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">정규화된 어셈블리 이름을 사용하여 <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> 이전의 .NET Framework 대상 버전이 리소스 어셈블리에 기록되도록 설정하는 대리자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source>The type that is encapsulated by the delegate.</source>
          <target state="translated">대리자에 의해 캡슐화되는 형식입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResourceWriter.TypeNameConverter">
          <source><ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> and MSBuild set this property if you target an earlier version of the .NET Framework.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]</ph> 및 MSBuild는 이전 버전의.NET Framework를 대상 하는 경우이 속성을 설정 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>