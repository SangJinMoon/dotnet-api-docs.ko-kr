<Type Name="ResourceSet" FullName="System.Resources.ResourceSet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1c004c2cbe90a3788b82697a631822576eef92f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480087" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ResourceSet : IDisposable, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceSet extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceSet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceSet&#xA;Implements IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceSet : IDisposable, System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="294f7-101">다른 모든 문화권을 무시하고 하나의 특정 문화권에 대해 지역화된 모든 리소스를 대체 규칙과 함께 저장합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="294f7-101">Stores all the resources localized for one particular culture, ignoring all other cultures, including any fallback rules.</span>
      </span>
      <span data-ttu-id="294f7-102">**보안 정보**: 신뢰할 수 없는 데이터를 사용하여 이 클래스에서 메서드를 호출하는 것은 보안상 위험합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="294f7-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      </span>
      <span data-ttu-id="294f7-103">신뢰할 수 있는 데이터만 사용하여 클래스의 메서드를 호출합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="294f7-103">Call the methods in the class only with trusted data.</span>
      </span>
      <span data-ttu-id="294f7-104">자세한 내용은 [신뢰할 수 없는 데이터 보안 위험](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks)을 참조하세요.</span>
      <span class="sxs-lookup">
        <span data-stu-id="294f7-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-105"><xref:System.Resources.ResourceSet> 클래스에 대해 열거는 <xref:System.Resources.IResourceReader>, 모든 이름 및 값을 로드 하 고에 저장 하 여 한 <xref:System.Collections.Hashtable>합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-105">The <xref:System.Resources.ResourceSet> class enumerates over an <xref:System.Resources.IResourceReader>, loading every name and value, and storing them in a <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="294f7-106">사용자 지정 <xref:System.Resources.IResourceReader> 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-106">A custom <xref:System.Resources.IResourceReader> can be used.</span></span>  
  
 <span data-ttu-id="294f7-107">인스턴스화할 수 있습니다는 <xref:System.Resources.ResourceSet> 호출 하 여 특정 문화권의 리소스를 나타내는 개체는 <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="294f7-107">You can instantiate a <xref:System.Resources.ResourceSet> object that represents the resources of a specific culture by calling the <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="294f7-108">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="294f7-109">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-109">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="294f7-110">직접 형식의 dispose를 호출 해당 <xref:System.IDisposable.Dispose%2A> 에서 메서드는 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="294f7-111">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 `using` (C#에서) 또는 `Using` (Visual Basic)에서는 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="294f7-112">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="294f7-113">파생 클래스의 <see cref="T:System.Resources.ResourceSet" /> 자신의 리소스 판독기를 사용 하 고 기록기를 재정의 해야 <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, 및 <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />, 리소스 집합을 해석 하기 위한 적절 한 기능을 제공 하도록 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="294f7-113">Derived classes of <see cref="T:System.Resources.ResourceSet" /> that use their own resource reader and writer should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />, to provide the appropriate functionality for interpreting the resource set.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="294f7-114">
            <see cref="T:System.Resources.ResourceSet" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-114">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="294f7-115">기본 속성을 사용하여 <see cref="T:System.Resources.ResourceSet" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-115">Initializes a new instance of the <see cref="T:System.Resources.ResourceSet" /> class with default properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="294f7-116">읽을 리소스의 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-116">The <see cref="T:System.IO.Stream" /> of resources to be read.</span>
          </span>
          <span data-ttu-id="294f7-117">스트림은 기존 리소스 파일을 참조해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-117">The stream should refer to an existing resources file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="294f7-118">지정된 스트림에서 리소스를 읽는 시스템 기본 <see cref="T:System.Resources.ResourceReader" />을(를) 사용하여 <see cref="T:System.Resources.ResourceSet" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-118">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that reads resources from the given stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="294f7-119">
            <paramref name="stream" />을 읽을 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-119">The <paramref name="stream" /> is not readable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="294f7-120">
            <paramref name="stream" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-120">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="294f7-121">serialization 서비스를 제공 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-121">for providing serialization services.</span>
          </span>
          <span data-ttu-id="294f7-122">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> 보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-122">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="294f7-123">직접 실행 호출자에 대 한 완전 신뢰가 필요 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-123">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="294f7-124">이 멤버는 부분적으로 신뢰할 수 있는 또는 투명 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-124">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.Resources.IResourceReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Resources.IResourceReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IResourceReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::Resources::IResourceReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Resources.IResourceReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="294f7-125">사용할 reader입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-125">The reader that will be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="294f7-126">지정된 리소스 판독기를 사용하여 <see cref="T:System.Resources.ResourceSet" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-126">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the specified resource reader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-127">이 생성자를 사용 하는 사용자 제공을 사용 하 여 사용자 지정 리소스 형식을 지 원하는 <xref:System.Resources.IResourceReader>합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-127">You can use this constructor to support custom resource formats using a user-provided <xref:System.Resources.IResourceReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="294f7-128">
            <paramref name="reader" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-128">The <paramref name="reader" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="294f7-129">읽을 리소스 파일입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-129">Resource file to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="294f7-130">지정된 파일에서 리소스를 열고 읽는 시스템 기본 <see cref="T:System.Resources.ResourceReader" />을(를) 사용하여 <see cref="T:System.Resources.ResourceSet" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-130">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that opens and reads resources from the given file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="294f7-131">새 인스턴스를 정의 하는 다음 코드 예제는 <xref:System.Resources.ResourceSet> 특정 파일에 대 한 클래스는 해당 파일을 사용 하는 리소스를 반복 하 고 해당 내용을 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-131">The following code example defines a new instance of the <xref:System.Resources.ResourceSet> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="294f7-132">
            <paramref name="fileName" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-132">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="294f7-133">이 <see cref="T:System.Resources.ResourceSet" />에서 사용하는 모든 리소스를 닫고 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-133">Closes and releases any resources used by this <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-134">모든 호출에 대 한 메서드는 <xref:System.Resources.ResourceSet> 후이 메서드를 호출 실패할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-134">All calls to methods on the <xref:System.Resources.ResourceSet> after a call to this method might fail.</span></span>  
  
 <span data-ttu-id="294f7-135"><xref:System.Resources.ResourceSet.Close%2A> 안전 하 게 번 호출할 수 있습니다 여러 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-135"><xref:System.Resources.ResourceSet.Close%2A> can be safely called multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="294f7-136">현재 구현이 <xref:System.Resources.ResourceSet.Close%2A> 호출 <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span><span class="sxs-lookup"><span data-stu-id="294f7-136">The current implementation of <xref:System.Resources.ResourceSet.Close%2A> calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="294f7-137">다음 코드 예제에서는 <xref:System.Resources.ResourceSet.Close%2A> 메서드 호출에서 사용 하는 모든 리소스를 해제 <xref:System.Resources.ResourceSet> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="294f7-137">The following code example uses the <xref:System.Resources.ResourceSet.Close%2A> method to release all resources used by the calling <xref:System.Resources.ResourceSet> instance.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="294f7-138">현재 <see cref="T:System.Resources.ResourceSet" /> 인스턴스에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-138">Releases resources used by the current <see cref="T:System.Resources.ResourceSet" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="294f7-139">현재 <see cref="T:System.Resources.ResourceSet" /> 인스턴스에서 사용하는 리소스(메모리 제외)를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-139">Disposes of the resources (other than memory) used by the current instance of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-140"><xref:System.Resources.ResourceSet.Dispose%2A> 사용을 마치면 <xref:System.Resources.ResourceSet>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-140">Call <xref:System.Resources.ResourceSet.Dispose%2A> when you are finished using the <xref:System.Resources.ResourceSet>.</span></span> <span data-ttu-id="294f7-141"><xref:System.Resources.ResourceSet.Dispose%2A> 메서드를 사용하면 <xref:System.Resources.ResourceSet>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-141">The <xref:System.Resources.ResourceSet.Dispose%2A> method leaves the <xref:System.Resources.ResourceSet> in an unusable state.</span></span> <span data-ttu-id="294f7-142">호출한 후 <xref:System.Resources.ResourceSet.Dispose%2A>에 대 한 모든 참조를 해제 해야는 <xref:System.Resources.ResourceSet> 차지 했던 메모리를 가비지 수집에 의해 회수 될 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-142">After calling <xref:System.Resources.ResourceSet.Dispose%2A>, you must release all references to the <xref:System.Resources.ResourceSet> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="294f7-143">현재 메서드는의 구현 <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-143">The current method is the implementation of <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="294f7-144">이 구현에서는 호출 <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span><span class="sxs-lookup"><span data-stu-id="294f7-144">This implementation calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="294f7-145">현재 인스턴스에 포함된 개체를 명시적으로 닫아야 하는지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-145">Indicates whether the objects contained in the current instance should be explicitly closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="294f7-146">요청한 경우 관리되는 내부 개체를 닫고 현재 인스턴스와 관련된 리소스(메모리 제외)를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-146">Releases resources (other than memory) associated with the current instance, closing internal managed objects if requested.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-147">경우는 `dispose` 매개 변수는 `true`, 현재 메서드 뿐 아니라 관련 된 모든 개체와 연결 된 모든 리소스를 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-147">If the `dispose` parameter is `true`, the current method frees all the resources associated with it as well as with all objects associated with it.</span></span> <span data-ttu-id="294f7-148">경우 `dispose` 은 `false`, 현재 메서드가, 할당 된 리소스를 해제 하 고 연결 된 모든 개체를 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-148">If `dispose` is `false`, the current method frees only the resources allocated to it, and ignores any objects associated with it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultReader">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultReader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultReader () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="294f7-149">이러한 종류의 <see cref="T:System.Resources.ResourceSet" />에 대한 기본 설정 리소스 판독기를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-149">Returns the preferred resource reader class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="294f7-150">이러한 종류의 <see cref="T:System.Resources.ResourceSet" />에 대한 기본 설정 리소스 판독기의 <see cref="T:System.Type" />을(를) 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-150">Returns the <see cref="T:System.Type" /> for the preferred resource reader for this kind of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="294f7-151">파생 클래스의 <see cref="T:System.Resources.ResourceSet" /> 자신의 리소스 판독기를 사용 하 여 재정의 해야 <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, 및 <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="294f7-151">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultWriter">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultWriter () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultWriter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="294f7-152">이러한 종류의 <see cref="T:System.Resources.ResourceSet" />에 대한 기본 설정 리소스 작성기 클래스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-152">Returns the preferred resource writer class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="294f7-153">이러한 종류의 <see cref="T:System.Resources.ResourceSet" />에 대한 기본 설정 리소스 writer의 <see cref="T:System.Type" />을(를) 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-153">Returns the <see cref="T:System.Type" /> for the preferred resource writer for this kind of <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="294f7-154">파생 클래스의 <see cref="T:System.Resources.ResourceSet" /> 자신의 리소스 판독기를 사용 하 여 재정의 해야 <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, 및 <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="294f7-154">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Resources.IResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="294f7-155">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> 전체에 걸쳐 반복할 수 있는 <see cref="T:System.Resources.ResourceSet" />을(를) 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-155">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that can iterate through the <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="294f7-156">이 <see cref="T:System.Resources.ResourceSet" />에 대한 <see cref="T:System.Collections.IDictionaryEnumerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-156">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for this <see cref="T:System.Resources.ResourceSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-157">열거자는 컬렉션의 데이터 읽기를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-157">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="294f7-158">내부 컬렉션을 수정 하 여 열거자를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-158">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="294f7-159">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-159">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="294f7-160"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-160"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="294f7-161">이 위치에서, 호출 <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-161">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="294f7-162">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-162">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="294f7-163"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-163"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="294f7-164"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-164"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="294f7-165">컬렉션의 끝이 전달된 후 열거자는 컬렉션의 마지막 요소 뒤에 배치되고 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출하면 `false`가 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-165">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="294f7-166">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`호출, <xref:System.Collections.IEnumerator.Current%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-166">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="294f7-167"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-167">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="294f7-168">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-168">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="294f7-169">컬렉션 변경 되 면, 추가 하는 등 요소, 수정 또는 삭제 열거자는 무효화 하 고을 다음에 호출할 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-169">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="294f7-170"><xref:System.Collections.IEnumerator.MoveNext%2A> 및 <xref:System.Collections.IEnumerator.Current%2A> 사이에 컬렉션이 수정되면 열거자가 이미 무효로 되었어도 <xref:System.Collections.IEnumerator.Current%2A>는 컬렉션이 설정된 요소를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-170">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="294f7-171">사용할 수는 <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType> 현재 요소에 저장 된 값에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-171">You can use the <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType> property to access the value stored in the current element.</span></span> <span data-ttu-id="294f7-172">사용 하 여는 <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> 속성을 현재 요소의 키에 액세스 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-172">Use the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property to access the key of the current element.</span></span> <span data-ttu-id="294f7-173">사용 하 여는 <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> 현재 요소의 값에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-173">Use the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property to access the value of the current element.</span></span>  
  
 <span data-ttu-id="294f7-174">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-174">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="294f7-175">컬렉션이 동기화 되어 있을 때 다른 스레드에서 수 수정할 열거자에서 예외가 발생 하는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-175">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="294f7-176">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-176">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="294f7-177">다음 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Resources.ResourceSet> `rs` 파일 `items.resources`합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-177">The following example demonstrates how to create a <xref:System.Resources.ResourceSet>`rs` for the file `items.resources`.</span></span> <span data-ttu-id="294f7-178">다음으로 <xref:System.Resources.ResourceSet.GetEnumerator%2A> 메서드 만드는 데 사용 되는 <xref:System.Collections.IDictionaryEnumerator> 에 대 한 `rs`합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-178">Next, the <xref:System.Resources.ResourceSet.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> for `rs`.</span></span> <span data-ttu-id="294f7-179"><xref:System.Collections.IDictionaryEnumerator> 반복 `rs` 내용을 콘솔에 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-179">The <xref:System.Collections.IDictionaryEnumerator> iterates through `rs` and displays the contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="294f7-180">리소스 집합이 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-180">The resource set has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="294f7-181">지정된 이름의 리소스 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-181">Returns a resource object with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="294f7-182">검색할 리소스의 이름(대/소문자 구분)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-182">Case-sensitive name of the resource to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="294f7-183">지정된 이름의 리소스 개체를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-183">Searches for a resource object with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="294f7-184">요청된 리소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-184">The requested resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-185">리소스 개체의 이름은 대/소문자 구분입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-185">The name of the resource object is case sensitive.</span></span> <span data-ttu-id="294f7-186">대/소문자 구분 검색을 위해 사용 하 여 <xref:System.Resources.ResourceSet.GetObject%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-186">For a case-insensitive search, use <xref:System.Resources.ResourceSet.GetObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="294f7-187">
            <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-187">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="294f7-188">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-188">The object has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="294f7-189">검색할 리소스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-189">Name of the resource to search for.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="294f7-190">지정된 이름의 대/소문자를 구분하지 않을 것인지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-190">Indicates whether the case of the specified name should be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="294f7-191">요청한 경우 지정된 이름의 리소스 개체를 대/소문자를 구분하지 않고 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-191">Searches for a resource object with the specified name in a case-insensitive manner, if requested.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="294f7-192">요청된 리소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-192">The requested resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-193">하는 경우의 값은 `ignoreCase` 매개 변수는 `true`, 이름 "Resource"를 사용 하 여 리소스 이름 "resource"를 사용 하 여 리소스와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-193">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="294f7-194">단,이 메서드를 사용 하 여 대/소문자 구분 문자열 비교를 항상 수행 하 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-194">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="294f7-195">장점은이 메서드에 의해 수행 되는 대/소문자 구분 문자열 비교의 결과가 문화권에 관계 없이 모든 컴퓨터에서 동일한 지입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-195">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="294f7-196">단점은 결과 모든 문화권의 대/소문자 규칙와 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-196">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="294f7-197">예를 들어, 터키어 알파벳에 점을 사용 하 여 i: 문자의 두 가지 버전 및 점이 없는 경우가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-197">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="294f7-198">터키어 문자 I (유니코드 0049)으로 간주 됩니다에 다른 문자 (유니코드 0131) ı의 대문자 버전.</span><span class="sxs-lookup"><span data-stu-id="294f7-198">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="294f7-199">문자 (유니코드 0069) i 또 다른 문자 İ (유니코드 0130)의 소문자 버전을 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-199">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="294f7-200">이 대/소문자 규칙을 대/소문자 구분 문자열 비교에 따라 "TR-TR" (터키어-터키에서) 문화권에 대 한 장치 (유니코드 0049) 및 i (0069 유니코드) 문자의 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-200">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="294f7-201">사용 하는 `GetObject` 메서드 `ignoreCase` 로 설정 `true`,이 비교가 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-201">Using the `GetObject` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="294f7-202">
            <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-202">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="294f7-203">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-203">The object has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="294f7-204">지정된 이름의 <see cref="T:System.String" /> 리소스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-204">Returns a <see cref="T:System.String" /> resource with a specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="294f7-205">검색할 리소스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-205">Name of the resource to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="294f7-206">지정된 이름의 <see cref="T:System.String" /> 리소스를 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-206">Searches for a <see cref="T:System.String" /> resource with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="294f7-207">값이 <see cref="T:System.String" />인 경우 리소스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-207">The value of a resource, if the value is a <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="294f7-208">
            <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-208">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="294f7-209">
            <paramref name="name" />에 의해 지정된 리소스가 <see cref="T:System.String" />가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-209">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="294f7-210">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-210">The object has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, ignoreCase As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="294f7-211">검색할 리소스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-211">Name of the resource to search for.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="294f7-212">지정된 이름의 대/소문자를 구분하지 않을 것인지 여부를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-212">Indicates whether the case of the case of the specified name should be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="294f7-213">요청한 경우 지정된 이름의 <see cref="T:System.String" /> 리소스를 대/소문자를 구분하지 않고 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-213">Searches for a <see cref="T:System.String" /> resource with the specified name in a case-insensitive manner, if requested.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="294f7-214">값이 <see cref="T:System.String" />인 경우 리소스의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-214">The value of a resource, if the value is a <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="294f7-215">하는 경우의 값은 `ignoreCase` 매개 변수는 `true`, 이름 "Resource"를 사용 하 여 리소스 이름 "resource"를 사용 하 여 리소스와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-215">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="294f7-216">단,이 메서드를 사용 하 여 대/소문자 구분 문자열 비교를 항상 수행 하 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-216">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="294f7-217">장점은이 메서드에 의해 수행 되는 대/소문자 구분 문자열 비교의 결과가 문화권에 관계 없이 모든 컴퓨터에서 동일한 지입니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-217">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="294f7-218">단점은 결과 모든 문화권의 대/소문자 규칙와 일치 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-218">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="294f7-219">예를 들어, 터키어 알파벳에 점을 사용 하 여 i: 문자의 두 가지 버전 및 점이 없는 경우가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-219">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="294f7-220">터키어 문자 I (유니코드 0049)으로 간주 됩니다에 다른 문자 (유니코드 0131) ı의 대문자 버전.</span><span class="sxs-lookup"><span data-stu-id="294f7-220">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="294f7-221">문자 (유니코드 0069) i 또 다른 문자 İ (유니코드 0130)의 소문자 버전을 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-221">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="294f7-222">이 대/소문자 규칙을 대/소문자 구분 문자열 비교에 따라 "TR-TR" (터키어-터키에서) 문화권에 대 한 장치 (유니코드 0049) 및 i (0069 유니코드) 문자의 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-222">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="294f7-223">사용 하는 `GetString` 메서드 `ignoreCase` 로 설정 `true`,이 비교가 성공 합니다.</span><span class="sxs-lookup"><span data-stu-id="294f7-223">Using the `GetString` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="294f7-224">
            <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-224">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="294f7-225">
            <paramref name="name" />에 의해 지정된 리소스가 <see cref="T:System.String" />가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-225">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="294f7-226">개체가 닫혔거나 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-226">The object has been closed or disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="protected System.Resources.IResourceReader Reader;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Resources.IResourceReader Reader" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Reader" />
      <MemberSignature Language="VB.NET" Value="Protected Reader As IResourceReader " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Resources::IResourceReader ^ Reader;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="294f7-227">리소스를 읽는 데 사용되는 <see cref="T:System.Resources.IResourceReader" />을(를) 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-227">Indicates the <see cref="T:System.Resources.IResourceReader" /> used to read the resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadResources">
      <MemberSignature Language="C#" Value="protected virtual void ReadResources ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.ReadResources" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadResources ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadResources();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="294f7-228">모든 리소스를 읽은 다음 <see cref="F:System.Resources.ResourceSet.Table" /> 속성에 표시된 <see cref="T:System.Collections.Hashtable" />에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-228">Reads all the resources and stores them in a <see cref="T:System.Collections.Hashtable" /> indicated in the <see cref="F:System.Resources.ResourceSet.Table" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="294f7-229">파생 클래스의 <see cref="T:System.Resources.ResourceSet" /> 명시적으로 호출 해야 <see cref="M:System.Resources.ResourceSet.ReadResources" /> 에서 모든 리소스를 로드 하는 <see cref="T:System.Resources.IResourceReader" /> 에 <see cref="F:System.Resources.ResourceSet.Table" />, 일반적으로 첫 번째 지연 하거나 생성자에서 호출 중 하나로 <see cref="M:System.Resources.ResourceSet.GetString(System.String)" /> 또는 <see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="294f7-229">Derived classes of <see cref="T:System.Resources.ResourceSet" /> should explicitly call <see cref="M:System.Resources.ResourceSet.ReadResources" /> to load all the resources from the <see cref="T:System.Resources.IResourceReader" /> into <see cref="F:System.Resources.ResourceSet.Table" />, generally either in the constructor or lazily on the first call to either <see cref="M:System.Resources.ResourceSet.GetString(System.String)" /> or <see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />.</span>
            </span>
            <span data-ttu-id="294f7-230">그러나 리소스 집합과 IResourceReader 이미 서로 대 한 정보를 있고 있을 경우 리소스를 선택 하는 몇 개의 로드를 보다 효율적으로,이 단계를 건너뛸 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="294f7-230">However, if your resource set and IResourceReader already have information about each other and have a more efficient way to load just a few select resources, this step can be skipped.</span>
            </span>
            <span data-ttu-id="294f7-231">작업 집합을 최소화 하려면 리소스 IResourceReader만 응용 프로그램에서 요청한 리소스 값에 쿼리 하는 방식으로 집합을 기록 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="294f7-231">To minimize working set, write your resource set in such a way that it queries your IResourceReader for only the resource values requested by your application.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="294f7-232">
            <see cref="T:System.Collections.IEnumerator" />과(와)의 경쟁 조건이 발생하지 않도록 <see langword="Dispose" /> 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-232">Returns an <see cref="T:System.Collections.IEnumerator" /> object to avoid a race condition with <see langword="Dispose" />.</span>
          </span>
          <span data-ttu-id="294f7-233">이 멤버는 사용자 코드에서 직접 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-233">This member is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="294f7-234">현재 <see cref="T:System.Resources.ResourceSet" /> 개체에 대한 열거자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-234">An enumerator for the current <see cref="T:System.Resources.ResourceSet" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable Table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable Table" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Table" />
      <MemberSignature Language="VB.NET" Value="Protected Table As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ Table;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="294f7-235">리소스가 저장되는 <see cref="T:System.Collections.Hashtable" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="294f7-235">The <see cref="T:System.Collections.Hashtable" /> in which the resources are stored.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Hashtable" />
      </Docs>
    </Member>
  </Members>
</Type>