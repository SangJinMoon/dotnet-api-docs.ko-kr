<Type Name="ClientRoleProvider" FullName="System.Web.ClientServices.Providers.ClientRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3196dff12ed8bceacc3e49cb59d657cb0c9cf1b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530327" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.Providers.ClientRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRoleProvider : System::Web::Security::RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Microsoft Ajax 역할 서비스에서 Windows 기반 응용 프로그램의 역할 정보를 가져옵니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 클라이언트 응용 프로그램 서비스를 사용 하 여 사용 하도록 응용 프로그램을 구성 하 여 기존 역할 서비스에서 역할 정보를 검색 하는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 클래스입니다. 을 구성한 후 확인할 수 있습니다를 호출 하 여 인증된 된 사용자가 특정 역할에 있는지 여부를 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 의 메서드는 <xref:System.Security.Principal.IPrincipal> 에서 반환 되는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성입니다. 클라이언트 응용 프로그램 서비스를 사용하도록 구성된 응용 프로그램에 대해 이 속성은 <xref:System.Web.ClientServices.ClientRolePrincipal>을 반환합니다. 이 클래스는 <xref:System.Security.Principal.IPrincipal> 인터페이스를 구현하기 때문에 명시적으로 참조할 필요가 없습니다. <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType> 메서드를 내부적으로 호출 된 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=nameWithType> 메서드.  
  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 클래스에 표시 된 역할 서비스에서 인증 된 사용자에 대 한 역할 정보를 검색 하는 읽기 전용 역할 멤버 자격 공급자는는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> 속성입니다. 값은 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> 속성은 일반적으로 다른 구성 값과 함께 응용 프로그램 구성 파일에서 검색 됩니다. 자세한 내용은 [방법: 클라이언트 응용 프로그램 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)을 참조하세요.  
  
 현재를 검색할 수 있습니다 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 통해는 `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=nameWithType> 속성입니다.  
  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 클래스는 지원만는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 및 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 의 메서드는 <xref:System.Web.Security.RoleProvider> 추상 클래스입니다. 특정 사용자에 대 한 이러한 방법 중 하나를 호출 하는 경우 서비스 공급자는 먼저 역할 정보에 대 한 로컬 데이터 캐시를 검사 합니다. 캐시 역할 정보를 포함 하지 않는 또는 캐시 만료 된 경우 서비스 공급자 역할 서비스에서 역할 정보를 검색 하 고 캐시에 추가 합니다.  
  
 클라이언트 응용 프로그램 서비스를 구성 하는 경우 역할 캐시에 대 한 제한 시간을 지정할 수 있습니다. 강제로 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 로컬 캐시를 호출 하는 대신 서비스에서 역할 데이터를 검색 하는 메서드는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> 메서드 첫 번째입니다.  
  
 사용할 수 없습니다는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 클래스를 만들거나 삭제할 역할 또는 사용자의 역할 멤버 자격을 수정 합니다. 를 만들거나 역할 정보를 수정 하려면 서버에 역할 서비스의 구성을 변경 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 역할 서비스 위치를 설정 하려면이 속성을 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
    <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
    <altmember cref="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">사용되지 않습니다.</param>
        <param name="roleNames">사용되지 않습니다.</param>
        <summary>이 메서드는 이 클래스에서 사용되지 않습니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성은 이 클래스에서 사용되지 않습니다.</summary>
        <value>공급자의 응용 프로그램 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 설정 하는 것은 효과가 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">사용되지 않습니다.</param>
        <summary>이 메서드는 이 클래스에서 사용되지 않습니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">사용되지 않습니다.</param>
        <param name="throwOnPopulatedRole">사용되지 않습니다.</param>
        <summary>이 메서드는 이 클래스에서 사용되지 않습니다.</summary>
        <returns>해당 사항 없음. 이 메서드는 항상 예외를 throw합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">사용되지 않습니다.</param>
        <param name="usernameToMatch">사용되지 않습니다.</param>
        <summary>이 메서드는 이 클래스에서 사용되지 않습니다.</summary>
        <returns>해당 사항 없음. 이 메서드는 항상 예외를 throw합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 메서드는 이 클래스에서 사용되지 않습니다.</summary>
        <returns>해당 사항 없음. 이 메서드는 항상 예외를 throw합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">역할을 검색할 사용자의 이름입니다.</param>
        <summary>지정된 사용자가 속하는 역할의 이름을 가져옵니다.</summary>
        <returns>
          <paramref name="username" />이 속하는 역할 이름이거나 사용자가 인증되지 않은 경우 빈 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 에서 지정 해야 하는 현재, 인증 된 사용자에 대 한 역할 정보를 검색 하는 메서드는 `username` 매개 변수입니다. 통해 사용자 이름을 가져올 수 있습니다는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성을 다음과 같이: `Thread.CurrentPrincipal.Identity.Name`합니다.  
  
 서비스 공급자는 불필요 한 서비스 호출을 방지 하기 위해 로컬 파일 시스템에 대 한 역할 정보를 캐시 합니다. 자세한 내용은 참조는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 클래스 개요입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 역할 멤버 자격을 테스트 하기 전에 사용자 로그인이 만료 여부를 확인 하려면이 메서드를 사용 하는 방법을 보여 줍니다. 이 코드에서는 하나 이상의 역할과 연결 된 모든 유효한 사용자가 가정 합니다. 이 경우에 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 메서드는 해당 로그인이 만료 이전에 인증 된 사용자에 대 한 모든 역할을 반환 하지 것입니다. 사용자 로그인이 만료 된 경우이 코드는 로그인 대화 상자를 표시 합니다. 호출의 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 메서드를 사용자가 "manager" 역할에 있는지 여부를 결정 합니다. 제한 된 코드에는 한 `PerformManagerTask` 메서드를 제공 하지 않습니다.  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" />이 <see cref="F:System.String.Empty" /> 또는 <see langword="null" />입니다.  
  
 또는  
  
 <paramref name="username" />이 현재 인증된 사용자의 사용자 이름이 아닌 경우</exception>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">사용되지 않습니다.</param>
        <summary>이 메서드는 이 클래스에서 사용되지 않습니다.</summary>
        <returns>해당 사항 없음. 이 메서드는 항상 예외를 throw합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">공급자의 이름입니다.</param>
        <param name="config">이 공급자에 대해 구성에 지정된 공급자별 특성을 나타내는 이름/값 쌍의 컬렉션입니다.</param>
        <summary>공급자를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 확장성 모델 호출은 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize%2A> 초기화 하려면 메서드는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 응용 프로그램 구성 파일의 정보를 사용 합니다. 이 메서드는 다음 역할 서비스 구성 특성을 인식합니다.  
  
-   `name`  
  
-   `description`  
  
-   `cacheTimeout`  
  
-   `connectionStringName`  
  
-   `serviceUri`  
  
-   `honorCookieExpiry`  
  
 이러한 특성에 대 한 자세한 내용은 참조 [하는 방법: 클라이언트 응용 프로그램 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />가 <see langword="null" />인 경우  
  
 또는  
  
 <paramref name="config" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" />가 비어 있는 경우  
  
 또는  
  
 <paramref name="config" />에 인식할 수 없는 값이 들어 있는 경우.</exception>
        <exception cref="T:System.InvalidOperationException">이 <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" />가 이미 초기화된 경우</exception>
        <exception cref="T:System.FormatException">
          <paramref name="config" />에 <see cref="T:System.Int32" /> 값으로 변환할 수 없는 형식의 <c>cacheTimeout</c> 값이 들어 있는 경우</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="config" />에 <see cref="F:System.Int32.MinValue" />보다 작거나 <see cref="F:System.Int32.MaxValue" />보다 큰 숫자를 나타내는 <c>cacheTimeout</c> 값이 들어 있는 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">사용자의 이름입니다.</param>
        <param name="roleName">역할 이름입니다.</param>
        <summary>지정된 사용자가 지정된 역할에 속하는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>
          지정된 사용자가 지정된 역할에 속하면 <see langword="true" />이고, 지정된 사용자가 인증되지 않았거나 지정된 역할에 속하지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 하 여 인증된 된 사용자가 특정 역할에 있는지 여부를 확인할 수 있습니다는 <xref:System.Security.Principal.IPrincipal.IsInRole%2A> 의 메서드는 <xref:System.Security.Principal.IPrincipal> 에서 반환 되는 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> 속성입니다. 클라이언트 응용 프로그램 서비스를 사용하도록 구성된 응용 프로그램에 대해 이 속성은 <xref:System.Web.ClientServices.ClientRolePrincipal>을 반환합니다. 이 클래스는 <xref:System.Security.Principal.IPrincipal> 인터페이스를 구현하기 때문에 명시적으로 참조할 필요가 없습니다. <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType> 메서드를 내부적으로 호출 된 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 메서드. <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 메서드는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 사용자로 표시 여부를 확인할 수 있는 방법은 `username` 표시 된 역할에 `roleName`합니다.  
  
 서비스 공급자는 불필요 한 서비스 호출을 방지 하기 위해 로컬 파일 시스템에 대 한 역할 정보를 캐시 합니다. 자세한 내용은 참조는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 클래스 개요입니다.  
  
   
  
## Examples  
 다음 예제 코드에서는이 메서드는 사용자가 특정 역할에 있는지 여부를 결정를 직접 액세스 하는 방법을 보여 줍니다. 이 코드는 먼저 사용자 로그인이 만료 여부를 테스트 합니다. 명시적 <xref:System.Web.ClientServices.Providers.ClientRoleProvider> 참조가 필요한 호출 하는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 같은 참조를 사용 하 여를 호출 하므로 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 메서드. 이 코드를 호출 하는 경우 사용자가 "manager" 역할에는 `PerformManagerTask` 메서드를 제공 하지 않습니다.  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" />이 <see cref="F:System.String.Empty" /> 또는 <see langword="null" />입니다.  
  
 또는  
  
 <paramref name="username" />이 현재 인증된 사용자의 사용자 이름이 아닌 경우</exception>
        <exception cref="T:System.Net.WebException">사용자가 더 이상 인증된 상태가 아닌 경우  
  
 또는  
  
 역할 서비스를 사용할 수 없는 경우</exception>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
        <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">사용되지 않습니다.</param>
        <param name="roleNames">사용되지 않습니다.</param>
        <summary>이 메서드는 이 클래스에서 사용되지 않습니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCache">
      <MemberSignature Language="C#" Value="public void ResetCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>캐시된 역할 정보를 삭제하고 캐시 제한 시간을 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> 메서드 로컬 캐시에서 모든 역할 정보를 제거 하 고 캐시가 만료 되도록 설정 합니다. 이 메서드를 호출 하면 후 다음 번에 호출 하는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 또는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> 메서드 대신 로컬 캐시 구성 된 역할 서비스에서 역할 정보를 검색 합니다.  
  
 사용자가 역할이 변경 했지만 캐시 아직 만료 되지 않은 경우에 역할 캐시를 새로 고칠 수 있도록이 메서드를 사용할 수 있습니다. 역할 캐시 시간 제한 간격을 설정 하는 방법에 대 한 정보를 참조 하십시오. [하는 방법: 클라이언트 응용 프로그램 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 로컬 역할 캐시를 다시 설정 하려면이 메서드를 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[ClientApplicationServices#314](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#314)]
 [!code-vb[ClientApplicationServices#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#314)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">사용되지 않습니다.</param>
        <summary>이 메서드는 이 클래스에서 사용되지 않습니다.</summary>
        <returns>해당 사항 없음. 이 메서드는 항상 예외를 throw합니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="ServiceUri">
      <MemberSignature Language="C#" Value="public string ServiceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceUri" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceUri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>역할 서비스의 URI를 가져오거나 설정합니다.</summary>
        <value>역할 서비스 URI입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정할 수 있습니다는 <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> 응용 프로그램 구성 파일에 응용 프로그램 코드에서 속성 값이 일반적으로 설정 됩니다. 그러면 코드를 다시 컴파일하지 않고도 서비스 위치를 변경할 수 있습니다. 자세한 내용은 [방법: 클라이언트 응용 프로그램 서비스 구성](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)을 참조하세요.  
  
 서비스 위치를 프로그래밍 방식으로 설정 하는 경우 전체 서비스는 항상 "Role_JSON_AppService.axd" 끝나야 URI를 지정 해야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 프로그래밍 방식으로 역할 서비스 위치를 설정 하려면이 속성을 사용 하는 방법을 보여 줍니다.  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 속성을 가져올 때 응용 프로그램 구성 파일에 서비스 URI가 없으며 이 속성이 이전에 설정되지 않은 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>