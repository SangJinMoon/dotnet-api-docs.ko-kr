<Type Name="AssemblyHashAlgorithm" FullName="System.Configuration.Assemblies.AssemblyHashAlgorithm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="060dff181314dfc69c0d9ba87fc12a49fb4e75cb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum AssemblyHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed AssemblyHashAlgorithm extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Assemblies.AssemblyHashAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public Enum AssemblyHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public enum class AssemblyHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a4b50-101">파일을 해시하고 강력한 이름을 생성하는 데 사용한 모든 해시 알고리즘을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4b50-101">Specifies all the hash algorithms used for hashing files and for generating the strong name.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b50-102">A `hash function``H` 입력을 가져와서 하는 변환 `m` 해시 값을 호출 하는 고정 크기 문자열을 반환 하 고 `h` (즉, `h`  =  `H` (`m`)).</span><span class="sxs-lookup"><span data-stu-id="a4b50-102">A `hash function``H` is a transformation that takes an input `m` and returns a fixed-size string, which is called the hash value `h` (that is, `h` = `H` (`m`)).</span></span> <span data-ttu-id="a4b50-103">이 속성을 가진 해시 함수는 다양 한 일반 계산 사용 하지만 암호화에 사용할 경우 해시 함수는 일반적으로 몇 가지 추가 속성이 있어야 수 선택 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-103">Hash functions with just this property have a variety of general computational uses, but when employed in cryptography, the hash functions are usually chosen to have some additional properties.</span></span>  
  
 <span data-ttu-id="a4b50-104">암호화 해시 함수에 대 한 기본 요구 사항은:</span><span class="sxs-lookup"><span data-stu-id="a4b50-104">The basic requirements for a cryptographic hash function are:</span></span>  
  
-   <span data-ttu-id="a4b50-105">길이 입력 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-105">The input can be of any length.</span></span>  
  
-   <span data-ttu-id="a4b50-106">출력의 고정된 길이입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-106">The output has a fixed length.</span></span>  
  
-   <span data-ttu-id="a4b50-107">`H` (`x)` 은 비교적 쉽습니다 지정한 x에 대 한 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-107">`H` (`x)` is relatively easy to compute for any given x.</span></span>  
  
-   <span data-ttu-id="a4b50-108">`H` (`x`)는 단방향입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-108">`H` (`x`) is one-way.</span></span>  
  
-   <span data-ttu-id="a4b50-109">`H` (`x`)는 충돌이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-109">`H` (`x`) is collision-free.</span></span>  
  
 <span data-ttu-id="a4b50-110">해시 값은 긴 메시지 또는 문서를 계산 되었는지; 간결 하 게 나타냅니다. 이 값이 메시지 다이제스트를 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-110">The hash value represents concisely the longer message or document from which it was computed; this value is called the message digest.</span></span> <span data-ttu-id="a4b50-111">메시지 다이제스트는 더 큰 문서의 디지털 지문 생각할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-111">You can think of a message digest as a digital fingerprint of the larger document.</span></span> <span data-ttu-id="a4b50-112">잘 알려진 해시 함수에는 MD2 및 SHA이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b50-112">Examples of well-known hash functions are MD2 and SHA.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="MD5">
      <MemberSignature Language="C#" Value="MD5" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm MD5 = int32(32771)" />
      <MemberSignature Language="DocId" Value="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.MD5" />
      <MemberSignature Language="VB.NET" Value="MD5" />
      <MemberSignature Language="C++ CLI" Value="MD5" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <MemberValue>32771</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4b50-113">MD5 메시지 다이제스트 알고리즘을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-113">Retrieves the MD5 message-digest algorithm.</span>
          </span>
          <span data-ttu-id="a4b50-114">MD5는 Rivest가 1991년에 개발한 것으로,</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-114">MD5 was developed by Rivest in 1991.</span>
          </span>
          <span data-ttu-id="a4b50-115">기본적으로 MD4에 안전 벨트 기능을 추가한 것입니다. MD5는 MD4보다 약간 느리지만 더 안전합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-115">It is basically MD4 with safety-belts and while it is slightly slower than MD4, it helps provide more security.</span>
          </span>
          <span data-ttu-id="a4b50-116">알고리즘은 네 개의 고유 라운드로 구성되는데, MD4와는 설계가 약간 다릅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-116">The algorithm consists of four distinct rounds, which has a slightly different design from that of MD4.</span>
          </span>
          <span data-ttu-id="a4b50-117">패딩 요구 사항 뿐만 아니라 메시지 다이제스트 크기는 똑같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-117">Message-digest size, as well as padding requirements, remain the same.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4b50-118">해시 알고리즘이 없음을 나타내는 마스크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-118">A mask indicating that there is no hash algorithm.</span>
          </span>
          <span data-ttu-id="a4b50-119">복수 모듈 어셈블리에 대해 <see langword="None" />을 지정한 경우 공용 언어 런타임의 기본값이 SHA1 알고리즘으로 설정됩니다. 복수 모듈 어셈블리에서 해시를 생성해야하기 때문입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-119">If you specify <see langword="None" /> for a multi-module assembly, the common language runtime defaults to the SHA1 algorithm, since multi-module assemblies need to generate a hash.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SHA1">
      <MemberSignature Language="C#" Value="SHA1" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm SHA1 = int32(32772)" />
      <MemberSignature Language="DocId" Value="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1" />
      <MemberSignature Language="VB.NET" Value="SHA1" />
      <MemberSignature Language="C++ CLI" Value="SHA1" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <MemberValue>32772</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4b50-120">SHA의 게시되지 않은 결함을 수정하는 수정 버전의 SHA를 검색하는 데 사용한 마스크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-120">A mask used to retrieve a revision of the Secure Hash Algorithm that corrects an unpublished flaw in SHA.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SHA256">
      <MemberSignature Language="C#" Value="SHA256" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm SHA256 = int32(32780)" />
      <MemberSignature Language="DocId" Value="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA256" />
      <MemberSignature Language="VB.NET" Value="SHA256" />
      <MemberSignature Language="C++ CLI" Value="SHA256" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <MemberValue>32780</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4b50-121">해시 크기가 256비트인 SHA(Secure Hash Algorithm) 버전을 검색하는 데 사용한 마스크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-121">A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 256 bits.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SHA384">
      <MemberSignature Language="C#" Value="SHA384" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm SHA384 = int32(32781)" />
      <MemberSignature Language="DocId" Value="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA384" />
      <MemberSignature Language="VB.NET" Value="SHA384" />
      <MemberSignature Language="C++ CLI" Value="SHA384" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <MemberValue>32781</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4b50-122">해시 크기가 384비트인 SHA(Secure Hash Algorithm) 버전을 검색하는 데 사용한 마스크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-122">A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 384 bits.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SHA512">
      <MemberSignature Language="C#" Value="SHA512" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm SHA512 = int32(32782)" />
      <MemberSignature Language="DocId" Value="F:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA512" />
      <MemberSignature Language="VB.NET" Value="SHA512" />
      <MemberSignature Language="C++ CLI" Value="SHA512" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <MemberValue>32782</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a4b50-123">해시 크기가 512비트인 SHA(Secure Hash Algorithm) 버전을 검색하는 데 사용한 마스크입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b50-123">A mask used to retrieve a version of the Secure Hash Algorithm with a hash size of 512 bits.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>