<Type Name="IVsaCodeItem" FullName="Microsoft.Vsa.IVsaCodeItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02ffa3d80165d4caa3178d3b714320a67262d734" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52610029" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IVsaCodeItem : Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaCodeItem implements class Microsoft.Vsa.IVsaItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaCodeItem&#xA;Implements IVsaItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaCodeItem : Microsoft::Vsa::IVsaItem" />
  <TypeSignature Language="F#" Value="type IVsaCodeItem = interface&#xA;    interface IVsaItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Vsa.IVsaItem</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE7-7eea-4ee5-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bb59a-101">스크립트 엔진이 컴파일할 코드 항목을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb59a-101">Represents a code item to be compiled by the script engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="bb59a-102">클래스, 모듈 또는 기타 소스 텍스트에 지정 된 코드 항목을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-102">The specified code item can contain classes, modules, or other source text.</span></span>

<span data-ttu-id="bb59a-103">IVsaCodeItem 인터페이스의 모든 멤버를 호출 하는 데 필요한 권한은 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-103">No permissions are required for calling any members of the IVsaCodeItem interface.</span></span>

<span data-ttu-id="bb59a-104">스크립트 엔진이 코드 항목을 추가 하려면이 인터페이스를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-104">The script engine implements this interface in order to add code items.</span></span>

]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddEventSource">
      <MemberSignature Language="C#" Value="public void AddEventSource (string eventSourceName, string eventSourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddEventSource(string eventSourceName, string eventSourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AddEventSource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventSource (eventSourceName As String, eventSourceType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventSource(System::String ^ eventSourceName, System::String ^ eventSourceType);" />
      <MemberSignature Language="F#" Value="abstract member AddEventSource : string * string -&gt; unit" Usage="iVsaCodeItem.AddEventSource (eventSourceName, eventSourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
        <Parameter Name="eventSourceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="bb59a-105">이벤트 소스의 프로그래밍 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-105">A programmatic name of the event source.</span>
          </span>
        </param>
        <param name="eventSourceType">
          <span data-ttu-id="bb59a-106">이벤트 소스의 형식 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-106">The type name of the event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb59a-107">코드 항목에 이벤트 소스를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-107">Adds an event source to the code item.</span>
          </span>
          <span data-ttu-id="bb59a-108">코드 항목은 호스트가 구현하는 IVsaSite.GetEventSourceInstance 메서드를 호출하여 명명된 이벤트 소스에 이벤트를 후크하는 데 이벤트 소스를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-108">The code item uses the event source to hook up an event to the named event source by calling the IVsaSite.GetEventSourceInstance method, which is implemented by the host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="bb59a-109">스크립트 엔진이 명명 된 이벤트 소스에 이벤트를 후크 AddEventSource 메서드에서 제공 하는 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-109">The script engine uses information provided by the AddEventSource method to hook up events to the named event source.</span></span> <span data-ttu-id="bb59a-110">호스트에서 구현 하는 IVsaSite.GetEventSourceInstance 메서드를 호출 하 여 이벤트 소스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-110">It obtains event sources by calling the IVsaSite.GetEventSourceInstance method, which is implemented by the host.</span></span> <span data-ttu-id="bb59a-111">AddEventSource 메서드는 호스트에서 제공한 개체에서 발생 하는 이벤트를 처리 하는 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-111">The AddEventSource method creates a class that handles events raised by a host-provided object.</span></span>

> [!NOTE]
> <span data-ttu-id="bb59a-112">JScript.NET 스크립트 엔진에서이 메서드를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-112">The JScript .NET script engine does not support this method.</span></span> <span data-ttu-id="bb59a-113">JScript.NET 엔진 이벤트 후크 해야 있는 경우에는 전역 항목을 사용 하 여 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-113">In cases where the JScript .NET engine must hook up an event, you must do so using a global item.</span></span> <span data-ttu-id="bb59a-114">대신 이벤트 원본, JScript.NET 엔진 AppGlobal 항목 형식을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-114">Rather than event sources, the JScript .NET engine uses AppGlobal item types.</span></span> <span data-ttu-id="bb59a-115">자세한 내용은 VsaItemType를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="bb59a-115">For more information, see VsaItemType.</span></span>


<span data-ttu-id="bb59a-116">코드 항목, 이벤트 소스 개체 이름으로 액세스할 수 있습니다 하 고 액세스 되 면 개체에 대해 이벤트 처리기를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-116">Within the code item, you can access the event source object by name, and, once accessed, you can write event handlers against the object.</span></span> <span data-ttu-id="bb59a-117">이벤트 소스 유형에 관리 되지 않는 호스트에서 형식 개체를 구현 하는 이벤트 소스를 용이 하 게 아니라 문자열로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-117">The event source type is passed as a string rather than as a Type object to facilitate implementing event sources by unmanaged hosts.</span></span>

<span data-ttu-id="bb59a-118">컴파일러는 형식에서 제공 하는 메서드에 바인딩할 eventSourceType 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-118">The compiler uses the eventSourceType parameter to bind to methods provided by the type.</span></span> <span data-ttu-id="bb59a-119">스크립트 엔진 형식 개체의 인스턴스를 요청 하려면 IVsaSite.GetEventSourceInstance 메서드를 호출 하는 경우 나중에 사용도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-119">It is also used later when the script engine calls the IVsaSite.GetEventSourceInstance method to request an instance of the Type object.</span></span>

<span data-ttu-id="bb59a-120">스크립트 엔진에 대 한 이벤트를 연결 하기 위한 메커니즘에 대 한 자세한 내용은 IVsaSite.GetEventSourceInstance 메서드를 참조 하세요.</span><span class="sxs-lookup"><span data-stu-id="bb59a-120">For more information about the mechanisms for hooking up events for the script engine, see the IVsaSite.GetEventSourceInstance method.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSourceText">
      <MemberSignature Language="C#" Value="public void AppendSourceText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSourceText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.AppendSourceText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSourceText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSourceText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AppendSourceText : string -&gt; unit" Usage="iVsaCodeItem.AppendSourceText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="bb59a-121">코드 항목에 추가되는 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-121">The text to be appended to the code item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb59a-122">지정된 텍스트를 코드 항목 끝에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-122">Appends specified text to the end of the code item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="bb59a-123">추가 된 소스 텍스트 유효성 검사가 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-123">Appended source text is not subjected to validation.</span></span> <span data-ttu-id="bb59a-124">이러한 이유로 오류가 있는 경우 노출할 IVsaEngine.Compile 메서드에 다음 호출에서.</span><span class="sxs-lookup"><span data-stu-id="bb59a-124">For this reason, errors, if any, will surface on the next call to the IVsaEngine.Compile method.</span></span>

<span data-ttu-id="bb59a-125">추가 된 소스 텍스트를 단일 문자열로 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-125">The appended source text is provided as a single string.</span></span> <span data-ttu-id="bb59a-126">문자열 해야 모든 서식 지정이 직접 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-126">Should the string require any formatting, you must provide this yourself.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDOM">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeObject CodeDOM { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeObject CodeDOM" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDOM As CodeObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeObject ^ CodeDOM { System::CodeDom::CodeObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDOM : System.CodeDom.CodeObject" Usage="Microsoft.Vsa.IVsaCodeItem.CodeDOM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb59a-127">코드 항목에 표시되는 CodeDOM(코드 문서 개체 모델)을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-127">Gets the code document object model (CodeDOM) represented in the code item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb59a-128">코드 항목의 CodeDOM을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-128">Returns the CodeDOM for the code item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="bb59a-129">CodeDOM 속성은 사용할 수 없을 때까지 IVsaEngine.Compile 메서드를 호출한 후 하므로 컴파일 단계의 스크립트 엔진의 일부로 일반적으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-129">The CodeDOM property is typically generated as part of the compilation step of the script engine, so it is not available until after a call to the IVsaEngine.Compile method.</span></span> <span data-ttu-id="bb59a-130">일부 VSA 구현은 명시적인 컴파일 단계가 필요 없이 CodeDOM을 동적으로 제공할 수 있지만 호스트는이 동작에 의존할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-130">Some VSA implementations may be able to provide the CodeDOM dynamically, without the need for an explicit compilation step, but hosts cannot rely on this behavior.</span></span> <span data-ttu-id="bb59a-131">일부 스크립트 엔진, 예를 들어, JScript.NET 스크립트 엔진에서이 동작을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-131">Some script engines, for example, the JScript .NET script engine, do not support this behavior.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventSource">
      <MemberSignature Language="C#" Value="public void RemoveEventSource (string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEventSource(string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaCodeItem.RemoveEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEventSource (eventSourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEventSource(System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEventSource : string -&gt; unit" Usage="iVsaCodeItem.RemoveEventSource eventSourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventSourceName">
          <span data-ttu-id="bb59a-132">제거될 이벤트 소스의 프로그래밍 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-132">The programmatic name of the event source to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb59a-133">코드 항목에서 지정된 이벤트 소스를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-133">Removes the specified event source from the code item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="bb59a-134">이벤트 소스를 제거 해도 원본 텍스트에서 기본 이벤트 처리기를 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-134">Removing an event source does not remove the underlying event handler from source text.</span></span> <span data-ttu-id="bb59a-135">대신, 이벤트는 더 이상 이벤트 처리기에는 알림을 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-135">Rather, events no longer raise notifications to the event handler.</span></span> <span data-ttu-id="bb59a-136">따라서 이벤트 원본을 삭제 해도 기본 함수 소스 코드를 유지 하는 경우 컴파일러 오류가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-136">Therefore, you will get a compiler error if you delete an event source but leave the underlying function in the source code.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceText">
      <MemberSignature Language="C#" Value="public string SourceText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceText : string with get, set" Usage="Microsoft.Vsa.IVsaCodeItem.SourceText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb59a-137">자동 생성된 코드가 있으면 해당 코드를 포함하여 지정된 코드 항목의 텍스트를 설정하거나 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-137">Sets or gets the text of a specified code item, including auto-generated code, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb59a-138">코드 항목의 소스 텍스트를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb59a-138">Returns the source text of the code item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="bb59a-139">이 속성을 설정 하는 경우 텍스트 하지 유효성 검사를 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-139">When you set this property, the text is not subjected to validation.</span></span> <span data-ttu-id="bb59a-140">이러한 이유로 오류가 있는 경우 노출할 IVsaEngine.Compile 메서드에 다음 호출에서.</span><span class="sxs-lookup"><span data-stu-id="bb59a-140">For this reason, errors, if any, will surface on the next call to the IVsaEngine.Compile method.</span></span>

<span data-ttu-id="bb59a-141">SourceText 속성은 반환 캐리지 등의 서식 문자를 포함 하는 하나의 큰 문자열의 소스 텍스트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-141">The SourceText property returns the source text in one large string, including formatting characters such as carriage returns.</span></span>

<span data-ttu-id="bb59a-142">이 속성을 가져오는 엔진 하지 닫아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-142">To get this property the engine must not be closed.</span></span> <span data-ttu-id="bb59a-143">엔진은이 속성을 설정 하려면 해야 하지 닫히고 엔진 실행 하지 않아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="bb59a-143">To set this property the engine must not be closed, and the engine must not be running.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>