<Type Name="SqlDataSourceEnumerator" FullName="System.Data.Sql.SqlDataSourceEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6ac2abb5627ff3872b28a03aa9b2efdd4d25485" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36680778" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlDataSourceEnumerator : System.Data.Common.DbDataSourceEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlDataSourceEnumerator extends System.Data.Common.DbDataSourceEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Data.Sql.SqlDataSourceEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlDataSourceEnumerator&#xA;Inherits DbDataSourceEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceEnumerator sealed : System::Data::Common::DbDataSourceEnumerator" />
  <TypeSignature Language="F#" Value="type SqlDataSourceEnumerator = class&#xA;    inherit DbDataSourceEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataSourceEnumerator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="141cc-101">로컬 네트워크에서 사용할 수 있는 모든 SQL Server 인스턴스를 열거하는 메커니즘을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="141cc-101">Provides a mechanism for enumerating all available instances of SQL Server within the local network.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="141cc-102">SQL Server 2000과 SQL Server 2005 모두 지정할 수 응용 프로그램의 현재 네트워크 내에서 SQL Server 인스턴스의 유무를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-102">Both SQL Server 2000 and SQL Server 2005 make it possible for applications to determine the existence of SQL Server instances within the current network.</span></span> <span data-ttu-id="141cc-103"><xref:System.Data.Sql.SqlDataSourceEnumerator> 클래스를 제공 하는 응용 프로그램 개발자에 게이 정보를 노출 한 <xref:System.Data.DataTable> 사용 가능한 모든 서버에 대 한 정보가 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-103">The <xref:System.Data.Sql.SqlDataSourceEnumerator> class exposes this information to the application developer, providing a <xref:System.Data.DataTable> containing information about all the available servers.</span></span> <span data-ttu-id="141cc-104">이 반환 된 테이블에서 사용자가 새 연결을 만들 하려고 할 때 제공 된 목록과 일치 하는 서버 인스턴스의 목록을 포함 된 `Connection Properties` 대화 상자에서 사용 가능한 모든 서버를 포함 된 드롭다운 목록을 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-104">This returned table contains a list of server instances that matches the list provided when a user attempts to create a new connection, and on the `Connection Properties` dialog box, expands the drop-down list containing all the available servers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDataSources">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetDataSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetDataSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataSources () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetDataSources();" />
      <MemberSignature Language="F#" Value="override this.GetDataSources : unit -&gt; System.Data.DataTable" Usage="sqlDataSourceEnumerator.GetDataSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="141cc-105">표시되는 모든 SQL Server 2000 또는 SQL Server 2005 인스턴스에 대한 정보를 포함하는 <see cref="T:System.Data.DataTable" />을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="141cc-105">Retrieves a <see cref="T:System.Data.DataTable" /> containing information about all visible SQL Server 2000 or SQL Server 2005 instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="141cc-106">표시되는 SQL Server 인스턴스에 대한 정보를 포함하는 <see cref="T:System.Data.DataTable" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="141cc-106">Returns a <see cref="T:System.Data.DataTable" /> containing information about the visible SQL Server instances.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="141cc-107">이 메서드에 의해 반환 되는 테이블에는 모두 문자열을 포함 하는 다음 열:</span><span class="sxs-lookup"><span data-stu-id="141cc-107">The table returned by this method contains the following columns, all of which contain strings:</span></span>  
  
|<span data-ttu-id="141cc-108">열</span><span class="sxs-lookup"><span data-stu-id="141cc-108">Column</span></span>|<span data-ttu-id="141cc-109">설명</span><span class="sxs-lookup"><span data-stu-id="141cc-109">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="141cc-110">**서버 이름**</span><span class="sxs-lookup"><span data-stu-id="141cc-110">**ServerName**</span></span>|<span data-ttu-id="141cc-111">서버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-111">Name of the server.</span></span>|  
|<span data-ttu-id="141cc-112">**InstanceName**</span><span class="sxs-lookup"><span data-stu-id="141cc-112">**InstanceName**</span></span>|<span data-ttu-id="141cc-113">서버 인스턴스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-113">Name of the server instance.</span></span> <span data-ttu-id="141cc-114">서버가 기본 인스턴스로 실행 중인 경우에는 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-114">Blank if the server is running as the default instance.</span></span>|  
|<span data-ttu-id="141cc-115">**IsClustered**</span><span class="sxs-lookup"><span data-stu-id="141cc-115">**IsClustered**</span></span>|<span data-ttu-id="141cc-116">서버가 클러스터의 일부인지 여부를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-116">Indicates whether the server is part of a cluster.</span></span>|  
|<span data-ttu-id="141cc-117">**Version**</span><span class="sxs-lookup"><span data-stu-id="141cc-117">**Version**</span></span>|<span data-ttu-id="141cc-118">서버 버전입니다. 예를 들어, SQL Server 2000의 경우 8.00.x이고 SQL Server 2005의 경우에는 9.00.x입니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-118">Version of the server (8.00.x for SQL Server 2000, and 9.00.x for SQL Server 2005).</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="141cc-119">특성에서 사용 하는 메커니즘으로 인해 <xref:System.Data.Sql.SqlDataSourceEnumerator> 네트워크에서 데이터 소스를 찾으려면 메서드가 항상 반환 되지 사용할 수 있는 서버 전체 목록은 않으며 목록 하지 못할 각 호출에서 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-119">Due to the nature of the mechanism used by <xref:System.Data.Sql.SqlDataSourceEnumerator> to locate data sources on a network, the method will not always return a complete list of the available servers, and the list might not be the same on every call.</span></span> <span data-ttu-id="141cc-120">이 함수를 사용 하 여 사용자가 목록에서 서버를 선택 하도록 하려는 경우에 항상 서버 열거는 사용 가능한 모든 서버를 반환 하지 않는 경우에 목록에 없는 이름을 입력 하는 옵션을 제공 합니다 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-120">If you plan to use this function to let users select a server from a list, make sure that you always also supply an option to type in a name that is not in the list, in case the server enumeration does not return all the available servers.</span></span> <span data-ttu-id="141cc-121">또한이 메서드는 실행, 성능이 중요 한 경우 호출에 대해 주의 기울여야 하는 데 시간이 많이 걸릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-121">In addition, this method may take a significant amount of time to execute, so be careful about calling it when performance is critical.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="141cc-122">다음 콘솔 응용 프로그램에서 표시 되는 모든 SQL Server 인스턴스에 대 한 정보를 검색 하 고 콘솔 창에 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-122">The following console application retrieves information about all the visible SQL Server instances and displays the information in the console window.</span></span>  
  
```vb  
Imports System.Data.Sql  
  
Module Module1  
  Sub Main()  
    ' Retrieve the enumerator instance and then the data.  
    Dim instance As SqlDataSourceEnumerator = _  
     SqlDataSourceEnumerator.Instance  
    Dim table As System.Data.DataTable = instance.GetDataSources()  
  
    ' Display the contents of the table.  
    DisplayData(table)  
  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
  
  Private Sub DisplayData(ByVal table As DataTable)  
    For Each row As DataRow In table.Rows  
      For Each col As DataColumn In table.Columns  
        Console.WriteLine("{0} = {1}", col.ColumnName, row(col))  
      Next  
      Console.WriteLine("============================")  
    Next  
  End Sub  
End Module  
```  
  
```csharp  
using System.Data.Sql;  
  
class Program  
{  
  static void Main()  
  {  
    // Retrieve the enumerator instance and then the data.  
    SqlDataSourceEnumerator instance =  
      SqlDataSourceEnumerator.Instance;  
    System.Data.DataTable table = instance.GetDataSources();  
  
    // Display the contents of the table.  
    DisplayData(table);  
  
    Console.WriteLine("Press any key to continue.");  
    Console.ReadKey();  
  }  
  
  private static void DisplayData(System.Data.DataTable table)  
  {  
    foreach (System.Data.DataRow row in table.Rows)  
    {  
      foreach (System.Data.DataColumn col in table.Columns)  
      {  
        Console.WriteLine("{0} = {1}", col.ColumnName, row[col]);  
      }  
      Console.WriteLine("============================");  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Data.Sql.SqlDataSourceEnumerator Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Sql.SqlDataSourceEnumerator Instance" />
      <MemberSignature Language="DocId" Value="P:System.Data.Sql.SqlDataSourceEnumerator.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As SqlDataSourceEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Sql::SqlDataSourceEnumerator ^ Instance { System::Data::Sql::SqlDataSourceEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Data.Sql.SqlDataSourceEnumerator" Usage="System.Data.Sql.SqlDataSourceEnumerator.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Sql.SqlDataSourceEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="141cc-123">사용할 수 있는 SQL Server 인스턴스에 대한 정보를 검색하는 데 사용할 수 있는 <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />의 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="141cc-123">Gets an instance of the <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />, which can be used to retrieve information about available SQL Server instances.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="141cc-124">사용할 수 있는 SQL Server 인스턴스에 대한 정보를 검색하는 데 사용되는 <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" />의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="141cc-124">An instance of the <see cref="T:System.Data.Sql.SqlDataSourceEnumerator" /> used to retrieve information about available SQL Server instances.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="141cc-125"><xref:System.Data.Sql.SqlDataSourceEnumerator> 클래스 생성자를 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-125">The <xref:System.Data.Sql.SqlDataSourceEnumerator> class does not provide a constructor.</span></span> <span data-ttu-id="141cc-126">사용 된 <xref:System.Data.Sql.SqlDataSourceEnumerator.Instance%2A> 대신 클래스의 인스턴스를 검색 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-126">Use the <xref:System.Data.Sql.SqlDataSourceEnumerator.Instance%2A> property to retrieve an instance of the class instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="141cc-127">다음 콘솔 응용 프로그램에는 로컬 네트워크에서 사용할 수 있는 모든 SQL Server 2005 인스턴스의 목록이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="141cc-127">The following console application displays a list of all the available SQL Server 2005 instances within the local network.</span></span> <span data-ttu-id="141cc-128">이 코드에서는 사용 된 <xref:System.Data.DataTable.Select%2A> 에서 반환 된 테이블에서 행을 필터링 하는 메서드는 <xref:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="141cc-128">This code uses the <xref:System.Data.DataTable.Select%2A> method to filter the rows in the table returned by the <xref:System.Data.Sql.SqlDataSourceEnumerator.GetDataSources%2A> method.</span></span>  
  
```vb  
Imports System.Data.Sql  
  
Module Module1  
  Sub Main()  
    ' Retrieve the enumerator instance, and  
    ' then retrieve the data sources.  
    Dim instance As SqlDataSourceEnumerator = _  
     SqlDataSourceEnumerator.Instance  
    Dim table As System.Data.DataTable = instance.GetDataSources()  
  
    ' Filter the sources to just show SQL Server 2005 instances.  
    Dim rows() As DataRow = table.Select("Version LIKE '9%'")  
    For Each row As DataRow In rows  
      Console.WriteLine(row("ServerName"))  
    Next  
    Console.WriteLine("Press any key to continue.")  
    Console.ReadKey()  
  End Sub  
End Module  
```  
  
```csharp  
using System.Data.Sql;  
  
class Program  
{  
  static void Main()  
  {  
    // Retrieve the enumerator instance, and  
    // then retrieve the data sources.  
    SqlDataSourceEnumerator instance =  
      SqlDataSourceEnumerator.Instance;  
    System.Data.DataTable table = instance.GetDataSources();  
  
    // Filter the sources to just show SQL Server 2005 instances.  
    System.Data.DataRow[] rows = table.Select("Version LIKE '9%'");  
    foreach (System.Data.DataRow row in rows)  
    {  
      Console.WriteLine(row["ServerName"]);  
    }  
    Console.WriteLine("Press any key to continue.");  
    Console.ReadKey();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>