<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlPersistenceProviderFactory.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5137909076125dd59ffe491d6e56ec2e6aaf1df0a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">137909076125dd59ffe491d6e56ec2e6aaf1df0a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>A system-provided <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /&gt;</ph> implementation used to create a <ph id="ph2">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph> instance that uses a SQL database to store persisted service state data.</source>
          <target state="translated">SQL 데이터베이스를 사용하여 지속 서비스 상태 데이터를 저장하는 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /&gt;</ph> 인스턴스를 만드는 데 사용되는 시스템 제공 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph> 구현입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class represents a factory class for a fully-functional, durable service persistence provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> 클래스는 제대로 작동하는 영속 서비스 지속성 공급자의 팩터리 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>You can use this system-provided provider to persist and retrieve state information about a durable <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> service.</source>
          <target state="translated">이 시스템 제공 공급자를 사용하여 영속 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 서비스에 대한 상태 정보를 유지하고 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>In addition to persistence, the provider created by the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class implements locking of service state data records by inheriting from the abstract <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> 클래스로 만든 제공자는 추상 <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> 클래스에서 상속하여 지속성뿐만 아니라 서비스 상태 데이터 레코드 잠금을 구현합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>Methods that interact with persisted data (such as <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A&gt;</ph>) have an optional parameter (<ph id="ph3">`lockInstance`</ph>) that defines whether locks on the data in question are released or maintained.</source>
          <target state="translated">지속 된 데이터와 상호 작용 하는 메서드 (예: <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A&gt;</ph>) 선택적 매개 변수 (<ph id="ph3">`lockInstance`</ph>) 문제의 데이터에 대 한 잠금을 해제할지 아니면 유지 여부를 정의 하는 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Persistence.PersistenceException&gt;</ph> exceptions thrown by <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> do not have their exception details hidden by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Persistence.PersistenceException&gt;</ph>에서 throw하는 <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> 예외에 대한 상세 정보는 기본적으로 숨겨져 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>To protect against security vulnerabilities, these details can be hidden by setting <ph id="ph1">&lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">보안 문제를 방지 하기 위해 이러한 세부 정보 숨길 수를 설정 하 여 <ph id="ph1">&lt;xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A&gt;</ph> 를 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The SQL Persistence Provider stores and retrieves data from a SQL Server database.</source>
          <target state="translated">SQL 지속성 공급자는 SQL Server 데이터베이스의 데이터를 저장하고 검색합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.</source>
          <target state="translated">호스트는 응용 프로그램과 데이터베이스 간 통신이나 데이터베이스의 인스턴스 상태에 대한 읽기/쓰기 권한을 얻으려는 공격자로부터 보호하기 위해 보안이 설정된 SQL Server 환경을 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>Overloads of the constructor for the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class provide parameters for setting the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> 클래스 생성자의 오버로드는 다음을 설정하는 매개 변수를 제공합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The connection string used for accessing the SQL database.</source>
          <target state="translated">SQL 데이터베이스에 액세스하는 데 사용되는 연결 문자열</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>The lock time-out used for defining lock ownership duration.</source>
          <target state="translated">잠금 소유권 기간을 정의하는 데 사용되는 잠금 시간 제한</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
          <source>Whether the persistence data is serialized as XML or binary data.</source>
          <target state="translated">지속성 데이터를 XML 또는 이진 데이터로 serialize할지 여부</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The collection of parameters used by the new persistence provider factory.</source>
          <target state="translated">새로운 지속성 제공자 팩터리에서 사용하는 매개 변수 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>Valid parameters include <ph id="ph1">&lt;see langword="lockTimeout" /&gt;</ph>, <ph id="ph2">&lt;see langword="connectionStringName" /&gt;</ph>, and <ph id="ph3">&lt;see langword="serializeAsText" /&gt;</ph>.</source>
          <target state="translated">유효한 매개 변수로는 <ph id="ph1">&lt;see langword="lockTimeout" /&gt;</ph>, <ph id="ph2">&lt;see langword="connectionStringName" /&gt;</ph> 및 <ph id="ph3">&lt;see langword="serializeAsText" /&gt;</ph>가 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class, configured with the specified parameter collection.</source>
          <target state="translated">지정된 매개 변수 컬렉션으로 구성된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>This constructor can be used to arbitrarily specify <ph id="ph1">`lockTimeout`</ph>, <ph id="ph2">`connectionString`</ph>, and <ph id="ph3">`serializeAsText`</ph> without specifying the other parameters as required by the other constructors (for example, to specify the <ph id="ph4">`connectionString`</ph> and <ph id="ph5">`lockTimeout`</ph> parameters without specifying the <ph id="ph6">`serializeAsText`</ph> parameter.)</source>
          <target state="translated">이 생성자를 사용하면 <ph id="ph1">`lockTimeout`</ph> 매개 변수를 지정하지 않고 <ph id="ph2">`connectionString`</ph> 및 <ph id="ph3">`serializeAsText`</ph> 매개 변수를 지정하는 경우처럼 다른 생성자에 필요한 다른 매개 변수를 지정하지 않고 <ph id="ph4">`connectionString`</ph>, <ph id="ph5">`lockTimeout`</ph> 및 <ph id="ph6">`serializeAsText`</ph>를 임의로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class using a parameters collection.</source>
          <target state="translated">다음 코드 예제에서는 매개 변수 컬렉션을 사용하여 <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)">
          <source>The connection parameters for the new persistence provider instance.</source>
          <target state="translated">새 지속성 공급자 인스턴스의 연결 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class, configured with the specified connection string.</source>
          <target state="translated">지정된 연결 문자열을 사용하여 구성된 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class using a connection string.</source>
          <target state="translated">다음 코드 예제에서는 연결 문자열을 사용하여 <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>The connection parameters for the new persistence provider instance.</source>
          <target state="translated">새 지속성 공급자 인스턴스의 연결 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>Specifies whether data is serialized as text rather than binary.</source>
          <target state="translated">이진이 아닌 텍스트로 데이터를 serialize할지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class, configured with the specified connection string and <ph id="ph2">&lt;see langword="serializeAsText" /&gt;</ph> parameters.</source>
          <target state="translated">지정된 연결 문자열 및 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> 매개 변수를 사용하여 구성된 <ph id="ph2">&lt;see langword="serializeAsText" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>The default value for <ph id="ph1">`serializeAsText`</ph> is <ph id="ph2">`false`</ph>, which indicates that persistence information is serialized as binary data.</source>
          <target state="translated">에 대 한 기본값 <ph id="ph1">`serializeAsText`</ph> 은 <ph id="ph2">`false`</ph>를 이진 데이터로 serialize 되는 지 속성 정보를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The connection parameters for the new persistence provider factory instance.</source>
          <target state="translated">새 지속성 공급자 팩터리 인스턴스의 연결 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>Specifies whether data is serialized as text rather than binary.</source>
          <target state="translated">이진이 아닌 텍스트로 데이터를 serialize할지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The time-out for lock ownership.</source>
          <target state="translated">잠금 소유권의 시간 제한입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>Locked instances are automatically unlocked after this time period.</source>
          <target state="translated">이 시간이 지나면 잠긴 인스턴스가 자동으로 잠금 해제됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>A time-out of <ph id="ph1">&lt;see langword="TimeSpan.Zero" /&gt;</ph> specifies that no locking is used.</source>
          <target state="translated">시간 제한이 <ph id="ph1">&lt;see langword="TimeSpan.Zero" /&gt;</ph>이면 잠금이 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> class, configured with the specified connection string, <ph id="ph2">&lt;see langword="serializeAsText" /&gt;</ph>, and <ph id="ph3">&lt;see langword="lockTimeout" /&gt;</ph> parameters.</source>
          <target state="translated">지정된 연결 문자열, <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /&gt;</ph> 및 <ph id="ph2">&lt;see langword="serializeAsText" /&gt;</ph> 매개 변수를 사용하여 구성된 <ph id="ph3">&lt;see langword="lockTimeout" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The default value for <ph id="ph1">`serializeAsText`</ph> is <ph id="ph2">`false`</ph>, which indicates that persistence information is serialized as binary data.</source>
          <target state="translated">에 대 한 기본값 <ph id="ph1">`serializeAsText`</ph> 은 <ph id="ph2">`false`</ph>를 이진 데이터로 serialize 되는 지 속성 정보를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The default value for <ph id="ph1">`lockTimeout`</ph> is <ph id="ph2">`TimeSpan.Zero`</ph>, which indicates that locking is not used.</source>
          <target state="translated">에 대 한 기본값 <ph id="ph1">`lockTimeout`</ph> 은 <ph id="ph2">`TimeSpan.Zero`</ph>, 해당 잠금 나타냅니다는 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>If <ph id="ph1">`TimeSpan.MaxValue`</ph> is used, then locks are maintained indefinitely.</source>
          <target state="translated">경우 <ph id="ph1">`TimeSpan.MaxValue`</ph> 사용 하는 잠금 무기한으로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)">
          <source>The following code example shows how to create a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory&gt;</ph> 클래스의 새 인스턴스를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString">
          <source>Gets the connection parameters for persistence provider instances created with this factory.</source>
          <target state="translated">이 팩터리로 만든 지속성 공급자 인스턴스의 연결 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString">
          <source>The connection parameters for persistence provider instances created with this factory.</source>
          <target state="translated">이 팩터리로 만든 지속성 공급자 인스턴스의 연결 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString">
          <source>The following code example shows how to set and access the <ph id="ph1">`ConnectionString`</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`ConnectionString`</ph> 속성을 설정하고 액세스하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>The unique identifier of the persistence provider being created.</source>
          <target state="translated">만들 지속성 제공자의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph> instance that uses a SQL database as its persistence store.</source>
          <target state="translated">SQL 데이터베이스를 지속성 저장소로 사용하는 새 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /&gt;</ph> 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>A newly-created <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /&gt;</ph>.</source>
          <target state="translated">새로 만든 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>The initialized persistence provider uses the current parameters of the creating factory (<ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A&gt;</ph>), even if the factory's parameters are changed after the persistence provider is created.</source>
          <target state="translated">초기화된 지속성 공급자는 지속성 공급자가 만들어진 이후에 이를 만든 팩터리의 매개 변수가 변경된 경우에도 해당 팩터리의 현재 매개 변수(<ph id="ph1">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A&gt;</ph>)를 사용합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>The following code example shows how to execute the <ph id="ph1">`CreateProvider`</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`CreateProvider`</ph> 메서드를 실행하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)">
          <source>Note that the resulting provider is accessed as a <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> instance.</source>
          <target state="translated">결과 제공자는 <ph id="ph1">&lt;xref:System.ServiceModel.Persistence.LockingPersistenceProvider&gt;</ph> 인스턴스로 액세스됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout">
          <source>Gets the default time-out value used when persistence providers created with this factory are closed.</source>
          <target state="translated">이 팩터리로 만든 지속성 제공자를 닫을 때 사용되는 기본 시간 제한 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout">
          <source>The default time-out value.</source>
          <target state="translated">기본 시간 제한 값입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout">
          <source>The default value for close time-out is 15 seconds.</source>
          <target state="translated">닫기 시간 제한의 기본값은 15초입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout">
          <source>Gets the default time-out value used when persistence provider is opened.</source>
          <target state="translated">지속성 제공자를 열 때 사용되는 기본 시간 제한 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout">
          <source>The default time-out value.</source>
          <target state="translated">기본 시간 제한 값입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout">
          <source>The default value for open time-out is 15 seconds.</source>
          <target state="translated">열기 시간 제한의 기본값은 15초입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>The time-out for lock ownership used by persistence provider instances created by this instance.</source>
          <target state="translated">이 인스턴스로 만든 지속성 제공자 인스턴스에서 사용하는 잠금 소유권의 시간 제한입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>Locked instances are automatically unlocked after this time period.</source>
          <target state="translated">이 시간이 지나면 잠긴 인스턴스가 자동으로 잠금 해제됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>The time-out value for lock ownership.</source>
          <target state="translated">잠금 소유권의 시간 제한 값입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>A time-out of <ph id="ph1">`TimeSpan.Zero`</ph> specifies that no locking is used.</source>
          <target state="translated">시간 제한이 <ph id="ph1">`TimeSpan.Zero`</ph>이면 잠금이 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout">
          <source>The following code example shows how to access the <ph id="ph1">`LockTimeout`</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`LockTimeout`</ph> 속성에 액세스하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort">
          <source>Represents the Abort phase.</source>
          <target state="translated">Abort 단계를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort">
          <source><ph id="ph1">`OnAbort`</ph> fires when the service host shuts down abruptly and active commands currently being processed are closed.</source>
          <target state="translated"><ph id="ph1">`OnAbort`</ph> 서비스 호스트 갑자기 종료 될 때 발생 하 고 현재 처리 중인 활성 명령의 닫힙니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">시도에 대한 제한 시간으로서 이 시간이 지나면 지속성 제공자가 시도를 중단합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">작업이 완료되면 호출될 메서드입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">특정 비동기 작업을 다른 작업과 구별하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Represents the beginning of the Close phase.</source>
          <target state="translated">Close 단계의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state of the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> asynchronous method call.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> 비동기 메서드 호출의 상태입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The Close phase occurs when the service is closed.</source>
          <target state="translated">Close 단계는 서비스가 닫힐 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">시도에 대한 제한 시간으로서 이 시간이 지나면 지속성 제공자가 시도를 중단합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is completed.</source>
          <target state="translated">작업이 완료되면 호출될 메서드입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous operation from other operations.</source>
          <target state="translated">특정 비동기 작업을 다른 작업과 구별하는 사용자 제공 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Represents the beginning of the Open phase.</source>
          <target state="translated">Open 단계의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state of the <ph id="ph1">&lt;see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> asynchronous method call.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> 비동기 메서드 호출의 상태입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The Open phase occurs when the service is opened.</source>
          <target state="translated">Open 단계는 서비스가 열릴 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">시도에 대한 제한 시간으로서 이 시간이 지나면 지속성 제공자가 시도를 중단합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)">
          <source>Represents the Close phase.</source>
          <target state="translated">Close 단계를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)">
          <source>The Close phase occurs when the service is closed.</source>
          <target state="translated">Close 단계는 서비스가 닫힐 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)">
          <source>A reference to the result of the operation.</source>
          <target state="translated">작업 결과에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)">
          <source>Represents the end of the Close phase.</source>
          <target state="translated">Close 단계의 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)">
          <source>The Close phase occurs when the service is closed.</source>
          <target state="translated">Close 단계는 서비스가 닫힐 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)">
          <source>A reference to the result of the operation.</source>
          <target state="translated">작업 결과에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)">
          <source>Represents the end of the Open phase.</source>
          <target state="translated">Open 단계의 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)">
          <source>The Open phase occurs when the service is opened.</source>
          <target state="translated">Open 단계는 서비스가 열릴 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)">
          <source>The time period after which the persistence provider aborts this attempt.</source>
          <target state="translated">시도에 대한 제한 시간으로서 이 시간이 지나면 지속성 제공자가 시도를 중단합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)">
          <source>Represents the Open phase.</source>
          <target state="translated">Open 단계를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)">
          <source>The Open phase occurs when the service is opened.</source>
          <target state="translated">Open 단계는 서비스가 열릴 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
          <source>Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.</source>
          <target state="translated">이 팩터리로 만든 지속성 공급자에서 데이터가 이진이 아닌 텍스트로 serialize되는지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service information is serialized as text; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">서비스 정보가 텍스트로 serialize되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
          <source>The default value for <ph id="ph1">`serializeAsText`</ph> is <ph id="ph2">`false`</ph>, which indicates that persistence information is serialized as binary data.</source>
          <target state="translated">에 대 한 기본값 <ph id="ph1">`serializeAsText`</ph> 은 <ph id="ph2">`false`</ph>를 이진 데이터로 serialize 되는 지 속성 정보를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText">
          <source>The following code example shows how to access the <ph id="ph1">`SerializeAsText`</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">`SerializeAsText`</ph> 속성에 액세스하는 방법을 보여 줍니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>