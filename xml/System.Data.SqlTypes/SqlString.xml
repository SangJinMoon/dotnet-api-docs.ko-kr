<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlString.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5af7f0d93efb587e60300266fc91aaff068f6e2f7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af7f0d93efb587e60300266fc91aaff068f6e2f7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlString">
          <source>Represents a variable-length stream of characters to be stored in or retrieved from the database.</source>
          <target state="translated">데이터베이스에서 저장하거나 검색할 문자의 가변 길이 스트림을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlString">
          <source><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> has a different underlying data structure from its corresponding .NET Framework <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>에는 해당하는 .NET Framework <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> 데이터 형식과 다른 기본 데이터 구조가 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlString">
          <source><ph id="ph1">&lt;xref:System.String&gt;</ph> always uses the default <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> from the current thread, but <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> contains its own locale Id and compare flags.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String&gt;</ph> 항상 기본값을 사용 하 여 <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> 현재 스레드에서 하지만 <ph id="ph3">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 는 자체 로캘 Id를 포함 하 고 플래그를 비교 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlString">
          <source>The comparison result of two <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> structures is independent of operating system and current thread locale.</source>
          <target state="translated">두 비교 결과 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 구조는 운영 체제 및 현재 스레드 로캘과 무관 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlString">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> comparison operators, note that if the LCIDs of arguments are different, comparison functions throw an exception because they cannot be compared.</source>
          <target state="translated">사용 하는 경우 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 인수의 Lcid 다르면 비교 함수가 예외를 throw 하는 비교할 수 없으므로 때문에 비교 연산자에 유의 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlString">
          <source>For example, the statement</source>
          <target state="translated">예를 들어 문</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlString">
          <source>is equivalent to</source>
          <target state="translated">위의 식은 아래의 식과 동일합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlString">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
          <source>The string to store.</source>
          <target state="translated">저장할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure using the specified string.</source>
          <target state="translated">지정된 문자열을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
          <source>The string to store.</source>
          <target state="translated">저장할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
          <source>Specifies the geographical locale and language for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 해당 지역 로캘과 언어를 지정합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure using the specified string and locale id values.</source>
          <target state="translated">지정된 문자열과 로캘 ID 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
          <source>Specifies the geographical locale and language for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 해당 지역 로캘과 언어를 지정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
          <source>Specifies the compare options for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 비교 옵션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
          <source>The data array to store.</source>
          <target state="translated">저장할 데이터 배열입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure using the specified locale id, compare options, and data.</source>
          <target state="translated">지정된 로캘 ID, 비교 옵션 및 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
          <source>The string to store.</source>
          <target state="translated">저장할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
          <source>Specifies the geographical locale and language for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 해당 지역 로캘과 언어를 지정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
          <source>Specifies the compare options for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 비교 옵션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure using the specified string, locale id, and compare option values.</source>
          <target state="translated">지정된 문자열, 로캘 ID 및 비교 옵션 값을 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
          <source>Specifies the geographical locale and language for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 해당 지역 로캘과 언어를 지정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
          <source>Specifies the compare options for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 비교 옵션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
          <source>The data array to store.</source>
          <target state="translated">저장할 데이터 배열입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if Unicode encoded.</source>
          <target state="translated">유니코드로 인코딩되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
          <source>Specifies the geographical locale and language for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 해당 지역 로캘과 언어를 지정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
          <source>Specifies the compare options for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 비교 옵션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
          <source>The data array to store.</source>
          <target state="translated">저장할 데이터 배열입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
          <source>The starting index within the array.</source>
          <target state="translated">배열 내의 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
          <source>The number of characters from index to copy.</source>
          <target state="translated">인덱스에서 복사할 문자의 수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>Specifies the geographical locale and language for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 해당 지역 로캘과 언어를 지정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>Specifies the compare options for the new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 비교 옵션을 지정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The data array to store.</source>
          <target state="translated">저장할 데이터 배열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The starting index within the array.</source>
          <target state="translated">배열 내의 시작 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>The number of characters from index to copy.</source>
          <target state="translated">인덱스에서 복사할 문자의 수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if Unicode encoded.</source>
          <target state="translated">유니코드로 인코딩되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Concatenates two specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> values to create a new <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">두 개의 지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 값을 연결하여 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that is the concatenated value of <ph id="ph2">&lt;paramref name="x" /&gt;</ph> and <ph id="ph3">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="x" /&gt;</ph>와 <ph id="ph3">&lt;paramref name="y" /&gt;</ph>의 연결된 값인 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.Add(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">`x`</ph> will appear first in the resulting <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph>, followed by <ph id="ph3">`y`</ph>.</source>
          <target state="translated"><ph id="ph1">`x`</ph> 결과에 맨 먼저 나타납니다 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph>옵니다 <ph id="ph3">`y`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlString.BinarySort">
          <source>Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.</source>
          <target state="translated">영문자 값이 아닌 숫자 문자 값에 따라 정렬을 수행하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.BinarySort">
          <source><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.BinarySort&gt;</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.BinarySort&gt;</ph> 상수에 대 한 역할을 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlString.BinarySort2">
          <source>Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.</source>
          <target state="translated">영문자 값이 아닌 숫자 문자 값에 따라 정렬을 수행하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Clone">
          <source>Creates a copy of this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 개체의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object in which all property values are the same as the original.</source>
          <target state="translated">모든 속성 값이 원본과 같은 새 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlString.CompareInfo">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Globalization.CompareInfo" /&gt;</ph> object that defines how string comparisons should be performed for this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Globalization.CompareInfo" /&gt;</ph> 구조체의 문자열 비교 방식을 정의하는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlString.CompareInfo">
          <source>A <ph id="ph1">&lt;see langword="CompareInfo" /&gt;</ph> object that defines string comparison for this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 문자열 비교 방식을 정의하는 <ph id="ph1">&lt;see langword="CompareInfo" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlCompareOptions" /&gt;</ph> value that describes the comparison options for this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlCompareOptions" /&gt;</ph> 구조체의 비교 옵션을 설명하는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Globalization.CompareOptions" /&gt;</ph> enumeration equilvalent of the specified <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlCompareOptions" /&gt;</ph> value.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Globalization.CompareOptions" /&gt;</ph> 값과 같은 값을 갖는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlCompareOptions" /&gt;</ph> 열거를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
          <source>A <ph id="ph1">&lt;see langword="CompareOptions" /&gt;</ph> value that corresponds to the <ph id="ph2">&lt;see langword="SqlCompareOptions" /&gt;</ph> for this <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 <ph id="ph1">&lt;see langword="CompareOptions" /&gt;</ph>에 해당하는 <ph id="ph2">&lt;see langword="SqlCompareOptions" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlString">
          <source>Compares this instance to a specified object and returns an indication of their relative values.</source>
          <target state="translated">이 인스턴스를 지정된 개체와 비교하여 상대 값의 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> to be compared.</source>
          <target state="translated">비교할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source>Compares this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> instance to the supplied <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 인스턴스를 제공된 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>와 비교하여 상대 값 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source>A signed number that indicates the relative values of the instance and the object.</source>
          <target state="translated">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 조건</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체보다 작습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is the same as the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체와 동일합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than the object</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체보다 큽니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Data.SqlTypes.SqlString)">
          <source>The object is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">개체가 null 참조(Visual Basic에서는 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to be compared.</source>
          <target state="translated">비교할 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source>Compares this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object to the supplied <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 개체를 제공된 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>와 비교하여 상대 값 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source>A signed number that indicates the relative values of the instance and the object.</source>
          <target state="translated">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 조건</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체보다 작습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is the same as the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체와 동일합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than the object</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체보다 큽니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
          <source>The object is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated">개체가 null 참조(Visual Basic에서는 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Concatenates the two specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structures.</source>
          <target state="translated">지정된 두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 연결합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the newly concatenated value representing the contents of the two <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> parameters.</source>
          <target state="translated">새로 연결되어 두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 내용을 나타내는 값이 포함된 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlString.CultureInfo">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> structure that represents information about the culture of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> 개체의 문화권에 대한 정보를 나타내는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlString.CultureInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.</source>
          <target state="translated">날짜 형식 지정 및 문자열 정렬과 같은 일반 작업에 필요한 메서드를 제공하는 문화권의 고유 개체뿐 아니라 문화권의 이름, 쓰기 시스템 및 사용된 달력 등도 포함하여 이 SqlString 구조체의 문화권에 대한 정보를 설명하는 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlString">
          <source>Performs a logical comparison of two structures to determine whether they are equal.</source>
          <target state="translated">두 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
          <source>The object to be compared.</source>
          <target state="translated">비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
          <source>Compares the supplied object parameter to the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object.</source>
          <target state="translated">제공된 개체 매개 변수를 <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 속성과 비교합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
          <source>Equals will return <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object is an instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> and the two are equal; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">등호는 개체가 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스이고 둘이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether they are equal.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two values are equal.</source>
          <target state="translated">두 값이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance is null, then the <ph id="ph1">&lt;see langword="SqlString" /&gt;</ph> will be null.</source>
          <target state="translated">인스턴스 중 하나가 null이면 <ph id="ph1">&lt;see langword="SqlString" /&gt;</ph>가 null이 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetHashCode">
          <source>Gets the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
          <source>Gets an array of bytes, that contains the contents of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> in ANSI format.</source>
          <target state="translated">ANSI 형식으로 된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 내용을 포함하는 바이트 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
          <source>An byte array, that contains the contents of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> in ANSI format.</source>
          <target state="translated">ANSI 형식으로 된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 내용을 포함하는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
          <source>Gets an array of bytes, that contains the contents of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> in Unicode format.</source>
          <target state="translated">유니코드 형식으로 된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 내용을 포함하는 바이트 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
          <source>An byte array, that contains the contents of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> in Unicode format.</source>
          <target state="translated">유니코드 형식으로 된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 내용을 포함하는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>Returns the XML Schema definition language (XSD) of the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>의 XSD(XML 스키마 정의 언어)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>A <ph id="ph1">&lt;see langword="string" /&gt;</ph> value that indicates the XSD of the specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>의 XSD를 나타내는 <ph id="ph1">&lt;see langword="string" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether the first is greater than the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether the first is greater than or equal to the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 크거나 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than or equal to the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlString.IgnoreCase">
          <source>Specifies that <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> comparisons should ignore case.</source>
          <target state="translated">대/소문자를 무시하면서 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 비교를 수행하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreCase">
          <source><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.IgnoreCase&gt;</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.IgnoreCase&gt;</ph> 상수에 대 한 역할을 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
          <source>Specifies that the string comparison must ignore the Kana type.</source>
          <target state="translated">가나 형식을 무시하면서 문자열 비교를 수행하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
          <source>Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language.</source>
          <target state="translated">가나 형식은 일본어의 발성음을 표현하는 히라가나 문자와 가타카나 문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
          <source>Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as "computer" or "Internet".</source>
          <target state="translated">히라가나는 일본 고유의 어구과 단어를 표현하는 데 사용되고, 가타카나는 "컴퓨터"나 "인터넷" 등과 같은 외래어를 표현하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
          <source>A phonetic sound can be expressed in both hiragana and katakana.</source>
          <target state="translated">발성음은 히라가나와 가타카나 모두로 표현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
          <source>If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.</source>
          <target state="translated">이 값이 선택되어 있으면 하나의 발성음에 대해 히라가나 문자와 가타카나 문자가 같은 것으로 간주됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
          <source><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.IgnoreKanaType&gt;</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.IgnoreKanaType&gt;</ph> 상수에 대 한 역할을 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
          <source>Specifies that the string comparison must ignore non-space combining characters, such as diacritics.</source>
          <target state="translated">분음 부호와 같이 공백 없는 조합 문자를 무시하면서 문자열 비교를 수행하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
          <source>The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character.</source>
          <target state="translated">유니코드 표준(Unicode Standard)에서 조합 문자는 기본 문자와 조합하여 새 문자를 만들어내는 문자로 정의됩니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
          <source>Non-space combining characters do not use character space by themselves when rendered.</source>
          <target state="translated">공백 없는 조합 문자를 렌더링할 때는 공백 문자가 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
          <source>For more information about non-space combining characters, see the Unicode Standard at <ph id="ph1">http://www.unicode.org</ph>.</source>
          <target state="translated">공백 없는 결합 문자에 대 한 자세한 내용은 유니코드 표준을 참조 <ph id="ph1">http://www.unicode.org</ph>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
          <source><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.IgnoreNonSpace&gt;</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.IgnoreNonSpace&gt;</ph> 상수에 대 한 역할을 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
          <source>Specifies that the string comparison must ignore the character width.</source>
          <target state="translated">문자 너비를 무시하면서 문자열 비교를 수행하도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
          <source>For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.</source>
          <target state="translated">예를 들어, 일본어의 가타카나 문자는 전자나 반자로 쓸 수 있는데, 이 값이 선택되어 있으면 전자로 쓰여진 가타카나 문자와 반자로 쓰여진 가타카나 문자가 같은 것으로 간주됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
          <source><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.IgnoreWidth&gt;</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.IgnoreWidth&gt;</ph> 상수에 대 한 역할을 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlString.IsNull">
          <source>Indicates whether this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure is null.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체가 null인지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlString.IsNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlString.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlString.Null" /&gt;</ph>이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlString.IsNull">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlString.IsNull">
          <source>For more information, see <bpt id="p1">[</bpt>Handling Null Values<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Null 값 처리<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlString.LCID">
          <source>Specifies the geographical locale and language for the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 해당 지역 로캘과 언어를 지정합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlString.LCID">
          <source>The locale id for the string stored in the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph> 속성에 저장된 문자열의 로캘 ID입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether the first is less than the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether the first is less than or equal to the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작거나 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than or equal to the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether they are not equal.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the two instances are not equal or <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the two instances are equal.</source>
          <target state="translated">두 인스턴스가 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>인 <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlString.Null">
          <source>Represents a <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> that can be assigned to this instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> 구조체 인스턴스에 할당할 수 있는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.Null">
          <source><ph id="ph1">`Null`</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">`Null`</ph> 상수에 대 한 역할을 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlString&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlString.Null">
          <source>For more information, see <bpt id="p1">[</bpt>Handling Null Values<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Null 값 처리<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Concatenates the two specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structures.</source>
          <target state="translated">지정된 두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 연결합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the newly concatenated value representing the contents of the two <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> parameters.</source>
          <target state="translated">새로 연결되어 두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 내용을 나타내는 값이 포함된 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.Concat%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.Concat%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether they are equal.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 둘이 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the two instances are equal or <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the two instances are not equal.</source>
          <target state="translated">두 인스턴스가 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>인 <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.Equals%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.Equals%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlString">
          <source>Converts to and from a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 형식 간 변환을 수행합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBoolean.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlBoolean.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlByte.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlByte.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDateTime" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDateTime" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDateTime" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDateTime" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDateTime" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDateTime" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDateTime.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDateTime.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see langword="SqlDecimal" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see langword="SqlDecimal" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the string representation of the <ph id="ph2">&lt;see langword="SqlDecimal" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see langword="SqlDecimal" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDecimal.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDecimal.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlDouble.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> whose value is the string representation of the specified <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 문자열 표현이 값인 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlGuid.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlGuid.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt16.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt16.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
          <source>The SqlInt32 structure to be converted.</source>
          <target state="translated">변환될 SqlInt32 구조체입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt32.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt32.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlMoney.ToSqlString?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlMoney.ToSqlString?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the string representation of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 문자열 표현을 포함하는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlSingle.ToSqlString?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlSingle.ToSqlString?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> to be converted.</source>
          <target state="translated">변환될 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>을 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph>, whose contents are the same as the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수의 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph> 속성과 같은 내용을 갖는 <ph id="ph1">&lt;see langword="String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether the first is greater than the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 큰지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.GreaterThan%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.GreaterThan%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether the first is greater than or equal to the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 크거나 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than or equal to the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.GreaterThanOrEqual%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.GreaterThanOrEqual%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to be converted.</source>
          <target state="translated">변환될 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> parameter to a <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> that contains the value of the specified <ph id="ph2">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see langword="String" /&gt;</ph>의 값을 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether they are not equal.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the two instances are not equal or <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the two instances are equal.</source>
          <target state="translated">두 인스턴스가 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>인 <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.NotEquals%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.NotEquals%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether the first is less than the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.LessThan%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.LessThan%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> operands to determine whether the first is less than or equal to the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 피연산자에 대해 논리 비교를 수행하여 첫 번째 피연산자가 두 번째 피연산자보다 작거나 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than or equal to the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.LessThanOrEqual%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlString.LessThanOrEqual%28System.Data.SqlTypes.SqlString%2CSystem.Data.SqlTypes.SqlString%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
          <source>A combination of one or more of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlCompareOptions" /&gt;</ph> enumeration values that represent the way in which this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> should be compared to other <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structures.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlCompareOptions" /&gt;</ph>과 다른 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 비교 방식을 나타내는 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 열거형 값을 하나 이상 조합한 것입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
          <source>A value specifying how this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> should be compared to other <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structures.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>과 다른 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체의 비교 방식을 지정하는 값입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>An <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph> is non-zero; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if zero; otherwise Null.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlString.Value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 0이면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>이고, 그렇지 않으면 Null입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlByte">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlByte">
          <source>A new <ph id="ph1">&lt;see langword="SqlByte" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlByte.Value" /&gt;</ph> equals the number represented by this <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlByte.Value" /&gt;</ph> 구조체가 나타내는 숫자와 같은 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>를 갖는 새 <ph id="ph1">&lt;see langword="SqlByte" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDateTime" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDateTime" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
          <source>A new <ph id="ph1">&lt;see langword="SqlDateTime" /&gt;</ph> structure that contains the date value represented by this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>이 나타내는 날짜 값이 들어 있는 새 <ph id="ph1">&lt;see langword="SqlDateTime" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> that contains the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>의 값이 들어 있는 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> that is equal to the numeric value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>의 숫자 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlGuid.Value" /&gt;</ph> is the <ph id="ph3">&lt;see langword="Guid" /&gt;</ph> represented by this <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlGuid" /&gt;</ph>가 이 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlGuid.Value" /&gt;</ph> 구조체에서 나타내는 <ph id="ph3">&lt;see langword="Guid" /&gt;</ph>인 새 <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> that is equal to the numeric value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>의 숫자 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> that is equal to the numeric value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>의 숫자 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> that is equal to the numeric value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 숫자 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> that is equal to the numeric value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>의 숫자 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> that is equal to the numeric value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>..</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>의 숫자 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToString">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 개체를 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlString.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> with the same value as this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 구조체와 같은 값을 갖는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlString.Value">
          <source>Gets the string that is stored in this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 구조체에 저장되어 있는 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlString.Value">
          <source>This property is read-only.</source>
          <target state="translated">이 속성은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlString.Value">
          <source>The string that is stored.</source>
          <target state="translated">저장되어 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlString.Value">
          <source>The value of the string is <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlString.Null" /&gt;</ph>.</source>
          <target state="translated">문자열의 값이 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlString.Null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>