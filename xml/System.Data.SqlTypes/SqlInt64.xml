<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlInt64.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52f7a72396b144c794becf4f317eb765a24611776.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f7a72396b144c794becf4f317eb765a24611776</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlInt64">
          <source>Represents a 64-bit signed integer to be stored in or retrieved from a database.</source>
          <target state="translated">데이터베이스에서 저장하거나 검색할 64비트 부호 있는 정수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
          <source>A long integer.</source>
          <target state="translated">정수(Long)입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure using the supplied long integer.</source>
          <target state="translated">제공된 정수(Long)를 사용하여 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the sum of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 합계를 계산합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the sum of the two <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 합계와 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the bitwise AND of its <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> operands.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 피연산자의 비트 AND를 계산합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure that contains the results of the bitwise AND operation.</source>
          <target state="translated">비트 AND 연산의 결과를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the bitwise OR of its two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> operands.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 피연산자의 비트 OR를 계산합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure that contains the results of the bitwise OR operation.</source>
          <target state="translated">비트 OR 연산의 결과를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlInt64">
          <source>Compares this instance to the supplied object and returns an indication of their relative values.</source>
          <target state="translated">이 인스턴스를 제공된 개체와 비교하여 상대 값 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> to be compared.</source>
          <target state="translated">비교할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source>Compares this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> instance to the supplied <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 인스턴스를 제공된 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>와 비교하여 상대 값 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source>A signed number that indicates the relative values of the instance and the object.</source>
          <target state="translated">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 조건</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체보다 작습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is the same as the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체와 동일합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than the object</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체보다 큽니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Data.SqlTypes.SqlInt64)">
          <source>The object is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">개체가 null 참조(Visual Basic에서는 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to be compared.</source>
          <target state="translated">비교할 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source>Compares this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> instance to the supplied <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> and returns an indication of their relative values.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 인스턴스를 제공된 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>와 비교하여 상대 값 표시를 반환합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source>A signed number that indicates the relative values of the instance and the object.</source>
          <target state="translated">인스턴스와 개체의 상대 값을 나타내는 부호 있는 숫자입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 반환 값</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 조건</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체보다 작습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is the same as the object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체와 동일합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than the object</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 이 인스턴스가 개체보다 큽니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
          <source>The object is a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">개체가 null 참조(Visual Basic에서는 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Divides the first <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter by the second.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수를 두 번째 매개 변수로 나눕니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property contains the results of the division operation.</source>
          <target state="translated">나눗셈 연산의 결과를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 속성을 갖는 새 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlInt64">
          <source>Performs a logical comparison of two structures to determine whether they are equal.</source>
          <target state="translated">두 구조체에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
          <source>The object to be compared.</source>
          <target state="translated">비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
          <source>Compares the supplied object parameter to the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> object.</source>
          <target state="translated">제공된 개체 매개 변수를 <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 속성과 비교합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if object is an instance of <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> and the two are equal; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">개체가 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스이고 둘이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether they are equal.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two values are equal.</source>
          <target state="translated">두 값이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance is null, then the <ph id="ph1">&lt;see langword="SqlInt64" /&gt;</ph> will be null.</source>
          <target state="translated">인스턴스 중 하나가 null이면 <ph id="ph1">&lt;see langword="SqlInt64" /&gt;</ph>가 null이 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">이 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">부호 있는 32비트 정수 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>Returns the XML Schema definition language (XSD) of the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>의 XSD(XML 스키마 정의 언어)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GetXsdType(System.Xml.Schema.XmlSchemaSet)">
          <source>A <ph id="ph1">&lt;see langword="string" /&gt;</ph> that indicates the XSD of the specified <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>의 XSD를 나타내는 <ph id="ph1">&lt;see langword="string" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether the first is greater than the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether the first is greater than or equal to the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than or equal to the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlInt64.IsNull">
          <source>Gets a Boolean value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure is null.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체가 null인지 여부를 나타내는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlInt64.IsNull">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if null.</source>
          <target state="translated">null이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고,</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlInt64.IsNull">
          <source>Otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlInt64.IsNull">
          <source>For more information, see <bpt id="p1">[</bpt>Handling Null Values<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Null 값 처리<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison on the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether the first is less than the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison on the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether the first is less than or equal to the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than or equal to the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlInt64.MaxValue">
          <source>A constant representing the largest possible value for a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체의 최대값을 나타내는 상수입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlInt64.MaxValue">
          <source>The value of this constant is 2 <bpt id="p1">&lt;sup&gt;</bpt>63<ept id="p1">&lt;/sup&gt;</ept> -1.</source>
          <target state="translated">이 상수 값은 2 <bpt id="p1">&lt;sup&gt;</bpt>63<ept id="p1">&lt;/sup&gt;</ept> -1입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlInt64.MinValue">
          <source>A constant representing the smallest possible value for a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체의 최소값을 나타내는 상수입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlInt64.MinValue">
          <source>The value of this constant is -2 <bpt id="p1">&lt;sup&gt;</bpt>63<ept id="p1">&lt;/sup&gt;</ept>.</source>
          <target state="translated">이 상수 값은-2 <bpt id="p1">&lt;sup&gt;</bpt>63<ept id="p1">&lt;/sup&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the remainder after dividing the first <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter by the second.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property contains the remainder.</source>
          <target state="translated">나머지를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 속성을 갖는 새 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Divides two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> values and returns the remainder.</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 값을 나눈 다음 나머지를 반환합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The remainder left after division is performed on <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">나누기 후 나머지 연산을 <ph id="ph1">&lt;paramref name="x" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="y" /&gt;</ph>에 대해 수행합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">`x`</ph> or <ph id="ph2">`y`</ph> is null, the value will be null.</source>
          <target state="translated">경우 인스턴스 중 하나가 <ph id="ph1">`x`</ph> 또는 <ph id="ph2">`y`</ph> 가 null 인 값 null이 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the product of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 곱을 계산합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the product of the two <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 곱과 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.</source>
          <target state="translated">두 SqlInt64 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the two instances are not equal or <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the two instances are equal.</source>
          <target state="translated">두 인스턴스가 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>인 <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlInt64.Null">
          <source>Represents a <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> that can be assigned to this instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.DBNull" /&gt;</ph> 구조체 인스턴스에 할당할 수 있는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlInt64.Null">
          <source><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Null&gt;</ph> functions as a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlInt64&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Null&gt;</ph> 상수에 대 한 역할을 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlInt64&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlInt64.Null">
          <source>For more information, see <bpt id="p1">[</bpt>Handling Null Values<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Null 값 처리<ept id="p1">](~/docs/framework/data/adonet/sql/handling-null-values.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
          <source>Performs a bitwise one's complement operation on its <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> operand.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the ones complement of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 1의 보수와 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the sum of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 합계를 계산합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the sum of the two <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 합계와 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Add%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Add%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the bitwise AND of its <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> operands.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 피연산자의 비트 AND를 계산합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure that contains the results of the bitwise AND operation.</source>
          <target state="translated">비트 AND 연산의 결과를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.BitwiseAnd%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.BitwiseAnd%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the bitwise OR of its two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> operands.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 피연산자의 비트 OR를 계산합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure that contains the results of the bitwise OR operation.</source>
          <target state="translated">비트 OR 연산의 결과를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.BitwiseOr%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.BitwiseOr%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Divides the first <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter by the second.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수를 두 번째 매개 변수로 나눕니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property contains the results of the division operation.</source>
          <target state="translated">나눗셈 연산의 결과를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 속성을 갖는 새 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Divide%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Divide%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether they are equal.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the two instances are equal or <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the two instances are not equal.</source>
          <target state="translated">두 인스턴스가 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>인 <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Equals%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Equals%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a bitwise exclusive-OR operation on the supplied parameters.</source>
          <target state="translated">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure that contains the results of the bitwise XOR operation.</source>
          <target state="translated">비트 배타적 OR 연산의 결과를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Xor%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Xor%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlInt64">
          <source>Converts to and from a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 형식 간 변환을 수행합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property is equal to the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>과 같은 <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /&gt;</ph> 속성을 갖는 새 <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the integer part of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 정수 부분과 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>를 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property equals the integer part of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 정수 부분과 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 속성을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter to long.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수를 Long으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
          <source>A new long value equal to the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>과 같은 새 Long 값입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property equals the integer part of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 정수 부분과 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 속성을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property contains the integer part of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 정수 부분을 포함하는 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 속성을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> object to be converted.</source>
          <target state="translated">변환될 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the value represented by the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수가 나타내는 값과 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether the first is greater than the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 큰지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 크면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.GreaterThan%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.GreaterThan%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether the first is greater than or equal to the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 크거나 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is greater than or equal to the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 크거나 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlInt64">
          <source>Converts to a <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체로 변환합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property equals the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlByte.Value" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 속성과 같은 <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlByte.Value" /&gt;</ph> 속성을 갖는 새 <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property equals the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt16.Value" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 속성과 같은 <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt16.Value" /&gt;</ph> 속성을 갖는 새 <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> structure to be converted.</source>
          <target state="translated">변환할 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the supplied <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> parameter to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> 매개 변수를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property equals the <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt32.Value" /&gt;</ph> property of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 속성과 같은 <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt32.Value" /&gt;</ph> 속성을 갖는 새 <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
          <source>A long integer value.</source>
          <target state="translated">정수(Long) 값입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
          <source>Converts the long parameter to <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">Long 매개 변수를 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> equals the value of the long parameter.</source>
          <target state="translated">Long 매개 변수의 값과 같은 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>을 갖는 새 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison on the two SqlInt64 parameters to determine whether they are not equal.</source>
          <target state="translated">두 SqlInt64 매개 변수에 대해 논리 비교를 수행하여 같지 않은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the two instances are not equal or <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph> if the two instances are equal.</source>
          <target state="translated">두 인스턴스가 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>인 <ph id="ph3">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.NotEquals%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.NotEquals%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison on the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether the first is less than the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 작으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.LessThan%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.LessThan%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a logical comparison on the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters to determine whether the first is less than or equal to the second.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에 대해 논리 비교를 수행하여 첫 번째 매개 변수가 두 번째 매개 변수보다 작거나 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> that is <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph> if the first instance is less than or equal to the second instance.</source>
          <target state="translated">첫 번째 인스턴스가 두 번째 인스턴스보다 작거나 같으면 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>로 설정되는 <ph id="ph2">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.True" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Otherwise, <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.False" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>If either instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> is null, the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph> of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph> will be <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 인스턴스 중 하나가 null인 경우, <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /&gt;</ph>의 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>는 <ph id="ph4">&lt;see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /&gt;</ph>이 됩니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.LessThanOrEqual%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.LessThanOrEqual%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the remainder after dividing the first <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter by the second.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수를 두 번째 매개 변수로 나눈 다음 그 나머지를 계산합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property contains the remainder.</source>
          <target state="translated">나머지를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 속성을 갖는 새 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Mod%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Mod%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Computes the product of the two <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 곱을 계산합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the product of the two <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameters.</source>
          <target state="translated">두 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 곱과 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Multiply%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Multiply%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
          <source>Performs a bitwise one's complement operation on its <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> operand.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 피연산자에 대해 비트 1의 보수 연산을 수행합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the ones complement of the <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 1의 보수와 같은 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>을 갖는 새 <ph id="ph3">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.OnesComplement%28System.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.OnesComplement%28System.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Subtracts the second <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter from the first.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에서 두 번째 매개 변수를 뺍니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property equals the results of the subtraction operation.</source>
          <target state="translated">나눗셈 연산의 결과와 같은 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 속성을 갖는 새 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Subtract%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Subtract%28System.Data.SqlTypes.SqlInt64%2CSystem.Data.SqlTypes.SqlInt64%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
          <source>The unary minus operator negates the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> operand.</source>
          <target state="translated">단항 빼기 연산자는 <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 피연산자의 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>을 부정합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is equal to the negated <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수의 부정 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>과 같은 <ph id="ph3">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>을 갖는 <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to be parsed.</source>
          <target state="translated">구문 분석할 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
          <source>Converts the <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representation of a number to its 64-bit signed integer equivalent.</source>
          <target state="translated">숫자의 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 표현을 해당하는 부호 있는 64비트 정수로 변환합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
          <source>A 64-bit signed integer equivalent to the value that is contained in the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>에 포함된 값과 같은 64비트 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Subtracts the second <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> parameter from the first.</source>
          <target state="translated">첫 번째 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 매개 변수에서 두 번째 매개 변수를 뺍니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure whose <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property equals the results of the subtraction operation.</source>
          <target state="translated">나눗셈 연산의 결과와 같은 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 속성을 갖는 새 <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>An <ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchema" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlBoolean" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> is non-zero; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if zero; otherwise Null.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph>가 0이 아니면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 0이면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>이고, 그렇지 않으면 Null입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> structure whose <ph id="ph2">&lt;see langword="Value" /&gt;</ph> equals the <ph id="ph3">&lt;see langword="Value" /&gt;</ph> of this <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlByte" /&gt;</ph> 구조체의 <ph id="ph2">&lt;see langword="Value" /&gt;</ph>과 같은 <ph id="ph3">&lt;see langword="Value" /&gt;</ph>를 갖는 <ph id="ph4">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph> equal to the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDecimal" /&gt;</ph>의 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph> equal to the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlDouble" /&gt;</ph>의 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph> equal to the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt16" /&gt;</ph>의 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt32" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> equal to the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph> equal to the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlMoney" /&gt;</ph>의 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph> equal to the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlSingle" /&gt;</ph>의 값과 같은 새 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
          <source>Converts this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure to <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체를 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>으로 변환합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph> representing the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlString" /&gt;</ph>의 값을 나타내는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToString">
          <source>Converts this instance of <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> to <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>의 이 인스턴스를 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>로 변환합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> representing the value of this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>의 값을 나타내는 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlInt64.Value">
          <source>Gets the value of this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlInt64.Value">
          <source>This property is read-only.</source>
          <target state="translated">이 속성은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlInt64.Value">
          <source>A long integer representing the value of this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체의 값을 나타내는 정수(Long)입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>Performs a bitwise exclusive-OR operation on the supplied parameters.</source>
          <target state="translated">제공된 매개 변수에 대해 비트 배타적 OR 연산을 수행합니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure that contains the results of the bitwise XOR operation.</source>
          <target state="translated">비트 배타적 OR 연산의 결과를 포함하는 <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="F:System.Data.SqlTypes.SqlInt64.Zero">
          <source>Represents a zero value that can be assigned to the <ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> property of an instance of the <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlTypes.SqlInt64.Value" /&gt;</ph> 구조체 인스턴스의 <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlInt64" /&gt;</ph> 속성에 할당할 수 있는 0 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.SqlTypes.SqlInt64.Zero">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Zero&gt;</ph> field is a constant for the <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlInt64&gt;</ph> structure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlInt64.Zero&gt;</ph> 필드는 상수에 대 한는 <ph id="ph2">&lt;xref:System.Data.SqlTypes.SqlInt64&gt;</ph> 구조입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>