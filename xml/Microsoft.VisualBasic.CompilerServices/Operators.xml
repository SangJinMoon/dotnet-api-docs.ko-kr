<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59fc5805c6ad9107170bed835c30debc94a5f911" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52236987" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5c640-101">와 같은 런타임에 바인딩된 수학 연산자를 제공 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> 및 <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, Visual Basic 컴파일러는 내부적으로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-102">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="5c640-103">연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-104">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-104">Required.</span></span> <span data-ttu-id="5c640-105">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-106">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-106">Required.</span></span> <span data-ttu-id="5c640-107">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-108">Visual Basic 더하기 (+) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-109"><paramref name="Left" />와 <paramref name="Right" />의 합입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-110">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="5c640-111">+ 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-112">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-112">Required.</span></span> <span data-ttu-id="5c640-113">모든 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-114">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-114">Required.</span></span> <span data-ttu-id="5c640-115">모든 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-116">Visual basic <see langword="And" /> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-117">에 대 한 <see langword="Boolean" /> 작업을 <see langword="True" /> 둘 다 <paramref name="Left" /> 및 <paramref name="Right" /> 평가 <see langword="True" />고, 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="5c640-118">비트 연산의 경우 모두 1 <paramref name="Left" /> 및 <paramref name="Right" /> 1로 계산 합니다. 그렇지 않을 경우 0입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-119">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="5c640-120">And 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-121">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-121">Required.</span></span> <span data-ttu-id="5c640-122">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-123">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-123">Required.</span></span> <span data-ttu-id="5c640-124">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-125">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-125">Required.</span></span> <span data-ttu-id="5c640-126"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-127">Visual Basic 비교 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="5c640-128">값</span><span class="sxs-lookup"><span data-stu-id="5c640-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="5c640-129">조건</span><span class="sxs-lookup"><span data-stu-id="5c640-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="5c640-130">-1</span><span class="sxs-lookup"><span data-stu-id="5c640-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="5c640-131">
                <paramref name="Left" />가 <paramref name="Right" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="5c640-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="5c640-132">0</span><span class="sxs-lookup"><span data-stu-id="5c640-132">0</span></span> 
 </term>
              <description><span data-ttu-id="5c640-133">
                <paramref name="Left" />와 <paramref name="Right" />가 같은 경우</span><span class="sxs-lookup"><span data-stu-id="5c640-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="5c640-134">1</span><span class="sxs-lookup"><span data-stu-id="5c640-134">1</span></span> 
 </term>
              <description><span data-ttu-id="5c640-135">
                <paramref name="Left" />가 <paramref name="Right" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="5c640-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-136">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="5c640-137">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-137">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-138">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-138">Required.</span></span> <span data-ttu-id="5c640-139">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-139">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-140">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-140">Required.</span></span> <span data-ttu-id="5c640-141">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-141">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-142">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-142">Required.</span></span> <span data-ttu-id="5c640-143"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-143"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-144">Visual Basic 같음 (=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-144">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-145"><paramref name="Left" />과 <paramref name="Right" />가 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-145"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-146">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="5c640-147">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-147">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-148">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-148">Required.</span></span> <span data-ttu-id="5c640-149">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-149">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-150">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-150">Required.</span></span> <span data-ttu-id="5c640-151">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-151">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-152">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-152">Required.</span></span> <span data-ttu-id="5c640-153"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-153"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-154">Visual Basic 보다 큼(&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-154">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-155"><see langword="True" />이 <paramref name="Left" />보다 크면 <paramref name="Right" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-155"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-156">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="5c640-157">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-157">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-158">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-158">Required.</span></span> <span data-ttu-id="5c640-159">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-159">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-160">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-160">Required.</span></span> <span data-ttu-id="5c640-161">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-161">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-162">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-162">Required.</span></span> <span data-ttu-id="5c640-163"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-163"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-164">Visual Basic 보다 크거나 같음(&gt;=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-165"><paramref name="Left" />가 <paramref name="Right" />보다 크거나 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-165"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-166">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="5c640-167">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-167">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-168">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-168">Required.</span></span> <span data-ttu-id="5c640-169">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-169">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-170">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-170">Required.</span></span> <span data-ttu-id="5c640-171">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-171">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-172">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-172">Required.</span></span> <span data-ttu-id="5c640-173"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-173"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-174">Visual Basic 보다 작음(&lt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-174">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-175"><paramref name="Left" />가 <paramref name="Right" />보다 작으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-175"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-176">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="5c640-177">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-177">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-178">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-178">Required.</span></span> <span data-ttu-id="5c640-179">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-179">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-180">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-180">Required.</span></span> <span data-ttu-id="5c640-181">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-181">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-182">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-182">Required.</span></span> <span data-ttu-id="5c640-183"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-183"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-184">Visual Basic 보다 작거나 같음(&lt;=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-185"><paramref name="Left" />가 <paramref name="Right" />보다 작거나 같으면 <see langword="True" />이고, 그렇지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-185"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-186">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="5c640-187">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-187">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-188">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-188">Required.</span></span> <span data-ttu-id="5c640-189">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-189">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-190">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-190">Required.</span></span> <span data-ttu-id="5c640-191">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-191">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-192">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-192">Required.</span></span> <span data-ttu-id="5c640-193"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-193"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-194">Visual Basic 같지 않음(&lt;&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-195"><see langword="True" />가 <paramref name="Left" />와 다르면 <paramref name="Right" />이고, 그러지 않으면 <see langword="False" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-195"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-196">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="5c640-197">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-197">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-198">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-198">Required.</span></span> <span data-ttu-id="5c640-199">임의의 <see langword="String" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-199">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-200">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-200">Required.</span></span> <span data-ttu-id="5c640-201">임의의 <see langword="String" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-201">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-202">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-202">Required.</span></span> <span data-ttu-id="5c640-203"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-203"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-204">두 문자열을 지정 하는 경우 이진 또는 텍스트 문자열 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-204">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="5c640-205">값</span><span class="sxs-lookup"><span data-stu-id="5c640-205">Value</span></span> 
 </term>
              <description> <span data-ttu-id="5c640-206">조건</span><span class="sxs-lookup"><span data-stu-id="5c640-206">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="5c640-207">-1</span><span class="sxs-lookup"><span data-stu-id="5c640-207">-1</span></span> 
 </term>
              <description><span data-ttu-id="5c640-208">
                <paramref name="Left" />가 <paramref name="Right" />보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="5c640-208">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="5c640-209">0</span><span class="sxs-lookup"><span data-stu-id="5c640-209">0</span></span> 
 </term>
              <description><span data-ttu-id="5c640-210">
                <paramref name="Left" />가 <paramref name="Right" />와 같은 경우</span><span class="sxs-lookup"><span data-stu-id="5c640-210">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="5c640-211">1</span><span class="sxs-lookup"><span data-stu-id="5c640-211">1</span></span> 
 </term>
              <description><span data-ttu-id="5c640-212">
                <paramref name="Left" />가 <paramref name="Right" />보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="5c640-212">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-213">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="5c640-214">두 문자열을 비교 하는 Visual Basic 같음 연산자를 사용 하면 문자열을 전달 합니다 <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> 의 값과 함께 메서드 `False` 에 대 한는 `TextCompare` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="5c640-215">이 서 수 또는 문의 값에 따라 현재 문화권에 따라 대/소문자 구분 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="5c640-216">비교 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-217">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-217">Required.</span></span> <span data-ttu-id="5c640-218">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-218">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-219">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-219">Required.</span></span> <span data-ttu-id="5c640-220">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-220">Any expression.</span></span></param>
        <summary><span data-ttu-id="5c640-221">Visual Basic 연결(&amp;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-221">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-222">연결을 나타내는 문자열로 <paramref name="Left" /> 고 <paramref name="Right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-223">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="5c640-224">&amp; 연산자 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-224">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-225">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-225">Required.</span></span> <span data-ttu-id="5c640-226">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-226">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-227">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-227">Required.</span></span> <span data-ttu-id="5c640-228">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-228">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-229">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-229">Required.</span></span> <span data-ttu-id="5c640-230"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-230"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-231">오버 로드 된 Visual Basic 같음 (=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-231">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-232">Equals 오버 로드 된 연산자의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-232">The result of the overloaded equals operator.</span></span> <span data-ttu-id="5c640-233"><see langword="False" /> 연산자 오버 로드를 지원 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="5c640-233"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-234">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="5c640-235">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="5c640-235">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-236">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-236">Required.</span></span> <span data-ttu-id="5c640-237">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-237">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-238">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-238">Required.</span></span> <span data-ttu-id="5c640-239">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-239">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-240">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-240">Required.</span></span> <span data-ttu-id="5c640-241"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-241"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-242">오버로드된 Visual Basic 보다 큼(&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-243">결과의 오버 로드 된 큰-than 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-243">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="5c640-244"><see langword="False" /> 연산자 오버 로드를 지원 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="5c640-244"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-245">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="5c640-246">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="5c640-246">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-247">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-247">Required.</span></span> <span data-ttu-id="5c640-248">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-248">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-249">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-249">Required.</span></span> <span data-ttu-id="5c640-250">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-250">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-251">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-251">Required.</span></span> <span data-ttu-id="5c640-252"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-252"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-253">오버로드된 Visual Basic 보다 크거나 같음(&gt;=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-254">결과의 오버 로드 된 큰-보다 또는 같지 않음 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-254">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="5c640-255"><see langword="False" /> 연산자 오버 로드를 지원 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="5c640-255"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-256">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="5c640-257">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="5c640-257">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-258">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-258">Required.</span></span> <span data-ttu-id="5c640-259">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-259">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-260">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-260">Required.</span></span> <span data-ttu-id="5c640-261">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-261">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-262">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-262">Required.</span></span> <span data-ttu-id="5c640-263"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-263"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-264">오버로드된 Visual Basic 보다 작음(&lt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-265">오버 로드 된 결과 적은-than 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-265">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="5c640-266"><see langword="False" /> 연산자 오버 로드를 지원 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="5c640-266"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-267">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="5c640-268">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="5c640-268">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-269">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-269">Required.</span></span> <span data-ttu-id="5c640-270">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-270">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-271">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-271">Required.</span></span> <span data-ttu-id="5c640-272">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-272">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-273">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-273">Required.</span></span> <span data-ttu-id="5c640-274"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-274"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-275">오버로드된 Visual Basic 보다 작거나 같음(&lt;=) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-276">오버 로드 된 결과 적은-보다 또는 같지 않음 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-276">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="5c640-277"><see langword="False" /> 연산자 오버 로드를 지원 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="5c640-277"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-278">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="5c640-279">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="5c640-279">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-280">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-280">Required.</span></span> <span data-ttu-id="5c640-281">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-281">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-282">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-282">Required.</span></span> <span data-ttu-id="5c640-283">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-283">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="5c640-284">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-284">Required.</span></span> <span data-ttu-id="5c640-285"><see langword="True" /> 대/소문자 구분 문자열 비교를 수행 하려면 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-285"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="5c640-286">오버로드된 Visual Basic 같지 않음(&lt;&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-287">오버 로드 된 같지 않음 연산자의 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-287">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="5c640-288"><see langword="False" /> 연산자 오버 로드를 지원 하지 않으면.</span><span class="sxs-lookup"><span data-stu-id="5c640-288"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-289">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="5c640-290">연산자 프로시저</span><span class="sxs-lookup"><span data-stu-id="5c640-290">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-291">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-291">Required.</span></span> <span data-ttu-id="5c640-292">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-292">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-293">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-293">Required.</span></span> <span data-ttu-id="5c640-294">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-294">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-295">Visual Basic 나누기 (/) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-295">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-296">전체 몫 <paramref name="Left" /> 나눈 <paramref name="Right" />, 나머지 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-297">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="5c640-298">/ 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-298">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-299">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-299">Required.</span></span> <span data-ttu-id="5c640-300">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-300">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-301">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-301">Required.</span></span> <span data-ttu-id="5c640-302">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-302">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-303">Visual Basic 지 수 (^) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-303">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-304">결과인 <paramref name="Left" /> 거듭제곱의 <paramref name="Right" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-305">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="5c640-306">^ 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-306">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="5c640-307">사용자 정의 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-307">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="5c640-308">사용자 정의 연산자에 전달할 인수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-308">Argument values to pass to the user-defined operator.</span></span></param>
        <summary><span data-ttu-id="5c640-309">사용자 정의 연산자의 런타임에 바인딩된 평가 실행합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-309">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="5c640-310">코드에서 직접 호출할 수이 도우미 메서드를 사용 하는 것이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-310">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="5c640-311">사용자 정의 연산자에서 반환 된 결과입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-311">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-312">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-312">Required.</span></span> <span data-ttu-id="5c640-313">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-313">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-314">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-314">Required.</span></span> <span data-ttu-id="5c640-315">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-315">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-316">Visual Basic 정수 나누기(\\) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-316">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-317">정수 몫 <paramref name="Left" /> 나눈 <paramref name="Right" />, 나머지는 버리고 정수 부분만 남긴 합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-318">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="5c640-319">\ 연산자</span><span class="sxs-lookup"><span data-stu-id="5c640-319">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="5c640-320">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-320">Required.</span></span> <span data-ttu-id="5c640-321">정수 계열 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-321">Integral numeric expression.</span></span> <span data-ttu-id="5c640-322">이동할 비트 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-322">The bit pattern to be shifted.</span></span> <span data-ttu-id="5c640-323">데이터 형식은 정수 계열 형식 이어야 합니다 (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />를 <see langword="Integer" />를 <see langword="UInteger" />를 <see langword="Long" />, 또는 <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="5c640-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="5c640-324">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-324">Required.</span></span> <span data-ttu-id="5c640-325">숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-325">Numeric expression.</span></span> <span data-ttu-id="5c640-326">비트 패턴을 이동할 비트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-326">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="5c640-327">데이터 형식 이어야 합니다 <see langword="Integer" /> 변환할 또는 <see langword="Integer" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="5c640-328">Visual Basic 산술 왼쪽 시프트(&lt;&lt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-329">정수 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-329">An integral numeric value.</span></span> <span data-ttu-id="5c640-330">결과 비트 패턴을 이동한입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-330">The result of shifting the bit pattern.</span></span> <span data-ttu-id="5c640-331">데이터 형식이 동일 <paramref name="Operand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-331">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-332">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="5c640-333">&lt;&lt; 연산자 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-333">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="5c640-334">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-334">Required.</span></span> <span data-ttu-id="5c640-335">임의의 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-335">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="5c640-336">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-336">Required.</span></span> <span data-ttu-id="5c640-337">Like Operator에 설명 된 패턴 일치 규칙을 따르는 모든 문자열 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="5c640-338">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-338">Required.</span></span> <span data-ttu-id="5c640-339"><see cref="T:Microsoft.VisualBasic.CompareMethod" /> 작업을 텍스트 또는 이진 비교를 사용 하도록 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="5c640-340">Visual basic <see langword="Like" /> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-340">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-341"><see langword="True" /> 경우에 있는 값의 문자열 표현을 <paramref name="Source" /> 에 포함 되어 있는 패턴을 따르면 <paramref name="Pattern" />이 고, 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-341"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="5c640-342"><see langword="True" /> 둘 다 <paramref name="Source" /> 하 고 <paramref name="Pattern" /> 는 <see langword="Nothing" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-342"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-343">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="5c640-344">Like 연산자</span><span class="sxs-lookup"><span data-stu-id="5c640-344">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="5c640-345">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-345">Required.</span></span> <span data-ttu-id="5c640-346">임의의 <see langword="String" /> 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-346">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="5c640-347">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-347">Required.</span></span> <span data-ttu-id="5c640-348">모든 <see langword="String" /> Like Operator에 설명 된 패턴 일치 규칙을 따르는 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="5c640-349">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-349">Required.</span></span> <span data-ttu-id="5c640-350"><see cref="T:Microsoft.VisualBasic.CompareMethod" /> 작업을 텍스트 또는 이진 비교를 사용 하도록 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="5c640-351">Visual basic <see langword="Like" /> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-351">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-352"><see langword="True" /> 경우에 값 <paramref name="Source" /> 에 포함 된 패턴을 충족 <paramref name="Pattern" />이 고, 그렇지 않으면 <see langword="False" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-352"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="5c640-353"><see langword="True" /> 둘 다 <paramref name="Source" /> 고 <paramref name="Pattern" /> 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-353"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-354">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="5c640-355">Like 연산자</span><span class="sxs-lookup"><span data-stu-id="5c640-355">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-356">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-356">Required.</span></span> <span data-ttu-id="5c640-357">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-357">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-358">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-358">Required.</span></span> <span data-ttu-id="5c640-359">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-359">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-360">Visual basic <see langword="Mod" /> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-360">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-361">나머지 <paramref name="Left" /> 나눈 <paramref name="Right" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-362">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="5c640-363">Mod 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-363">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-364">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-364">Required.</span></span> <span data-ttu-id="5c640-365">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-365">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-366">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-366">Required.</span></span> <span data-ttu-id="5c640-367">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-367">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-368">나타내는 Visual Basic 곱하기 (\*) 연산자.</span><span class="sxs-lookup"><span data-stu-id="5c640-368">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-369">곱한 <paramref name="Left" /> 고 <paramref name="Right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-370">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="5c640-371">\* 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-371">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="5c640-372">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-372">Required.</span></span> <span data-ttu-id="5c640-373">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-373">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-374">Visual Basic 단항을 빼기 (-) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-374">Represents the Visual Basic unary minus (–) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-375">음수 값을 <paramref name="Operand" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-375">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-376">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="5c640-377">- 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-377">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="5c640-378">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-378">Required.</span></span> <span data-ttu-id="5c640-379">모든 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-379">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-380">Visual basic <see langword="Not" /> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-380">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-381">에 대 한 <see langword="Boolean" /> 작업을 <see langword="False" /> 하는 경우 <paramref name="Operand" /> 됩니다 <see langword="True" />이 고, 그렇지 않으면 <see langword="True" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="5c640-382">비트 연산의 경우 1 <paramref name="Operand" /> 고, 그렇지 않으면 0 0입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-383">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="5c640-384">Not 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-384">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-385">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-385">Required.</span></span> <span data-ttu-id="5c640-386">모든 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-386">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-387">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-387">Required.</span></span> <span data-ttu-id="5c640-388">모든 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-389">Visual basic <see langword="Or" /> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-389">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-390">에 대 한 <see langword="Boolean" /> 작업을 <see langword="False" /> 둘 다 <paramref name="Left" /> 및 <paramref name="Right" /> 평가 <see langword="False" />고, 그렇지 않으면 <see langword="True" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="5c640-391">비트 연산의 경우 <paramref name="Left" />와 <paramref name="Right" />이 모두 0으로 계산되면 0이고, 그렇지 않으면 1입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-392">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="5c640-393">Or 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-393">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="5c640-394">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-394">Required.</span></span> <span data-ttu-id="5c640-395">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-395">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-396">Visual Basic 단항 더하기 (+) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-396">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-397"><paramref name="Operand" />의 값</span><span class="sxs-lookup"><span data-stu-id="5c640-397">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="5c640-398">(의 부호는 <paramref name="Operand" /> 변경 되지 않습니다.)</span><span class="sxs-lookup"><span data-stu-id="5c640-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-399">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="5c640-400">+ 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-400">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="5c640-401">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-401">Required.</span></span> <span data-ttu-id="5c640-402">정수 계열 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-402">Integral numeric expression.</span></span> <span data-ttu-id="5c640-403">이동할 비트 패턴입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-403">The bit pattern to be shifted.</span></span> <span data-ttu-id="5c640-404">데이터 형식은 정수 계열 형식 이어야 합니다 (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />를 <see langword="Integer" />를 <see langword="UInteger" />를 <see langword="Long" />, 또는 <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="5c640-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="5c640-405">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-405">Required.</span></span> <span data-ttu-id="5c640-406">숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-406">Numeric expression.</span></span> <span data-ttu-id="5c640-407">비트 패턴을 이동할 비트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-407">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="5c640-408">데이터 형식 이어야 합니다 <see langword="Integer" /> 변환할 또는 <see langword="Integer" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="5c640-409">Visual Basic 산술 오른쪽 시프트(&gt;&gt;) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-410">정수 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-410">An integral numeric value.</span></span> <span data-ttu-id="5c640-411">결과 비트 패턴을 이동한입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-411">The result of shifting the bit pattern.</span></span> <span data-ttu-id="5c640-412">데이터 형식이 동일 <paramref name="Operand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-412">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-413">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="5c640-414">&gt;&gt; 연산자 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-414">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-415">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-415">Required.</span></span> <span data-ttu-id="5c640-416">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-416">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-417">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-417">Required.</span></span> <span data-ttu-id="5c640-418">임의의 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-418">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-419">Visual Basic 빼기 (-) 연산자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-419">Represents the Visual Basic subtraction (–) operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-420">차이점 <paramref name="Left" /> 고 <paramref name="Right" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-421">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="5c640-422">- 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-422">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="5c640-423">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-423">Required.</span></span> <span data-ttu-id="5c640-424">모든 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-424">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="5c640-425">필수.</span><span class="sxs-lookup"><span data-stu-id="5c640-425">Required.</span></span> <span data-ttu-id="5c640-426">모든 <see langword="Boolean" /> 또는 숫자 식입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="5c640-427">Visual basic <see langword="Xor" /> 연산자입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-427">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="5c640-428"><see langword="Boolean" /> 또는 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-428">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="5c640-429">에 <see langword="Boolean" /> 비교를 반환 값은 두 개의 논리 제외 (배타적 논리합) <see langword="Boolean" /> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="5c640-430">비트 (숫자) 연산의 경우 반환 값은 두 숫자 비트 패턴의 배타적 비트 연산 (배타적 비트 논리합)를 나타내는 숫자 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="5c640-431">자세한 내용은 <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="5c640-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c640-432">이 클래스는 Visual Basic 컴파일러를 지원 하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5c640-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="5c640-433">배타적 or 연산자(Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="5c640-433">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>