<Type Name="MetaTable" FullName="System.Web.DynamicData.MetaTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b399e4c00d02b856a32921298a4feb2cb0b2203f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540617" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MetaTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaTable" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaTable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>동적 데이터 페이지에서 사용할 테이블을 설명하는 메타데이터를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제는 Insert.aspx 페이지 템플릿에 대 한 코드 숨김 파일의 일부입니다. <xref:System.Web.DynamicData.MetaTable> 인스턴스에서 초기화 되는 `Page_Load` 메서드. 테이블에는 페이지에 대 한 title 설정 되어 `DisplayName` 속성입니다.  
  
```csharp  
public partial class Insert : System.Web.UI.Page {  
    protected MetaTable table;     
  
    protected void Page_Load(object sender, EventArgs e) {  
        table = DetailsDataSource.GetTable();  
        Title = table.DisplayName;  
    }  
}  
```  
  
```vb  
Partial Class Insert  
    Inherits System.Web.UI.Page  
  
    Protected table As MetaTable      
  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As EventArgs)  
        table = DetailsDataSource.GetTable  
        Title = table.DisplayName  
    End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaModel metaModel, class System.Web.DynamicData.ModelProviders.TableProvider tableProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaTable(System::Web::DynamicData::MetaModel ^ metaModel, System::Web::DynamicData::ModelProviders::TableProvider ^ tableProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metaModel" Type="System.Web.DynamicData.MetaModel" />
        <Parameter Name="tableProvider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="metaModel">엔터티 메타 모델입니다.</param>
        <param name="tableProvider">엔터티 모델 공급자입니다.</param>
        <summary>
          <see cref="T:System.Web.DynamicData.MetaTable" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `tableProvider` 매개 변수는 초기화는 <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블에 연결된 특성을 가져옵니다.</summary>
        <value>테이블의 특성을 포함하는 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>특성 컬렉션을 만듭니다.</summary>
        <returns>특성 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDelete(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDelete (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDelete(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanDelete(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">사용자의 보안 컨텍스트입니다.</param>
        <summary>지정된 사용자가 삭제 작업을 수행할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>
          사용자가 삭제 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Principal 개체 코드를 실행 하는 사용자와 이들이 속하는 역할의 보안 컨텍스트를 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsert(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsert (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsert(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanInsert(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">사용자의 보안 컨텍스트입니다.</param>
        <summary>지정된 사용자가 삽입 작업을 수행할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>
          사용자가 삽입 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Principal 개체 코드를 실행 하는 사용자와 이들이 속하는 역할의 보안 컨텍스트를 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRead (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanRead(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">사용자의 보안 컨텍스트입니다.</param>
        <summary>지정된 사용자가 읽기 작업을 수행할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>
          사용자가 읽기 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Principal 개체 코드를 실행 하는 사용자와 이들이 속하는 역할의 보안 컨텍스트를 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpdate(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUpdate (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUpdate(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanUpdate(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal">사용자의 보안 컨텍스트입니다.</param>
        <summary>지정된 사용자가 업데이트 작업을 수행할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <returns>
          사용자가 업데이트 작업을 수행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Principal 개체 코드를 실행 하는 사용자와 이들이 속하는 역할의 보안 컨텍스트를 나타냅니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ Columns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블에 대한 열 컬렉션을 가져옵니다.</summary>
        <value>테이블에 대한 열을 포함하는 컬렉션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Web.DynamicData.MetaTable.Columns%2A> 속성을 사용하는 방법을 보여 줍니다. 예제에서는 동적 데이터 페이지 서식 파일이 AdventureWorksLT 데이터베이스의 ProductDescription 테이블에 대 한 사용자 지정 표시를 제공 하려면 \DynamicData\CustomPages\ProductDescriptions 폴더에 복사 되었습니다. Insert.aspx 파일의 태그를 추가 하려면 변경 되는 `OnDataBound` 이라는 이벤트 처리기 `DetailsView1_DataBound`합니다. 이벤트 처리기에는 <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> 메서드 메타 테이블을 찾는 데 사용 됩니다. <xref:System.Web.DynamicData.MetaTable.Columns%2A> 속성 테이블에 열 수를 표시 하는 데 사용 됩니다.  
  
 [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx.cs#1)]  
[!code-aspx-csharp[System.Web.DynamicData.DynamicDataExtensions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildrenColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaChildrenColumn ^ CreateChildrenColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaChildrenColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">열 공급자입니다.</param>
        <summary>새 <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 개체를 만듭니다.</summary>
        <returns>새 자식 메타 열 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 형식을 만들려면이 메서드를 재정의할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaColumn CreateColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaColumn ^ CreateColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">열 공급자입니다.</param>
        <summary>
          <see cref="T:System.Web.DynamicData.MetaColumn" /> 개체를 만듭니다.</summary>
        <returns>새 메타 열 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 형식을 만들려면이 메서드를 재정의할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public virtual object CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateContext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateContext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CreateContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>테이블에 대한 데이터 컨텍스트를 반환합니다.</summary>
        <returns>테이블에 대한 데이터 컨텍스트입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 컨텍스트를 호출 하 여 인스턴스화되는 새 컨텍스트에서 검색 되는 <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> 메서드. 자세한 내용은 참조는 <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForeignKeyColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaForeignKeyColumn ^ CreateForeignKeyColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaForeignKeyColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="columnProvider">열 공급자입니다.</param>
        <summary>외래 키 메타데이터가 들어 있는 개체를 만듭니다.</summary>
        <returns>외래 키 메타데이터가 들어 있는 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생된 형식을 만들려면이 메서드를 재정의할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.MetaTable" /> 개체를 만듭니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.ComponentModel.ICustomTypeDescriptor typeDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (typeDescriptor As ICustomTypeDescriptor) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(System::ComponentModel::ICustomTypeDescriptor ^ typeDescriptor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" />
      </Parameters>
      <Docs>
        <param name="typeDescriptor">테이블 형식에 대한 정보입니다.</param>
        <summary>지정된 테이블에 대한 메타데이터를 만듭니다.</summary>
        <returns>테이블 메타데이터가 들어 있는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">메타데이터를 생성할 테이블 형식입니다.</param>
        <summary>지정된 테이블에 대한 메타데이터를 만듭니다.</summary>
        <returns>테이블 메타데이터가 들어 있는 개체입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextPropertyName">
      <MemberSignature Language="C#" Value="public string DataContextPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContextPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataContextPropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextPropertyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블 이름을 가져옵니다.</summary>
        <value>테이블의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이름은 <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> 테이블이 속해 있는 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextType">
      <MemberSignature Language="C#" Value="public Type DataContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataContextType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블에 연결된 데이터 컨텍스트의 형식을 가져옵니다.</summary>
        <value>데이터 컨텍스트의 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 참조는 <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn DisplayColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ DisplayColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 테이블의 항목이 외래 키 관계에 있는 부모로 사용될 때 값을 표시하는 데 사용되는 열을 가져옵니다.</summary>
        <value>이 테이블의 항목이 외래 키 관계에 있는 부모로 사용될 때 값을 표시하는 데 사용되는 열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 되는 열이이 순서 대로 선택 됩니다.  
  
1.  사용 하 여 지정 된 열은 <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> 특성입니다.  
  
2.  첫 번째가 아닌 기본 키에는 문자열입니다.  
  
3.  첫 번째 문자열의 기본 키에 있는 열입니다.  
  
4.  기본 키에 있는 첫 번째 문자열이 아닌 열입니다.  
  
5.  첫 번째 열입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블의 이름을 사용자에게 친숙한 형식으로 가져옵니다.</summary>
        <value>사용자에게 친숙한 테이블 이름을 나타내는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 기본값의 값에는 <xref:System.Web.DynamicData.MetaTable.Name%2A> 속성입니다. 사용 하 여이 속성의 값을 사용자 지정할 수 있습니다는 <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> 특성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Type EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EntityType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블을 나타내는 엔터티 형식을 가져옵니다.</summary>
        <value>엔터티를 나타내는 형식입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyColumnsNames">
      <MemberSignature Language="C#" Value="public string ForeignKeyColumnsNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForeignKeyColumnsNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeignKeyColumnsNames As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ForeignKeyColumnsNames { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.ForeignKeyColumnsNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>쉼표로 구분된 외래 키 이름 목록을 가져옵니다.</summary>
        <value>쉼표로 구분된 외래 키 이름 목록입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActionPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 행에 대한 동작 경로를 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 경로 특정 엔터티에 대 한 동작에 대 한 URL입니다. 자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">동작 이름입니다.</param>
        <summary>현재 테이블 및 지정된 동작에 대한 동작 경로를 반환합니다.</summary>
        <returns>지정된 동작에 대한 동작 경로입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 작업 경로 특정 엔터티에 대 한 동작에 대 한 URL입니다. 자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="action">동작 이름입니다.</param>
        <param name="primaryKeyValues">기본 키를 구성하는 열 값 목록입니다.</param>
        <summary>현재 테이블, 지정된 동작 및 지정된 기본 키에 대한 동작 경로를 반환합니다.</summary>
        <returns>지정된 동작 및 기본 키에 대한 동작 경로입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 경로 특정 엔터티에 대 한 동작에 대 한 URL입니다. 자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action">동작 이름입니다.</param>
        <param name="row">동작 경로를 가져올 행입니다.</param>
        <summary>동작 이름을 사용하여 지정된 행에 대한 동작 경로를 반환합니다.</summary>
        <returns>지정된 행에 대한 동작 경로입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 경로 특정 엔터티에 대 한 동작에 대 한 URL입니다. 동작 경로 필터의 쿼리 문자열에 사용할 수 있는 기본 키 열 이름이 포함 됩니다.  
  
 자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, routeValues As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="action">동작 이름입니다.</param>
        <param name="routeValues">동작에 대한 경로 목록입니다.</param>
        <summary>현재 테이블 및 지정된 동작 및 경로에 대한 동작 경로를 반환합니다.</summary>
        <returns>지정된 동작 및 경로에 대한 동작 경로입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 경로 특정 엔터티에 대 한 동작에 대 한 URL입니다. 자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object), path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">동작 이름입니다.</param>
        <param name="primaryKeyValues">기본 키를 구성하는 열 값 목록입니다.</param>
        <param name="path">동작의 가상 경로입니다.</param>
        <summary>지정된 기본 키 및 가상 경로를 기준으로 쿼리 문자열을 동작 경로에 추가합니다.</summary>
        <returns>쿼리 문자열 값이 추가된 지정된 기본 키 및 가상 경로에 대한 동작 경로입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 경로 특정 엔터티에 대 한 동작에 대 한 URL입니다. 자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">동작 이름입니다.</param>
        <param name="row">동작 경로에 대한 행을 포함하는 개체입니다.</param>
        <param name="path">동작의 가상 경로입니다.</param>
        <summary>동작의 이름 및 동작의 가상 경로를 사용하여 지정된 행에 대한 동작 경로를 반환합니다.</summary>
        <returns>지정된 행에 대한 동작 경로입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 경로 특정 엔터티에 대 한 동작에 대 한 URL입니다. 자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn GetColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaColumn GetColumn(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumn (columnName As String) As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaColumn ^ GetColumn(System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">메타데이터를 가져올 열의 이름입니다.</param>
        <summary>지정된 열에 대한 메타데이터를 반환합니다.</summary>
        <returns>열 메타데이터입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValuesFromRoute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetColumnValuesFromRoute (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetColumnValuesFromRoute(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnValuesFromRoute (context As HttpContext) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetColumnValuesFromRoute(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">지정된 웹 요청의 컨텍스트입니다.</param>
        <summary>열 값의 컬렉션을 가져옵니다.</summary>
        <returns>열 값의 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataKeyFromRoute">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.DataKey GetDataKeyFromRoute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataKeyFromRoute () As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataKey ^ GetDataKeyFromRoute();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDataKeyFromRoute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>경로 값에서 엔터티의 기본 키를 검색합니다.</summary>
        <returns>값이 발견되면 엔터티의 기본 키 값이며, 그렇지 않으면 <see langword="null" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 요청 URL 쿼리 문자열에서 경로 값의 일반적으로 제공 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayString">
      <MemberSignature Language="C#" Value="public virtual string GetDisplayString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDisplayString(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDisplayString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">표시 문자열을 가져올 행입니다.</param>
        <summary>행이 외래 키 관계에 사용될 때 행 인스턴스에 대한 표시 문자열로 사용할 값을 반환합니다.</summary>
        <returns>행 인스턴스에 대한 표시 이름입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 행이 있는 경우 `null`, 빈 문자열이 반환 됩니다. 엔터티 클래스의 재정의 포함 하는 경우는 <xref:System.Web.DynamicData.MetaTable.ToString%2A> 메서드를 재정의 된 <xref:System.Web.DynamicData.MetaTable.ToString%2A> 값이 반환 됩니다. 메서드가 반환 하는 그렇지 않은 경우는 `ToString` 값의 표현을 <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> 지정된 된 행에 대 한 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilteredColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetFilteredColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilteredColumns () As IEnumerable(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetFilteredColumns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>필터링 가능한 열의 목록을 검색합니다.</summary>
        <returns>필터링 가능한 열의 목록입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 열이 주석으로 추가 하는 경우에 필터링 가능한는 <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> 특성 및 `Enabled` 의 속성에서 <xref:System.Web.Mvc.FilterAttribute> 열의 특성이로 설정 된 `true`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyDictionary">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetPrimaryKeyDictionary (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetPrimaryKeyDictionary(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyDictionary (row As Object) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetPrimaryKeyDictionary(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyDictionary(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">행입니다.</param>
        <summary>지정된 행에 대해 기본 키 이름 및 값의 사전을 검색합니다.</summary>
        <returns>기본 키 이름 및 값의 사전입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 기본 키 사전을 만드는 방법을 보여 줍니다.  
  
```csharp  
private RouteValueDictionary GetRouteValues(MetaTable table, object row) {  
    RouteValueDictionary routeValues = GetRouteValues();  
    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  
        routeValues[pk.Key] = pk.Value;  
    }  
    return routeValues;  
}   
```  
  
```vb  
Private Function GetRouteValues(ByVal table As MetaTable, _  
        ByVal row As Object) As RouteValueDictionary   
    Dim routeValues As RouteValueDictionary = GetRouteValues()   
    For Each pk In table.GetPrimaryKeyDictionary(row)   
        routeValues(pk.Key) = pk.Value   
    Next   
    Return routeValues   
End Function   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrimaryKeyString">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 행에 대한 기본 키를 나타내는 값 목록을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="primaryKeyValues">기본 키를 구성하는 열 값 목록입니다.</param>
        <summary>지정된 행에 대한 기본 키를 나타내는 쉼표로 구분된 열 값 목록을 반환합니다.</summary>
        <returns>쉼표로 구분된 열 값 목록입니다. 목록이 비어 있으면 빈 문자열이 반환됩니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">기본 키를 가져올 행입니다.</param>
        <summary>지정된 행에 대한 기본 키를 나타내는 쉼표로 구분된 열 값 목록을 반환합니다.</summary>
        <returns>행에 대한 기본 키를 나타내는 쉼표로 구분된 열 값 목록입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; GetPrimaryKeyValues (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;object&gt; GetPrimaryKeyValues(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyValues (row As Object) As IList(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Object ^&gt; ^ GetPrimaryKeyValues(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyValues(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row">기본 키를 가져올 행입니다.</param>
        <summary>지정된 행에 대한 기본 키를 나타내는 열 값 컬렉션을 반환합니다.</summary>
        <returns>행에 대한 기본 키를 나타내는 열 값 컬렉션입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetQuery">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>테이블을 나타내는 엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스를 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable GetQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function GetQuery () As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>테이블을 나타내는 엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스를 반환합니다.</summary>
        <returns>엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable GetQuery (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuery (context As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery(System::Object ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.DynamicData.MetaTable" /> 개체의 컨텍스트입니다.</param>
        <summary>데이터 컨텍스트를 사용하여 테이블을 나타내는 엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스를 반환합니다.</summary>
        <returns>데이터 컨텍스트의 테이블을 나타내는 엔터티 형식에 대한 <see cref="T:System.Linq.IQueryable" /> 인스턴스입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `context` 매개 변수는 `null`,이 메서드를 호출 하 여 새 컨텍스트를 만듭니다는 <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns(valuetype System.Web.UI.WebControls.DataBoundControlMode mode, valuetype System.Web.DynamicData.ContainerType containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetScaffoldColumns(System::Web::UI::WebControls::DataBoundControlMode mode, System::Web::DynamicData::ContainerType containerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="containerType" Type="System.Web.DynamicData.ContainerType" />
      </Parameters>
      <Docs>
        <param name="mode">데이터 바인딩된 컨트롤 모드입니다.</param>
        <param name="containerType">테이블을 개별 엔터티로 표시할지 또는 엔터티 목록의 일부로 표시할지를 나타내는 값입니다.</param>
        <summary>스캐폴딩을 사용하여 표시할 열의 목록을 반환합니다.</summary>
        <returns>스캐폴딩을 사용하여 표시할 열의 목록입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 모든 열을 반환 된 <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> 속성이로 설정 되어 `true` 예외:  
  
-   긴 문자열 열이 있는 열이 있는 <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> 속성이로 설정 되어 `true` 및 해당 `containerType` 매개 변수는 `true`합니다.  
  
-   자식 열 인 <xref:System.Web.UI.WebControls.DataBoundControlMode> 값으로 설정 되어 <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType">엔터티의 형식입니다.</param>
        <summary>지정된 형식과 연결된 메타테이블을 검색합니다.</summary>
        <returns>지정된 형식과 연결된 메타테이블입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>를 호출합니다. 경우 <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> 반환 `false`, <xref:System.InvalidOperationException> 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">이 메서드가 호출한 <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> 메서드가 <see langword="false" />를 반환하였습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrimaryKey">
      <MemberSignature Language="C#" Value="public bool HasPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.HasPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블에 기본 키가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          테이블에 기본 키가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>생성자가 호출될 때 사용하지 못할 수 있는 데이터를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 호출는 <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> 의 각 열에 대 한 메서드는 <xref:System.Web.DynamicData.MetaTable> 인스턴스. 이 메서드는 직접 호출할 수 없습니다. 초기화를 사용자 지정 하려면이 클래스에서 파생 되 고 재정의 수는 <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> 메서드. 이 메서드를 재정의 하는 경우 기본 컨트롤의 호출 `Initialize` 메서드.  
  
   
  
## Examples  
 재정의 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> 초기화 프로세스를 사용자 지정 하기 위해 메서드.  
  
```csharp  
protected  override void Initialize() {  
    base.Initialize();  
    MyOverridenInit();  
}  
```  
  
```vb  
Protected Overloads Overrides Sub Initialize()   
    MyBase.Initialize()   
    MyOverridenInit()   
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          테이블이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListActionPath">
      <MemberSignature Language="C#" Value="public string ListActionPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListActionPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListActionPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListActionPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블에 대한 목록 동작의 동작 경로를 가져옵니다.</summary>
        <value>테이블에 대한 목록 동작의 동작 경로입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 작업 경로 특정 엔터티에 대 한 동작에 대 한 URL입니다. 자세한 내용은 참조는 <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블이 속한 메타 모델을 가져옵니다.</summary>
        <value>테이블이 속한 메타 모델입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 자세한 내용은 참조는 <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> 클래스 개요입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블의 고유 이름을 가져옵니다.</summary>
        <value>테이블의 고유 이름입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyColumns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyColumns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ PrimaryKeyColumns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>기본 키를 정의하는 열의 컬렉션을 가져옵니다.</summary>
        <value>기본 키 열을 포함하는 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.TableProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As TableProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::TableProvider ^ Provider { System::Web::DynamicData::ModelProviders::TableProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.TableProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블의 공급자를 가져옵니다.</summary>
        <value>테이블의 공급자입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMetadata();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>테이블에 대해 캐시된 메타데이터를 다시 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 캐시 된 테이블 메타 데이터 내장 열에 대 한 메타 데이터 및 데이터 모델 특성에서 가져온 정보로 구성 됩니다. 메타 데이터 캐시에는 모든 메타 데이터를 요청한 다음에 다시 작성 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntityType">
      <MemberSignature Language="C#" Value="public Type RootEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RootEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RootEntityType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.RootEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>엔터티의 상속 계층 구조의 루트 형식을 가져옵니다.</summary>
        <value>엔터티의 상속 계층 구조의 루트 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식 상속 계층 구조 맨 위에 있는 되었거나 부모 유형이 없는 경우 엔터티 형식을 반환 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블을 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          테이블을 표시해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn SortColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ SortColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>테이블의 정렬 기준이 되는 <see cref="T:System.Web.DynamicData.MetaColumn" /> 값을 가져옵니다.</summary>
        <value>테이블의 정렬 기준이 되는 열입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public virtual bool SortDescending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortDescending" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SortDescending { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.SortDescending</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>외래 키 관계에서 부모로 사용되는 항목을 내림차순으로 정렬할지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          항목이 내림차순으로 정렬되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여 정렬 순서를 지정할 수는 <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> 특성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>테이블의 이름을 반환합니다.</summary>
        <returns>테이블의 이름입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumn">
      <MemberSignature Language="C#" Value="public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetColumn(string columnName, [out] class System.Web.DynamicData.MetaColumn&amp; column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetColumn (columnName As String, ByRef column As MetaColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetColumn(System::String ^ columnName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaColumn ^ % column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="columnName">찾을 열의 이름입니다.</param>
        <param name="column">이 메서드가 반환되면 <c>columnName</c>에 대한 <see langword="MetaColumn" /> 개체를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 열을 찾을 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>
          지정된 열을 찾을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 `columnName` 매개 변수가 있는 <xref:System.InvalidOperationException> 예외가 throw 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType">엔터티의 형식입니다.</param>
        <param name="table">이 메서드가 반환될 때 지정된 형식과 연결된 메타테이블을 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
        <summary>지정된 형식 및 테이블과 연결된 메타테이블을 검색합니다.</summary>
        <returns>지정된 형식 및 테이블과 연결된 메타테이블입니다.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entityType" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>