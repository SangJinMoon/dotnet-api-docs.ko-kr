<Type Name="DynamicValidatorEventArgs" FullName="System.Web.DynamicData.DynamicValidatorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b815d9b4b7274be446ff81e219d5bbad4c96e9fe" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39929830" /></Metadata><TypeSignature Language="C#" Value="public class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicValidatorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicValidatorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicValidatorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicValidatorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DynamicValidatorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3f112-101">이벤트 데이터가 포함된 <see cref="T:System.Web.DynamicData.DynamicValidator" /> 클래스에 대한 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-101">Base class for <see cref="T:System.Web.DynamicData.DynamicValidator" /> classes that contain event data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f112-102"><xref:System.Web.DynamicData.DynamicValidator> 클래스 또는 데이터 모델에서 Entity Framework 메서드가 LINQ to SQL 클래스에서에서 throw 된 예외를 catch 합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-102">The <xref:System.Web.DynamicData.DynamicValidator> class catches exceptions thrown from LINQ to SQL classes or from Entity Framework methods in a data model.</span></span> <span data-ttu-id="3f112-103">이 클래스는 이벤트 데이터가 포함 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-103">This class does not contain event data.</span></span> <span data-ttu-id="3f112-104">이벤트가 발생할 때 이벤트 처리기에 상태 정보를 전달 하지 않는 이벤트에 의해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-104">It is used by events that do not pass state information to an event handler when an event is raised.</span></span> <span data-ttu-id="3f112-105">이벤트 처리기에 상태 정보가 필요한 경우 데이터를 저장 하려면이 클래스에서 파생된 된 클래스를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-105">If the event handler requires state information, you must create a derived class from this class to hold the data.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, valuetype System.Web.DynamicData.DynamicDataSourceOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicValidatorEventArgs(Exception ^ exception, System::Web::DynamicData::DynamicDataSourceOperation operation);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicValidatorEventArgs : Exception * System.Web.DynamicData.DynamicDataSourceOperation -&gt; System.Web.DynamicData.DynamicValidatorEventArgs" Usage="new System.Web.DynamicData.DynamicValidatorEventArgs (exception, operation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="operation" Type="System.Web.DynamicData.DynamicDataSourceOperation" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="3f112-106">발생한 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-106">The exception that occurred.</span></span></param>
        <param name="operation"><span data-ttu-id="3f112-107">예외를 발생시킨 데이터 소스 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-107">The data source operation that caused the exception.</span></span></param>
        <summary><span data-ttu-id="3f112-108">발생한 예외 및 예외를 발생시킨 데이터 소스 작업을 사용하여 <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> class, using the exception that occurred and the data source operation that caused the exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f112-109">ASP.NET Dynamic Data 데이터 원본 개체에서 수행할 수 있는 데이터 원본 작업을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-109">ASP.NET Dynamic Data provides data source operations that can be performed by a data source object.</span></span> <span data-ttu-id="3f112-110">이러한 작업에는 `Delete`, `Insert`를 `Select` 하 고 `Update` 및 `ContextCreate`합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-110">These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`.</span></span> <span data-ttu-id="3f112-111">예외 및 발생 한 예외를 발생 시킨 데이터 소스 작업을 나타내는 데이터 소스 작업을 하는 동안 예외가 발생 하는 경우 <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> 고 <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> 각각.</span><span class="sxs-lookup"><span data-stu-id="3f112-111">If an exception occurs during a data source operation, the data source operation that caused the exception and the exception that occurred are represented by <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> and <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> respectively.</span></span>  
  
 <span data-ttu-id="3f112-112">이 생성자의 새 인스턴스를 초기화 합니다 <xref:System.Web.DynamicData.DynamicValidatorEventArgs> 클래스 이러한 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-112">This constructor initializes a new instance of the <xref:System.Web.DynamicData.DynamicValidatorEventArgs> class using these properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f112-113">데이터 소스 작업 이벤트 중 발생하는 예외를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-113">Gets the exception that occurs during a data source operation event.</span></span></summary>
        <value><span data-ttu-id="3f112-114">데이터 소스 작업 이벤트 중 발생한 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-114">The exception that occurred during the data source operation event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f112-115">ASP.NET Dynamic Data 데이터 원본 개체에서 수행할 수 있는 데이터 원본 작업을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-115">ASP.NET Dynamic Data provides data source operations that can be performed by a data source object.</span></span> <span data-ttu-id="3f112-116">이러한 작업에는 `Delete`, `Insert`를 `Select` 하 고 `Update` 및 `ContextCreate`합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-116">These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`.</span></span> <span data-ttu-id="3f112-117">예외가 발생 하는 경우는 <xref:System.Web.DynamicData.DynamicValidator> 클래스이 속성 사용 하 여이 데이터 소스 작업을 하는 동안 발생 하는 예외의 유형을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-117">If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to get the type of exception that is triggered during a data source operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operation">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.DynamicDataSourceOperation Operation" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operation As DynamicDataSourceOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DynamicDataSourceOperation Operation { System::Web::DynamicData::DynamicDataSourceOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.Operation : System.Web.DynamicData.DynamicDataSourceOperation" Usage="System.Web.DynamicData.DynamicValidatorEventArgs.Operation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicDataSourceOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f112-118"><see cref="T:System.Web.DynamicData.DynamicValidator" /> 클래스에서 예외를 발생시킨 데이터 소스 작업을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-118">Gets the data source operation that caused an exception in the <see cref="T:System.Web.DynamicData.DynamicValidator" /> class.</span></span></summary>
        <value><span data-ttu-id="3f112-119">예외를 발생시킨 데이터 소스 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-119">The data source operation that caused the exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f112-120">ASP.NET Dynamic Data 데이터 원본 개체에서 수행할 수 있는 데이터 소스 작업을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-120">ASP.NET Dynamic Data provides data source operation that can be performed by the data source object.</span></span> <span data-ttu-id="3f112-121">이러한 작업에는 `Delete`, `Insert`를 `Select` 하 고 `Update` 및 `ContextCreate`합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-121">These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`.</span></span> <span data-ttu-id="3f112-122">예외가 발생 하는 경우는 <xref:System.Web.DynamicData.DynamicValidator> 클래스는 예외를 트리거한 작업을 검색 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3f112-122">If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to retrieve the operation that triggered that exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>