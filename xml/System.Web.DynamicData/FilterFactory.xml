<Type Name="FilterFactory" FullName="System.Web.DynamicData.FilterFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2c5d168c9954fc8458b8e8291d9032daf7e62cad" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36601407" /></Metadata><TypeSignature Language="C#" Value="public class FilterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.FilterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterFactory" />
  <TypeSignature Language="F#" Value="type FilterFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6a3e2-101">필터 템플릿을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-101">Creates a filter template.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3e2-102"><xref:System.Web.DynamicData.FilterFactory> 클래스는 동적 데이터에서 런타임에 특정 열 형식에 대 한 필터 템플릿의 인스턴스를 가져오는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-102">The <xref:System.Web.DynamicData.FilterFactory> class is used at run time by Dynamic Data to get an instance of a filter template for a specific column type.</span></span>  
  
 <span data-ttu-id="6a3e2-103">필터 템플릿이 로드 하는 방법을 사용자 지정 하려면이 클래스에 정의 된 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-103">You can override the methods that are defined in this class to customize how filter templates are loaded.</span></span> <span data-ttu-id="6a3e2-104">예를 들어, 사용자 지정 구현을 기본 ~/DynamicData/Filters 폴더와 다른 위치에서 필터 템플릿을 로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-104">For example, a custom implementation could load the filter templates from a location different than the default ~/DynamicData/Filters folder.</span></span>  
  
 <span data-ttu-id="6a3e2-105">외래 키, 부울 및 열거형 열 형식 및 사용 하 여 표시에 대 한 필터 템플릿을 제공 하는 동적 데이터는 <xref:System.Web.UI.WebControls.DropDownList> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-105">Dynamic Data provides filter templates for foreign-key, Boolean, and enumeration column types and displays them by using a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="6a3e2-106">사용자 지정 필터 템플릿을 만들 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-106">You can also create custom filter templates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3e2-107">테이블 행 필터링의 예에서는 기본 필터 템플릿을 참조는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-107">For an example of table row filtering uses the default filter templates, see the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.FieldTemplateFactory" />
    <altmember cref="T:System.Web.DynamicData.EntityTemplateFactory" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FilterFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FilterFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a3e2-108"><see cref="T:System.Web.DynamicData.FilterFactory" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl (System.Web.DynamicData.MetaColumn column, string filterUIHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.QueryableFilterUserControl CreateFilterControl(class System.Web.DynamicData.MetaColumn column, string filterUIHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.CreateFilterControl(System.Web.DynamicData.MetaColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFilterControl (column As MetaColumn, filterUIHint As String) As QueryableFilterUserControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::DynamicData::QueryableFilterUserControl ^ CreateFilterControl(System::Web::DynamicData::MetaColumn ^ column, System::String ^ filterUIHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterControl : System.Web.DynamicData.MetaColumn * string -&gt; System.Web.DynamicData.QueryableFilterUserControl&#xA;override this.CreateFilterControl : System.Web.DynamicData.MetaColumn * string -&gt; System.Web.DynamicData.QueryableFilterUserControl" Usage="filterFactory.CreateFilterControl (column, filterUIHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.QueryableFilterUserControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="filterUIHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="6a3e2-109">필드 템플릿이 적용되는 데이터 열입니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-109">The data column to which the filter template applies.</span></span></param>
        <param name="filterUIHint"><span data-ttu-id="6a3e2-110">사용할 필터 템플릿의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-110">The name of the filter template to use.</span></span></param>
        <summary><span data-ttu-id="6a3e2-111">필터 템플릿의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-111">Creates an instance of the filter template.</span></span></summary>
        <returns><span data-ttu-id="6a3e2-112"><see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> 클래스의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-112">An instance of the <see cref="T:System.Web.DynamicData.QueryableFilterUserControl" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3e2-113">이 메서드는 필터 템플릿의 인스턴스를 가져오려면 Dynamic Data에서 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-113">This method is called by Dynamic Data to get an instance of a filter template.</span></span> <span data-ttu-id="6a3e2-114">파생된 클래스는 필터 템플릿의 인스턴스를 만드는 방법 사용자 지정 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-114">Derived classes can override this method to customize how instances of filter templates are created.</span></span> <span data-ttu-id="6a3e2-115">예를 들어, 사용자 지정 구현 대신 기본 ~/DynamicData/Filters 폴더에서 컴파일된 어셈블리에서 템플릿을 로드할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-115">For example, a custom implementation could load templates from a compiled assembly instead of from the default ~/DynamicData/Filters folder.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6a3e2-116"><paramref name="column" />가 **null**인 경우</span><span class="sxs-lookup"><span data-stu-id="6a3e2-116"><paramref name="column" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFilterVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetFilterVirtualPath (System.Web.DynamicData.MetaColumn column, string filterUIHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilterVirtualPath(class System.Web.DynamicData.MetaColumn column, string filterUIHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FilterFactory.GetFilterVirtualPath(System.Web.DynamicData.MetaColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilterVirtualPath (column As MetaColumn, filterUIHint As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFilterVirtualPath(System::Web::DynamicData::MetaColumn ^ column, System::String ^ filterUIHint);" />
      <MemberSignature Language="F#" Value="abstract member GetFilterVirtualPath : System.Web.DynamicData.MetaColumn * string -&gt; string&#xA;override this.GetFilterVirtualPath : System.Web.DynamicData.MetaColumn * string -&gt; string" Usage="filterFactory.GetFilterVirtualPath (column, filterUIHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="filterUIHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="6a3e2-117">필드 템플릿이 적용되는 데이터 열입니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-117">The data column to which the filter template applies.</span></span></param>
        <param name="filterUIHint"><span data-ttu-id="6a3e2-118">사용할 필터 템플릿입니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-118">The filter template to use.</span></span></param>
        <summary><span data-ttu-id="6a3e2-119">필터 템플릿의 가상 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-119">Gets the virtual path of the filter template.</span></span></summary>
        <returns><span data-ttu-id="6a3e2-120">필터 템플릿의 가상 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-120">The virtual path of the filter template.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3e2-121">기본적으로 필터 템플릿은 ~/DynamicData/Filers 폴더에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-121">By default, filter templates are located in the ~/DynamicData/Filers folder.</span></span>  
  
 <span data-ttu-id="6a3e2-122">이 메서드는 필드 템플릿을 포함 하는 폴더의 가상 경로 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-122">This method determines the virtual path of the folder that contains the field template.</span></span> <span data-ttu-id="6a3e2-123">파생된 클래스는 다양 한 가상 경로에서 필터 템플릿을 제공 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6a3e2-123">Derived classes can override this method to provide filter templates from a different virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6a3e2-124"><paramref name="column" />가 **null**인 경우</span><span class="sxs-lookup"><span data-stu-id="6a3e2-124"><paramref name="column" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>