<Type Name="QueryableFilterRepeater" FullName="System.Web.DynamicData.QueryableFilterRepeater">
  <TypeSignature Language="C#" Value="public class QueryableFilterRepeater : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryableFilterRepeater extends System.Web.UI.Control implements class System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.QueryableFilterRepeater" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryableFilterRepeater&#xA;Inherits Control&#xA;Implements IFilterExpressionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryableFilterRepeater : System::Web::UI::Control, System::Web::DynamicData::IFilterExpressionProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFilterExpressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8cc9b-101">지원되는 열 형식의 테이블 행을 필터링하기 위해 UI를 자동으로 생성하는 템플릿 기반 컨트롤을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-101">Provides a templated control that automatically generates the UI to filter table rows for supported column types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc9b-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="8cc9b-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="8cc9b-103">소개</span><span class="sxs-lookup"><span data-stu-id="8cc9b-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="8cc9b-104">컨텍스트 클래스</span><span class="sxs-lookup"><span data-stu-id="8cc9b-104">Class Context</span></span>](#ClassContext)  
  
-   [<span data-ttu-id="8cc9b-105">선언 구문</span><span class="sxs-lookup"><span data-stu-id="8cc9b-105">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="8cc9b-106">소개</span><span class="sxs-lookup"><span data-stu-id="8cc9b-106">Introduction</span></span>  
 <span data-ttu-id="8cc9b-107"><xref:System.Web.DynamicData.QueryableFilterRepeater> UI 테이블 행 필터를 자동으로 생성 하도록 컨트롤은 페이지 태그에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-107">The <xref:System.Web.DynamicData.QueryableFilterRepeater> control is used in page markup to automatically generate the UI to filter table rows.</span></span> <span data-ttu-id="8cc9b-108">기본적으로 동적 데이터 ~\DynamicData\Filters 디렉터리에 있는 기본 필터 서식 파일을 사용 하 여 각 지원 되는 열 형식에 대 한 UI를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-108">By default, Dynamic Data creates the UI for each supported column type by using the default filter templates that are in the ~\DynamicData\Filters directory.</span></span>  
  
 <span data-ttu-id="8cc9b-109">기본 템플릿 외래 키, 부울 및 열거형 형식만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-109">The default templates support foreign-key, Boolean, and enumeration column types.</span></span>  
  
 <span data-ttu-id="8cc9b-110">다음 표에서 연관 된 작업을 나열는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-110">The following table lists tasks that are associated with the <xref:System.Web.DynamicData.QueryableFilterRepeater> type.</span></span>  
  
|<span data-ttu-id="8cc9b-111">작업</span><span class="sxs-lookup"><span data-stu-id="8cc9b-111">Task</span></span>|<span data-ttu-id="8cc9b-112">설명</span><span class="sxs-lookup"><span data-stu-id="8cc9b-112">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="8cc9b-113">테이블 행을 필터링 하는 것에 대 한 UI를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-113">Create the UI for filtering table rows.</span></span>|<span data-ttu-id="8cc9b-114">추가 <xref:System.Web.DynamicData.DynamicFilter> 컨트롤을 사용 하 여 UI 만들기는 <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-114">Add <xref:System.Web.DynamicData.DynamicFilter> controls to create UI using the <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> property.</span></span>|  
|<span data-ttu-id="8cc9b-115">확인 여부는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 컨트롤이 필드 필터 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-115">Verify whether the <xref:System.Web.DynamicData.QueryableFilterRepeater> control contains data field filters.</span></span>|<span data-ttu-id="8cc9b-116">체크 인 수행는 <xref:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-116">Perform the check in the <xref:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender%2A> method.</span></span>|  
  
<a name="ClassContext"></a>   
## <a name="class-context"></a><span data-ttu-id="8cc9b-117">컨텍스트 클래스</span><span class="sxs-lookup"><span data-stu-id="8cc9b-117">Class Context</span></span>  
 <span data-ttu-id="8cc9b-118"><xref:System.Web.DynamicData.QueryableFilterRepeater> 컨트롤 함께 사용 하도록 합니다.는 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-118">The <xref:System.Web.DynamicData.QueryableFilterRepeater> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="8cc9b-119">으로 참조 되어야 합니다는 <xref:System.Web.DynamicData.DynamicFilterExpression> 내 인스턴스는 <xref:System.Web.UI.WebControls.QueryExtender> 페이지 태그에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-119">It must be referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in page markup.</span></span>  
  
 <span data-ttu-id="8cc9b-120">다음 그림은 동적 데이터 자동 테이블 행 필터링을 구현 하기 위해 따라야 하는 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-120">The following figure shows the steps that Dynamic Data follows in order to implement automatic table row filtering.</span></span>  
  
 <span data-ttu-id="8cc9b-121">![동적 데이터 테이블 행 필터링 요소](~/add/media/dynamic-autofilter.png "동적 데이터 테이블 행 필터링 요소")</span><span class="sxs-lookup"><span data-stu-id="8cc9b-121">![Dynamic Data Table Row Filtering Elements](~/add/media/dynamic-autofilter.png "Dynamic Data Table Row Filtering Elements")</span></span>  
  
1.  <span data-ttu-id="8cc9b-122"><xref:System.Web.DynamicData.DynamicFilter> 컨트롤 (에 포함 되어 있는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 컨트롤), 열 값을 전달는 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-122">The <xref:System.Web.DynamicData.DynamicFilter> controls (which are contained in the <xref:System.Web.DynamicData.QueryableFilterRepeater> control), pass a column value to the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
2.  <span data-ttu-id="8cc9b-123"><xref:System.Web.UI.WebControls.QueryExtender> 컨트롤이이 값을 사용 하 여 데이터 소스 제어에 전달 되는 정보를 필터링 하는 쿼리를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-123">The <xref:System.Web.UI.WebControls.QueryExtender> control uses this value to create the query filtering information, which it then passes to the data source control.</span></span>  
  
3.  <span data-ttu-id="8cc9b-124">데이터 소스 제어 데이터 원본 공급자에 대 한 정보를 필터링 하는 쿼리를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-124">The data source control passes the query filtering information to the data source provider.</span></span>  
  
4.  <span data-ttu-id="8cc9b-125">데이터 원본 공급자 데이터베이스에는 쿼리를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-125">The data source provider passes the query to the database.</span></span>  
  
5.  <span data-ttu-id="8cc9b-126">데이터베이스는 필터링 된 테이블 행을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-126">The database returns the filtered table rows.</span></span>  
  
6.  <span data-ttu-id="8cc9b-127">데이터 원본 공급자의 데이터 소스 제어에 다시이 데이터를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-127">The data source provider sends this data back to the data source control.</span></span>  
  
7.  <span data-ttu-id="8cc9b-128">이 컨트롤 표시를 위해 데이터 바인딩된 컨트롤에 필터링 된 테이블 행을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-128">This control passes the filtered table rows to the data-bound control for display.</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="8cc9b-129">선언 구문</span><span class="sxs-lookup"><span data-stu-id="8cc9b-129">Declarative Syntax</span></span>  
  
```  
<asp:QueryableFilterRepeater   
    ID="string"  
    DynamicFilterContainerId="string"   
    EnableViewState="True|False"   
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"   
    Visible="true"  
    runat="server" />  
```  
  
   
  
## Examples  
 <span data-ttu-id="8cc9b-130">이 위치에 사용할 수 있는 소스 코드를 Visual Studio 프로젝트는: [동적 데이터 스 캐 폴딩](http://go.microsoft.com/fwlink/?LinkId=168914)합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-130">A Visual Studio project with source code is available at this location: [Scaffolding Dynamic Data](http://go.microsoft.com/fwlink/?LinkId=168914).</span></span>  
  
 <span data-ttu-id="8cc9b-131">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 테이블 행 필터링에 대 한 UI 생성을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-131">The following example shows how to use the <xref:System.Web.DynamicData.QueryableFilterRepeater> control to generate the UI for table row filtering.</span></span> <span data-ttu-id="8cc9b-132">반복기의 항목 템플릿에 포함 되어는 <xref:System.Web.DynamicData.DynamicFilter> 각각에 대 한 UI를 만드는 컨트롤을 지원 되는 열 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-132">The repeater's item template contains a <xref:System.Web.DynamicData.DynamicFilter> control that creates the UI for each supported column type.</span></span>  
  
 <span data-ttu-id="8cc9b-133">이 예제에는 다음이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-133">The example requires the following:</span></span>  
  
-   <span data-ttu-id="8cc9b-134">Dynamic Data 웹 사이트 또는 Dynamic Data 웹 응용 프로그램.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-134">A Dynamic Data Web site or a Dynamic Data Web application.</span></span> <span data-ttu-id="8cc9b-135">자세한 내용은 `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-135">For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.QueryableFilterRepeater#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.QueryableFilterRepeater#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx.vb#3)]  
  
 [!code-csharp[System.Web.DynamicData.QueryableFilterRepeater#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/awltl2spartials.cs#4)]
 [!code-vb[System.Web.DynamicData.QueryableFilterRepeater#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/awltpartiall2sclasses.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryableFilterRepeater ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryableFilterRepeater();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8cc9b-136"><see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-136">Initializes a new instance of the <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc9b-137">일반적으로이 생성자의 새 인스턴스를 초기화를 사용 하지 않는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-137">Typically you do not use this constructor to initialize a new instance of the <xref:System.Web.DynamicData.QueryableFilterRepeater> class.</span></span> <span data-ttu-id="8cc9b-138">지정 하는 대신,는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 페이지 태그에서 컨트롤 및 컨트롤은 자동으로 초기화 페이지를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-138">Instead, you specify the <xref:System.Web.DynamicData.QueryableFilterRepeater> control in page markup, and the control is initialized automatically when the page runs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicFilterContainerId">
      <MemberSignature Language="C#" Value="public string DynamicFilterContainerId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicFilterContainerId" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterRepeater.DynamicFilterContainerId" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicFilterContainerId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicFilterContainerId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("DynamicFilter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.DynamicData.QueryableFilterUserControl))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cc9b-139">열에 대한 필터로 사용되도록 구성된 템플릿에 들어 있는 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 컨트롤의 ID를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-139">Gets or sets the ID of a <see cref="T:System.Web.DynamicData.DynamicFilter" /> control inside the template that is configured to be a filter for a column.</span></span></summary>
        <value><span data-ttu-id="8cc9b-140">열에 대한 필터로 사용되도록 구성된 템플릿에 들어 있는 <see cref="T:System.Web.DynamicData.DynamicFilter" /> 컨트롤의 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-140">The ID of a <see cref="T:System.Web.DynamicData.DynamicFilter" /> control inside the template that is configured to be a filter for a column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc9b-141">ID 설정 되어 있지 않으면 ID에 대 한 기본값은 "DynamicFilter"입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-141">If the ID is not set, the default value for the ID is "DynamicFilter".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.INamingContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8cc9b-142"><see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> 클래스를 채울 컨트롤을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-142">Gets or sets the controls that populate the <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> class.</span></span></summary>
        <value><span data-ttu-id="8cc9b-143"><see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> 컨트롤의 항목이 표시되는 방법을 정의하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-143">An object that defines how items in the <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> control are displayed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc9b-144"><xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> 채우는 데 사용 되는 동작을 정의 하는 속성은 <xref:System.Web.DynamicData.QueryableFilterRepeater> 컨트롤을 자식 컨트롤로 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-144">The <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> property defines the behavior that is used to populate the <xref:System.Web.DynamicData.QueryableFilterRepeater> control with child controls.</span></span> <span data-ttu-id="8cc9b-145">자식 컨트롤에는 페이지에 정의 된 인라인 템플릿을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-145">The child controls represent the inline templates that are defined on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc9b-146">설정 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 컨트롤의 <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> 포함 되도록 속성 <xref:System.Web.DynamicData.DynamicFilter> 각각에 대 한 UI를 만드는 데 컨트롤 종류를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-146">The following example shows how to set the <xref:System.Web.DynamicData.QueryableFilterRepeater> control's <xref:System.Web.DynamicData.QueryableFilterRepeater.ItemTemplate%2A> property so that it contains <xref:System.Web.DynamicData.DynamicFilter> controls to create the UI for each supported column type.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.QueryableFilterRepeater#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/cs/queryablefilterrepeater.aspx#2)]
 [!code-aspx-vb[System.Web.DynamicData.QueryableFilterRepeater#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.queryablefilterrepeater/vb/queryablefilterrepeater.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8cc9b-147">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-147">The event data.</span></span></param>
        <summary><span data-ttu-id="8cc9b-148">컨트롤이 데이터 필드 필터를 포함하는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-148">Verifies whether the control contains data field filters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc9b-149">이 메서드를 설정 하는 데이터 필드 필터가 없는 경우는 <xref:System.Web.UI.Control.Visible%2A> 의 속성은 <xref:System.Web.DynamicData.QueryableFilterRepeater> 개체를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-149">If there are no data field filters, this method sets the <xref:System.Web.UI.Control.Visible%2A> property of the <xref:System.Web.DynamicData.QueryableFilterRepeater> object to `false`.</span></span> <span data-ttu-id="8cc9b-150">후에이 메서드는 <xref:System.Web.DynamicData.QueryableFilterRepeater> 컨트롤이 로드 하지만 렌더링 되기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-150">This method is called after the <xref:System.Web.DynamicData.QueryableFilterRepeater> control is loaded but before it is rendered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.GetQueryable">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Function GetQueryable (source As IQueryable) As IQueryable Implements IFilterExpressionProvider.GetQueryable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Linq::IQueryable ^ System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System::Linq::IQueryable ^ source) = System::Web::DynamicData::IFilterExpressionProvider::GetQueryable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System.Linq.IQueryable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="8cc9b-151">데이터 소스 쿼리입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-151">The data source query.</span></span></param>
        <summary><span data-ttu-id="8cc9b-152">현재 필터 값을 사용하여 수정된 쿼리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-152">Gets the modified query using the current filter value.</span></span></summary>
        <returns><span data-ttu-id="8cc9b-153">필터입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-153">The filter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc9b-154">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8cc9b-154">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8cc9b-155"><xref:System.Web.DynamicData.QueryableFilterRepeater> 인스턴스가 <xref:System.Web.DynamicData.IFilterExpressionProvider> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-155">It can be used only when the <xref:System.Web.DynamicData.QueryableFilterRepeater> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.Initialize">
      <MemberSignature Language="C#" Value="void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.DynamicData.IFilterExpressionProvider.Initialize(class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.QueryableFilterRepeater.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (dataSource As IQueryableDataSource) Implements IFilterExpressionProvider.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.DynamicData.IFilterExpressionProvider.Initialize(System::Web::UI::WebControls::IQueryableDataSource ^ dataSource) = System::Web::DynamicData::IFilterExpressionProvider::Initialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.Initialize(System.Web.UI.WebControls.IQueryableDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource"><span data-ttu-id="8cc9b-156">데이터 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-156">The data source.</span></span></param>
        <summary><span data-ttu-id="8cc9b-157"><see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-157">Initializes a new instance of the <see cref="T:System.Web.DynamicData.QueryableFilterRepeater" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc9b-158">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="8cc9b-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8cc9b-159"><xref:System.Web.DynamicData.QueryableFilterRepeater> 인스턴스가 <xref:System.Web.DynamicData.IFilterExpressionProvider> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="8cc9b-159">It can be used only when the <xref:System.Web.DynamicData.QueryableFilterRepeater> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>