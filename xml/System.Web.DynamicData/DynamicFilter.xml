<Type Name="DynamicFilter" FullName="System.Web.DynamicData.DynamicFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e7bbb0533a7ba42d8a13d2e97a261a70128e3cb7" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48693051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicFilter : System.Web.UI.Control, System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilter extends System.Web.UI.Control implements class System.Web.DynamicData.IFilterExpressionProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilter&#xA;Inherits Control&#xA;Implements IFilterExpressionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilter : System::Web::UI::Control, System::Web::DynamicData::IFilterExpressionProvider" />
  <TypeSignature Language="F#" Value="type DynamicFilter = class&#xA;    inherit Control&#xA;    interface IFilterExpressionProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFilterExpressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="23844-101">지정된 열을 사용하여 테이블 행을 필터링하는 UI를 표시합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="23844-101">Displays the UI for filtering table rows using a specified column.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="23844-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="23844-103">소개</span><span class="sxs-lookup"><span data-stu-id="23844-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="23844-104">ClassContext</span><span class="sxs-lookup"><span data-stu-id="23844-104">ClassContext</span></span>](#ClassContext)  
  
-   [<span data-ttu-id="23844-105">선언 구문</span><span class="sxs-lookup"><span data-stu-id="23844-105">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="23844-106">소개</span><span class="sxs-lookup"><span data-stu-id="23844-106">Introduction</span></span>  
 <span data-ttu-id="23844-107"><xref:System.Web.DynamicData.DynamicFilter> 컨트롤 테이블 행 필터링에 대 한 UI를 생성 하는 페이지 태그에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23844-107">The <xref:System.Web.DynamicData.DynamicFilter> control is used in a page markup to generate the UI for filtering table rows.</span></span> <span data-ttu-id="23844-108">동적 데이터 ~\DynamicData\Filters 폴더에 있는 기본 필터 템플릿을 사용 하 여 UI를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="23844-108">Dynamic Data creates the UI by using the default filter templates that are in the ~\DynamicData\Filters folder.</span></span> <span data-ttu-id="23844-109">이러한 템플릿은 외래 키, 부울 및 열거형 형식만 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-109">These templates support foreign-key, Boolean, and enumeration column types.</span></span>  
  
 <span data-ttu-id="23844-110">다음 표에서 일부의 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23844-110">The following table shows some of the tasks you can perform.</span></span>  
  
|<span data-ttu-id="23844-111">시나리오</span><span class="sxs-lookup"><span data-stu-id="23844-111">Scenario</span></span>|<span data-ttu-id="23844-112">설명</span><span class="sxs-lookup"><span data-stu-id="23844-112">Description</span></span>|  
|--------------|-----------------|  
|<span data-ttu-id="23844-113">테이블 행 필터링에 사용할 열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-113">Specify the column to use for table row filtering.</span></span>|<span data-ttu-id="23844-114">속성을 사용 하 여 <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> 테이블 행 필터링에 사용할 열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-114">Use the property <xref:System.Web.DynamicData.DynamicFilter.DataField%2A> to specify the column to use for table row filtering.</span></span>|  
|<span data-ttu-id="23844-115">UI를 만드는 데 사용할 필터 템플릿의 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-115">Specify the name of the filter template to use to create the UI.</span></span>|<span data-ttu-id="23844-116">속성을 사용 하 여 <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> UI를 만드는 데 사용할 필터 템플릿의 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-116">Use the property <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> to specify the name of the filter template to use to create the UI.</span></span>|  
|<span data-ttu-id="23844-117">UI가 렌더링 되기 전에 사용자 지정 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-117">Perform custom operations before the UI is rendered.</span></span>|<span data-ttu-id="23844-118">사용 된 <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> UI가 렌더링 되기 전에 사용자 지정 작업을 수행 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-118">Use the <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> to perform custom operations before the UI is rendered.</span></span>|  
  
 <span data-ttu-id="23844-119">다음과 같은 방법으로 사용할 필터 템플릿을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23844-119">You can specify the filter template to use in the following ways:</span></span>  
  
-   <span data-ttu-id="23844-120">사용 하 여는 <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> 페이지 태그에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="23844-120">By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup.</span></span> <span data-ttu-id="23844-121">이 방법은 프레젠테이션 계층 사용자 지정 스키마 (데이터베이스)를 및 단일 페이지에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-121">This approach is a presentation-layer customization, which is independent of the schema (database), and which applies to a single page.</span></span>  
  
-   <span data-ttu-id="23844-122">사용 하 여는 <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> 모델의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="23844-122">By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model.</span></span> <span data-ttu-id="23844-123">이 방법은 데이터 계층 사용자 지정, 특정 스키마 (데이터베이스)에 종속 되 고 전체 응용 프로그램에 적용 되는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="23844-123">This approach is a data-layer customization, which depends on the specific schema (database), and which applies to the entire application.</span></span>  
  
 <span data-ttu-id="23844-124">두 방법 모두를 사용 하는 경우 태그에서 지정 된 필터 템플릿을 데이터 모델에 지정 된 서식 파일 보다 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-124">If you use both approaches, the filter template that is specified in the markup takes precedence over the template that is specified in the data model.</span></span>  
  
<a name="ClassContext"></a>   
## <a name="class-context"></a><span data-ttu-id="23844-125">클래스 컨텍스트</span><span class="sxs-lookup"><span data-stu-id="23844-125">Class Context</span></span>  
 <span data-ttu-id="23844-126"><xref:System.Web.DynamicData.DynamicFilter> 컨트롤은 사용 하도록 설계를 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-126">The <xref:System.Web.DynamicData.DynamicFilter> control is designed to work with the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span> <span data-ttu-id="23844-127"><xref:System.Web.DynamicData.DynamicFilter> 컨트롤에서 참조 되는 <xref:System.Web.DynamicData.DynamicFilterExpression> 내 인스턴스를 <xref:System.Web.UI.WebControls.QueryExtender> 페이지 태그에서 개체.</span><span class="sxs-lookup"><span data-stu-id="23844-127">The <xref:System.Web.DynamicData.DynamicFilter> control is referenced by a <xref:System.Web.DynamicData.DynamicFilterExpression> instance inside a <xref:System.Web.UI.WebControls.QueryExtender> object in the page markup.</span></span>  
  
 <span data-ttu-id="23844-128">다음 그림에는 Dynamic Data 테이블 행 외래 키 열으로 필터링을 구현 하려면 다음 단계를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="23844-128">The following figure shows the steps that Dynamic Data follows in order to implement table row filtering by a foreign-key column.</span></span>  
  
 <span data-ttu-id="23844-129">![요소를 쿼리 하는 동적 데이터](~/add/media/dynamic-dataquery.png "동적 데이터 쿼리 요소")</span><span class="sxs-lookup"><span data-stu-id="23844-129">![Dynamic Data Query Elements](~/add/media/dynamic-dataquery.png "Dynamic Data Query Elements")</span></span>  
  
1.  <span data-ttu-id="23844-130">합니다 <xref:System.Web.DynamicData.DynamicFilter> 제어에 선택한 값을 전달 합니다 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="23844-130">The <xref:System.Web.DynamicData.DynamicFilter> control passes the selected value to the <xref:System.Web.UI.WebControls.QueryExtender> control.</span></span>  
  
2.  <span data-ttu-id="23844-131"><xref:System.Web.UI.WebControls.QueryExtender> 컨트롤 필터링 정보 쿼리를 만드는 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-131">The <xref:System.Web.UI.WebControls.QueryExtender> control uses the value to create the query filtering information.</span></span> <span data-ttu-id="23844-132">그러면 데이터 소스 컨트롤에이 정보를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-132">It then passes this information to the data source control.</span></span>  
  
3.  <span data-ttu-id="23844-133">데이터 소스 컨트롤에는 데이터 원본 공급자 필터링 쿼리 정보를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-133">The data source control passes the filtering query information to the data source provider.</span></span>  
  
4.  <span data-ttu-id="23844-134">데이터 원본 공급자 데이터베이스에 쿼리를 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-134">The data source provider passes the query to the database.</span></span>  
  
5.  <span data-ttu-id="23844-135">데이터베이스에는 필터링 된 테이블 행을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-135">The database returns the filtered table rows.</span></span>  
  
6.  <span data-ttu-id="23844-136">데이터 원본 공급자는 데이터 소스 컨트롤에 다시이 데이터를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="23844-136">The data source provider sends this data back to the data source control.</span></span>  
  
7.  <span data-ttu-id="23844-137">데이터 소스 컨트롤 표시를 위해 데이터 바인딩된 컨트롤에 필터링 된 테이블 행을 전달합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-137">The data source control passes the filtered table rows to the data-bound control for display.</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="23844-138">선언 구문</span><span class="sxs-lookup"><span data-stu-id="23844-138">Declarative Syntax</span></span>  
  
```  
<asp:DynamicFilter  
    ID="Control ID"  
    DataField="Name of the data field to use for filtering"  
    EnableViewState="True|False"   
    FilterUIHint="Name of the filter template to generate the UI"  
    OnFilterChanged="Filter changed event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"   
    Visible="True|False"  
    runat="server"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="23844-139">이 위치에서 소스 코드를 사용 하 여 Visual Studio 프로젝트를 사용할 수 있습니다: [다운로드](http://go.microsoft.com/fwlink/?LinkId=168914)합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-139">A Visual Studio project with source code is available at this location: [Download](http://go.microsoft.com/fwlink/?LinkId=168914).</span></span>  
  
 <span data-ttu-id="23844-140">다음 예제에서는 기본 ForeignKey.ascx 필터 템플릿의 사용 하 여 ProductCategory 외래 키 열을 기준으로 제품 테이블 행 필터링에 대 한 UI를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="23844-140">The following examples use the default ForeignKey.ascx filter template to create the UI for filtering the Products table rows by the ProductCategory foreign-key column.</span></span> <span data-ttu-id="23844-141">사용자가 ProductCategory 값을 선택 하면 값을 포함 하는 행만 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23844-141">When the user selects a ProductCategory value, only the rows that contain that value are displayed.</span></span>  
  
 <span data-ttu-id="23844-142">예제에는 다음이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-142">The example requires the following:</span></span>  
  
-   <span data-ttu-id="23844-143">Dynamic Data 웹 사이트 또는 Dynamic Data 웹 응용 프로그램을 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-143">A Dynamic Data Web site or a Dynamic Data Web application.</span></span> <span data-ttu-id="23844-144">만들 수 있습니다는 `AdventureWorksLTDataContext` 데이터 컨텍스트 데이터베이스와 테이블을 액세스에 대 한 클래스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23844-144">This enables you to create the `AdventureWorksLTDataContext` data context for the database and to create the classes for the tables to access.</span></span> <span data-ttu-id="23844-145">자세한 내용은 `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="23844-145">For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicFilter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.DynamicFilter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <related type="Article" href="http://msdn.microsoft.com/library/7c86f5d5-795c-4b28-8733-8ea9c0802d0f">
      <span data-ttu-id="23844-146">연습: 부모-자식 관계를 테이블의 행을 필터링</span>
      <span class="sxs-lookup">
        <span data-stu-id="23844-146">Walkthrough: Filtering Rows in Tables with a Parent-Child Relationship</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="23844-147">
            <see cref="T:System.Web.DynamicData.DynamicFilter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-147">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-148">호출 하지 않으면 일반적으로 <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> 직접 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="23844-148">Typically you do not call the <xref:System.Web.DynamicData.DynamicFilter.%23ctor%2A> constructor directly.</span></span> <span data-ttu-id="23844-149">사용 하는 대신는 <xref:System.Web.DynamicData.DynamicFilter> 페이지 태그에서 클래스 및 클래스는 페이지가 로드 될 때 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="23844-149">Instead, you use the <xref:System.Web.DynamicData.DynamicFilter> class in page markup and the class is initialized when the page is loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected internal System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.Column" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.DynamicFilter.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23844-150">필터링에 사용할 테이블 열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-150">Gets or sets the table column to use for filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="23844-151">필터링에 사용할 테이블 열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-151">The table column to use for filtering.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-152">이 속성은 내부 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="23844-152">This property is for internal use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicFilter.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23844-153">테이블 행 필터링에 사용할 열의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-153">Gets or sets the name of the column to use for table row filtering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="23844-154">테이블 행 필터링에 사용할 열의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-154">The name of the column used for table row filtering.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="23844-155">다음 예제에서는 태그에서 필터링 하는 테이블 행의 열을 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="23844-155">The following example shows how to specify the column for table row filtering in markup.</span></span>  
  
```  
<asp:DynamicFilter ID="CategoryFilter" runat="server"   
    DataField="ProductCategory" />  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FilterChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FilterChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.DynamicData.DynamicFilter.FilterChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event FilterChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FilterChanged;" />
      <MemberSignature Language="F#" Value="member this.FilterChanged : EventHandler " Usage="member this.FilterChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23844-156">사용자가 외래 키의 값을 선택할 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-156">Occurs when the user select a value for the foreign key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-157"><xref:System.Web.DynamicData.DynamicFilter.FilterChanged> 외래 키 값을 선택할 때 및 새 값을 렌더링 하기 전에 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-157">The <xref:System.Web.DynamicData.DynamicFilter.FilterChanged> event is raised when the user selects a foreign-key value and before the new value is rendered.</span></span> <span data-ttu-id="23844-158">이 옵션을 사용 하면 사용자 지정 페이징 등의 사용자 지정 작업을 수행할 수 있는 이벤트 처리 메서드를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23844-158">This enables you to provide an event-handling method that can perform custom operations, such as custom paging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23844-159">다음 예제에서는 필터 변경 이벤트를 처리 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="23844-159">The following example shows how to handle a filter-changed event.</span></span> <span data-ttu-id="23844-160">필터링된 된 행을 표시 하기 전에 처리기 페이지 인덱스를 다시 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-160">The handler resets the page index before the filtered rows are displayed.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/cs/dynamicfilter.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.DynamicFilter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicfilter/vb/dynamicfilter.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control FilterTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control FilterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.FilterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterTemplate As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ FilterTemplate { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterTemplate : System.Web.UI.Control" Usage="System.Web.DynamicData.DynamicFilter.FilterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23844-161">이 컨트롤의 현재 인스턴스와 연결된 필터 템플릿을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-161">Gets the filter template that is associated with the current instance of this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="23844-162">이 컨트롤의 현재 인스턴스와 연결된 필터 템플릿입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-162">The filter template that is associated with the current instance of this control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-163">동적 데이터는 지원 되는 열 형식에 대 한 테이블 행 필터링에 대 한 UI를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-163">Dynamic Data generates the UI for filtering table rows for supported column types.</span></span> <span data-ttu-id="23844-164">~\DynamicData\Filters 폴더에 있는 기본 필터 템플릿을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-164">It uses the default filter templates that are in the ~\DynamicData\Filters folder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilter.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterUIHint : string with get, set" Usage="System.Web.DynamicData.DynamicFilter.FilterUIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="23844-165">UI를 만드는 데 사용되는 필터 템플릿의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-165">Gets or sets the name of the filter template that is used to create the UI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="23844-166">필터 템플릿의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-166">The name of the filter template.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-167"><xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> 속성 테이블 행 필터링에 대 한 UI를 만드는 필터 템플릿을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23844-167">The <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property lets you specify the filter template to create the UI for table row filtering.</span></span> <span data-ttu-id="23844-168">다음과 같은 방법으로 사용할 필터 템플릿을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23844-168">You can specify the filter template to use in the following ways:</span></span>  
  
-   <span data-ttu-id="23844-169">사용 하 여는 <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> 페이지 태그에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="23844-169">By using the <xref:System.Web.DynamicData.DynamicFilter.FilterUIHint%2A> property in page markup.</span></span> <span data-ttu-id="23844-170">이 방법은 프레젠테이션 계층 사용자 지정 스키마 (데이터베이스)를 및 단일 페이지에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-170">This approach is a presentation-layer customization, which is independent of the schema (database) and which applies to a single page.</span></span>  
  
-   <span data-ttu-id="23844-171">사용 하 여는 <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> 모델의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="23844-171">By using the <xref:System.ComponentModel.DataAnnotations.FilterUIHintAttribute> attribute in the model.</span></span> <span data-ttu-id="23844-172">이 방법은 특정 스키마 (데이터베이스)에 종속 되 고 전체 응용 프로그램에 적용 되는 데이터 계층 사용자 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-172">This approach is a data-layer customization, which depends on the specific schema (database) and which applies to the entire application.</span></span>  
  
 <span data-ttu-id="23844-173">두 방법 모두를 사용 하는 경우 태그에서 지정 된 필터 템플릿을 데이터 모델에서 지정 된 템플릿을 보다 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-173">If you use both approaches, the filter template specified in the markup takes precedence over the template specified in the data model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23844-174">다음 예제에서는 필터 템플릿을 필터링에 사용할 태그를 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="23844-174">The following example shows how to specify the filter template in markup to use for filtering.</span></span>  
  
```  
<asp:DynamicFilter ID="CategoryFilter" runat="server"   
    FilterUIHint="ForeignKey" />  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dynamicFilter.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="23844-175">서버 컨트롤 콘텐츠를 받는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-175">The object that receives the server control content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23844-176">지정된 <see cref="T:System.Web.UI.HtmlTextWriter" /> 개체에 서버 컨트롤 콘텐츠를 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-176">Sends server control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-177">작성기에는 콘텐츠 페이지를 렌더링합니다.</span><span class="sxs-lookup"><span data-stu-id="23844-177">The writer renders the content to the page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.GetQueryable">
      <MemberSignature Language="C#" Value="System.Linq.IQueryable IFilterExpressionProvider.GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Linq.IQueryable System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Function GetQueryable (source As IQueryable) As IQueryable Implements IFilterExpressionProvider.GetQueryable" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Linq::IQueryable ^ System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System::Linq::IQueryable ^ source) = System::Web::DynamicData::IFilterExpressionProvider::GetQueryable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.GetQueryable(System.Linq.IQueryable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="23844-178">데이터 소스 쿼리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-178">The data source query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23844-179">현재 필터 값을 사용하여 수정된 쿼리를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-179">Gets the modified query using the current filter value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="23844-180">필터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-180">The filter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-181">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="23844-181">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="23844-182"><xref:System.Web.DynamicData.DynamicFilter> 인스턴스가 <xref:System.Web.DynamicData.IFilterExpressionProvider> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23844-182">It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFilterExpressionProvider.Initialize">
      <MemberSignature Language="C#" Value="void IFilterExpressionProvider.Initialize (System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.DynamicData.IFilterExpressionProvider.Initialize(class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilter.System#Web#DynamicData#IFilterExpressionProvider#Initialize(System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Sub Initialize (dataSource As IQueryableDataSource) Implements IFilterExpressionProvider.Initialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.DynamicData.IFilterExpressionProvider.Initialize(System::Web::UI::WebControls::IQueryableDataSource ^ dataSource) = System::Web::DynamicData::IFilterExpressionProvider::Initialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFilterExpressionProvider.Initialize(System.Web.UI.WebControls.IQueryableDataSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <span data-ttu-id="23844-183">데이터 원본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-183">The data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="23844-184">
            <see cref="T:System.Web.DynamicData.DynamicFilter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="23844-184">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicFilter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23844-185">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="23844-185">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="23844-186"><xref:System.Web.DynamicData.DynamicFilter> 인스턴스가 <xref:System.Web.DynamicData.IFilterExpressionProvider> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="23844-186">It can be used only when the <xref:System.Web.DynamicData.DynamicFilter> instance is cast to an <xref:System.Web.DynamicData.IFilterExpressionProvider> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>