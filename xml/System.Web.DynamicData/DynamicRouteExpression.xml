<Type Name="DynamicRouteExpression" FullName="System.Web.DynamicData.DynamicRouteExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f090017249e6d6e6320040d5243aa564d1dcc4ca" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36402156" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicRouteExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicRouteExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicRouteExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicRouteExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicRouteExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type DynamicRouteExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="685d5-101">데이터 필터링을 수행하기 위해 라우팅 정보에서 기본 키를 가져옵니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="685d5-101">Gets the primary key from the routing information in order to perform data filtering.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="685d5-102"><xref:System.Web.DynamicData.DynamicRouteExpression> 클래스와 함께 사용 되는 <xref:System.Web.UI.WebControls.QueryExtender> 페이지 태그에서 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-102">The <xref:System.Web.DynamicData.DynamicRouteExpression> class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control in page markup.</span></span> <span data-ttu-id="685d5-103"><xref:System.Web.DynamicData.DynamicRouteExpression> 클래스 웹 요청에 포함 된 라우팅 정보에서 기본 키를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-103">The <xref:System.Web.DynamicData.DynamicRouteExpression> class gets the primary key from the routing information that is contained in a Web request.</span></span> <span data-ttu-id="685d5-104"><xref:System.Web.UI.WebControls.QueryExtender> 컨트롤의 키에 다음 사용 하 여 한 `Where` 절.</span><span class="sxs-lookup"><span data-stu-id="685d5-104">The <xref:System.Web.UI.WebControls.QueryExtender> control then uses the key in a `Where` clause.</span></span> <span data-ttu-id="685d5-105">다음 키로 필터링 된 테이블 행을 반환 하는 데이터 소스에 대 한 쿼리를 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-105">This modifies the query for the data source, which then returns table rows filtered by the key.</span></span>  
  
 <span data-ttu-id="685d5-106">사용 하 여 지정 하는 외래 키를 사용 하 여 데이터를 필터링 할 수도 있습니다는 <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-106">You can also filter data by using a foreign key that you specify using the <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> property.</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="685d5-107">선언 구문</span><span class="sxs-lookup"><span data-stu-id="685d5-107">Declarative Syntax</span></span>  
  
```  
<asp:DynamicRouteExpression  
  ColumnName="Name of the foreign key column"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="685d5-108">소스 코드를 Visual Studio 프로젝트는이 항목에 수반: [동적 데이터 스 캐 폴딩](http://go.microsoft.com/fwlink/?LinkId=168914)합니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-108">A Visual Studio project with source code is available to accompany this topic: [Scaffolding Dynamic Data](http://go.microsoft.com/fwlink/?LinkId=168914).</span></span>  
  
 <span data-ttu-id="685d5-109">다음 예제는 Products 테이블에 대 한 사용자 지정 List.aspx 페이지 서식 파일을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-109">The following example shows a custom List.aspx page template for the Products table.</span></span> <span data-ttu-id="685d5-110">사용 하 여는 <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> 속성을 통해 제품 행을 필터링 하기 위한 ProductCategory 외래 키를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-110">It uses the <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> property to specify the ProductCategory foreign key for filtering the Products rows.</span></span>  
  
 <span data-ttu-id="685d5-111">사용자 지정 List.aspx 페이지 ProductCategory 외래 키 열에 포함 된 항목의 링크가 포함 되어 있는 열이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-111">The custom List.aspx page displays a column that contains links of the categories that are contained by the ProductCategory foreign-key column.</span></span> <span data-ttu-id="685d5-112">사용자가이 링크 중 하나를 클릭 하면 선택한 범주를 포함 하는 행만 List.aspx 페이지에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-112">When the user clicks one of these links, the List.aspx page displays only the rows that contain the selected category.</span></span>  
  
 <span data-ttu-id="685d5-113">이 예제에는 다음이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-113">The example requires the following:</span></span>  
  
-   <span data-ttu-id="685d5-114">Dynamic Data 웹 사이트입니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-114">A Dynamic Data Web site.</span></span> <span data-ttu-id="685d5-115">자세한 내용은 참조 [연습: 만들기는 새 동적 데이터 웹 사이트를 사용 하 여 스 캐 폴딩](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a)합니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-115">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](http://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
-   <span data-ttu-id="685d5-116">AdventureWorksLT 샘플 데이터베이스입니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-116">The AdventureWorksLT sample database.</span></span> <span data-ttu-id="685d5-117">자세한 내용은 참조 [하는 방법:를 사용 하 여 AdventureWorksLT 데이터베이스에 연결 된 합니다. MDF 파일](http://msdn.microsoft.com/library/d34ffbac-607d-40f1-b088-0a3304ea032b)합니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-117">For more information, see [How to: Connect to the AdventureWorksLT Database using an .MDF File](http://msdn.microsoft.com/library/d34ffbac-607d-40f1-b088-0a3304ea032b).</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicRouteExpression#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicrouteexpression/cs/list.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicRouteExpression#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicrouteexpression/vb/list.aspx#1)]  
  
 [!code-csharp[System.Web.DynamicData.DynamicRouteExpression#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.dynamicdata.dynamicrouteexpression/cs/list.aspx.cs#3)]
 [!code-vb[System.Web.DynamicData.DynamicRouteExpression#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.dynamicdata.dynamicrouteexpression/vb/list.aspx.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicRouteExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicRouteExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicRouteExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="685d5-118">
            <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-118">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="685d5-119">일반적으로 호출 하지 않으면는 <xref:System.Web.DynamicData.DynamicRouteExpression.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-119">You typically do not call the <xref:System.Web.DynamicData.DynamicRouteExpression.%23ctor%2A> constructor.</span></span> <span data-ttu-id="685d5-120">대신, 사용 하 여는 <xref:System.Web.DynamicData.DynamicRouteExpression> 페이지가 로드 될 때 페이지 태그에서 클래스와 클래스 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-120">Instead, you use the <xref:System.Web.DynamicData.DynamicRouteExpression> class in page markup and the class is initialized when the page is loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicRouteExpression.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Web.DynamicData.DynamicRouteExpression.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="685d5-121">데이터 소스를 쿼리하는 데 사용하는 외래 키를 포함하는 열의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-121">Gets or sets the name of a column that contains a foreign key that is used to query the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="685d5-122">외래 키 열의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-122">The name of the foreign-key column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="685d5-123"><xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> 속성 외래 키를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-123">The <xref:System.Web.DynamicData.DynamicRouteExpression.ColumnName%2A> property represents a foreign key.</span></span> <span data-ttu-id="685d5-124">이 키를 사용 하 여 데이터 원본에 대 한 쿼리를 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-124">This key is used to modify the query for the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="685d5-125">다음 예제에서는 표시 하는 제품을 필터링 하기 위한 ProductCategory 외래 키 열을 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-125">The following example shows how to specify the ProductCategory foreign-key column for filtering the products to display.</span></span> <span data-ttu-id="685d5-126">이 예제는 제공 된 큰 예제의 일부는 <xref:System.Web.DynamicData.DynamicRouteExpression> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-126">This example is part of the larger example that is provided for the <xref:System.Web.DynamicData.DynamicRouteExpression> class.</span></span>  
  
```  
<asp:QueryExtender TargetControlID="GridDataSource"   
    ID="GridQueryExtender" runat="server">  
  <asp:DynamicRouteExpression ColumnName="ProductCategory" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicRouteExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="dynamicRouteExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="685d5-127">수정할 쿼리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-127">The query to modify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="685d5-128">데이터 소스에서 쿼리를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-128">Gets the query from the data source..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="685d5-129">수정된 쿼리의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-129">An instance of the modified query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="685d5-130">가 나타내는 데이터 원본에서 쿼리는 `source` 매개 변수는 현재 경로 정보는 기본 또는 외래 키를 적용 하 여 수정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="685d5-130">The query from the data source, represented by the `source` parameter, is modified by applying the primary or foreign key that is the current route information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicRouteExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.SetContext : System.Web.UI.Control * System.Web.HttpContext * System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="dynamicRouteExpression.SetContext (owner, context, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="685d5-131">
            <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> 인스턴스를 포함하는 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-131">The control that contains the <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> instance.</span>
          </span>
          <span data-ttu-id="685d5-132">이것은 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-132">This is a <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="685d5-133">웹 요청 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-133">The Web request context.</span>
          </span>
        </param>
        <param name="dataSource">
          <span data-ttu-id="685d5-134">
            <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> 인스턴스의 대상 데이터 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-134">The target data source for the <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="685d5-135">
            <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> 개체의 HTTP 컨텍스트를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="685d5-135">Sets the HTTP context of the <see cref="T:System.Web.DynamicData.DynamicRouteExpression" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>