<Type Name="DynamicFilterExpression" FullName="System.Web.DynamicData.DynamicFilterExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d34bba93fbe9c56fdfcf340e3b139b23384d0dd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36402182" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicFilterExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicFilterExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicFilterExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type DynamicFilterExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>지정된 필터 컨트롤의 값을 사용하여 데이터베이스 쿼리를 수정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicFilterExpression> 클래스에 할당 된 값을 사용 하 여 데이터베이스 쿼리를 수정할 수 있습니다는 <xref:System.Web.DynamicData.DynamicFilter> 제어 합니다. 이 컨트롤의 작성 작업을 위임 하는 <xref:System.Linq.IQueryable> 특수 컨트롤에 같은 쿼리 <xref:System.Web.DynamicData.QueryableFilterRepeater> 컨트롤 또는 <xref:System.Web.DynamicData.DynamicFilter> 제어 합니다.  
  
 그러면 필터 컨트롤 필터 서식 파일을 참조 하는 쿼리 작성을 위임 합니다. 쿼리가 참조 하는 데이터 소스 컨트롤에서 다음 실행 되는 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다.  
  
 사용 하 여 <xref:System.Web.DynamicData.DynamicFilterExpression> 클래스 페이지에서 다음이 단계를 수행 합니다.  
  
-   추가 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤을 페이지입니다.  
  
-   설정의 `TargetControlID` 속성은 <xref:System.Web.UI.WebControls.QueryExtender> 컨트롤을 데이터 소스 제어를 참조 합니다.  
  
-   추가 <xref:System.Web.DynamicData.DynamicFilterExpression> 개체의 자식으로는 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다.  
  
-   설정의 `ControlID` 의 속성은 <xref:System.Web.DynamicData.DynamicFilterExpression> 필터 컨트롤을 참조 하는 개체입니다.  
  
 이전 단계에서 관련 된 필터 컨트롤, 데이터 바인딩 컨트롤 및 데이터 소스 컨트롤이 페이지에 정의 된 가정 합니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.DynamicData.DynamicFilterExpression> 컨트롤을 한 페이지의 필터 템플릿을 선택 합니다. 필터 템플릿이으로 선택 되어는 <xref:System.Web.DynamicData.DynamicFilter> 로 식별 되는 컨트롤 <xref:System.Web.DynamicData.DynamicFilterExpression> 제어를 통해 해당 `ControID` 속성입니다.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.QueryableFilterRepeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicFilterExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicFilterExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlID : string with get, set" Usage="System.Web.DynamicData.DynamicFilterExpression.ControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>필터 컨트롤 식별자를 가져오거나 설정합니다.</summary>
        <value>필터 컨트롤 식별자입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 컨트롤 식별자에서 사용 되는 <xref:System.Web.DynamicData.DynamicFilterExpression> 필터를 선택 하는 클래스를 위임 하는 작업에 데이터 소스 컨트롤에서 실행 되는 쿼리 작성을 제어 합니다.  
  
 필터 컨트롤의 빌드 작업을 쿼리의 필터 템플릿에 해당 참조에 위임 합니다. 쿼리가 참조 하는 데이터 소스 컨트롤에서 다음 실행 되는 <xref:System.Web.UI.WebControls.QueryExtender> 제어 합니다.  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.DynamicData.DynamicFilterExpression> 클래스 페이지에서 필터 컨트롤을 선택 합니다.  
  
```  
<asp:QueryExtender ID="QueryExtender1"   
    TargetControlID="GridDataSource" runat="server">  
    <asp:DynamicFilterExpression ControlID="CategoryFilterID" />  
</asp:QueryExtender>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.DynamicFilter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="dynamicFilterExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">수정할 데이터 소스 쿼리입니다.</param>
        <summary>현재 필터 값을 사용하여 수정된 쿼리를 가져옵니다.</summary>
        <returns>
          <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 인스턴스에 포함된 현재 값을 사용하여 수정된 데이터 소스 쿼리입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicFilterExpression.GetQueryable%2A> 필터 템플릿에 의해 지정 된 필터 컨트롤에서 참조 하는 쿼리 작성 작업을 위임 하는 메서드는 <xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetContext(class System.Web.UI.Control owner, class System.Web.HttpContext context, class System.Web.UI.WebControls.IQueryableDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetContext (owner As Control, context As HttpContext, dataSource As IQueryableDataSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetContext(System::Web::UI::Control ^ owner, System::Web::HttpContext ^ context, System::Web::UI::WebControls::IQueryableDataSource ^ dataSource);" />
      <MemberSignature Language="F#" Value="override this.SetContext : System.Web.UI.Control * System.Web.HttpContext * System.Web.UI.WebControls.IQueryableDataSource -&gt; unit" Usage="dynamicFilterExpression.SetContext (owner, context, dataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.IQueryableDataSource" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 컨트롤 같은 <see cref="T:System.Web.UI.WebControls.QueryExtender" /> 인스턴스를 포함하는 컨트롤입니다.</param>
        <param name="context">현재 <see cref="T:System.Web.HttpContext" /> 개체입니다.</param>
        <param name="dataSource">
          <see cref="T:System.Web.DynamicData.DynamicFilterExpression" /> 인스턴스의 대상 데이터 소스입니다.</param>
        <summary>데이터 소스 정보로 식을 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>