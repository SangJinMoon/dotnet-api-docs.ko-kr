<Type Name="DynamicField" FullName="System.Web.DynamicData.DynamicField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b433546711046d2a4c005074b0c935f4b5b491b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540267" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicField extends System.Web.UI.WebControls.DataControlField implements class System.Web.DynamicData.IFieldFormattingOptions, class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicField" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicField&#xA;Inherits DataControlField&#xA;Implements IAttributeAccessor, IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicField : System::Web::UI::WebControls::DataControlField, System::Web::DynamicData::IFieldFormattingOptions, System::Web::UI::IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0686d-101">ASP.NET Dynamic Data 기능을 사용하는 데이터 바인딩된 컨트롤에 표시되는 데이터 필드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0686d-101">Represents a data field that is displayed in a data-bound control that uses ASP.NET Dynamic Data features.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-102">항목 내용:</span><span class="sxs-lookup"><span data-stu-id="0686d-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="0686d-103">소개</span><span class="sxs-lookup"><span data-stu-id="0686d-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="0686d-104">선언 구문</span><span class="sxs-lookup"><span data-stu-id="0686d-104">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="0686d-105">소개</span><span class="sxs-lookup"><span data-stu-id="0686d-105">Introduction</span></span>  
 <span data-ttu-id="0686d-106"><xref:System.Web.DynamicData.DynamicField> 클래스와 같은 데이터 바인딩된 컨트롤에서 사용 되는 <xref:System.Web.UI.WebControls.GridView> 및 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤이 사용자 지정 페이지에서 ASP.NET Dynamic Data 기능을 사용 하는 필드 값을 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-106">The <xref:System.Web.DynamicData.DynamicField> class is used by data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls, to display a field value that uses ASP.NET Dynamic Data features in custom pages.</span></span>  
  
 <span data-ttu-id="0686d-107"><xref:System.Web.DynamicData.DynamicField> 의 유사한 기능을 제공 하는 클래스는 <xref:System.Web.UI.WebControls.BoundField> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-107">The <xref:System.Web.DynamicData.DynamicField> class provides functionality that resembles that of the <xref:System.Web.UI.WebControls.BoundField> class.</span></span> <span data-ttu-id="0686d-108">그러나 때문에 <xref:System.Web.DynamicData.DynamicField> 동적 데이터 응용 프로그램에서 개체를 사용 하는, 다음과 같은 동적 데이터 기능의 이용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-108">However, because a <xref:System.Web.DynamicData.DynamicField> object is used in Dynamic Data applications, you can take advantage of the following Dynamic Data features:</span></span>  
  
-   <span data-ttu-id="0686d-109">데이터 형식에 따라 필드에 대 한 적절 한 컨트롤 필드 템플릿을 사용 하 여 자동으로 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-109">Automatically rendering the proper control for a field by using field templates, based on the data type.</span></span> <span data-ttu-id="0686d-110">전체 응용 프로그램에 대 한 필드 서식 파일을 전역으로 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-110">The field templates can be globally modified for the entire application.</span></span>  
  
-   <span data-ttu-id="0686d-111">데이터베이스 스키마를 기반으로 하는 기본 제공 데이터 유효성 검사를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-111">Providing built-in data validation based on the database schema.</span></span> <span data-ttu-id="0686d-112">데이터 모델을 사용자 지정 하 여 유효성 검사 형식을 추가할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-112">You can also add validation types by customizing the data model.</span></span>  
  
-   <span data-ttu-id="0686d-113">데이터 모델의 특성을 사용 하거나 사용 하 여 개별 필드에 대 한 데이터 렌더링을 사용자 지정에서 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-113">Customizing data rendering for individual fields by using attributes in the data model or by using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property.</span></span>  
  
 <span data-ttu-id="0686d-114"><xref:System.Web.DynamicData.DynamicField> 개체를 사용 하 여 각 필드를 렌더링 한 `DynamicControl` 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-114">The <xref:System.Web.DynamicData.DynamicField> object renders each field by using a `DynamicControl` control.</span></span> <span data-ttu-id="0686d-115">에 표시할 데이터 필드를 지정 하는 <xref:System.Web.DynamicData.DynamicField> 개체, 설정는 <xref:System.Web.DynamicData.DynamicField.DataField%2A> 속성 필드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-115">To specify the data field to display in a <xref:System.Web.DynamicData.DynamicField> object, set the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property to the field name.</span></span> <span data-ttu-id="0686d-116">설정 하 여 필드 값에는 사용자 지정 서식 문자열을 적용할 수는 <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-116">You can apply a custom formatting string to the field value by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property.</span></span> <span data-ttu-id="0686d-117">기본적으로 데이터 바인딩된 컨트롤이 읽기 전용 모드에 있을 때만 서식 문자열이 필드 값에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-117">By default the formatting string is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="0686d-118">형식 문자열에 데이터 바인딩된 컨트롤이 편집 모드일 때 표시 되는 값을 적용 하려면 설정는 <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-118">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span> <span data-ttu-id="0686d-119">필드 값이 `null`를 설정 하 여 사용자 지정 캡션을 표시할 수 있습니다는 <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-119">If a field value is `null`, you can display a custom caption by setting the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.</span></span> <span data-ttu-id="0686d-120"><xref:System.Web.DynamicData.DynamicField> 개체에는 빈 문자열도 자동 변환할 수 있습니다 ("")을 설정 하 여 값을 null 값을 필드는 <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-120">The <xref:System.Web.DynamicData.DynamicField> object can also automatically convert empty string ("") field values to null values by setting the <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> property to `true`.</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="0686d-121">선언 구문</span><span class="sxs-lookup"><span data-stu-id="0686d-121">Declarative Syntax</span></span>  
  
```  
<asp:DynamicField   
    AccessibleHeaderText="string"       
    ApplyFormatInEditMode="true|false"    
    ControlStyle-BackColor="color name|#dddddd"   
    ControlStyle-BorderColor="color name|#dddddd"   
    ControlStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|  
       Ridge|Inset|Outset"    
    ControlStyle-BorderWidth="size"    
    ControlStyle-CssClass="string"   
    ControlStyle-Font-Bold="true|false"   
    ControlStyle-Font-Italic="true|false"   
    ControlStyle-Font-Names="string"   
    ControlStyle-Font-Overline="true|false"    
    ControlStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"   
    ControlStyle-Font-Strikeout="true|false"     
    ControlStyle-Font-Underline="true|false"     
    ControlStyle-ForeColor="color name|#dddddd"     
    ControlStyle-Height="size"   
    ControlStyle-Width="size"   
    ConvertEmptyStringToNull="true|false"    
    DataField="string"   
    DataFormatString="string"     
    FooterStyle-BackColor="color name|#dddddd"   
    FooterStyle-BorderColor="color name|#dddddd"   
    FooterStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|  
       Ridge|Inset|Outset"    
    FooterStyle-BorderWidth="size"    
    FooterStyle-CssClass="string"   
    FooterStyle-Font-Bold="true|false"   
    FooterStyle-Font-Italic="true|false"   
    FooterStyle-Font-Names="string"   
    FooterStyle-Font-Overline="true|false"    
    FooterStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"   
    FooterStyle-Font-Strikeout="true|false"     
    FooterStyle-Font-Underline="true|false"     
    FooterStyle-ForeColor="color name|#dddddd"     
    FooterStyle-Height="size"   
    FooterStyle-Width="size"   
    FooterStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"   
    FooterStyle-VerticalAlign="Bottom|Middle|NotSet|Top"   
    FooterStyle-Wrap="true|false"     
    HeaderImageUrl="uri"  
    HeaderStyle-BackColor="color name|#dddddd"   
    HeaderStyle-BorderColor="color name|#dddddd"   
    HeaderStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|  
       Ridge|Inset|Outset"    
    HeaderStyle-BorderWidth="size"    
    HeaderStyle-CssClass="string"   
    HeaderStyle-Font-Bold="true|false"   
    HeaderStyle-Font-Italic="true|false"   
    HeaderStyle-Font-Names="string"   
    HeaderStyle-Font-Overline="true|false"    
    HeaderStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"   
    HeaderStyle-Font-Strikeout="true|false"     
    HeaderStyle-Font-Underline="true|false"     
    HeaderStyle-ForeColor="color name|#dddddd"     
    HeaderStyle-Height="size"   
    HeaderStyle-Width="size"   
    HeaderStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"   
    HeaderStyle-VerticalAlign="Bottom|Middle|NotSet|Top"   
    HeaderStyle-Wrap="true|false"     
    HeaderText="string"  
    InsertVisible="true|false"      
    ItemStyle-BackColor="color name|#dddddd"   
    ItemStyle-BorderColor="color name|#dddddd"   
    ItemStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|  
       Ridge|Inset|Outset"    
    ItemStyle-BorderWidth="size"    
    ItemStyle-CssClass="string"   
    ItemStyle-Font-Bold="true|false"   
    ItemStyle-Font-Italic="true|false"   
    ItemStyle-Font-Names="string"   
    ItemStyle-Font-Overline="true|false"    
    ItemStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"   
    ItemStyle-Font-Strikeout="true|false"     
    ItemStyle-Font-Underline="true|false"     
    ItemStyle-ForeColor="color name|#dddddd"     
    ItemStyle-Height="size"   
    ItemStyle-Width="size"   
    ItemStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"   
    ItemStyle-VerticalAlign="Bottom|Middle|NotSet|Top"   
    ItemStyle-Wrap="true|false"     
    NullDisplayText="string"   
    ReadOnly="true|false"    
    ShowHeader="true|false"    
    SortExpression="string"   
    UIHint="string"   
    ValidationGroup="string"   
    Visible="true|false"   
    />  
<asp:DynamicField />  
```  
  
   
  
## Examples  
 <span data-ttu-id="0686d-122">이 기능은 코드 예제를 보려면: [실행](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField)합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-122">See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).</span></span>  
  
 <span data-ttu-id="0686d-123">다음 예제에서는 사용 하는 방법을 <xref:System.Web.DynamicData.DynamicField> 개체에 <xref:System.Web.UI.WebControls.GridView> 컨트롤 표시 하 고 데이터베이스 테이블에서 값을 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-123">The following example demonstrates how to use the <xref:System.Web.DynamicData.DynamicField> object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicField/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicField/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.DynamicData.DynamicControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0686d-124">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-124">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-125">새 인스턴스를 초기화 하려면이 생성자를 사용 하 여 <xref:System.Web.DynamicData.DynamicField> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-125">Use this constructor to initialize a new instance of the <xref:System.Web.DynamicData.DynamicField> class.</span></span> <span data-ttu-id="0686d-126">이 생성자는 동적으로 만든된 데이터 바인딩된 컨트롤에 필드를 추가 하는 경우 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-126">This constructor is commonly used when adding fields to a dynamically created data-bound control.</span></span>  
  
 <span data-ttu-id="0686d-127">동적으로 추가 하는 <xref:System.Web.DynamicData.DynamicField> 데이터 바인딩된 컨트롤에 개체를 새 <xref:System.Web.DynamicData.DynamicField> 개체 속성을 설정 하 고 데이터 바인딩된 컨트롤의 필드 컬렉션에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-127">To dynamically add a <xref:System.Web.DynamicData.DynamicField> object to a data-bound control, create a new <xref:System.Web.DynamicData.DynamicField> object, set its properties, and then add it to the data-bound control's field collection.</span></span> <span data-ttu-id="0686d-128">예를 들어, 사용 하는 경우는 <xref:System.Web.UI.WebControls.GridView> 컨트롤에 추가 합니다는 <xref:System.Web.DynamicData.DynamicField> 개체는 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-128">For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0686d-129">필드는 데이터 바인딩된 컨트롤에 동적으로 추가할 수 있지만 가장 좋습니다는 필드 정적으로 선언 하 고 다음 표시 하거나 숨길 수를 적절 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-129">Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate.</span></span> <span data-ttu-id="0686d-130">부모 데이터 바인딩된 컨트롤에 대 한 뷰 상태의 크기를 줄이는 모든 필드를 정적으로 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-130">Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-131">데이터 필드가 편집 모드에 있을 때 <see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" /> 속성에서 지정하는 서식 문자열이 필드 값에 적용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-131">Gets or sets a value that indicates whether the formatted string that is specified by the <see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" /> property is applied to field value when the data field is in edit mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-132">
            <see cref="T:System.Web.DynamicData.DynamicField" />가 편집 모드에서 서식을 적용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-132">
              <see langword="true" /> if the <see cref="T:System.Web.DynamicData.DynamicField" /> applies formatting in edit mode; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0686d-133">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-133">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-134">데이터 바인딩된 컨트롤 (같은 <xref:System.Web.UI.WebControls.DetailsView>, 및 <xref:System.Web.UI.WebControls.GridView>) 한 읽기, 편집 또는 레코드를 삽입 하는 데 사용할 수 있는 다른 디스플레이 모드입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-134">Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records.</span></span> <span data-ttu-id="0686d-135">지정한 서식 문자열이 기본적으로는 <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 데이터 바인딩된 컨트롤이 읽기 전용 모드에 있을 때만 속성 필드 값에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-135">By default, the formatting string specified by the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="0686d-136">형식 문자열에 데이터 바인딩된 컨트롤이 편집 모드일 때 표시 되는 값을 적용 하려면 설정는 <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-136">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0686d-137">A <xref:System.Web.DynamicData.DynamicField> 개체 서식 지정 필드는 데이터 원본에서 업데이트 될 때 자동으로 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-137">A <xref:System.Web.DynamicData.DynamicField> object does not automatically remove the formatting when the field is updated in the data source.</span></span> <span data-ttu-id="0686d-138">저장 된 값의 일부분으로 서식 지정 하지 않도록를 프로그래밍 방식으로 서식을 제거 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-138">If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.Column" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-139">이 <see cref="T:System.Web.DynamicData.MetaColumn" /> 개체가 연결된 <see cref="T:System.Web.DynamicData.DynamicField" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-139">Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> object that this <see cref="T:System.Web.DynamicData.DynamicField" /> object is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-140">메타 열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-140">The meta column.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureDynamicControl">
      <MemberSignature Language="C#" Value="protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConfigureDynamicControl(class System.Web.DynamicData.DynamicControl control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ConfigureDynamicControl (control As DynamicControl)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ConfigureDynamicControl(System::Web::DynamicData::DynamicControl ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.DynamicData.DynamicControl" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="0686d-141">수정할 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-141">The control to modify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0686d-142">
            <see cref="T:System.Web.DynamicData.DynamicControl" /> 메서드에 의해 만들어진 <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" /> 개체를 수정하는 메커니즘을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-142">Provides a mechanism to modify a <see cref="T:System.Web.DynamicData.DynamicControl" /> object that was created by the <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-143">데이터 소스에서 데이터 필드가 업데이트되는 경우 빈 문자열 값("")이 자동으로 null 값으로 변환되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-143">Gets or sets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-144">빈 문자열 값이 자동으로 null 값으로 변환되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-144">
              <see langword="true" /> to automatically convert empty string values to null values; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0686d-145">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-145">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-146">경우에 따라는 사용자를 업데이트 하거나 레코드를 삽입할 때 필드 값에 대 한 빈 문자열을 입력할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-146">Sometimes the user might enter an empty string for a field value when updating or inserting records.</span></span> <span data-ttu-id="0686d-147">사용 하 여는 <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> 속성을 통해 데이터 원본에서 데이터 필드가 업데이트 되는 경우 빈 문자열 값을 null로 변환 자동으로 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-147">Use the <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.</span></span>  
  
 <span data-ttu-id="0686d-148">기본적으로는 <xref:System.Web.DynamicData.DynamicField> 개체는 null 값을 빈 문자열로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-148">By default, a <xref:System.Web.DynamicData.DynamicField> object displays null values as empty strings.</span></span> <span data-ttu-id="0686d-149">표시 하려면 다른 값으로 설정 된 <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-149">To display a different value, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0686d-150"><xref:System.Web.UI.WebControls.Parameter> 데이터 소스의 개체를 사용 하는 제어의 부모 컨트롤 <xref:System.Web.DynamicData.DynamicField> 개체가 라는 속성이 바인딩된 <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-150">The <xref:System.Web.UI.WebControls.Parameter> object of the data source control that the parent control of <xref:System.Web.DynamicData.DynamicField> object is bound to also has a property named <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0686d-151">이 속성에 동일한 기능을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-151">This property performs the same function.</span></span> <span data-ttu-id="0686d-152">두 속성 모두 적절 하 게 설정 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-152">Make sure that both properties are set appropriately.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">
          <span data-ttu-id="0686d-153">현재 <see cref="T:System.Web.UI.WebControls.DataControlField" />의 속성을 복사할 대상 <see cref="T:System.Web.DynamicData.DynamicField" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-153">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to copy the properties of the current <see cref="T:System.Web.DynamicData.DynamicField" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0686d-154">현재 <see cref="T:System.Web.DynamicData.DynamicField" /> 개체의 속성을 지정된 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 개체로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-154">Copies the properties of the current <see cref="T:System.Web.DynamicData.DynamicField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-155"><xref:System.Web.DynamicData.DynamicField.CopyProperties%2A> 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-155">The <xref:System.Web.DynamicData.DynamicField.CopyProperties%2A> method is a helper method.</span></span> <span data-ttu-id="0686d-156">사용 되는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> 현재 속성 복사 하려면 <xref:System.Web.DynamicData.DynamicField> 개체는 <xref:System.Web.DynamicData.DynamicField> 에 전달 되는 개체는 `newField` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-156">It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to copy the properties of the current <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.DynamicData.DynamicField> object that is passed in the `newField` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0686d-157">재정의 <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> 메서드를 파생된 클래스에서 생성 된 새 속성을 복사 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0686d-157">Override the <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> method to copy the new properties that were created in the derived class.</span>
            </span>
            <span data-ttu-id="0686d-158">기본 클래스를 호출 <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> 메서드 있도록의 속성은 <see cref="T:System.Web.DynamicData.DynamicField" /> 클래스도 복사 됩니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0686d-158">Call the base class's <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> method so that the properties of the <see cref="T:System.Web.DynamicData.DynamicField" /> class are also copied.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Web.DynamicData.DynamicField.CreateField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.DynamicControl CreateDynamicControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CreateDynamicControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicControl () As DynamicControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::DynamicControl ^ CreateDynamicControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0686d-159">
            <see cref="T:System.Web.DynamicData.DynamicField" />에서 파생되는 클래스에 대한 메커니즘을 제공하여 <see cref="T:System.Web.DynamicData.DynamicControl" /> 개체가 만들어지는 방법을 재정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-159">Provides a mechanism for classes that derive from <see cref="T:System.Web.DynamicData.DynamicField" /> to override how a <see cref="T:System.Web.DynamicData.DynamicControl" /> object is created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0686d-160">새 동적 컨트롤입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-160">A new dynamic control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0686d-161">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 클래스의 새 인스턴스를 만들어 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-161">Creates and returns a new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0686d-162">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 클래스의 새 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-162">A new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-163"><xref:System.Web.DynamicData.DynamicField.CreateField%2A> 도우미 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-163">The <xref:System.Web.DynamicData.DynamicField.CreateField%2A> method is a helper method.</span></span> <span data-ttu-id="0686d-164">사용 되는 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> 빈 만드는 메서드를 <xref:System.Web.DynamicData.DynamicField> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-164">It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create an empty <xref:System.Web.DynamicData.DynamicField> object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0686d-165">재정의 <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> 메서드는 파생된 클래스의 새 인스턴스를 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0686d-165">Override the <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> method to return a new instance of the derived class.</span>
            </span>
            <span data-ttu-id="0686d-166">호출 하지 마십시오는 <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> 기본 클래스의 메서드.</span>
            <span class="sxs-lookup">
              <span data-stu-id="0686d-166">Do not call the <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> method of the base class.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-167">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체를 바인딩할 데이터 필드의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-167">Gets or sets the name of the data field to bind the <see cref="T:System.Web.DynamicData.DynamicField" /> object to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-168">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체가 바인딩되는 데이터 필드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-168">The name of the data field that the <see cref="T:System.Web.DynamicData.DynamicField" /> object is bound to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-169">사용 하 여는 <xref:System.Web.DynamicData.DynamicField.DataField%2A> 속성에 바인딩할 데이터 필드를 지정 하는 <xref:System.Web.DynamicData.DynamicField> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-169">Use the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property to specify the data field to bind to the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="0686d-170">데이터 필드 이름 또는 외래 키 열, 관계 이름에 대 한 열 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-170">The data field can be the column name or, for foreign key columns, the relationship name.</span></span>  
  
 <span data-ttu-id="0686d-171">기본적으로 지정된 된 데이터 필드에서 표시 된 <xref:System.Web.DynamicData.DynamicField> 개체 필드 데이터 형식과 연결 되는 필드 템플릿을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-171">By default, the specified data field is displayed by the <xref:System.Web.DynamicData.DynamicField> object using the field template that is associated with the field data type.</span></span> <span data-ttu-id="0686d-172">데이터 필드에 설정 하 여 렌더링 되는 필드 템플릿을 변경할 수 있습니다는 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-172">You can change the field template that is rendered for the data field by setting the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property.</span></span> <span data-ttu-id="0686d-173">설정 하 여 표시 된 텍스트를 형식을 지정할 수도 있습니다는 <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-173">You can also format the displayed text by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property.</span></span> <span data-ttu-id="0686d-174">필드 값이 `null`, 빈 문자열 ("") 값에 대해 기본적으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-174">If a field value is `null`, an empty string ("") is displayed for the value by default.</span></span> <span data-ttu-id="0686d-175">대체 캡션을 지정 하려면는 <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-175">To specify an alternate caption, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.</span></span>  
  
 <span data-ttu-id="0686d-176">**참고** 데이터 모델의 특정 인스턴스에서이 설정 하는 대신에 특성을 적용 해야 표시 및 데이터 필드의 동작을 전체적으로 변경 하려는 경우는 <xref:System.Web.DynamicData.DynamicField> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-176">**Note** If you want to change the display and behavior of a data field globally, you must apply attributes to your data model instead of setting this in a particular instance of the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="0686d-177">자세한 내용은 참조 [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-177">For more information, see [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>  
  
 <span data-ttu-id="0686d-178"><xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> 메서드는 상태 변경 이벤트를 발생 시키는 경우는 <xref:System.Web.DynamicData.DynamicField.DataField%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-178">The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property is set.</span></span>  
  
 <span data-ttu-id="0686d-179">값은 <xref:System.Web.DynamicData.DynamicField.DataField%2A> 속성은 뷰 상태에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-179">The value of the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.UIHint" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-180">데이터 필드 값의 표시 형식을 지정하는 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-180">Gets or sets the string that specifies the display format for the value of the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-181">데이터 필드 값의 표시 형식을 지정하는 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-181">A formatting string that specifies the display format for the value of the data field.</span>
          </span>
          <span data-ttu-id="0686d-182">기본값은 빈 문자열("")로, 특수 형식이 값에 적용되지 않음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-182">The default is an empty string (""), which indicates that no special formatting is applied to the value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-183">사용 하 여는 <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 속성에 표시 된 값에 대 한 사용자 지정 표시 형식을 지정 하는 <xref:System.Web.DynamicData.DynamicField> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-183">Use the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property to specify a custom display format for the values displayed in the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="0686d-184">경우는 <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 속성이 설정 되지 않은, 필드 값이 특정 형식 없이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-184">If the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is not set, the field value is displayed without any special formatting.</span></span>  
  
 <span data-ttu-id="0686d-185">기본적으로 형식 문자열은 필드 값에 경우에 적용 포함 하는 데이터 바인딩된 컨트롤에서 <xref:System.Web.DynamicData.DynamicField> 개체가 읽기 전용 모드 인지 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-185">By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode.</span></span> <span data-ttu-id="0686d-186">편집 모드에서 필드 값에 형식 문자열을 적용 하려면 설정는 <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-186">To apply the formatting string to the field value while in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="0686d-187">표시 형식을 사용 하 여 지정한는 <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> 속성은 특정의이 인스턴스에 <xref:System.Web.DynamicData.DynamicField> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-187">The display format that you specify using the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class.</span></span> <span data-ttu-id="0686d-188">적용 하 여 전체 응용 프로그램에서 데이터 필드에 대 한 표시 형식을 변경할 수도 있습니다는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> 데이터 모델 및 설정에는 <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> 명명 된 생성자의 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-188">You can also change the display format for a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to your data model and setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> named parameter in the constructor.</span></span> <span data-ttu-id="0686d-189">자세한 내용은 참조 [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-189">For more information, see [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="0686d-190">셀 값을 보유할 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-190">The dictionary that will hold the cell values.</span>
          </span>
        </param>
        <param name="cell">
          <span data-ttu-id="0686d-191">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체의 텍스트 또는 컨트롤을 포함하는 셀입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-191">The cell that contains the text or controls of the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span>
          </span>
        </param>
        <param name="rowState">
          <span data-ttu-id="0686d-192">행 상태를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-192">One of the enumeration values that specifies the row state.</span>
          </span>
        </param>
        <param name="includeReadOnly">
          <span data-ttu-id="0686d-193">
            <c>dictionary</c>에 읽기 전용 필드의 값을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-193">
              <see langword="true" /> to include the values of read-only fields in <c>dictionary</c>; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0686d-194">표 셀에서 데이터 필드의 값을 추출하여 지정된 사전에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-194">Extracts the value of the data field from the current table cell and adds the value to the specified dictionary.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0686d-195">가져올 특성의 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-195">The key of the attribute to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0686d-196">지정된 특성 값을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-196">Retrieves the specified attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0686d-197">특성 값</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-197">The value of the attribute.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-198">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체를 포함하는 데이터 바인딩된 컨트롤의 머리글에 표시되는 텍스트를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-198">Gets or sets the text that is displayed in the header of the data-bound control that contains the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-199">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체를 포함하는 데이터 바인딩된 컨트롤의 머리글에 표시되는 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-199">The text that is displayed in the header of the data-bound control that contains the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-200">사용 된 <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> 데이터 바인딩된 컨트롤의에서 필드 이름으로 식별 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-200">Use the <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> property to identify a field in a data-bound control with a friendly name.</span></span> <span data-ttu-id="0686d-201">가장 일반적인 응용 프로그램은 <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> 속성은 데이터 필드에 의미 있는 열 이름을 지정 하는 <xref:System.Web.UI.WebControls.GridView> 또는 <xref:System.Web.UI.WebControls.DetailsView> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-201">The most common application of the <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> property is to provide meaningful column names to data fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="0686d-202">기본적으로는 <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> 속성이 사용 하 여 데이터 필드에 설정 된 표시 이름을 사용 하는 <xref:System.ComponentModel.DisplayNameAttribute> 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-202">By default, the <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> property uses the display name set for the data field by using the <xref:System.ComponentModel.DisplayNameAttribute> attribute.</span></span> <span data-ttu-id="0686d-203">표시 이름을 설정 하지 않으면는 <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> 속성 값을 사용 하는 <xref:System.Web.DynamicData.DynamicField.DataField%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-203">If the display name is not set, the <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> property uses the value of the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0686d-204">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체가 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 인터페이스를 구현하는 데이터 소스 컨트롤에 바인딩되지 않은 데이터 바인딩된 컨트롤 내에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-204">The <see cref="T:System.Web.DynamicData.DynamicField" /> object is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DisplayName" />
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-205">데이터 필드 값이 <see cref="T:System.Web.DynamicData.DynamicField" /> 개체에 표시되기 전에 HTML로 인코딩되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-205">Gets or sets a value that indicates whether data field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-206">필드 값이 표시되기 전에 HTML로 인코딩되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-206">
              <see langword="true" /> if field values are HTML-encoded before they are displayed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0686d-207">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-207">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-208">사용 하 여는 <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A> 속성을 통해 필드 값 표시 되기 전에 HTML 인코딩을 해당 문자열 표현 되는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-208">Use the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A> property to specify whether field values are HTML-encoded to their respective string representations before they are displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0686d-209">HTML 인코딩 필드 값을 표시 되지 않도록 사이트 간 스크립팅 공격과 악성 콘텐츠를 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-209">HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed.</span></span> <span data-ttu-id="0686d-210">가능한 경우 항상이 속성을 사용 하도록 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-210">This property should be enabled whenever possible.</span></span> <span data-ttu-id="0686d-211">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="0686d-211">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">
          <span data-ttu-id="0686d-212">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체의 텍스트 또는 컨트롤을 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-212">The object that contains the text or controls of the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span>
          </span>
        </param>
        <param name="cellType">
          <span data-ttu-id="0686d-213">
            <c>cell</c> 개체의 기능을 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-213">One of the enumeration values that specifies the function of the <c>cell</c> object.</span>
          </span>
        </param>
        <param name="rowState">
          <span data-ttu-id="0686d-214">행 상태를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-214">One of the enumeration values that specifies the row state.</span>
          </span>
        </param>
        <param name="rowIndex">
          <span data-ttu-id="0686d-215">
            <c>cell</c> 개체가 포함된 행의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-215">The index of the row that the <c>cell</c> object is contained in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0686d-216">지정된 셀에 텍스트 또는 컨트롤을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-216">Adds text or controls to the specified cell.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-217">필드 값이 <see langword="null" />인 경우 데이터 필드에 대해 표시되는 캡션을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-217">Gets or sets the caption that is displayed for a data field when the field value is <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-218">필드 값이 <see langword="null" />인 경우 데이터 필드에 대해 표시되는 캡션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-218">The caption that is displayed for a data field when the field value is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0686d-219">기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-219">The default is an empty string (""), which indicates that this property is not set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-220">경우에 따라 데이터 원본의 필드 값을 null로 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-220">Sometimes a field value is stored as null in the data source.</span></span> <span data-ttu-id="0686d-221">사용자 지정을 설정 하 여 null 값이 포함 된 데이터 필드에 대해 표시할 캡션을 지정할 수는 <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-221">You can specify a custom caption to display for data fields that have a null value by setting the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.</span></span> <span data-ttu-id="0686d-222">Null 필드 값에 빈 문자열로 표시 되는이 속성을 설정 하지 않으면 ("").</span><span class="sxs-lookup"><span data-stu-id="0686d-222">If this property is not set, null field values are displayed as empty strings ("").</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-223">동적 필드의 읽기 전용 상태를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-223">Gets the read-only state of the dynamic field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-224">동적 필드의 읽기 전용 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-224">The read-only state of the dynamic field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-225">경우는 <xref:System.Web.DynamicData.DynamicField.ReadOnly%2A> 속성은 `true`, <xref:System.Web.DynamicData.DynamicField> 컨트롤이 읽기 전용 서식 파일을 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-225">If the <xref:System.Web.DynamicData.DynamicField.ReadOnly%2A> property is `true`, the <xref:System.Web.DynamicData.DynamicField> control loads a read-only template.</span></span> <span data-ttu-id="0686d-226">이 속성 뷰 상태를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-226">This property requires that view state be enabled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0686d-227">설정할 특성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-227">The name of the attribute to be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0686d-228">특성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-228">The attribute value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0686d-229">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체에 연결된 특성을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-229">Sets an attribute that is associated with the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)" />
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public override string SortExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SortExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-230">데이터 필드를 사용하여 데이터 소스를 정렬할 때 사용되는 정렬 식을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-230">Gets or sets the sort expression that is used when the data field is used to sort the data source by.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-231">데이터 필드를 사용하여 데이터 소스를 정렬할 때 사용되는 정렬 식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-231">The sort expression that is used when the data field is used to sort the data source by.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-232"><xref:System.Web.DynamicData.DynamicField.SortExpression%2A> 속성의 값을 사용 하려고는 <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=nameWithType> 연관 된 열 개체의 속성은 <xref:System.Web.DynamicData.DynamicField> 설정 하 여 개체는 <xref:System.Web.DynamicData.DynamicField.DataField%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-232">The <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> property tries to use the value of the <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=nameWithType> property of the column object that is associated with the <xref:System.Web.DynamicData.DynamicField> object by setting the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.</span></span>  
  
 <span data-ttu-id="0686d-233"><xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> 메서드는 상태 변경 이벤트를 발생 시키는 경우는 <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-233">The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> property is set.</span></span>  
  
 <span data-ttu-id="0686d-234">값은 <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> 속성은 뷰 상태에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-234">The value of the <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0686d-235">
            <see cref="T:System.Web.DynamicData.DynamicField" /> 개체가 <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> 인터페이스를 구현하는 데이터 소스 컨트롤에 바인딩되지 않은 데이터 바인딩된 컨트롤 내에 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-235">The <see cref="T:System.Web.DynamicData.DynamicField" /> object is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-236">데이터 필드를 표시하기 위해 사용할 필드 템플릿을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-236">Gets or sets the field template to use for displaying the data field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-237">데이터 필드를 표시하기 위해 사용할 필드 템플릿의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-237">The name of the field template to use for displaying the data field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0686d-238">사용 하 여는 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 속성을 데이터 필드에 대 한 UI를 표시 하는 데 필드 템플릿을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-238">Use the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property to specify the field template to use to display the UI for a data field.</span></span> <span data-ttu-id="0686d-239">기본적으로 서식 파일 필드는 사용자 정의 컨트롤 및 이름 및 삽입 작업 편집 작업에 사용 되는 필드 템플릿을 식별 하기 위한 접미사를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-239">Field templates by default are user controls and their names contain a suffix to identify field templates that are used for edit operations and insert operations.</span></span> <span data-ttu-id="0686d-240">접미사는 각각 편집 (_e) 및 삽입 (_i),입니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-240">The suffixes are _edit and _insert, respectively.</span></span> <span data-ttu-id="0686d-241">값을 설정 하면는 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 속성 접미사 없이 이름을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-241">When you set a value to the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property, you set the name without the suffixes.</span></span> <span data-ttu-id="0686d-242">Dynamic Data 데이터 필드의 현재 모드를 식별 하 고 올바른 필드 템플릿을 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-242">Dynamic Data will identify the current mode of the data field and will render the correct field template.</span></span>  
  
 <span data-ttu-id="0686d-243">경우는 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 속성이 설정 되지 않은, 기본적으로 동적 데이터 필드 형식에 따라 필드 템플릿을 렌더링 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-243">If the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property is not set, Dynamic Data by default will render the field template based on the field type.</span></span> <span data-ttu-id="0686d-244">자세한 내용은 참조 [ASP.NET 동적 데이터 스 캐 폴딩](http://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12)합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-244">For more information, see [ASP.NET Dynamic Data Scaffolding](http://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).</span></span>  
  
 <span data-ttu-id="0686d-245">사용 하 여 지정 하는 필드 템플릿을 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 속성은 특정의이 인스턴스에 <xref:System.Web.DynamicData.DynamicField> 클래스.</span><span class="sxs-lookup"><span data-stu-id="0686d-245">The field template that you specify using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class.</span></span> <span data-ttu-id="0686d-246">사용 되는 데이터 필드 전체 응용 프로그램이 적용 하 여 필드 템플릿을 변경할 수도 있습니다는 <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> 데이터 모델에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-246">You can also change the field template used by a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> to your data model.</span></span> <span data-ttu-id="0686d-247">설정의 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 데이터 모델에 적용 되는 메타 데이터 속성을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-247">Setting the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property overrides the metadata applied to the data model.</span></span> <span data-ttu-id="0686d-248">메타 데이터 특성에 대 한 자세한 내용은 참조 [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-248">For more information about metadata attributes, see [ASP.NET Dynamic Data](http://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>  
  
 <span data-ttu-id="0686d-249"><xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> 메서드는 상태 변경 이벤트를 발생 시키는 경우는 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-249">The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property is set.</span></span>  
  
 <span data-ttu-id="0686d-250">값은 <xref:System.Web.DynamicData.DynamicField.UIHint%2A> 속성은 뷰 상태에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0686d-250">The value of the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-251">컨트롤이 클라이언트 입력의 유효성을 검사하는지 여부를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-251">Gets or sets a value that specifies whether the control validates client input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-252">컨트롤이 클라이언트 입력의 유효성을 검사하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-252">
              <see langword="true" /> if the control validates client input; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0686d-253">이 <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" /> 개체가 연결된 <see cref="T:System.Web.DynamicData.DynamicField" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-253">Gets the <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" /> object that this <see cref="T:System.Web.DynamicData.DynamicField" /> object is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0686d-254">이 유효성 검사 컨트롤이 속하는 유효성 검사 그룹의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-254">The name of the validation group to which this validation control belongs.</span>
          </span>
          <span data-ttu-id="0686d-255">기본값은 빈 문자열("")로, 이 속성이 설정되어 있지 않음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0686d-255">The default is an empty string (""), which indicates that this property is not set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>