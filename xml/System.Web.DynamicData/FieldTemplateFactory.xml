<Type Name="FieldTemplateFactory" FullName="System.Web.DynamicData.FieldTemplateFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9042e6359f9d03efa465b5823eb00c08e60f0d88" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46650513" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FieldTemplateFactory extends System.Object implements class System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.FieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FieldTemplateFactory&#xA;Implements IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FieldTemplateFactory : System::Web::DynamicData::IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type FieldTemplateFactory = class&#xA;    interface IFieldTemplateFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldTemplateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="44daf-101">필드 템플릿을 만듭니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44daf-101">Creates a field template.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44daf-102">기본적으로이 클래스는 다음과 같이 구현 됩니다. 합니다 <xref:System.Web.DynamicData.IFieldTemplateFactory> 인터페이스를 사용 하 여는 <xref:System.Web.UI.UserControl> 필드 템플릿을 만드는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-102">By default, this class implements the <xref:System.Web.DynamicData.IFieldTemplateFactory> interface, and uses the <xref:System.Web.UI.UserControl> class to create field templates.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.FieldTemplateUserControl" />
    <related type="Article" href="http://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12">
      <span data-ttu-id="44daf-103">ASP.NET 동적 데이터 스 캐 폴딩</span>
      <span class="sxs-lookup">
        <span data-stu-id="44daf-103">ASP.NET Dynamic Data Scaffolding</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldTemplateFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FieldTemplateFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44daf-104">
            <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 클래스의 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-104">Initializes an instance of the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildVirtualPath(string templateName, class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildVirtualPath (templateName As String, column As MetaColumn, mode As DataBoundControlMode) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ BuildVirtualPath(System::String ^ templateName, System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member BuildVirtualPath : string * System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; string&#xA;override this.BuildVirtualPath : string * System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; string" Usage="fieldTemplateFactory.BuildVirtualPath (templateName, column, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="templateName">
          <span data-ttu-id="44daf-105">사용할 템플릿의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-105">The name of the template to use.</span>
          </span>
        </param>
        <param name="column">
          <span data-ttu-id="44daf-106">필드 템플릿이 적용되는 데이터 열을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-106">Specifies the data column which the field template applies to.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="44daf-107">필드 템플릿의 표시 모드를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-107">Specifies the display mode of the field template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44daf-108">필드 템플릿 이름과 모드를 기반으로 필드 템플릿에 대한 가상 경로를 구성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-108">Builds the virtual path to a field template based on the field template name and the mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44daf-109">필드 템플릿의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-109">The virtual path to the field template.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44daf-110">기본적으로이 메서드는 템플릿 이름을 사용 하 여, 추가 모드를 다음.ascx 확장을 추가 하 여 필드 템플릿의 가상 경로 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-110">By default, this method builds the virtual path to a field template by using the template name, appending the mode and then adding a .ascx extension.</span></span> <span data-ttu-id="44daf-111">예를 들어 경우 `templateName` MyFieldTemplate 됩니다 및 `mode` 는 편집, 가상 경로 템플릿 폴더 가상 경로로 지정 된 폴더에서 MyFieldTemplate_Edit.ascx 됩니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-111">For example, if `templateName` is MyFieldTemplate and `mode` is Edit, then the virtual path will be MyFieldTemplate_Edit.ascx, in the folder specified by the Template folder virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44daf-112">
            <paramref name="templateName" />가 null인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-112">
              <paramref name="templateName" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate&#xA;override this.CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="fieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="44daf-113">필드 템플릿이 적용되는 데이터 열을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-113">Specifies the data column which the field template applies to.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="44daf-114">필드 템플릿의 표시 모드를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-114">Specifies the display mode of the field template.</span>
          </span>
        </param>
        <param name="uiHint">
          <span data-ttu-id="44daf-115">사용할 필드 템플릿을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-115">Specifies the field template to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44daf-116">
            <see cref="T:System.Web.DynamicData.MetaColumn" /> 클래스, <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> 클래스 및 <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> 속성을 사용하여 필드 템플릿의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-116">Creates an instance of a field template using the <see cref="T:System.Web.DynamicData.MetaColumn" /> class, the <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> class and <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44daf-117">
            <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> 클래스가 구현하는 인터페이스의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-117">An instance of the interface that the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class implements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldTemplateVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFieldTemplateVirtualPath(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldTemplateVirtualPath (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFieldTemplateVirtualPath(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldTemplateVirtualPath : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string&#xA;override this.GetFieldTemplateVirtualPath : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string" Usage="fieldTemplateFactory.GetFieldTemplateVirtualPath (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="44daf-118">필드 템플릿이 적용되는 데이터 열을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-118">Specifies the data column which the field template applies to.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="44daf-119">필드 템플릿의 디스플레이 모드(읽기 전용, 편집 또는 삽입)를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-119">Specifies the display mode of the field template-Read Only, Edit, or Insert.</span>
          </span>
        </param>
        <param name="uiHint">
          <span data-ttu-id="44daf-120">사용할 필드 템플릿을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-120">Specifies the field template to use.</span>
          </span>
          <span data-ttu-id="44daf-121">이 매개 변수는 필드 템플릿 조회에 영향을 줍니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-121">This parameter affects the field template look up.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44daf-122">필드 템플릿의 가상 경로를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-122">Determines the virtual path of a field template.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44daf-123">필드 템플릿의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-123">The virtual path of the field template.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44daf-124">동적 데이터 필드 템플릿 DynamicData/FieldTemplates 만들어집니다/수 있지만 폴더에 대 한 필드 템플릿을 새 폴더를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-124">Dynamic Data field templates are created in the DynamicData/FieldTemplates/ folder but you can create a new folder for your field templates.</span></span> <span data-ttu-id="44daf-125">이 메서드는 지정된 된 매개 변수를 사용 하 여 필드 템플릿이 들어 있는 폴더에 대 한 가상 경로 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-125">This method determines the virtual path for the folder that contains the field template using the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit&#xA;override this.Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="fieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model">
          <span data-ttu-id="44daf-126">
            <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />에 연결할 데이터 모델을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-126">Specifies the data model to associate with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44daf-127">
            <see cref="T:System.Web.DynamicData.MetaModel" />을 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />와 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-127">Associates a <see cref="T:System.Web.DynamicData.MetaModel" /> with a <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44daf-128">
            <see cref="T:System.Web.DynamicData.MetaModel" /> 클래스와 연결된 <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-128">Gets or sets the <see cref="T:System.Web.DynamicData.MetaModel" /> that is associated with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44daf-129">
            <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />와 연결된 모델입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-129">The model that is associated with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44daf-130"><xref:System.Web.DynamicData.MetaModel> 클래스는 데이터베이스와 도메인 개체 사이의 매핑을 나타내는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-130">The <xref:System.Web.DynamicData.MetaModel> class is an abstract class that represents the mapping between a database and domain objects.</span></span> <span data-ttu-id="44daf-131">동적 데이터 모델을 나타내는 클래스 (데이터 모델)의 집합을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-131">Dynamic Data provides a set of classes (the data model) that represent the model.</span></span> <span data-ttu-id="44daf-132">클래스는 개체 관계형 디자이너 (O/R 디자이너)를 통해 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-132">The classes are generated through the Object Relational Designer (O/R Designer).</span></span> <span data-ttu-id="44daf-133">이러한 클래스를 생성 하려면 LINQ to SQL 클래스 템플릿 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-133">You can use the LINQ to SQL Classes template to generate these classes.</span></span> <span data-ttu-id="44daf-134">이 속성은 get 및 set에 연결 된 데이터 모델에 사용 된 <xref:System.Web.DynamicData.FieldTemplateFactory> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-134">This property is used to get and set the data model associated with the <xref:System.Web.DynamicData.FieldTemplateFactory> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.WebControls.DataBoundControlMode PreprocessMode(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PreprocessMode (column As MetaColumn, mode As DataBoundControlMode) As DataBoundControlMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataBoundControlMode PreprocessMode(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member PreprocessMode : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.UI.WebControls.DataBoundControlMode&#xA;override this.PreprocessMode : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.UI.WebControls.DataBoundControlMode" Usage="fieldTemplateFactory.PreprocessMode (column, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="44daf-135">필드 템플릿이 필요한 열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-135">The column for which the field template is needed.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="44daf-136">변경할 모드(읽기 전용, 편집 또는 삽입)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-136">The mode (Read Only, Edit, or Insert) to change to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44daf-137">데이터 열의 모드를 변경합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-137">Changes the mode of the data column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44daf-138">열이 렌더링되는 모드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-138">The mode that a column renders.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44daf-139">동적 데이터에서 읽기, 삽입, 데이터를 렌더링 하거나 모드를 편집 합니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-139">Dynamic Data renders data in Read Only, Insert, or Edits modes.</span></span> <span data-ttu-id="44daf-140">이 메서드는 열에 렌더링 되는 모드를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-140">This method controls which mode is rendered in the column.</span></span> <span data-ttu-id="44daf-141">예를 들어 열에 기본 키 열이 편집 모드 요청을 읽기 전용으로 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-141">For example, an Edit mode request changes to Read Only if the column is a primary key column.</span></span> <span data-ttu-id="44daf-142">기본 키의 일부인 자동으로 생성 하 고 외래 키 열을 편집할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-142">Columns that are automatically generated and foreign keys that are part of the primary key cannot be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string TemplateFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplateFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TemplateFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44daf-143">필드 템플릿을 만들 폴더를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-143">Gets or sets the folder in which to create a field template.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44daf-144">필드 템플릿이 들어 있는 폴더의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44daf-144">The path to the folder that contains the field templates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44daf-145">필드 템플릿을 만들어지는 기본 폴더는 /DynamicData/FieldTemplates/입니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-145">The default folder where field templates are created is the /DynamicData/FieldTemplates/.</span></span> <span data-ttu-id="44daf-146">이 폴더에는 기본 필드 템플릿 및 사용자가 만든 사용자 지정 필드 템플릿을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-146">This folder contains the default field templates and custom field templates that you create.</span></span> <span data-ttu-id="44daf-147">만들고 필드 템플릿에 대 한 다른 폴더를 지정 하는 경우 동적 데이터에 지정한 폴더에서 필드 템플릿을 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-147">If you create and specify a different folder for the field templates, Dynamic Data will create the field templates in the folder you specify.</span></span> <span data-ttu-id="44daf-148">필드 템플릿에 대 한 자세한 내용은 참조 하세요. [ASP.NET 동적 데이터 스 캐 폴딩](http://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12)합니다.</span><span class="sxs-lookup"><span data-stu-id="44daf-148">For more information about field templates, see [ASP.NET Dynamic Data Scaffolding](http://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>