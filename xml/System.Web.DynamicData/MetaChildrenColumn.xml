<Type Name="MetaChildrenColumn" FullName="System.Web.DynamicData.MetaChildrenColumn">
  <TypeSignature Language="C#" Value="public class MetaChildrenColumn : System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaChildrenColumn extends System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaChildrenColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaChildrenColumn&#xA;Inherits MetaColumn" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaChildrenColumn : System::Web::DynamicData::MetaColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.DynamicData.MetaColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d77ba-101">일대다 관계를 나타내는 데이터베이스 필드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-101">Represents a database field that indicates a one-to-many relationship.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77ba-102">ASP.NET Dynamic Data 응용 프로그램에서의 <xref:System.Web.DynamicData.MetaChildrenColumn> 클래스는 일 대 다 관계 또는 부모-자식 관계를 나타내는 데이터베이스 필드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaChildrenColumn> class represents a database field that indicates a one-to-many relationship or a parent-child relationship.</span></span>  
  
 <span data-ttu-id="d77ba-103"><xref:System.Web.DynamicData.MetaChildrenColumn> 클래스 대 다 관계의 부모 테이블의 필드를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-103">The <xref:System.Web.DynamicData.MetaChildrenColumn> class represents the field in the parent table of the one-to-many relationship.</span></span> <span data-ttu-id="d77ba-104">그러나 자식 테이블 개체를 사용 하 여 액세스할 수 있습니다는 <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-104">However, you can access the child table object by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property.</span></span> <span data-ttu-id="d77ba-105">사용 하 여 자식 테이블의 외래 키 필드를 검색할 수도 있습니다는 <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-105">You can also retrieve the foreign-key field in the child table by using the <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaChildrenColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider entityMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider entityMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As MetaTable, entityMember As ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaChildrenColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ entityMember);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="entityMember" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="d77ba-106">메타 테이블입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-106">The meta table.</span></span></param>
        <param name="entityMember"><span data-ttu-id="d77ba-107">열 공급자입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-107">The column provider.</span></span></param>
        <summary><span data-ttu-id="d77ba-108"><see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-108">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable ChildTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable ChildTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ChildTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildTable As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ ChildTable { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d77ba-109">일대다 관계의 자식 테이블을 나타내는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-109">Gets an object that represents the child table of the one-to-many relationship.</span></span></summary>
        <value><span data-ttu-id="d77ba-110">일대다 관계의 자식 테이블을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-110">An object that represents the child table of the one-to-many relationship.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77ba-111">사용 하 여는 <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> 대 다 관계의 자식 테이블을 나타내는 개체를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-111">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.ChildTable%2A> property to get an object that represents the child table of the one-to-many relationship.</span></span> <span data-ttu-id="d77ba-112">사용 하 여 부모 테이블을 액세스할 수 있습니다는 <xref:System.Web.DynamicData.MetaColumn.Table%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-112">You can access the parent table by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="ColumnInOtherTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn ColumnInOtherTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn ColumnInOtherTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnInOtherTable As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ ColumnInOtherTable { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d77ba-113">자식 테이블의 외부 키 필드를 나타내는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-113">Gets an object that represents the foreign-key field in the child table.</span></span></summary>
        <value><span data-ttu-id="d77ba-114">자식 테이블의 외부 키 필드를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-114">An object that represents the foreign-key field in the child table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77ba-115"><xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> 속성을 사용 하면 자식 테이블의 필드에 대 한 참조를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-115">The <xref:System.Web.DynamicData.MetaChildrenColumn.ColumnInOtherTable%2A> property enables you to get a reference to the field in the child table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenListPath">
      <MemberSignature Language="C#" Value="public string GetChildrenListPath (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenListPath(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenListPath (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenListPath(System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenListPath(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="d77ba-116">외래 키 필드가 포함된 행입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-116">The row that contains the foreign-key field.</span></span></param>
        <summary><span data-ttu-id="d77ba-117">자식 테이블에 대한 목록 작업 페이지의 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-117">Gets the path of the list-action page for the child table.</span></span></summary>
        <returns><span data-ttu-id="d77ba-118">자식 테이블에 대한 목록 작업 페이지의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-118">The path of the list-action page for the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77ba-119">사용 된 <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> 메서드를 부모로 지정된 된 행을 사용 하 여 자식 테이블에 대 한 목록 작업 페이지를 검색 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="d77ba-119">Use the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method when you want to retrieve the list-action page for the child table using the specified row as a parent.</span></span> <span data-ttu-id="d77ba-120">경로에 지정 된 외래 키 필드 값을 포함 하는 URL에 쿼리 문자열 값을 추가 하 여 가져온는 `row` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-120">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="d77ba-121">사용 하는 <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> 메서드를 호출 하는 것과 같습니다는 <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> 메서드와 전달은 <xref:System.Web.DynamicData.PageAction.List%2A> 첫 번째 매개 변수로 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-121">Using the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenListPath%2A> method is the same as invoking the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method and passing the <xref:System.Web.DynamicData.PageAction.List%2A> action as the first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.PageAction.List" />
        <altmember cref="Overload:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildrenPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d77ba-122">자식 테이블의 지정된 작업 페이지 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-122">Gets the path for the specified action page of the child table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="d77ba-123">대상 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-123">The target action.</span></span></param>
        <param name="row"><span data-ttu-id="d77ba-124">외래 키 필드가 포함된 행입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-124">The row that contains the foreign-key field.</span></span></param>
        <summary><span data-ttu-id="d77ba-125">자식 테이블의 지정된 작업 페이지 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-125">Gets the path of the specified action page of the child table.</span></span></summary>
        <returns><span data-ttu-id="d77ba-126">자식 테이블의 지정된 작업 페이지 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-126">The path of the specified action page of the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77ba-127"><xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> 메서드 자식 테이블에 대 한 지정 된 작업 페이지의 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-127">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="d77ba-128">반환 된 경로 ASP.NET Dynamic Data 응용 프로그램에 대해 정의 된 경로에 따라 있으며 부모로 지정된 된 행입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-128">The path returned is based on the routes that are defined for the ASP.NET Dynamic Data application and has the specified row as a parent.</span></span> <span data-ttu-id="d77ba-129">경로에 지정 된 외래 키 필드 값을 포함 하는 URL에 쿼리 문자열 값을 추가 하 여 가져온는 `row` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-129">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="d77ba-130">경우 `row` 은 `null`, 그의 메서드는 빈 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-130">If `row` is `null`, his method returns an empty string.</span></span>  
  
 <span data-ttu-id="d77ba-131">에 정의 된 값을 사용할 수는 <xref:System.Web.DynamicData.PageAction> 에 대 한 클래스는 `action` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-131">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="GetChildrenPath">
      <MemberSignature Language="C#" Value="public string GetChildrenPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetChildrenPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetChildrenPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaChildrenColumn.GetChildrenPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="d77ba-132">대상 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-132">The target action.</span></span></param>
        <param name="row"><span data-ttu-id="d77ba-133">외래 키 필드가 포함된 행입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-133">The row that contains the foreign-key field.</span></span></param>
        <param name="path"><span data-ttu-id="d77ba-134">대상 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-134">The target page.</span></span></param>
        <summary><span data-ttu-id="d77ba-135">자식 테이블의 지정된 작업 페이지 경로를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-135">Gets the path for the specified action page of the child table.</span></span></summary>
        <returns><span data-ttu-id="d77ba-136">자식 테이블의 지정된 작업 페이지 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-136">The path of the specified action page of the child table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77ba-137"><xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> 메서드 자식 테이블에 대 한 지정 된 작업 페이지의 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-137">The <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path of the specified action page for the child table.</span></span> <span data-ttu-id="d77ba-138">경로 상위로 지정된 된 경로 지정 된 행을 기반으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-138">The path is based on the specified path with the specified row as a parent.</span></span> <span data-ttu-id="d77ba-139">경로에 지정 된 외래 키 필드 값을 포함 하는 URL에 쿼리 문자열 값을 추가 하 여 가져온는 `row` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-139">The path is obtained by appending a query-string value to the URL that contains the foreign-key field value specified in the `row` parameter.</span></span>  
  
 <span data-ttu-id="d77ba-140">경우 `row` 은 `null`,이 메서드는 빈 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-140">If `row` is `null`, this method returns an empty string.</span></span> <span data-ttu-id="d77ba-141">경우 `path` 은 `null`, <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> 메서드 ASP.NET Dynamic Data 응용 프로그램에 대해 정의 된 경로에 따라 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-141">If `path` is `null`, the <xref:System.Web.DynamicData.MetaChildrenColumn.GetChildrenPath%28System.String%2CSystem.Object%2CSystem.String%29> method returns the path based on the routes defined for the ASP.NET Dynamic Data application.</span></span>  
  
 <span data-ttu-id="d77ba-142">에 정의 된 값을 사용할 수는 <xref:System.Web.DynamicData.PageAction> 에 대 한 클래스는 `action` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-142">You can use the values defined in the <xref:System.Web.DynamicData.PageAction> class for the `action` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.PageAction" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaChildrenColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d77ba-143">생성자가 호출될 때 사용하지 못할 수 있는 데이터를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-143">Initializes data that might not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d77ba-144">이 메서드는 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-144">This method cannot be called directly.</span></span> <span data-ttu-id="d77ba-145">초기화를 사용자 지정 하려면이 클래스에서 파생 되 고 재정의 수는 `Initialize` 메서드.</span><span class="sxs-lookup"><span data-stu-id="d77ba-145">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="d77ba-146">이 메서드를 재정의 하는 경우 기본 컨트롤의 호출 `Initialize` 메서드.</span><span class="sxs-lookup"><span data-stu-id="d77ba-146">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManyToMany">
      <MemberSignature Language="C#" Value="public bool IsManyToMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManyToMany" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaChildrenColumn.IsManyToMany" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsManyToMany As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManyToMany { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaChildrenColumn.IsManyToMany</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d77ba-147">열의 다대다 관계 상태를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-147">Gets a value that indicates the many-to-many relationship status of the column.</span></span></summary>
        <value>
          <span data-ttu-id="d77ba-148">열 관계가 다대다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d77ba-148"><see langword="true" /> if the column relationship is many-to-many; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>