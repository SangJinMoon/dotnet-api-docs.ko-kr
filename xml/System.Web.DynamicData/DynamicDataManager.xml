<Type Name="DynamicDataManager" FullName="System.Web.DynamicData.DynamicDataManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee42831f4dceba13eedf9fb7663fad42344168fa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DynamicDataManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicDataManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicDataManager" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicDataManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicDataManager : System::Web::UI::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicDataManagerDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicDataManager), "DynamicDataManager.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET Dynamic Data를 지원하는 ASP.NET 웹 컨트롤에 대한 동적 동작을 사용합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목 내용:  
  
-   [소개](#introduction)  
  
-   [선언 구문](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>소개  
 <xref:System.Web.DynamicData.DynamicDataManager> 다음과 같은 방식에서으로 데이터 바인딩된 컨트롤, 데이터 소스 제어 및 동적 데이터 간의 연결을 제공 합니다.  
  
-   올바른 열을 만들려면 데이터 바인딩된 컨트롤에 대 한 필드 생성기 집합 설정 될 때 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 로 설정 된 `true`합니다. 데이터 바인딩된 컨트롤이 될 수는 <xref:System.Web.UI.WebControls.GridView> 컨트롤은 <xref:System.Web.UI.WebControls.DetailsView> 컨트롤 또는 <xref:System.Web.UI.WebControls.FormView> 제어 합니다.  
  
-   데이터 소스 제어에 대 한 컨텍스트 형식 및 테이블 이름을 설정합니다. LINQ to SQL에 대 한 데이터 소스 컨트롤은 <xref:System.Web.UI.WebControls.LinqDataSource>합니다. ADO Entity Framework에 대 한 데이터 소스 컨트롤은 <xref:System.Web.UI.WebControls.EntityDataSource>합니다.  
  
-   설정의 <xref:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause%2A> 를 `true` Where 없을 경우 데이터 원본에 대 한 절.  
  
-   와 같은 특수 한 동적 매개 변수를 확장 <xref:System.Web.DynamicData.DynamicControlParameter> 에 데이터 원본에서 사용할 수 있는 매개 변수입니다.  
  
-   경우 LINQ-SQL <xref:System.Web.DynamicData.DynamicDataManager.AutoLoadForeignKeys%2A> 속성이 `true`, 외래 키를 로드 합니다.  
  
 <xref:System.Web.DynamicData.DynamicDataManager> 동적 데이터 지원을 사용 하려면 데이터 컨트롤에 대 한 순서 대로 페이지에 컨트롤을 포함 해야 합니다. 에 대 한 태그는 <xref:System.Web.DynamicData.DynamicDataManager> 동적 데이터를 사용 하는 모든 컨트롤 지원에 대 한 컨트롤의 태그 앞에 야 합니다.  
  
> [!NOTE]
>  A <xref:System.Web.DynamicData.DynamicDataManager> 컨트롤을 삽입할 수 없는 <xref:System.Web.UI.UpdatePanel> 제어 합니다.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>선언 구문  
  
```  
<asp:DynamicDataManager  
    AutoLoadForeignKeys="True|False"  
    EnableQueryStringSelection="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
>  
</asp:DynamicDataManager>  
```  
  
   
  
## Examples  
 사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.DynamicData.DynamicDataManager> 의 인스턴스에 대 한 동적 동작을 사용 하도록 설정 하려면 제어는 <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> 제어 합니다.  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicDataManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataManager/cs/List.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicDataManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataManager/vb/List.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicDataManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicDataManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 컨트롤의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLoadForeignKeys">
      <MemberSignature Language="C#" Value="public bool AutoLoadForeignKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLoadForeignKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataManager.AutoLoadForeignKeys" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLoadForeignKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLoadForeignKeys { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>LINQ to SQL 데이터 컨텍스트에 대해 외래 키가 자동으로 로드되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          외래 키가 자동으로 로드되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 데이터 모델 LINQ to SQL 기반으로 하지 않는 경우이 속성은 무시 됩니다. 속성이로 설정 된 경우 `true`, 관련 엔터티가 초기 쿼리에 로드 되도록 합니다. 속성이로 설정 되 면 `false`, 요청할 경우 LINQ to SQL 관련된 개체를 로드 합니다. 이 속성이 로드 최적화에 대 한 이므로 표시 되는 내용에 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET에서 생성되는 <see cref="P:System.Web.UI.Control.ClientID" /> 속성을 가져옵니다.</summary>
        <value>ASP.NET에서 생성되는 <see cref="P:System.Web.UI.Control.ClientID" /> 속성입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Web.UI.Control.ClientID%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataManager.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.Control.ClientID" /> 속성의 값을 생성하는 데 사용되는 알고리즘을 가져옵니다.</summary>
        <value>
          <see cref="P:System.Web.UI.Control.ClientID" /> 속성의 생성 방법을 나타내는 값입니다. 이 속성을 설정하려고 한 경우</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="DataControls">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.DataControlReferenceCollection DataControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.DataControlReferenceCollection DataControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataManager.DataControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataControls As DataControlReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::DataControlReferenceCollection ^ DataControls { System::Web::DynamicData::DataControlReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DataControlReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 컨트롤에 있는 데이터 컨트롤 참조의 목록을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 컨트롤에 있는 데이터 컨트롤 참조의 목록입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 태그를 사용 하는 동적 데이터 페이지 템플릿에서 <xref:System.Web.DynamicData.DynamicDataManager.DataControls%2A> 속성입니다.  
  
```  
<asp:DynamicDataManager ID="DDM1" runat="server">  
  <DataControls>  
    <asp:DataControlReference ControlID="FormView1" />  
  </DataControls>  
</asp:DynamicDataManager>  
  
<asp:UpdatePanel ID="UpdatePanel1" runat="server">  
  <ContentTemplate>  
  
    <asp:FormView runat="server" ID="FormView1" DataSourceID="DDS">  
        <!-- Items omitted for clarity. -->  
    </asp:FormView>  
  
  </ContentTemplate>  
</asp:UpdatePanel>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataManager.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터입니다.</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Load" /> 이벤트를 발생시킵니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterControl">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 컨트롤을 등록합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterControl">
      <MemberSignature Language="C#" Value="public void RegisterControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterControl(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">등록할 데이터 컨트롤입니다.</param>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 컨트롤을 사용하여 컨트롤을 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤에 동적 동작 사용에 등록 해야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 등록 하는 방법을 보여 줍니다.는 <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> 컨트롤에 `Page_Init` ASP.NET 웹 페이지의 메서드.  
  
 [!code-aspx-csharp[System.Web.DynamicData.DynamicDataManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataManager/cs/List.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicDataManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataManager/vb/List.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterControl">
      <MemberSignature Language="C#" Value="public void RegisterControl (System.Web.UI.Control control, bool setSelectionFromUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterControl(class System.Web.UI.Control control, bool setSelectionFromUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicDataManager.RegisterControl(System.Web.UI.Control,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterControl(System::Web::UI::Control ^ control, bool setSelectionFromUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="setSelectionFromUrl" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">등록할 데이터 컨트롤입니다.</param>
        <param name="setSelectionFromUrl">
          기본 키를 사용하여 선택된 항목을 설정하려면 <see langword="true" />이고, 그렇지 않으면 선택된 항목이 설정되지 않습니다.</param>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 컨트롤을 사용하여 컨트롤을 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤 등록의 동적 동작을 사용 합니다. 경우는 `setSelectionFromUrl` 매개 변수는 `true` 기본 키 값을 찾을 수 경로 값에 기본 키에서 선택한 항목을 설정 하는 데 사용 됩니다. 기본 키 값은 일반적으로 요청 URL에 쿼리 문자열을 사용 하 여 경로에 전달 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicDataManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.DynamicData.DynamicDataManager" /> 컨트롤이 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Web.DynamicData.DynamicDataManager" />가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.DynamicData.DynamicDataManager> 표시 런타임에 컨트롤이 아닙니다. 속성은 디자이너에서 디자인 타임에만 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>