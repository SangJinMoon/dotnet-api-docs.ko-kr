<Type Name="IOrderedQueryable&lt;T&gt;" FullName="System.Linq.IOrderedQueryable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="614842fb2f1911d60cdbfdcb3b461e88af9f5c5c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36478722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IOrderedQueryable&lt;out T&gt; : System.Collections.Generic.IEnumerable&lt;out T&gt;, System.Linq.IOrderedQueryable, System.Linq.IQueryable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOrderedQueryable`1&lt;+ T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IOrderedQueryable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOrderedQueryable(Of Out T)&#xA;Implements IEnumerable(Of Out T), IOrderedQueryable, IQueryable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IOrderedQueryable : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Linq::IOrderedQueryable, System::Linq::IQueryable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type IOrderedQueryable&lt;'T&gt; = interface&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface seq&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="fe1e5-101">데이터 소스 콘텐츠의 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe1e5-101">The type of the content of the data source.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="fe1e5-102">정렬 작업의 결과를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe1e5-102">Represents the result of a sorting operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1e5-103"><xref:System.Linq.IOrderedQueryable%601> 쿼리 공급자가 인터페이스는 구현을 위한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="fe1e5-103">The <xref:System.Linq.IOrderedQueryable%601> interface is intended for implementation by query providers.</span></span>  
  
 <span data-ttu-id="fe1e5-104">이 인터페이스 메서드를 호출 하는 정렬 쿼리의 결과 나타내는 <xref:System.Linq.Queryable.OrderBy%2A>, <xref:System.Linq.Queryable.OrderByDescending%2A>, <xref:System.Linq.Queryable.ThenBy%2A> 또는 <xref:System.Linq.Queryable.ThenByDescending%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1e5-104">This interface represents the result of a sorting query that calls the method(s) <xref:System.Linq.Queryable.OrderBy%2A>, <xref:System.Linq.Queryable.OrderByDescending%2A>, <xref:System.Linq.Queryable.ThenBy%2A> or <xref:System.Linq.Queryable.ThenByDescending%2A>.</span></span> <span data-ttu-id="fe1e5-105">때 <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> 호출 되 고 그 결과 정렬 쿼리를 나타내는 식 트리를 전달한 <xref:System.Linq.IQueryable%601> 개체가 구현 하는 형식 이어야 합니다 <xref:System.Linq.IOrderedQueryable%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="fe1e5-105">When <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is called and passed an expression tree that represents a sorting query, the resulting <xref:System.Linq.IQueryable%601> object must be of a type that implements <xref:System.Linq.IOrderedQueryable%601>.</span></span>  
  
 <span data-ttu-id="fe1e5-106">LINQ 공급자를 만드는 방법에 대 한 자세한 내용은 참조 [LINQ: IQueryable 공급자 빌드](http://go.microsoft.com/fwlink/?LinkID=112370) on MSDN 블로그.</span><span class="sxs-lookup"><span data-stu-id="fe1e5-106">For more information about how to create your own LINQ provider, see [LINQ: Building an IQueryable Provider](http://go.microsoft.com/fwlink/?LinkID=112370) on MSDN Blogs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
    <altmember cref="T:System.Linq.IQueryable`1" />
  </Docs>
  <Members />
</Type>