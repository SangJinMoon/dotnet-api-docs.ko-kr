<Type Name="ParallelMergeOptions" FullName="System.Linq.ParallelMergeOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36a88752d717ebd61b725657739a3d52232c3341" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36478651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ParallelMergeOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParallelMergeOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelMergeOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParallelMergeOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParallelMergeOptions" />
  <TypeSignature Language="F#" Value="type ParallelMergeOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the preferred type of *output merge* to use in a query. In other words, it indicates how PLINQ should merge the results from the various partitions back into a single result sequence. <span data-ttu-id="5825a-103">This is a hint only, and may not be respected by the system when parallelizing all queries.</span><span class="sxs-lookup"><span data-stu-id="5825a-103">This is a hint only, and may not be respected by the system when parallelizing all queries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5825a-104">사용 하 여 `NotBuffered` 사용 되며 스트림으로 출력 하는 쿼리의 경우이 인해 시작 쿼리 실행 및 되는 요소 간에 대기 시간이 가장 합니다.</span><span class="sxs-lookup"><span data-stu-id="5825a-104">Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded.</span></span> <span data-ttu-id="5825a-105">일부 쿼리의 정렬 (OrderBy, OrderByDescending) 관련 된, 버퍼링 필수 이며 NotBuffered 또는 AutoBuffered 힌트는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5825a-105">For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored.</span></span> <span data-ttu-id="5825a-106">그러나 쿼리 자체 내에서 수행 됩니다 추가 정렬을으로 AsOrdered 연산자를 사용 하 여 만든 쿼리를 스트리밍할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5825a-106">However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.</span></span>  
  
 <span data-ttu-id="5825a-107">사용 하 여 `AutoBuffered` 대부분의 경우;에 대 한 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="5825a-107">Use `AutoBuffered` for most cases; this is the default.</span></span> <span data-ttu-id="5825a-108">대기 시간 및 전체 성능이 간의 균형을 이룹니다.</span><span class="sxs-lookup"><span data-stu-id="5825a-108">It strikes a balance between latency and overall performance.</span></span>  
  
 <span data-ttu-id="5825a-109">사용 하 여 `FullyBuffered` 쿼리의 경우 정보가 필요 하기 전에 전체 출력을 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5825a-109">Use `FullyBuffered` for queries when the entire output can be processed before the information is needed.</span></span> <span data-ttu-id="5825a-110">이 옵션 중간 쿼리 결과 처리 하거나 부분을 보여 주는 스트림에 적합 하지 않은 경우에 정보를 제공 하기 전에 모든 출력 누적 될 수 있는 경우 최상의 성능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5825a-110">This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoBuffered">
      <MemberSignature Language="C#" Value="AutoBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions AutoBuffered = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.AutoBuffered" />
      <MemberSignature Language="VB.NET" Value="AutoBuffered" />
      <MemberSignature Language="C++ CLI" Value="AutoBuffered" />
      <MemberSignature Language="F#" Value="AutoBuffered = 2" Usage="System.Linq.ParallelMergeOptions.AutoBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="5825a-111">Use a merge with output buffers of a size chosen by the system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5825a-111">Use a merge with output buffers of a size chosen by the system.</span>
          </span>
          <span data-ttu-id="5825a-112">Results will accumulate into an output buffer before they are available to the consumer of the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5825a-112">Results will accumulate into an output buffer before they are available to the consumer of the query.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Linq.ParallelMergeOptions.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="5825a-113">Use the default merge type, which is AutoBuffered.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5825a-113">Use the default merge type, which is AutoBuffered.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FullyBuffered">
      <MemberSignature Language="C#" Value="FullyBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions FullyBuffered = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.FullyBuffered" />
      <MemberSignature Language="VB.NET" Value="FullyBuffered" />
      <MemberSignature Language="C++ CLI" Value="FullyBuffered" />
      <MemberSignature Language="F#" Value="FullyBuffered = 3" Usage="System.Linq.ParallelMergeOptions.FullyBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="5825a-114">Use a merge with full output buffers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5825a-114">Use a merge with full output buffers.</span>
          </span>
          <span data-ttu-id="5825a-115">The system will accumulate all of the results before making any of them available to the consumer of the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5825a-115">The system will accumulate all of the results before making any of them available to the consumer of the query.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NotBuffered">
      <MemberSignature Language="C#" Value="NotBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions NotBuffered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.NotBuffered" />
      <MemberSignature Language="VB.NET" Value="NotBuffered" />
      <MemberSignature Language="C++ CLI" Value="NotBuffered" />
      <MemberSignature Language="F#" Value="NotBuffered = 1" Usage="System.Linq.ParallelMergeOptions.NotBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="5825a-116">Use a merge without output buffers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5825a-116">Use a merge without output buffers.</span>
          </span>
          <span data-ttu-id="5825a-117">As soon as result elements have been computed, make that element available to the consumer of the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5825a-117">As soon as result elements have been computed, make that element available to the consumer of the query.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>