<Type Name="ParallelMergeOptions" FullName="System.Linq.ParallelMergeOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67c7b5aaf5171cfcb74824b3721aec2ea41e73f0" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51914580" /></Metadata><TypeSignature Language="C#" Value="public enum ParallelMergeOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParallelMergeOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ParallelMergeOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParallelMergeOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParallelMergeOptions" />
  <TypeSignature Language="F#" Value="type ParallelMergeOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>쿼리에서 사용할 *출력 병합*의 기본 형식을 지정합니다. 즉, PLINQ에서 다양한 파티션의 결과를 단일 결과 시퀀스로 다시 병합하는 방법을 나타냅니다. <span data-ttu-id="86b27-103">힌트일 뿐이므로 모든 쿼리를 병렬화할 경우 시스템에서 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-103">This is a hint only, and may not be respected by the system when parallelizing all queries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86b27-104">사용 하 여 `NotBuffered` 시작 쿼리 실행 되는 요소 사이의 가장 낮은 대기 시간에이 사용 되며 스트림으로 출력 하는 쿼리의 경우.</span><span class="sxs-lookup"><span data-stu-id="86b27-104">Use `NotBuffered` for queries that will be consumed and output as streams, this has the lowest latency between beginning query execution and elements being yielded.</span></span> <span data-ttu-id="86b27-105">일부 쿼리의 경우 정렬 (OrderBy, OrderByDescending)와 관련 된 것과 같은 버퍼링 필수 이며 NotBuffered 또는 AutoBuffered 힌트는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-105">For some queries, such as those involving a sort (OrderBy, OrderByDescending), buffering is essential and a hint of NotBuffered or AutoBuffered will be ignored.</span></span> <span data-ttu-id="86b27-106">그러나 AsOrdered 연산자를 사용 하 여 만든 쿼리는 쿼리 자체 내에서 수행 됩니다 추가 정렬을 그대로 스트리밍할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-106">However, queries that are created by using the AsOrdered operator can be streamed as long as no further sorting is performed within the query itself.</span></span>  
  
 <span data-ttu-id="86b27-107">사용 하 여 `AutoBuffered` 대부분의 경우가 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-107">Use `AutoBuffered` for most cases; this is the default.</span></span> <span data-ttu-id="86b27-108">전체 성능과 대기 시간 간의 균형입니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-108">It strikes a balance between latency and overall performance.</span></span>  
  
 <span data-ttu-id="86b27-109">사용 하 여 `FullyBuffered` 쿼리의 경우 정보가 필요 하기 전에 전체 출력을 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-109">Use `FullyBuffered` for queries when the entire output can be processed before the information is needed.</span></span> <span data-ttu-id="86b27-110">이 옵션 중간 쿼리 결과 처리 하거나 부분을 보여 주는 스트림에 대 한 적합 한 있지 않더라도 정보를 제공 하기 전에 모든 출력 누적 할 수 있는 경우 최상의 성능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-110">This option offers the best performance when all of the output can be accumulated before yielding any information, though it is not suitable for stream processing or showing partial results mid-query.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/parallel-programming/parallel-linq-plinq.md"><span data-ttu-id="86b27-111">PLINQ(병렬 LINQ)</span><span class="sxs-lookup"><span data-stu-id="86b27-111">Parallel LINQ (PLINQ)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e8f7be3b-88de-4f33-ab14-dc008e76c1ba"><span data-ttu-id="86b27-112">PLINQ의 병합 옵션</span><span class="sxs-lookup"><span data-stu-id="86b27-112">Merge Options in PLINQ</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0f33b527-e91a-4550-a39a-e63e396fd831"><span data-ttu-id="86b27-113">방법: PLINQ에서 병합 옵션 지정</span><span class="sxs-lookup"><span data-stu-id="86b27-113">How to: Specify Merge Options in PLINQ</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AutoBuffered">
      <MemberSignature Language="C#" Value="AutoBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions AutoBuffered = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.AutoBuffered" />
      <MemberSignature Language="VB.NET" Value="AutoBuffered" />
      <MemberSignature Language="C++ CLI" Value="AutoBuffered" />
      <MemberSignature Language="F#" Value="AutoBuffered = 2" Usage="System.Linq.ParallelMergeOptions.AutoBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="86b27-114">시스템에서 선택한 크기의 출력 버퍼를 이용하는 병합을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-114">Use a merge with output buffers of a size chosen by the system.</span></span> <span data-ttu-id="86b27-115">이렇게 하면 결과가 쿼리 소비자에게 제공되기 전에 출력 버퍼에 누적됩니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-115">Results will accumulate into an output buffer before they are available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Linq.ParallelMergeOptions.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="86b27-116">기본 병합 형식인 AutoBuffered를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-116">Use the default merge type, which is AutoBuffered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FullyBuffered">
      <MemberSignature Language="C#" Value="FullyBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions FullyBuffered = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.FullyBuffered" />
      <MemberSignature Language="VB.NET" Value="FullyBuffered" />
      <MemberSignature Language="C++ CLI" Value="FullyBuffered" />
      <MemberSignature Language="F#" Value="FullyBuffered = 3" Usage="System.Linq.ParallelMergeOptions.FullyBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="86b27-117">전체 출력 버퍼를 이용하는 병합을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-117">Use a merge with full output buffers.</span></span> <span data-ttu-id="86b27-118">시스템에서 결과를 쿼리 소비자에게 제공하기 전에 모든 결과를 누적합니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-118">The system will accumulate all of the results before making any of them available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NotBuffered">
      <MemberSignature Language="C#" Value="NotBuffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Linq.ParallelMergeOptions NotBuffered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Linq.ParallelMergeOptions.NotBuffered" />
      <MemberSignature Language="VB.NET" Value="NotBuffered" />
      <MemberSignature Language="C++ CLI" Value="NotBuffered" />
      <MemberSignature Language="F#" Value="NotBuffered = 1" Usage="System.Linq.ParallelMergeOptions.NotBuffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.ParallelMergeOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="86b27-119">출력 버퍼를 이용하지 않는 병합을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-119">Use a merge without output buffers.</span></span> <span data-ttu-id="86b27-120">결과 요소가 계산되는 즉시 쿼리 소비자에게 제공됩니다.</span><span class="sxs-lookup"><span data-stu-id="86b27-120">As soon as result elements have been computed, make that element available to the consumer of the query.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>