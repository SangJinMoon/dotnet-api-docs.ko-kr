<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UrlParameterWriter.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe8597e0ce7601a05314db3b4795b0f096cd0c7b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe8597e0ce7601a05314db3b4795b0f096cd0c7b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>Writes out-going request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.</source>
          <target state="translated">이름/값 쌍이 SOAP 메시지 대신 URL의 쿼리 문자열로 인코딩된 HTTP를 사용하여 구현된 웹 서비스의 나가는 요청 매개 변수를 씁니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> and other classes in the <ph id="ph2">&lt;xref:System.Web.Services.Protocols&gt;</ph> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> 및 기타 클래스에는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols&gt;</ph> 네임 스페이스는 HTTP GET 및 HTTP POST 작업을 통해 웹 서비스의.NET Framework의 구현을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams.</source>
          <target state="translated">웹 서비스 작성자 및 독자 serialize 및 deserialize를 각각 매개 변수 또는 웹 메서드의 반환 개체와 HTTP 요청 또는 응답 스트림을 사이입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.</source>
          <target state="translated">웹 서비스 작성자 및 독자 전송에 HTTP를 사용 하지만 SOAP 표준을 사용 하 여 메시지를 교환 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> class provides a client-side method, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A&gt;</ph>, to encode parameters name/value pairs into an HTTP request URL's query string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> 클래스는 클라이언트 쪽 메서드를 제공 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A&gt;</ph>, HTTP 요청 URL의 쿼리 문자열에 매개 변수 이름/값 쌍을 인코딩하는 데 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>For example, in the URL <ph id="ph1">`http://contoso.com?a=1&amp;b=2`</ph>, <ph id="ph2">`a`</ph> and <ph id="ph3">`b`</ph> are parameter names, and <ph id="ph4">`1`</ph> and <ph id="ph5">`2`</ph> are their values.</source>
          <target state="translated">예를 들어 URL에에서 <ph id="ph1">`http://contoso.com?a=1&amp;b=2`</ph>, <ph id="ph2">`a`</ph> 및 <ph id="ph3">`b`</ph> 는 매개 변수 이름이 고 <ph id="ph4">`1`</ph> 및 <ph id="ph5">`2`</ph> 는 해당 값입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>You typically will not need to use <ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> directly.</source>
          <target state="translated">일반적으로 않아도 됩니다 사용할 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph> 직접 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.UrlParameterWriter">
          <source>Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET implementation, it applies the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> to each Web method and sets the attribute's <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph>.</source>
          <target state="translated">대신 HTTP GET 구현에 따라 클라이언트 프록시 코드를 생성 하는 Wsdl.exe 도구, 적용는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> 각 웹 메서드에 특성을 설정 하 고 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A&gt;</ph> 속성을 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>The HTTP request's original URL.</source>
          <target state="translated">HTTP 요청의 원본 URL입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>The Web method parameter values to be added to the URL, if necessary.</source>
          <target state="translated">필요한 경우 URL에 추가할 웹 메서드 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>Writes Web method parameter values to the query string of an HTTP request.</source>
          <target state="translated">HTTP 요청의 쿼리 문자열에 웹 메서드 매개 변수 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object that contains the query string and the parameter values.</source>
          <target state="translated">쿼리 문자열과 매개 변수 값이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A&gt;</ph> method encodes parameters name/value pairs into an HTTP request URL's query string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl%2A&gt;</ph> 메서드 HTTP 요청 URL의 쿼리 문자열 매개 변수 이름/값 쌍 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>For example, in the URL <ph id="ph1">`http://contoso.com?a=1&amp;b=2`</ph>, <ph id="ph2">`a`</ph> and <ph id="ph3">`b`</ph> are parameter names, and <ph id="ph4">`1`</ph> and <ph id="ph5">`2`</ph> are their values.</source>
          <target state="translated">예를 들어 URL에에서 <ph id="ph1">`http://contoso.com?a=1&amp;b=2`</ph>, <ph id="ph2">`a`</ph> 및 <ph id="ph3">`b`</ph> 는 매개 변수 이름이 고 <ph id="ph4">`1`</ph> 및 <ph id="ph5">`2`</ph> 는 해당 값입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
          <source>A new URL string, with any encoded parameters, is returned.</source>
          <target state="translated">새 URL 문자열에 인코딩된 모든 매개 변수가 반환 됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>