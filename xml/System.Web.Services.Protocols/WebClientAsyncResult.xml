<Type Name="WebClientAsyncResult" FullName="System.Web.Services.Protocols.WebClientAsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2cfc3aeae2ba2d9713dad813ffe2b060f472721" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46596611" /></Metadata><TypeSignature Language="C#" Value="public class WebClientAsyncResult : IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebClientAsyncResult extends System.Object implements class System.IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.WebClientAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Class WebClientAsyncResult&#xA;Implements IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClientAsyncResult : IAsyncResult" />
  <TypeSignature Language="F#" Value="type WebClientAsyncResult = class&#xA;    interface IAsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d6bc3-101">XML Web services 프록시가 표준 비동기 메서드 패턴을 구현하는 데 사용하도록 <see cref="T:System.IAsyncResult" />를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-101">Provides an implementation of <see cref="T:System.IAsyncResult" /> for use by XML Web service proxies to implement the standard asynchronous method pattern.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bc3-102">호출 하는 경우는 `BeginMyMethodName` 메서드를 위치 `MyMethodName` 에 XML 웹 서비스 프록시 클래스의 인스턴스 메서드의 동기 버전은는 <xref:System.Web.Services.Protocols.WebClientAsyncResult> 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-102">When you call the `BeginMyMethodName` method, where `MyMethodName` is the synchronous version of the method, on an XML Web service proxy class, an instance of the <xref:System.Web.Services.Protocols.WebClientAsyncResult> is returned.</span></span> <span data-ttu-id="d6bc3-103">표준 비동기 디자인 패턴을 해당 인스턴스의 <xref:System.Web.Services.Protocols.WebClientAsyncResult> 나중에 전달 되어야 합니다 `EndMyMethodName` 비동기 메서드 호출을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-103">Following the standard asynchronous design pattern, that instance of <xref:System.Web.Services.Protocols.WebClientAsyncResult> must later be passed to `EndMyMethodName` to complete the asynchronous method call.</span></span>  
  
 <span data-ttu-id="d6bc3-104">XML 웹 서비스를 비동기적으로 호출에 대 한 내용은 참조 하세요 [XML Web Services 비동기적으로 통신할](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-104">For details on calling XML Web services asynchronously, see [Communicating with XML Web Services Asynchronously](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IAsyncResult" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/tz4bkcx2(v=vs.100)"><span data-ttu-id="d6bc3-105">XML Web services와 비동기적으로 통신</span><span class="sxs-lookup"><span data-stu-id="d6bc3-105">Communicating with XML Web Services Asynchronously</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientAsyncResult.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="webClientAsyncResult.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bc3-106">비동기 XML Web services 요청을 취소합니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-106">Cancels an asynchronous XML Web service request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d6bc3-107">XML 웹 서비스 요청은 기본 전송에서 지 원하는 경우 취소 되는 <xref:System.Net.WebRequest.Abort%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-107">The XML Web service request is canceled if the underlying transport supports the <xref:System.Net.WebRequest.Abort%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d6bc3-108">경우 해당 `End` 메서드가 이후에 호출 이후에 <xref:System.Web.Services.Protocols.WebClientAsyncResult.Abort%2A> 메서드를 <xref:System.Net.WebException> 설정 throw 되는 <xref:System.Net.WebException.Status%2A> 속성을 <xref:System.Net.WebExceptionStatus.RequestCanceled>.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-108">If the corresponding `End` method is subsequently called after the <xref:System.Web.Services.Protocols.WebClientAsyncResult.Abort%2A> method, a <xref:System.Net.WebException> is thrown, setting the <xref:System.Net.WebException.Status%2A> property to <xref:System.Net.WebExceptionStatus.RequestCanceled>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.Web.Services.Protocols.WebClientAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bc3-109"><see langword="Begin" /> 메서드 비동기 호출의 마지막 매개 변수에 제공된 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-109">Gets the object provided in the last parameter to the <see langword="Begin" /> method asynchronous call.</span></span></summary>
        <value><span data-ttu-id="d6bc3-110"><see langword="Begin" /> 메서드 호출의 마지막 매개 변수에 제공된 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-110">The <see cref="T:System.Object" /> provided in the last parameter to the <see langword="Begin" /> method call.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.IAsyncResult.AsyncState" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bc3-111">비동기 작업이 완료될 때까지 기다리는 데 사용하는 <see cref="T:System.Threading.WaitHandle" />을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-111">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></summary>
        <value><span data-ttu-id="d6bc3-112">비동기 작업이 완료될 때까지 기다리는 데 사용하는 <see cref="T:System.Threading.WaitHandle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-112">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bc3-113"><xref:System.Threading.WaitHandle> 수행 하기 위해 사용할 수 있습니다를 <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, 또는 <xref:System.Threading.WaitHandle.WaitAll%2A> 비동기 호출이 완료 되기를 기다려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-113">The <xref:System.Threading.WaitHandle> can be used to perform a <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, or <xref:System.Threading.WaitHandle.WaitAll%2A> to wait for the asynchronous call to complete.</span></span>  
  
 <span data-ttu-id="d6bc3-114">자세한 내용은 <xref:System.IAsyncResult.AsyncWaitHandle%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-114">For more details, see <xref:System.IAsyncResult.AsyncWaitHandle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IAsyncResult.AsyncWaitHandle" />
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bc3-115">Begin 호출이 동기적으로 완료되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-115">Gets a value indicating whether the Begin call completed synchronously.</span></span></summary>
        <value><span data-ttu-id="d6bc3-116">Begin 호출이 동기적으로 완료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-116"><see langword="true" /> if the Begin call completed synchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bc3-117">경우 <xref:System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously%2A> 로 설정 되어 `true` 내 합니다 <xref:System.AsyncCallback> 호출 하는 스레드가 가능성이 높습니다 대리자 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 현재 스레드가 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-117">If <xref:System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously%2A> is set to `true` within the <xref:System.AsyncCallback> delegate, it is probable that the thread that called <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> is the current thread.</span></span> <span data-ttu-id="d6bc3-118">이 경우 콜백 메서드에서 호출 스택이 제한 없이 증가할 수 있으므로 바인딩된 호출 계속 동기적으로 완료 하는 경우, 다른 비동기 시작을 수행할 때 주의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-118">In this case, you should be careful about making another asynchronous Begin call from the callback method, since it can cause the stack to grow without bound if the calls continue to complete synchronously.</span></span> <span data-ttu-id="d6bc3-119">대신 한 호출 외부 콜백 메서드가 원래 호출 사이트에서 완료 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-119">Instead, the call should be completed at the original call site, outside the callback method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bc3-120">비동기 XML Web services 요청이 완료되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-120">Gets a value indicating whether the asynchronous XML Web service request has completed.</span></span></summary>
        <value><span data-ttu-id="d6bc3-121">비동기 XML Web services 요청이 완료되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="d6bc3-121"><see langword="true" /> if the asynchronous XML Web service request has completed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>