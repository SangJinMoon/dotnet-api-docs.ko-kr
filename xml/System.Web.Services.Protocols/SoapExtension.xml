<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SoapExtension.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac543a7853f787820c9771b5f5fdfbc04ecc8cda4cb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43a7853f787820c9771b5f5fdfbc04ecc8cda4cb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>The base class for SOAP extensions for XML Web services created using ASP.NET.</source>
          <target state="translated">ASP.NET을 사용하여 만든 XML Web services에 대한 SOAP 확장의 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>ASP.NET allows a SOAP-related infrastructure to be built by means of an extensibility mechanism.</source>
          <target state="translated">ASP.NET에는 SOAP 관련 인프라를를 확장성 메커니즘을 사용 하 여 빌드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>The ASP.NET SOAP extension architecture revolves around an extension that can inspect or modify a message at specific stages in message processing on either the client or the server.</source>
          <target state="translated">ASP.NET SOAP 확장 아키텍처를 검사 하거나 메시지를 클라이언트 또는 서버에서 처리 중인 메시지의 특정 단계에서 수정할 수 있는 확장을 중심으로 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>ASP.NET SOAP extensions derive from the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension&gt;</ph> class.</source>
          <target state="translated">ASP.NET SOAP 확장에서 파생 되는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> methods provide alternative mechanisms for initializing the SOAP extension to enhance performance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> 메서드 성능 향상을 위해 SOAP 확장을 초기화 하기 위한 대체 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph> is the heart of most SOAP extensions, as the method is called at each stage defined in <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>, allowing the SOAP extension to perform the desired behavior of that specific SOAP extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph> 에 정의 된 각 단계에서 메서드는 대부분의 SOAP 확장의 핵심은 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>, 특정 SOAP 확장의 원하는 동작을 수행 하려면 SOAP 확장을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>For SOAP extensions that need to modify the SOAP request or SOAP response, <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> provides an opportunity to receive the proposed data to be sent across the wire.</source>
          <target state="translated">SOAP 요청이 나 SOAP 응답 해야 하는 SOAP 확장 수정에 대 한 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> 네트워크를 통해 보낼 제안 된 데이터를 받을 수 있는 기회를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>The following <ph id="ph1">`TraceExtension`</ph> SOAP extension outputs the SOAP request and SOAP response to a specified file when applied to an XML Web service method.</source>
          <target state="translated">다음 <ph id="ph1">`TraceExtension`</ph> SOAP 요청 및 XML 웹 서비스 메서드에 적용할 때 지정된 된 파일에 대 한 SOAP 응답 SOAP 확장을 출력 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>If the following SOAP extension is installed to run with an XML Web service, the ASPNET user account must have permission to write to the directory in which the log file is written.</source>
          <target state="translated">XML 웹 서비스를 실행 하는 다음 SOAP 확장이 설치 되어 있으면 ASPNET 사용자 계정에는 로그 파일 작성 된 디렉터리에 쓸 수 있는 권한이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapExtension" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapExtension" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
          <source>A memory buffer containing the SOAP request or response.</source>
          <target state="translated">SOAP 요청 또는 응답을 포함하는 메모리 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
          <source>When overridden in a derived class, allows a SOAP extension access to the memory buffer containing the SOAP request or response.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 SOAP 확장에서 SOAP 요청 또는 응답을 포함하는 메모리 버퍼에 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> representing a new memory buffer that this SOAP extension can modify.</source>
          <target state="translated">이 SOAP 확장이 수정할 수 있는 새 메모리 버퍼를 나타내는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> ensures that SOAP extensions with the highest priority can modify the actual data closest to the SOAP message sent or returned over the wire.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> 가장 높은 우선 순위를 사용 하 여 SOAP 확장 송신 또는 네트워크를 통해 반환 되는 SOAP 메시지에 가장 가까운 실제 데이터를 수정할 수 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
          <source>SOAP extensions should save references of the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> passed into <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> returned from <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph>.</source>
          <target state="translated">SOAP 확장의 참조를 저장 해야는 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 로 전달 된 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> 에서 반환 된 <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
          <source>If the SOAP extension is configured to run with a XML Web service method, the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> passed into <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> contains the serialized SOAP request at the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize&gt;</ph><ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>.</source>
          <target state="translated">SOAP 확장 XML 웹 서비스 메서드를 사용 하 여 실행 하도록 구성 된 경우는 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 로 전달 된 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> serialize 된 SOAP 요청에 포함 되어는 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize&gt;</ph> <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
          <source>Similarily, the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> reference returned from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> is written into when the serialization occurs and thus contains the serialized SOAP response in the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize&gt;</ph><ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>.</source>
          <target state="translated">마찬가지로는 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 에서 반환한 참조 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> 발생 하 고 따라서 serialize 된 SOAP 응답에 포함 하는 serialization에 기록 됩니다는 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize&gt;</ph> <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
          <source>The following example saves both the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> passed into <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> returned from <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> in the member variables <ph id="ph5">`oldStream`</ph> and <ph id="ph6">`newStream`</ph>, respectively.</source>
          <target state="translated">모두 저장 하는 다음 예제는 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 로 전달 된 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> 에서 반환 된 <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A&gt;</ph> 멤버 변수에 <ph id="ph5">`oldStream`</ph> 및 <ph id="ph6">`newStream`</ph>각각.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapExtension">
          <source>When overridden in a derived class, allows a SOAP extension to initialize data specific to an XML Web service method at a one time performance cost.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 SOAP 확장에서 단일 성능 비용으로 XML Web services 메서드와 관련된 데이터를 초기화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>The type of the class implementing the XML Web service to which the SOAP extension is applied.</source>
          <target state="translated">SOAP 확장이 적용되는 XML Web services를 구현하는 클래스의 형식입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>When overridden in a derived class, allows a SOAP extension to initialize data specific to a class implementing an XML Web service at a one time performance cost.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 SOAP 확장에서 단일 성능 비용으로 XML Web services를 구현하는 클래스와 관련된 데이터를 초기화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that the SOAP extension initializes for caching.</source>
          <target state="translated">캐시하기 위해 SOAP 확장이 초기화하는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>The overload of <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> that gets called by ASP.NET depends on how the SOAP extension was specified.</source>
          <target state="translated">오버 로드가 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 호출 하는 ASP.NET SOAP 확장 지정 방법에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>There are two methods for specifying a SOAP extension:</source>
          <target state="translated">SOAP 확장을 지정 하는 방법은 두 가지가 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>Apply a custom attribute, deriving from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>, to the individual XML Web service method.</source>
          <target state="translated">파생 된 사용자 지정 특성을 적용 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>을 개별 XML 웹 서비스 메서드에 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>Add a reference in either the web.config or app.config configuration files.</source>
          <target state="translated">Web.config 또는 app.config 구성 파일에 대 한 참조를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>If you add a reference to one of the configuration files, the SOAP extension runs for all XML Web services within the scope of that configuration file.</source>
          <target state="translated">구성 파일 중 하나에 대 한 참조를 추가 하는 경우 해당 구성 파일의 범위 내에서 모든 XML 웹 서비스에 대 한 SOAP 확장이 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>When specifying, a SOAP extension by referencing a configuration file, ASP.NET invokes the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> overload that passes in a <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">ASP.NET를 호출 하는 구성 파일을 참조 하 여 SOAP 확장을 지정할 때는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 를 통과 하는 오버 로드는 <ph id="ph2">&lt;xref:System.Type&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>When specifying an extension by applying a custom attribute, ASP.NET invokes the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> that passes in a <ph id="ph2">&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo&gt;</ph> and a <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>.</source>
          <target state="translated">사용자 지정 특성을 적용 하 여 확장을 지정 하는 경우 ASP.NET 호출는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 를 통과 하는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>For details on adding SOAP extensions to a configuration file, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconconfigurationoptionsforaspnetwebservices&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/1f0d71bc-8faa-4730-b500-2a6c7b5d4f6b)</ept>.</source>
          <target state="translated">SOAP 확장을 추가 하는 구성 파일에 대 한 내용은 참조 하십시오. <bpt id="p1">[</bpt> &amp;#91; <ph id="ph1">\&lt;</ph>topic://cpconconfigurationoptionsforaspnetwebservices &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/1f0d71bc-8faa-4730-b500-2a6c7b5d4f6b)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>The following code demonstrates how one can save SOAP extension specific data on a per XML Web service basis.</source>
          <target state="translated">다음 코드에서는 방법을 하나에 SOAP 확장의 특정 데이터를 저장할 수는 XML 웹 서비스에 대 한 기준입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>If the SOAP extension is configured using a configuration file instead of an attribute, the SOAP extension can store data for each class to which the SOAP extension is applied.</source>
          <target state="translated">SOAP 확장을 구성 된 경우는 특성 대신 구성 파일을 사용 하 여 SOAP 확장 SOAP 확장이 적용 되는 각 클래스에 대 한 데이터를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>This example saves the name of a file in which to log the SOAP messages sent to and from the XML Web service method based on the name of the class implementing the XML Web service into the cache.</source>
          <target state="translated">이 예제를 캐시에는 XML 웹 서비스를 구현 하는 클래스의 이름을 기반으로 하는 XML 웹 서비스 메서드나에서 보내고 받는 SOAP 메시지를 기록할 파일의 이름을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
          <source>This code example is part of a full code example for a TraceExtension SOAP extension that can be found in the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension&gt;</ph> class overview.</source>
          <target state="translated">이 코드 예제는에서 찾을 수 있는 TraceExtension SOAP 확장에 대 한 전체 코드 예제는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /&gt;</ph> representing the specific function prototype for the XML Web service method to which the SOAP extension is applied.</source>
          <target state="translated">SOAP 확장이 적용되는 XML Web services 메서드에 대한 특정 함수 프로토타입을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /&gt;</ph> applied to the XML Web service method.</source>
          <target state="translated">XMl Web services 메서드에 적용되는 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>When overridden in a derived class, allows a SOAP extension to initialize data specific to an XML Web service method using an attribute applied to the XML Web service method at a one time performance cost.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 SOAP 확장에서 단일 성능 비용으로 XML Web services 메서드에 적용된 특성을 사용하여 XML Web services 메서드와 관련된 데이터를 초기화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that the SOAP extension initializes for caching.</source>
          <target state="translated">캐시하기 위해 SOAP 확장이 초기화하는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>If the SOAP extension is configured using a configuration file see the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> overload that accepts a <ph id="ph2">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">사용 하 여 구성 파일 참조는 SOAP 확장을 구성 하는 경우는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 를 받아들이는 오버 로드는 <ph id="ph2">&lt;xref:System.Type&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>A SOAP extension has three opportunities to initialize data and they all have different purposes:</source>
          <target state="translated">SOAP 확장은 데이터를 초기화 하는 세 가지 기회를 컴파일하고 용도별로 모두 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.</source>
          <target state="translated">클래스 생성자-클래스 생성자는 SOAP 확장 인스턴스화되고 멤버 변수를 초기화 하는 일반적 때마다 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph>, however, is called just once, the first time a SOAP request is made to an XML Web services method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph>그러나 처음은 SOAP 요청이 XML 웹 서비스 메서드 한 번만 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>If a custom attribute is applied to the XML Web service method, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> method is invoked.</source>
          <target state="translated">사용자 지정 특성은 XML 웹 서비스 메서드에 적용 된 경우는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>This allows the SOAP extension to interrogate the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo&gt;</ph> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>.</source>
          <target state="translated">이 통해 SOAP 확장이 질의 하는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo&gt;</ph> 프로토타입 내용을 보거나에서 파생 된 클래스에 의해 전달 된 확장 프로그램별 데이터에 액세스 하려면 XML 웹 서비스 메서드의 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>The return value is cached by ASP.NET and passed into subsequent <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> methods.</source>
          <target state="translated">반환 값은 ASP.NET에서 캐시 되 고 후속로 전달 된 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>Therefore, initialization done in <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> is encapsulated essentially into a one-time performance hit.</source>
          <target state="translated">따라서에서 초기화를 수행 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 일회성 성능 저하가에 기본적으로 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <ph id="ph4">&lt;xref:System.Object&gt;</ph> initialized in <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> is passed to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> SOAP 요청 XML 웹 서비스 메서드에 적용 되지만는 클래스 생성자의 이점을 활용 하는 때마다 호출 됩니다는 <ph id="ph4">&lt;xref:System.Object&gt;</ph> 에서 초기화 <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>The following code demonstrates how you can obtain SOAP extension-specific data passed in using a class that derives from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>, and then cache that data in <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph>.</source>
          <target state="translated">다음 코드에서 파생 되는 클래스를 사용 하 여 전달 하는 SOAP 확장 프로그램별 데이터를 가져오는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>, 다음에 해당 데이터를 캐시 하 고 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>This code example is part of a full code example for a <ph id="ph1">`TraceExtension`</ph> SOAP extension that can be found in the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension&gt;</ph> class overview.</source>
          <target state="translated">이 코드 예제는에 대 한 전체 코드 예제는 <ph id="ph1">`TraceExtension`</ph> 에서 찾을 수 있는 SOAP 확장의 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension&gt;</ph> 클래스 개요입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>This code example relies on a <ph id="ph1">`TraceExtensionAttribute`</ph> being passed into the <ph id="ph2">`attribute`</ph> parameter.</source>
          <target state="translated">이 코드 예제에서는 의존는 <ph id="ph1">`TraceExtensionAttribute`</ph> 에 전달 되는 <ph id="ph2">`attribute`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
          <source>In the full code example, <ph id="ph1">`TraceExtensionAttribute`</ph> derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph> and adds a <ph id="ph3">`Filename`</ph> property, which is what <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> stores in the cache.</source>
          <target state="translated">전체 코드 예제에서 <ph id="ph1">`TraceExtensionAttribute`</ph> 에서 파생 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph> 추가 <ph id="ph3">`Filename`</ph> 되며 속성 <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 캐시에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> returned from <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /&gt;</ph> cached by ASP.NET.</source>
          <target state="translated">ASP.NET에 의해 캐시된 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>에서 반환되는 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>When overridden in a derived class, allows a SOAP extension to initialize itself using the data cached in the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /&gt;</ph> method.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 SOAP 확장에서 <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /&gt;</ph> 메서드에 캐시된 데이터를 사용하여 자신을 초기화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>A SOAP extension has three opportunities to initialize data and they all have different purposes:</source>
          <target state="translated">SOAP 확장은 데이터를 초기화 하는 세 가지 기회를 컴파일하고 용도별로 모두 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.</source>
          <target state="translated">클래스 생성자-클래스 생성자는 SOAP 확장 인스턴스화되고 멤버 변수를 초기화 하는 일반적 때마다 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph>, however, is called just once, the first time a SOAP request is made to an XML Web services method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph>그러나 처음은 SOAP 요청이 XML 웹 서비스 메서드 한 번만 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>If a custom attribute is applied to the XML Web service method, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> method is invoked.</source>
          <target state="translated">사용자 지정 특성은 XML 웹 서비스 메서드에 적용 된 경우는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>This allows the SOAP extension to interrogate the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo&gt;</ph> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>.</source>
          <target state="translated">이 통해 SOAP 확장이 질의 하는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo&gt;</ph> 프로토타입 내용을 보거나에서 파생 된 클래스에 의해 전달 된 확장 프로그램별 데이터에 액세스 하려면 XML 웹 서비스 메서드의 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>The return value is cached by ASP.NET and passed into subsequent <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> methods.</source>
          <target state="translated">반환 값은 ASP.NET에서 캐시 되 고 후속로 전달 된 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>Therefore, initialization done in <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> is encapsulated essentially into a one-time performance hit.</source>
          <target state="translated">따라서에서 초기화를 수행 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 일회성 성능 저하가에 기본적으로 캡슐화 됩니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <ph id="ph4">&lt;xref:System.Object&gt;</ph> initialized in <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> is passed to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph><ph id="ph2"> - </ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A&gt;</ph> SOAP 요청 XML 웹 서비스 메서드에 적용 되지만는 클래스 생성자의 이점을 활용 하는 때마다 호출 됩니다는 <ph id="ph4">&lt;xref:System.Object&gt;</ph> 에서 초기화 <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>You can also add a SOAP extension without deriving from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph> by using the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>soapExtensionTypes&gt; Element<ept id="p1">](http://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)</ept> in a configuration file.</source>
          <target state="translated">파생 없이 SOAP 확장을 추가할 수도 있습니다 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtensionAttribute&gt;</ph> 를 사용 하 여는 <bpt id="p1">[</bpt> <ph id="ph2">\&lt;</ph>soapExtensionTypes &gt; 요소<ept id="p1">](http://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)</ept> 구성 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>For details, see <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>soapExtensionTypes&gt; Element<ept id="p1">](http://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)</ept> and <bpt id="p2">[</bpt>SOAP Message Modification Using SOAP Extensions<ept id="p2">](http://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt> <ph id="ph1">\&lt;</ph>soapExtensionTypes &gt; 요소<ept id="p1">](http://msdn.microsoft.com/library/7a373a98-6d82-4f8d-a6fc-2996da3fd54c)</ept> 및 <bpt id="p2">[</bpt>SOAP 메시지 수정을 사용 하 여 SOAP 확장<ept id="p2">](http://msdn.microsoft.com/library/97d81ace-95e7-4acc-ae39-9692a0021e95)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
          <source>The following example demonstrates how you can use the data cached during the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 데이터를 캐시 하는 동안 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapMessage" /&gt;</ph> to process.</source>
          <target state="translated">처리할 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapMessage" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>When overridden in a derived class, allows a SOAP extension to receive a <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapMessage" /&gt;</ph> to process at each <ph id="ph2">&lt;see cref="T:System.Web.Services.Protocols.SoapMessageStage" /&gt;</ph>.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 SOAP 확장이 각 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapMessage" /&gt;</ph>에서 처리할 <ph id="ph2">&lt;see cref="T:System.Web.Services.Protocols.SoapMessageStage" /&gt;</ph>를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph> is called at all <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph> stages for SOAP extensions applied to both XML Web services created using ASP.NET and their clients.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph> 전혀 라고 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph> ASP.NET와 해당 클라이언트를 사용 하 여 만든 XML 웹 서비스 모두에 적용 되는 SOAP 확장에 대 한 단계입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>At each <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>, an instance of a class deriving from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapMessage&gt;</ph> is passed to <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph>.</source>
          <target state="translated">각 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>에서 파생 된 클래스의 인스턴스 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapMessage&gt;</ph> 에 전달 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>If the SOAP extension is running on the XML Web service client, then a <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapClientMessage&gt;</ph> object is passed into <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph>; otherwise a <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapServerMessage&gt;</ph> object is passed in.</source>
          <target state="translated">SOAP 확장 XML 웹 서비스 클라이언트에서 실행 중인 경우는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapClientMessage&gt;</ph> 개체에 전달 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph>고, 그렇지 않으면는 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapServerMessage&gt;</ph> 개체에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>The following example is the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph> portion of a SOAP extension that logs SOAP requests and SOAP responses.</source>
          <target state="translated">다음 예제는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A&gt;</ph> SOAP 요청 및 SOAP 응답을 기록 하는 SOAP 확장의 부분입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>By logging the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapMessage&gt;</ph> at the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize&gt;</ph><ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>, the SOAP extension accesses the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream%2A&gt;</ph> to be sent over the wire.</source>
          <target state="translated">로그인 하 여는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapMessage&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize&gt;</ph> <ph id="ph3">&lt;xref:System.Web.Services.Protocols.SoapMessageStage&gt;</ph>, SOAP 확장 액세스는 <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream%2A&gt;</ph> 네트워크를 통해 전송 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>If the SOAP extension is applied to an XML Web service method created using ASP.NET, then the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream%2A&gt;</ph> contains the SOAP response from the XML Web service method.</source>
          <target state="translated">ASP.NET을 사용 하 여 만든 XML 웹 서비스 메서드는 SOAP 확장이 적용 되 면 하면 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream%2A&gt;</ph> XML 웹 서비스 메서드에서 SOAP 응답을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>If the SOAP extension is applied to an XML Web service client, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream%2A&gt;</ph> contains the SOAP request to an XML Web service method.</source>
          <target state="translated">XML 웹 서비스 클라이언트의 경우에 SOAP 확장이 적용 된 경우는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapMessage.Stream%2A&gt;</ph> SOAP 요청 XML 웹 서비스 메서드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
          <source>Classic SoapExtension.ProcessMessage Example#1</source>
          <target state="translated">클래식 SoapExtension.ProcessMessage 예제 #1</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>