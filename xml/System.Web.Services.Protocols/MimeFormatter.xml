<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8d6968d1f8643e778c21e5e9ebd54a15fca8435" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37543289" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="aede8-101">SOAP 없이 HTTP를 사용하여 구현한 웹 서비스와 클라이언트에 모든 판독기와 작성기에 대한 추상 기본 클래스를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aede8-102">웹 서비스 기록기 및 판독기, 직렬화 및 역직렬화 각각 HTTP 요청 또는 응답 스트림을 웹 메서드 매개 변수 또는 반환 개체 사이입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="aede8-103"><xref:System.Web.Services.Protocols.MimeFormatter> 클래스 클라이언트와 서비스 측에 있는 공통 인터페이스와 판독기 및 작성기 클래스에 대 한 기능을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="aede8-104"><xref:System.Web.Services.Protocols.MimeFormatter> 클래스는 HTTP-GET 및 HTTP-POST 작업을 통해 웹 서비스의.NET Framework의 구현을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="aede8-105">HTTP GET 작업에서 요청 매개 변수에서 HTTP 요청의 로케이터 URL (Uniform Resource) 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="aede8-106">HTTP POST 작업에 요청 매개 변수는 HTML 폼와 마찬가지로 HTTP 요청 본문에서 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="aede8-107">두 구현 모두를 사용 하 여 반환 값은 HTTP 응답 본문에 비-SOAP XML 문서로 나타납니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="aede8-108">개발자는 일반적으로 않아도 직접 사용 하 여 <xref:System.Web.Services.Protocols.MimeFormatter> 또는 해당 하위 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="aede8-109">대신 Wsdl.exe 도구에서 HTTP-GET 또는 HTTP-POST 구현에 따라 클라이언트 프록시 코드를 생성할 때 적용 되는 <xref:System.Web.Services.Protocols.HttpMethodAttribute> 각 웹 메서드에 특성을 설정 하 고 <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> 및 <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> 적절 한 형식 속성 파생 된 <xref:System.Web.Services.Protocols.MimeFormatter> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="aede8-110">서버의 ASP.NET 구성 파일 (Web.config)에서 설정에 따라 적절 한 파생된 형식이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="aede8-111">클라이언트에서 적절 한 파생된 형식 WSDL에서 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aede8-112"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="aede8-113">인스턴스를 만들 형식이며 <see cref="T:System.Web.Services.Protocols.MimeFormatter" />에서 파생됩니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span></span></param>
        <param name="initializer"><span data-ttu-id="aede8-114">이전에 <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> 메서드의 파생 클래스 구현을 통해 가져온 인스턴스를 초기화하는 데 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span></span></param>
        <summary><span data-ttu-id="aede8-115"><see cref="T:System.Web.Services.Protocols.MimeFormatter" />에서 파생된 비추상 클래스의 인스턴스를 만들고 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="aede8-116"><see cref="T:System.Web.Services.Protocols.MimeFormatter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aede8-117">합니다 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 메서드는 파생된 클래스의 인스턴스를 만듭니다 및 파생된 클래스의 추상 구현 호출 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="aede8-118"><xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 메서드 요청 또는 응답 처리 될 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="aede8-119">이니셜라이저는 매개 변수로 전달 된 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="aede8-120">이니셜라이저를 매개 변수로 전달 합니다 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 메서드를 호출 하 여 파생된 클래스의 다른 인스턴스에서 가져온는 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 클라이언트 또는 서비스 초기화 하는 동안 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aede8-121">파생 클래스에 재정의된 경우 지정한 메서드의 이니셜라이저를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-121">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="aede8-122">이니셜라이저를 가져온 Web 메서드를 지정하는 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="aede8-123">파생 클래스에 재정의된 경우 지정한 메서드의 이니셜라이저를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-123">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="aede8-124">지정된 메서드에 대한 이니셜라이저를 포함하는 <see cref="T:System.Object" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aede8-125">이니셜라이저는 매개 변수로 전달 된 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="aede8-126">파생된 클래스의 구현 된 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 클라이언트 또는 서비스 초기화 하는 동안 인스턴스 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="aede8-127">나중에 요청 또는 응답 처리 시간에 이니셜라이저 개체가 전달 되는 정적 <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> 파생된 클래스를 선택한 후에 다른 개체의 인스턴스를 만드는 메서드를 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 초기화 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="aede8-128">다른 개체는 실제 읽기 또는 쓰기를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="aede8-129">이니셜라이저를 가져올 형식이며 <see cref="T:System.Web.Services.Protocols.MimeFormatter" />에서 파생됩니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span></span></param>
        <param name="methodInfo"><span data-ttu-id="aede8-130">이니셜라이저를 가져온 Web 메서드를 지정하는 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="aede8-131">지정된 메서드에 대한 이니셜라이저를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-131">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="aede8-132">지정한 메서드의 이니셜라이저가 포함된 <see cref="T:System.Object" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aede8-133">이니셜라이저는 매개 변수로 전달 된 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="aede8-134">정적 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 메서드를 호출 하는 파생된 클래스의 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 메서드를 암시적으로 파생된 클래스의 인스턴스를 만들고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="aede8-135">동시 요청 또는 응답 처리에 이니셜라이저 개체에 전달 되며는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 파생된 클래스의 다른 인스턴스에 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="aede8-136">두 번째 개체는 실제 읽기 또는 쓰기를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aede8-137">파생 클래스에서 재정의된 경우 메서드 정의의 입력 배열에 해당하는 이니셜라이저 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="aede8-138">각 메서드에 대해 반환된 이니셜라이저 배열의 해당 인덱스 개체를 가져오는 웹 메서드 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span></span></param>
        <summary><span data-ttu-id="aede8-139">파생 클래스에서 재정의된 경우 메서드 정의의 입력 배열에 해당하는 이니셜라이저 개체의 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
        <returns><span data-ttu-id="aede8-140">메서드 정의 입력 배열에 해당하는 이니셜라이저 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-140">An array of initializer objects corresponding to the input array of method definitions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aede8-141">이니셜라이저는 매개 변수로 전달 된 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="aede8-142">합니다 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> 인스턴스 메서드를 호출 하는 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 각각에 대 한 인스턴스 메서드는 웹 메서드를 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="aede8-143">파생 된 클래스의 인스턴스를 즉 <xref:System.Web.Services.Protocols.MimeFormatter> 를 이미 만들었습니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="aede8-144">요청 또는 응답 처리 될 경우 이니셜라이저에 전달 되는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 파생된 클래스의 다른 인스턴스에 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="aede8-145">두 번째 개체는 실제 읽기 또는 쓰기를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="aede8-146">이니셜라이저를 가져올 형식이며 <see cref="T:System.Web.Services.Protocols.MimeFormatter" />에서 파생됩니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span></span></param>
        <param name="methodInfos"><span data-ttu-id="aede8-147">이니셜라이저를 가져올 웹 메서드를 지정하는 <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> 형식 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span></span></param>
        <summary><span data-ttu-id="aede8-148"><see cref="T:System.Web.Services.Protocols.MimeFormatter" />에서 파생된 지정한 클래스의 메서드 정의 입력 배열에 해당하는 이니셜라이저 개체 배열을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="aede8-149"><see cref="T:System.Web.Services.Protocols.MimeFormatter" />에서 파생된 지정한 클래스의 메서드 정의 입력 배열에 해당하는 이니셜라이저 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aede8-150">이니셜라이저는 매개 변수로 전달 된 개체는 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="aede8-151">정적 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> 메서드를 호출 하면 합니다 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 변수로 지정 된 파생된 클래스에 속하는 메서드에 `type` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="aede8-152">메서드를 구현하고 있는 특정 클래스에 해당하는 형식의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-152">An object of a type appropriate to the particular class that is implementing the method.</span></span></param>
        <summary><span data-ttu-id="aede8-153">파생 클래스에서 재정의된 경우 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="aede8-153">When overridden in a derived class, initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aede8-154">그러나 <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> 이니셜라이저를 호출 하 여 가져올; 메서드가 요청 또는 응답 처리 시 호출 되는 <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 클라이언트 또는 서비스 초기화 하는 동안 다른 인스턴스에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="aede8-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>