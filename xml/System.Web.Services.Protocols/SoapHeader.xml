<Type Name="SoapHeader" FullName="System.Web.Services.Protocols.SoapHeader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="732daa2487ec9d473ef56917139f1ca0370354e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549287" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapHeader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapHeader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHeader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapHeader" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHeader abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.SoapType(IncludeInSchema=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlType(IncludeInSchema=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>파생 클래스에서 재정의된 경우 SOAP 헤더의 내용을 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 헤더는 데이터는 직접 관련이 없는 XML 웹 서비스 메서드의 기본 기능과 경우 XML 웹 서비스 메서드 간에 데이터를 전달 하기 위한 메서드를 제공 합니다. 예를 들어, XML 웹 서비스는 사용자 지정 인증 체계를 각기 여러 XML 웹 서비스 메서드를 포함할 수 있습니다. 사용자 지정 인증 체계에 대 한 각 XML 웹 서비스 메서드에 매개 변수를 추가 하는 대신 한 <xref:System.Web.Services.Protocols.SoapHeaderAttribute>참조 하는 클래스에서 파생 된 <xref:System.Web.Services.Protocols.SoapHeader>, 각 XML 웹 서비스 메서드에 적용할 수 있습니다. 파생 된 클래스에 대 한 구현을 <xref:System.Web.Services.Protocols.SoapHeader> 사용자 지정 인증 체계를 처리 합니다. 이러한 방식으로 XML 웹 서비스 메서드에 특정는 기능을 구현 하 고 SOAP 헤더를 사용 하 여 추가 기능을 추가 합니다.  
  
 다음 목록을 받아 SOAP 헤더를 처리 하는 기본 단계 정리 되어 있습니다.  
  
1.  파생 되는 클래스를 만듭니다 <xref:System.Web.Services.Protocols.SoapHeader> SOAP 헤더에 전달 된 데이터를 나타내는입니다.  
  
2.  XML 웹 서비스를 구현 하는 클래스 또는 XML 웹 서비스 클라이언트 프록시 클래스를 첫 번째 단계에서 만든 형식의 구성원을 추가 합니다.  
  
3.  적용 한 <xref:System.Web.Services.Protocols.SoapHeaderAttribute> 의 두 번째 단계에서 만든 멤버를 지정 하는 XML 웹 서비스 메서드 또는 프록시 클래스에 해당 하는 메서드는 <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> 속성입니다.  
  
4.  XML 웹 서비스 메서드 또는 XML 웹 서비스 클라이언트 코드 내에서 액세스는 <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> SOAP 헤더에서 전송 되는 데이터를 처리 하는 속성입니다.  
  
   
  
## Examples  
 다음 `MyWebService` XML 웹 서비스 정의 `MyHeader` SOAP 헤더와 함께 호출을 보낼 해야는 `MyWebMethod` XML 웹 서비스 메서드. 또한 `MyWebMethod` 이외의 모든 SOAP 헤더를 받는 `MyHeader` SOAP 헤더입니다.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapUnknownHeader" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderAttribute" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeaderDirection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHeader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapHeader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.Protocols.SoapHeader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Actor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("actor", Namespace="http://schemas.xmlsoap.org/soap/envelope/")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("actor", Namespace="http://schemas.xmlsoap.org/soap/envelope/")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 헤더의 수신자를 가져오거나 설정합니다.</summary>
        <value>SOAP 헤더의 수신자로, 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 헤더의 수신자를 설정 하려면 설정는 <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 속성입니다. XML 웹 서비스와 통신 하는 데 사용 된 SOAP 프로토콜의 버전에 관계 없이.NET Framework SOAP 프로토콜의 버전에 고유 SOAP 메시지를 자동으로 생성 합니다. 특히 XML 요소 및 수신자를 나타내는 XML 네임 스페이스는 두 가지 버전에 대 한 서로 다릅니다.  
  
 XML 웹 서비스 SOAP 헤더를 받는 중 하나를 가져오면 해당 수신자를 가져올 수는 <xref:System.Web.Services.Protocols.SoapHeader.Role%2A> 또는 <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 속성입니다.  
  
 에 대 한 수신자는 `Body` 각각 내에서 SOAP 헤더의 요소와는 `Header` 요소는 SOAP 메시지의 필요 같을 수 없습니다. 경우는 `Header` 요소가 존재 하는 SOAP 메시지, XML 웹 서비스 메서드나 중간자 사이에 보낼 수 있는 추가 데이터를 나타냅니다. SOAP 라는 해당 데이터의 받는 사람 `Actor` 버전 1.1에서는 XML 웹 서비스 메서드에 대 한 URI 이외의 다른 URI 될 수 있습니다.  
  
 SOAP에 대 한 자세한 내용은 `actor` 특성을 SOAP 사양에서 http://www.w3.org/TR/SOAP/합니다.  
  
   
  
## Examples  
 다음 XML 웹 서비스 클라이언트 호출에서 `MyWebMethod` 형식의 사용자 지정 SOAP 헤더를 만든 후 XML 웹 서비스 메서드에 `MyHeader` 설정는 <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 속성을 `http://www.contoso.com/MySoapHeaderHandler`합니다.  
  
 [!code-cpp[Classic SoapHeader.Actor Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeader.Actor Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeader.Actor Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.Actor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DidUnderstand">
      <MemberSignature Language="C#" Value="public bool DidUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DidUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.DidUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property DidUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DidUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web services 메서드가 SOAP 헤더를 올바르게 처리했는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          SOAP 헤더를 올바르게 처리했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 웹 서비스에 의해 정의 된 SOAP 헤더를 ASP.NET에서는 XML 웹 서비스 메서드에서의 초기 값을 설정 하 여 SOAP 헤더를 제대로 처리 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> 를 `true`합니다. XML 웹 서비스에 정의 되지 않은 SOAP 헤더에 대 한 초기 값은 `false`합니다. ASP.NET 감지 SOAP 헤더를 사용 하 여 XML 웹 서비스 메서드에 전달 된 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> 로 설정 `false` 메서드가 반환 된 후, <xref:System.Web.Services.Protocols.SoapHeaderException> XML 웹 서비스 메서드의 결과 대신 XML 웹 서비스 클라이언트를 다시 throw 됩니다.  
  
   
  
## Examples  
 다음 `MyWebService` XML 웹 서비스 정의 `MyHeader` SOAP 헤더와 함께 호출을 보낼 해야는 `MyWebMethod` XML 웹 서비스 메서드. 또한는 `MyWebMethod` 이외의 모든 SOAP 헤더를 받는 `MyHeader` SOAP 헤더입니다. SOAP 헤더에 대 한는 `MyWebMethod` 를 처리할 수 있지만 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> 로 설정 된 `true`합니다.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="EncodedMustUnderstand">
      <MemberSignature Language="C#" Value="public string EncodedMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedMustUnderstand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedMustUnderstand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("mustUnderstand", Namespace="http://schemas.xmlsoap.org/soap/envelope/")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("mustUnderstand", Namespace="http://schemas.xmlsoap.org/soap/envelope/")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 프로토콜 버전 1.1을 사용하여 통신할 때 SOAP 헤더에 대한 <see langword="mustUnderstand" /> XML 특성의 값을 가져오거나 설정합니다.</summary>
        <value>
          <see langword="mustUnderstand" /> 특성 값으로, 기본값은 "0"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하지 마십시오. 대신 사용 하 여는 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 속성입니다.  
  
   
  
## Examples  
 [!code-cpp[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/CPP/soapheader_encodedmustunderstand.cpp#1)]
 [!code-csharp[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/CS/soapheader_encodedmustunderstand.cs#1)]
 [!code-vb[SoapHeader_EncodedMustUnderstand#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHeader_EncodedMustUnderstand/VB/soapheader_encodedmustunderstand.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성이 "0", "1", "true" 또는 "false" 이외의 다른 값으로 설정된 경우</exception>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      </Docs>
    </Member>
    <Member MemberName="EncodedMustUnderstand12">
      <MemberSignature Language="C#" Value="public string EncodedMustUnderstand12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedMustUnderstand12" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedMustUnderstand12 As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedMustUnderstand12 { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("mustUnderstand", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("mustUnderstand", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 프로토콜 버전 1.2를 사용하여 통신할 때 SOAP 헤더에 대한 <see langword="mustUnderstand" /> XML 특성의 값을 가져오거나 설정합니다.</summary>
        <value>SOAP 헤더의 <see langword="mustUnderstand" /> XML 특성 값입니다. 기본값은 "0"입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성을 사용 하지 마십시오. 대신 사용 하 여는 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">속성이 "0", "1", "true" 또는 "false" 이외의 다른 값으로 설정된 경우</exception>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      </Docs>
    </Member>
    <Member MemberName="EncodedRelay">
      <MemberSignature Language="C#" Value="public string EncodedRelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncodedRelay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.EncodedRelay" />
      <MemberSignature Language="VB.NET" Value="Public Property EncodedRelay As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncodedRelay { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("relay", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("relay", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 1.2 헤더의 릴레이 특성을 가져오거나 설정합니다.</summary>
        <value>"0", "false", "1" 또는 "true" 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapHeader.EncodedRelay%2A> 속성 SOAP 1.2에만 적용 되 고 메시지의 수신자를 다음 다운스트림 노드로 메시지를 전달 하는 경우이 헤더 전달 하는지 여부를 나타냅니다. .NET Framework SOAP 중간 매개 자의 지원 하지 않으므로이 속성은 직렬화 및 역직렬화 없지만 무시 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property MustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MustUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.Protocols.SoapHeader" />를 인식해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          XML Web services가 <see cref="T:System.Web.Services.Protocols.SoapHeader" />를 올바르게 해석하고 처리해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 웹 서비스 클라이언트와 XML 웹 서비스 메서드 호출에 SOAP 헤더를 추가 하는 경우는 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 속성이로 설정 `true`, XML 웹 서비스 메서드를 설정 해야 합니다는 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> 속성을 `true`, 그렇지 않으면는 <xref:System.Web.Services.Protocols.SoapHeaderException> 다시 throw 됩니다 ASP.NET에서 XML 웹 서비스 클라이언트입니다.  
  
 하지만 모두는 <xref:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand%2A> 및 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 속성의 값을 설정 하려면 사용할 수는 `mustUnderstand` SOAP 헤더 내에서 특성의 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 속성 부울 값을 사용 하 여 특성을 설정할 수 있습니다.  
  
 클라이언트에 SOAP 헤더를 추가 하는 방법에 대 한 세부 정보를 참조 하십시오. [ &#91; \<topic://cpconusingsoapheaders >&#93;](http://msdn.microsoft.com/library/7bd961f2-b492-48d0-bafe-09d5d5fec3ba)합니다.  
  
   
  
## Examples  
 형식의 사용자 지정 SOAP 헤더를 정의 하는 다음 XML 웹 서비스 클라이언트 `MyHeader`, 설정는 <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A> 속성을 `true`, 호출의 `MyWebMethod` XML 웹 서비스 메서드. XML 웹 서비스 메서드를 설정 하지 않으면는 <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> 의 속성은 `MyHeader` SOAP 헤더를 `true`, <xref:System.Web.Services.Protocols.SoapHeaderException> throw 됩니다.  
  
 [!code-cpp[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeader.MustUnderstand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeader.MustUnderstand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapHeader.DidUnderstand" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Relay" />
      <MemberSignature Language="VB.NET" Value="Public Property Relay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Relay { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 노드에서 헤더가 인식되지 않을 경우 SOAP 헤더를 다음 SOAP 노드로 릴레이하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          SOAP 헤더에 "relay" 특성이 "true"로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본 SOAP 1.2 처리 규칙에는 SOAP 노드에서 다음 노드로 메시지를 전달 하기 전에 SOAP 처리 노드 인식 되지 않는 헤더를 제거 해야 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Role" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeader.Role" />
      <MemberSignature Language="VB.NET" Value="Public Property Role As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Role { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapAttribute("role", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("role", Namespace="http://www.w3.org/2003/05/soap-envelope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SOAP 헤더의 수신자를 가져오거나 설정합니다.</summary>
        <value>SOAP 헤더의 수신자를 나타내는 URI입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 헤더의 수신자를 설정 하려면 설정는 <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 속성입니다. XML 웹 서비스와 통신 하는 데 사용 된 SOAP 프로토콜의 버전에 관계 없이.NET Framework SOAP 프로토콜의 버전에 고유 SOAP 메시지를 자동으로 생성 합니다. 특히 XML 요소 및 수신자를 나타내는 XML 네임 스페이스는 두 가지 버전에 대 한 서로 다릅니다.  
  
 XML 웹 서비스 SOAP 헤더를 받는 중 하나를 가져오면 해당 수신자를 가져올 수는 <xref:System.Web.Services.Protocols.SoapHeader.Role%2A> 또는 <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> 속성입니다.  
  
 에 대 한 수신자는 `Body` 각각 내에서 SOAP 헤더의 요소와는 `Header` 요소는 SOAP 메시지의 필요 같을 수 없습니다. 경우는 `Header` 요소가 존재 하는 SOAP 메시지, XML 웹 서비스 메서드나 중간자 사이에 보낼 수 있는 추가 데이터를 나타냅니다. SOAP 라는 해당 데이터의 받는 사람 `Role` 버전 SOAP 사양 및 SOAP 1.2에에서 `Actor` 버전 1.1에서는 XML 웹 서비스 메서드에 대 한 URI 이외의 다른 URI 될 수 있습니다.  
  
 SOAP에 대 한 자세한 내용은 `actor` 특성을 SOAP 사양에서 http://www.w3.org/TR/SOAP/합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>