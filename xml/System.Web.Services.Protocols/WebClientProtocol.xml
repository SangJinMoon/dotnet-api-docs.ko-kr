<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WebClientProtocol.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5db5c8683825670c8806d93c3429e34ced9d84bd0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db5c8683825670c8806d93c3429e34ced9d84bd0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>Specifies the base class for all XML Web service client proxies created using ASP.NET.</source>
          <target state="translated">ASP.NET을 사용하여 만든 모든 XML Web services 클라이언트 프록시의 기본 클래스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>The properties of the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> class are used to control the behavior of the transport used to transmit the XML Web service request and response.</source>
          <target state="translated">속성은 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> 클래스는 XML 웹 서비스 요청 및 응답을 전송 하는 데 사용 되는 전송의 동작을 제어 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>The properties on this class map to properties found on <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph>.</source>
          <target state="translated">이 클래스의 속성이 속성에 매핑할 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>Instances of classes deriving from <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph>, such as <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>, are used as the transport mechanism for XML Web services created using ASP.NET.</source>
          <target state="translated">파생 된 클래스의 인스턴스 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph>와 같은 <ph id="ph2">&lt;xref:System.Net.HttpWebRequest&gt;</ph>, ASP.NET을 사용 하 여 만든 XML 웹 서비스에 대 한 전송 메커니즘으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> for the XML Web service you want to call.</source>
          <target state="translated">XML 웹 서비스와 통신할 프록시 클래스에서 직접 또는 간접적으로 파생 만들어야 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> 호출 하려는 XML 웹 서비스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.</source>
          <target state="translated">프록시 클래스를 수동으로 만들지 않고 지정된 된 XML 웹 서비스의 서비스 설명에 대 한 프록시 클래스를 만드는 Wsdl.exe 도구를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>Since <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> is the base class for your client proxy, you will find its properties on your proxy classes.</source>
          <target state="translated">이후 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> 기본 클래스는 사용자 클라이언트 프록시에 대 한 프록시 클래스에 해당 속성을 찾을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>These properties are useful for controlling the request behavior of the underlying transport.</source>
          <target state="translated">이러한 속성은 기본 전송의 요청 동작을 제어 하는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>For instance, use the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A&gt;</ph> property for calling authenticated XML Web services.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A&gt;</ph> 호출에 대 한 속성 XML 웹 서비스를 인증 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>Many of the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> properties are used to initialize the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> object that is used to make the Web request.</source>
          <target state="translated">대부분의 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> 속성 초기화에 사용 되는 <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> 웹 요청을 사용 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>The following example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">다음 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 <ph id="ph1">`Math`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`EnterBtn_Click`</ph> 함수, Web Form 프록시 정보 및 클라이언트 자격 증명에 설정 원격 XML 웹 서비스 메서드를 호출 하기 전에 프록시 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>The properties on this class are copied into a new instance of a <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> object for each XML Web service method call.</source>
          <target state="translated">이 클래스에 속성의 새 인스턴스를에 복사 되는 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 각 XML 웹 서비스 메서드 호출에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>While you can call XML Web service methods on the same <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.WebClientProtocol" /&gt;</ph> instance from different threads at the same time, there is no synchronization done to ensure that a consistent snapshot of the properties will get transferred to the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> object.</source>
          <target state="translated">동일한 XML 웹 서비스 메서드를 호출할 수 있습니다 하는 동안 <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.WebClientProtocol" /&gt;</ph> 인스턴스 동시에 서로 다른 스레드에서 없는 속성의 일관 된 스냅숏이 됩니다 가져오기 전송 됨을 보장 하기 위해 수행 된 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>Therefore if you need to modify the properties and make concurrent method calls from different threads you should use a different instance of the XML Web service proxy or provide your own synchronization.</source>
          <target state="translated">따라서 속성을 수정 하 고 서로 다른 동시 메서드 호출을 수행 해야 할 경우 스레드는 XML 웹의 다른 인스턴스를 사용 해야 서비스 프록시 또는 사용자 지정 동기화를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.WebClientProtocol" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.WebClientProtocol" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.Abort">
          <source>Cancels a request to an XML Web service method.</source>
          <target state="translated">XML Web services 메서드에 대한 요청을 취소합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the client protocol handler..</source>
          <target state="translated">클라이언트 프로토콜 처리기의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)">
          <source>The client protocol handler to be added to the cache.</source>
          <target state="translated">캐시에 추가되는 클라이언트 프로토콜 처리기입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)">
          <source>Add an instance of the client protocol handler to the cache.</source>
          <target state="translated">클라이언트 프로토콜 처리기의 인스턴스를 캐시에 추가합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName">
          <source>Gets or sets the name of the connection group for the request.</source>
          <target state="translated">요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName">
          <source>The name of the connection group.</source>
          <target state="translated">연결 그룹의 이름입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A&gt;</ph> property enables you to associate a request to a connection group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A&gt;</ph> 속성을 사용 하면 연결 그룹에 대 한 요청을 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName">
          <source>For more details, see <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.ConnectionGroupName%2A&gt;</ph>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>Gets or sets security credentials for XML Web service client authentication.</source>
          <target state="translated">XML Web services 클라이언트 인증의 보안 자격 증명을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph> for the XML Web service client.</source>
          <target state="translated">XML Web services 클라이언트에 대한 <ph id="ph1">&lt;see cref="T:System.Net.ICredentials" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>When using the <ph id="ph1">`Credentials`</ph> property, a XML Web service client must instantiate a class implementing <ph id="ph2">&lt;xref:System.Net.ICredentials&gt;</ph>, such as <ph id="ph3">&lt;xref:System.Net.NetworkCredential&gt;</ph>, and then set the client credentials specific to the authentication mechanism.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">`Credentials`</ph> 속성을 구현 하는 클래스는 XML 웹 서비스 클라이언트를 인스턴스화해야 <ph id="ph2">&lt;xref:System.Net.ICredentials&gt;</ph>와 같은 <ph id="ph3">&lt;xref:System.Net.NetworkCredential&gt;</ph>, 다음 클라이언트 자격 증명 특정로 설정 하는 인증 메커니즘입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> basic을 사용 하 여 인증 자격 증명을 설정 하려면 클래스를 사용할 수 다이제스트, NTLM 및 Kerberos 인증 메커니즘입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType&gt;</ph> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType&gt;</ph>로 설정되면 클라이언트는 서버의 구성 방식에 따라 Kerberos 및 NTLM 인증을 수행하기 위해 서버와 협상합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>The following example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">다음 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 <ph id="ph1">`Math`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form explicitly sets authentication credentials using the <ph id="ph2">`Credentials`</ph> property.</source>
          <target state="translated">내에서 <ph id="ph1">`EnterBtn_Click`</ph> 함수, 웹 폼 인증 자격 증명을 사용 하 여 명시적으로 설정 된 <ph id="ph2">`Credentials`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>The user name, password and domain are passed into the constructor for the <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> class.</source>
          <target state="translated">사용자 이름, 암호 및 도메인에 대 한 생성자로 전달 되는 <ph id="ph1">&lt;xref:System.Net.NetworkCredential&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
          <source>For more information, see.</source>
          <target state="translated">자세한 내용은</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the client protocol handler to be returned from the cache.</source>
          <target state="translated">캐시에서 반환할 클라이언트 프로토콜 처리기의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)">
          <source>Gets an instance of a client protocol handler from the cache.</source>
          <target state="translated">캐시에서 클라이언트 프로토콜 처리기의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)">
          <source>An instance of a client protocol handler from the cache.</source>
          <target state="translated">캐시에서 클라이언트 프로토콜 처리기의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to use when creating the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>를 만들 때 사용할 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> instance for the specified <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>의 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
          <source>This protected method is called by the XML Web service client infrastructure to get a new <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> transport object to transmit the XML Web service request.</source>
          <target state="translated">XML Web services 클라이언트 인프라에서는 XML Web services 요청을 전송하는 데 사용되는 새 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 전송 개체를 가져오기 위해 이 보호된 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
          <source>This method can be overridden to customize the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> object before the XML Web service request is made.</source>
          <target state="translated">사용자 지정 하려면이 메서드를 재정의할 수는 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> XML 웹 서비스 요청 하기 전에 개체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
          <source>For example you could add a custom header to the request.</source>
          <target state="translated">예를 들어 요청에 사용자 지정 헤더를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>Returns a response from a request to an XML Web service method.</source>
          <target state="translated">XML Web services 메서드에 대한 요청에서 응답을 반환합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.WebClientProtocol">
          <source>This protected method is called by the XML Web service client infrastructure to get the response from a synchronous XML Web service request.</source>
          <target state="translated">XML Web services 클라이언트 인프라에서는 동기 XML Web services 요청에서 응답을 가져오기 위해 이 보호된 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> to get the response from.</source>
          <target state="translated">응답을 가져올 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)">
          <source>Returns a response from a synchronous request to an XML Web service method.</source>
          <target state="translated">XML Web services 메서드에 대한 동기 요청에서 응답을 반환합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)">
          <source>A response from a synchronous request to an XML Web service method.</source>
          <target state="translated">XML Web services 메서드에 대한 동기 요청의 응답입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)">
          <source>If <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /&gt;</ph> is invoked prior to calling <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /&gt;</ph>를 호출하기 전에 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" /&gt;</ph>를 호출한 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> to get the response from.</source>
          <target state="translated">응답을 가져올 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> to pass to <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /&gt;</ph> when the response has completed.</source>
          <target state="translated">응답이 완료될 때 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>에 전달할 <ph id="ph2">&lt;see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
          <source>Returns a response from an asynchronous request to an XML Web service method.</source>
          <target state="translated">XML Web services 메서드에 대한 비동기 요청에서 응답을 반환합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
          <source>This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.</source>
          <target state="translated">XML Web services 클라이언트 인프라에서는 비동기 XML Web services 요청에서 응답을 가져오기 위해 이 보호된 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
          <source>A response from an asynchronous request to an XML Web service method.</source>
          <target state="translated">XML Web services 메서드에 대한 비동기 요청의 응답입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
          <source>If <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /&gt;</ph> is invoked prior to calling <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /&gt;</ph>를 호출하기 전에 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" /&gt;</ph>를 호출한 경우</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>Gets or sets whether pre-authentication is enabled.</source>
          <target state="translated">사전 인증을 활성화할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to pre-authenticate the request; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청을 사전 인증하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports.</source>
          <target state="translated">자격 증명을 사용 하지 않고 리소스를 요청 하는 클라이언트, 서버 요청 문제를 제기 하 고 지 원하는 어떤 인증 스키마를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>The client chooses an authentication scheme and sends the appropriate <ph id="ph1">`WWW-authenticate`</ph> header to the server.</source>
          <target state="translated">클라이언트는 인증 체계를 선택 하 고 적절 한 보냅니다 <ph id="ph1">`WWW-authenticate`</ph> 서버에 헤더입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>When <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">`WWW-authenticate`</ph> header is sent with all subsequent requests.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">`WWW-authenticate`</ph> 헤더는 모든 후속 요청과 함께 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>When <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A&gt;</ph> is <ph id="ph2">`false`</ph>, a request is made to the XML Web service method without initially attempting to authenticate the user.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, 요청이 있는 XML 웹 서비스 메서드를 처음 하지 않고 사용자를 인증 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>If the XML Web service allows anonymous access, then the XML Web service method is executed.</source>
          <target state="translated">XML 웹 서비스에서 익명 액세스를 허용 하는 경우 XML 웹 서비스 메서드가 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>If anonymous access is disallowed, a 401 HTTP return code is sent back to the client.</source>
          <target state="translated">익명 액세스 허용 되지 않는 경우 401 HTTP 반환 코드를 다시 클라이언트에 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>In response, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> class returns authentication credentials to the Web server.</source>
          <target state="translated">에 대 한 응답의 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> 클래스 웹 서버에 인증 자격 증명을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
          <source>If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.</source>
          <target state="translated">클라이언트가 인증 되 고 XML 웹 서비스에 액세스할 수 있는 권한이 이후에, XML 웹 서비스 메서드가 실행 실행 됩니다. 그렇지 않으면 클라이언트는 액세스가 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> used to make the client request to the XML Web service.</source>
          <target state="translated">XML Web services에 클라이언트 요청을 하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>The character encoding for the client request.</source>
          <target state="translated">클라이언트 요청의 문자 인코딩입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, which uses the default encoding for the underlying transport and protocol.</source>
          <target state="translated">기본값은 기본 전송 수단 및 프로토콜에 대해 기본 인코딩을 사용하는 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A&gt;</ph> determines the encoding for the request message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A&gt;</ph> 요청 메시지에 대 한 인코딩을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebRequest.ContentType%2A&gt;</ph> of the request will be annotated with the encoding value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebRequest.ContentType%2A&gt;</ph> 요청의 인코딩 값으로 주석을 달아야 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> support a particular protocol, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph> does for SOAP, set this property to conform to encoding requirements for the specific protocol.</source>
          <target state="translated">파생 된 클래스 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> 같은 특정 프로토콜을 지 원하는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph> 는 soap의 경우 특정 프로토콜에 대 한 인코딩 요구 사항에 맞게이 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph> sets the default encoding to UTF-8.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph> 기본 인코딩을 u t F-8로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>The following example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">다음 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 <ph id="ph1">`Math`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form explicitly sets RequestEncoding to UTF-8.</source>
          <target state="translated">내에서 <ph id="ph1">`EnterBtn_Click`</ph> 함수 Web Form을 명시적으로 설정 RequestEncoding을 u t F-8입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.WebClientProtocol.Timeout">
          <source>Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).</source>
          <target state="translated">동기 XML Web services 요청에 대한 응답이 도착하기까지 대기하는 시간(밀리초)을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Timeout">
          <source>The time out, in milliseconds, for synchronous calls to the XML Web service.</source>
          <target state="translated">XML Web services에 대한 동기 호출의 제한 시간(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Timeout">
          <source>The default is 100000 milliseconds.</source>
          <target state="translated">기본값은 100000 밀리초입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Timeout">
          <source>Setting the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType&gt;</ph> indicates that the request does not time out. Even though an XML Web service client can set the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A&gt;</ph> property to not time out, the Web server can still cause the request to time out on the server side.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType&gt;</ph> 요청 제한 시간이 초과 되지 않은 것을 나타냅니다. XML 웹 서비스 클라이언트 설정 수 있지만 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A&gt;</ph> 제한 시간이 초과 되지 속성, 서버 쪽에서 웹 서버 요청 제한 시간이 초과 발생할 여전히 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Timeout">
          <source>The following example sets the <ph id="ph1">`Timeout`</ph> value to 15000 (15 seconds) for the synchronous call to the <ph id="ph2">`Add`</ph> XML Web service method within the <ph id="ph3">`Math`</ph> XML Web service.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Timeout`</ph> 15000 (15 초)에 대 한 동기 호출에 대 한 값은 <ph id="ph2">`Add`</ph> 내에서 XML 웹 서비스 메서드는 <ph id="ph3">`Math`</ph> XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.WebClientProtocol.Url">
          <source>Gets or sets the base URL of the XML Web service the client is requesting.</source>
          <target state="translated">클라이언트에서 요청 중인 XML Web services의 기본 URL을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Url">
          <source>The base URL of the XML Web service the client is requesting.</source>
          <target state="translated">클라이언트에서 요청 중인 XML Web services의 기본 URL입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Url">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.String.Empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Url">
          <source>Proxy classes generated using Wsdl.exe will set a default <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property for the client to use.</source>
          <target state="translated">Wsdl.exe를 사용 하 여 생성 된 프록시 클래스는 기본 설정 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> 속성을 사용 하도록 클라이언트에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Url">
          <source>The default <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> is determined by the location attribute found in the service description from which the proxy class was generated.</source>
          <target state="translated">기본 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> 를 프록시 클래스가 생성 된 서비스 설명에 위치 특성에 의해 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Url">
          <source>Derived classes supporting specific protocols, such as <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpPostClientProtocol&gt;</ph> might add extra information to <ph id="ph3">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> to make the XML Web service request.</source>
          <target state="translated">파생 클래스와 같은 특정 프로토콜을 지 원하는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpPostClientProtocol&gt;</ph> 추가 정보를 추가할 수 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> XML 웹 서비스 요청을 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Url">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> 동일한 서비스 설명에서 생성 된 프록시 클래스를 구현 하는 모든 XML 웹 서비스를 참조로 속성을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.Url">
          <source>The following example changes the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property for the <ph id="ph2">`math`</ph> XML Web service to the Web server named <ph id="ph3">`http:// www.contoso.com`</ph>.</source>
          <target state="translated">다음 예제에서는 변경 된 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> 속성에 대 한는 <ph id="ph2">`math`</ph> XML 웹 서비스 라는 웹 서버를 <ph id="ph3">`http:// www.contoso.com`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials">
          <source>Gets or sets a value that indicates whether to set the <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /&gt;</ph> property to the value of the <ph id="ph2">&lt;see cref="P:System.Net.CredentialCache.DefaultCredentials" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /&gt;</ph> 속성을 <ph id="ph2">&lt;see cref="P:System.Net.CredentialCache.DefaultCredentials" /&gt;</ph> 속성 값으로 설정할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the Credentials property is set to the value of the <ph id="ph2">&lt;see cref="P:System.Net.CredentialCache.DefaultCredentials" /&gt;</ph> property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">자격 증명 속성이 <ph id="ph2">&lt;see cref="P:System.Net.CredentialCache.DefaultCredentials" /&gt;</ph> 속성 값으로 설정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>