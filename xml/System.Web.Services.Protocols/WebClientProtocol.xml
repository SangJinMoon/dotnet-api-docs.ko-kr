<Type Name="WebClientProtocol" FullName="System.Web.Services.Protocols.WebClientProtocol">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f105aaabd9f908e04e2b55096014df9d110c1ec" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36595014" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebClientProtocol : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WebClientProtocol extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebClientProtocol&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebClientProtocol abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type WebClientProtocol = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0b884-101">ASP.NET을 사용하여 만든 모든 XML Web services 클라이언트 프록시의 기본 클래스를 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b884-101">Specifies the base class for all XML Web service client proxies created using ASP.NET.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b884-102">속성은 <xref:System.Web.Services.Protocols.WebClientProtocol> 클래스는 XML 웹 서비스 요청 및 응답을 전송 하는 데 사용 되는 전송의 동작을 제어 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-102">The properties of the <xref:System.Web.Services.Protocols.WebClientProtocol> class are used to control the behavior of the transport used to transmit the XML Web service request and response.</span></span> <span data-ttu-id="0b884-103">이 클래스의 속성이 속성에 매핑할 <xref:System.Net.WebRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-103">The properties on this class map to properties found on <xref:System.Net.WebRequest>.</span></span> <span data-ttu-id="0b884-104">파생 된 클래스의 인스턴스 <xref:System.Net.WebRequest>와 같은 <xref:System.Net.HttpWebRequest>, ASP.NET을 사용 하 여 만든 XML 웹 서비스에 대 한 전송 메커니즘으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-104">Instances of classes deriving from <xref:System.Net.WebRequest>, such as <xref:System.Net.HttpWebRequest>, are used as the transport mechanism for XML Web services created using ASP.NET.</span></span>  
  
 <span data-ttu-id="0b884-105">XML 웹 서비스와 통신할 프록시 클래스에서 직접 또는 간접적으로 파생 만들어야 <xref:System.Web.Services.Protocols.WebClientProtocol> 호출 하려는 XML 웹 서비스에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-105">To communicate with an XML Web service, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call.</span></span> <span data-ttu-id="0b884-106">프록시 클래스를 수동으로 만들지 않고 지정된 된 XML 웹 서비스의 서비스 설명에 대 한 프록시 클래스를 만드는 Wsdl.exe 도구를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-106">Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.</span></span> <span data-ttu-id="0b884-107">이후 <xref:System.Web.Services.Protocols.WebClientProtocol> 기본 클래스는 사용자 클라이언트 프록시에 대 한 프록시 클래스에 해당 속성을 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-107">Since <xref:System.Web.Services.Protocols.WebClientProtocol> is the base class for your client proxy, you will find its properties on your proxy classes.</span></span> <span data-ttu-id="0b884-108">이러한 속성은 기본 전송의 요청 동작을 제어 하는 데 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-108">These properties are useful for controlling the request behavior of the underlying transport.</span></span> <span data-ttu-id="0b884-109">예를 들어는 <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> 호출에 대 한 속성 XML 웹 서비스를 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-109">For instance, use the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property for calling authenticated XML Web services.</span></span> <span data-ttu-id="0b884-110">대부분의 <xref:System.Web.Services.Protocols.WebClientProtocol> 속성 초기화에 사용 되는 <xref:System.Net.WebRequest> 웹 요청을 사용 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-110">Many of the <xref:System.Web.Services.Protocols.WebClientProtocol> properties are used to initialize the <xref:System.Net.WebRequest> object that is used to make the Web request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b884-111">다음 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 `Math`합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-111">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="0b884-112">내에서 `EnterBtn_Click` 함수, Web Form 프록시 정보 및 클라이언트 자격 증명에 설정 원격 XML 웹 서비스 메서드를 호출 하기 전에 프록시 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-112">Within the `EnterBtn_Click` function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0b884-113">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-113">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0b884-114">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-114">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0b884-115">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="0b884-115">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Classic WebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0b884-116">이 클래스에 속성의 새 인스턴스를에 복사 되는 <see cref="T:System.Net.WebRequest" /> 각 XML 웹 서비스 메서드 호출에 대 한 개체입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b884-116">The properties on this class are copied into a new instance of a <see cref="T:System.Net.WebRequest" /> object for each XML Web service method call.</span>
      </span>
      <span data-ttu-id="0b884-117">동일한 XML 웹 서비스 메서드를 호출할 수 있습니다 하는 동안 <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> 인스턴스 동시에 서로 다른 스레드에서 없는 속성의 일관 된 스냅숏이 됩니다 가져오기 전송 됨을 보장 하기 위해 수행 된 <see cref="T:System.Net.WebRequest" /> 개체입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b884-117">While you can call XML Web service methods on the same <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> instance from different threads at the same time, there is no synchronization done to ensure that a consistent snapshot of the properties will get transferred to the <see cref="T:System.Net.WebRequest" /> object.</span>
      </span>
      <span data-ttu-id="0b884-118">따라서 속성을 수정 하 고 서로 다른 동시 메서드 호출을 수행 해야 할 경우 스레드는 XML 웹의 다른 인스턴스를 사용 해야 서비스 프록시 또는 사용자 지정 동기화를 제공 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0b884-118">Therefore if you need to modify the properties and make concurrent method calls from different threads you should use a different instance of the XML Web service proxy or provide your own synchronization.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
    <altmember cref="T:System.Net.HttpWebRequest" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b884-119">
            <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-119">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CPP/class1.cpp#1)]
 [!code-csharp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/CS/class1.cs#1)]
 [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Web.Services.Protocols.WebClientProtocol constructor/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="T:System.Net.HttpWebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="webClientProtocol.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0b884-120">XML Web services 메서드에 대한 요청을 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-120">Cancels a request to an XML Web service method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Net.WebRequest.Abort" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="AddToCache">
      <MemberSignature Language="C#" Value="protected static void AddToCache (Type type, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void AddToCache(class System.Type type, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void AddToCache(Type ^ type, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member AddToCache : Type * obj -&gt; unit" Usage="System.Web.Services.Protocols.WebClientProtocol.AddToCache (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0b884-121">클라이언트 프로토콜 처리기의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-121">The <see cref="T:System.Type" /> of the client protocol handler..</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0b884-122">캐시에 추가되는 클라이언트 프로토콜 처리기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-122">The client protocol handler to be added to the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b884-123">클라이언트 프로토콜 처리기의 인스턴스를 캐시에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-123">Add an instance of the client protocol handler to the cache.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b884-124">요청에 대한 연결 그룹의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-124">Gets or sets the name of the connection group for the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b884-125">연결 그룹의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-125">The name of the connection group.</span>
          </span>
          <span data-ttu-id="0b884-126">기본값은 <see cref="F:System.String.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-126">The default is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b884-127"><xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> 속성을 사용 하면 연결 그룹에 대 한 요청을 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-127">The <xref:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName%2A> property enables you to associate a request to a connection group.</span></span> <span data-ttu-id="0b884-128">자세한 내용은 <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>을 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0b884-128">For more details, see <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.WebRequest.ConnectionGroupName" />
        <altmember cref="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b884-129">XML Web services 클라이언트 인증의 보안 자격 증명을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-129">Gets or sets security credentials for XML Web service client authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b884-130">XML Web services 클라이언트에 대한 <see cref="T:System.Net.ICredentials" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-130">The <see cref="T:System.Net.ICredentials" /> for the XML Web service client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b884-131">사용 하는 경우는 `Credentials` 속성을 구현 하는 클래스는 XML 웹 서비스 클라이언트를 인스턴스화해야 <xref:System.Net.ICredentials>와 같은 <xref:System.Net.NetworkCredential>, 다음 클라이언트 자격 증명 특정로 설정 하는 인증 메커니즘입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-131">When using the `Credentials` property, a XML Web service client must instantiate a class implementing <xref:System.Net.ICredentials>, such as <xref:System.Net.NetworkCredential>, and then set the client credentials specific to the authentication mechanism.</span></span> <span data-ttu-id="0b884-132"><xref:System.Net.NetworkCredential> basic을 사용 하 여 인증 자격 증명을 설정 하려면 클래스를 사용할 수 다이제스트, NTLM 및 Kerberos 인증 메커니즘입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-132">The <xref:System.Net.NetworkCredential> class can be used to set authentication credentials using the basic, digest, NTLM and Kerberos authentication mechanisms.</span></span>  
  
 <span data-ttu-id="0b884-133"><xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> 속성이 <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType>로 설정되면 클라이언트는 서버의 구성 방식에 따라 Kerberos 및 NTLM 인증을 수행하기 위해 서버와 협상합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-133">When the <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> property is set to <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=nameWithType> then the client negotiates with the server to do Kerberos and/or NTLM authentication depending on how the server is configured.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b884-134">다음 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 `Math`합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-134">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="0b884-135">내에서 `EnterBtn_Click` 함수, 웹 폼 인증 자격 증명을 사용 하 여 명시적으로 설정 된 `Credentials` 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-135">Within the `EnterBtn_Click` function, the Web Form explicitly sets authentication credentials using the `Credentials` property.</span></span> <span data-ttu-id="0b884-136">사용자 이름, 암호 및 도메인에 대 한 생성자로 전달 되는 <xref:System.Net.NetworkCredential> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-136">The user name, password and domain are passed into the constructor for the <xref:System.Net.NetworkCredential> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0b884-137">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-137">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0b884-138">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-138">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0b884-139">자세한 내용은</span><span class="sxs-lookup"><span data-stu-id="0b884-139">For more information, see.</span></span>  
  
 [!code-aspx-csharp[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.Credentials Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Credentials Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetFromCache">
      <MemberSignature Language="C#" Value="protected static object GetFromCache (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetFromCache(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetFromCache(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetFromCache : Type -&gt; obj" Usage="System.Web.Services.Protocols.WebClientProtocol.GetFromCache type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0b884-140">캐시에서 반환할 클라이언트 프로토콜 처리기의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-140">The <see cref="T:System.Type" /> of the client protocol handler to be returned from the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b884-141">캐시에서 클라이언트 프로토콜 처리기의 인스턴스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-141">Gets an instance of a client protocol handler from the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b884-142">캐시에서 클라이언트 프로토콜 처리기의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-142">An instance of a client protocol handler from the cache.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member GetWebRequest : Uri -&gt; System.Net.WebRequest&#xA;override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="webClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="0b884-143">
            <see cref="T:System.Uri" />를 만들 때 사용할 <see cref="T:System.Net.WebRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-143">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b884-144">지정된 <paramref name="uri" />의 <see cref="T:System.Net.WebRequest" /> 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-144">Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified <paramref name="uri" />.</span>
          </span>
          <span data-ttu-id="0b884-145">XML Web services 클라이언트 인프라에서는 XML Web services 요청을 전송하는 데 사용되는 새 <see cref="T:System.Net.WebRequest" /> 전송 개체를 가져오기 위해 이 보호된 메서드를 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-145">This protected method is called by the XML Web service client infrastructure to get a new <see cref="T:System.Net.WebRequest" /> transport object to transmit the XML Web service request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b884-146">
            <see cref="T:System.Net.WebRequest" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-146">The <see cref="T:System.Net.WebRequest" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b884-147">사용자 지정 하려면이 메서드를 재정의할 수는 <xref:System.Net.WebRequest> XML 웹 서비스 요청 하기 전에 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-147">This method can be overridden to customize the <xref:System.Net.WebRequest> object before the XML Web service request is made.</span></span> <span data-ttu-id="0b884-148">예를 들어 요청에 사용자 지정 헤더를 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-148">For example you could add a custom header to the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0b884-149">
            <paramref name="uri" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-149">The <paramref name="uri" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0b884-150">XML Web services 메서드에 대한 요청에서 응답을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-150">Returns a response from a request to an XML Web service method.</span>
          </span>
          <span data-ttu-id="0b884-151">XML Web services 클라이언트 인프라에서는 동기 XML Web services 요청에서 응답을 가져오기 위해 이 보호된 메서드를 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-151">This protected method is called by the XML Web service client infrastructure to get the response from a synchronous XML Web service request.</span>
          </span>
        </summary>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="0b884-152">응답을 가져올 <see cref="T:System.Net.WebRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-152">The <see cref="T:System.Net.WebRequest" /> to get the response from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b884-153">XML Web services 메서드에 대한 동기 요청에서 응답을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-153">Returns a response from a synchronous request to an XML Web service method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b884-154">XML Web services 메서드에 대한 동기 요청의 응답입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-154">A response from a synchronous request to an XML Web service method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="0b884-155">
            <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />를 호출하기 전에 <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-155">If <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> is invoked prior to calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWebResponse (request As WebRequest, result As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Net::WebResponse ^ GetWebResponse(System::Net::WebRequest ^ request, IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse&#xA;override this.GetWebResponse : System.Net.WebRequest * IAsyncResult -&gt; System.Net.WebResponse" Usage="webClientProtocol.GetWebResponse (request, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="0b884-156">응답을 가져올 <see cref="T:System.Net.WebRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-156">The <see cref="T:System.Net.WebRequest" /> to get the response from.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="0b884-157">응답이 완료될 때 <see cref="T:System.IAsyncResult" />에 전달할 <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-157">The <see cref="T:System.IAsyncResult" /> to pass to <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /> when the response has completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0b884-158">XML Web services 메서드에 대한 비동기 요청에서 응답을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-158">Returns a response from an asynchronous request to an XML Web service method.</span>
          </span>
          <span data-ttu-id="0b884-159">XML Web services 클라이언트 인프라에서는 비동기 XML Web services 요청에서 응답을 가져오기 위해 이 보호된 메서드를 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-159">This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0b884-160">XML Web services 메서드에 대한 비동기 요청의 응답입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-160">A response from an asynchronous request to an XML Web service method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="0b884-161">
            <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />를 호출하기 전에 <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />를 호출한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-161">If <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> is invoked prior to calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b884-162">사전 인증을 활성화할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-162">Gets or sets whether pre-authentication is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b884-163">요청을 사전 인증하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-163">
              <see langword="true" /> to pre-authenticate the request; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0b884-164">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-164">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b884-165">자격 증명을 사용 하지 않고 리소스를 요청 하는 클라이언트, 서버 요청 문제를 제기 하 고 지 원하는 어떤 인증 스키마를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-165">When a client requests a resource without using credentials, the server challenges the request and indicates what authentication schemes it supports.</span></span> <span data-ttu-id="0b884-166">클라이언트는 인증 체계를 선택 하 고 적절 한 보냅니다 `WWW-authenticate` 서버에 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-166">The client chooses an authentication scheme and sends the appropriate `WWW-authenticate` header to the server.</span></span> <span data-ttu-id="0b884-167">때 <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> 은 `true`, `WWW-authenticate` 헤더는 모든 후속 요청과 함께 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-167">When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `true`, the `WWW-authenticate` header is sent with all subsequent requests.</span></span>  
  
 <span data-ttu-id="0b884-168">때 <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> 은 `false`, 요청이 있는 XML 웹 서비스 메서드를 처음 하지 않고 사용자를 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-168">When <xref:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate%2A> is `false`, a request is made to the XML Web service method without initially attempting to authenticate the user.</span></span> <span data-ttu-id="0b884-169">XML 웹 서비스에서 익명 액세스를 허용 하는 경우 XML 웹 서비스 메서드가 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-169">If the XML Web service allows anonymous access, then the XML Web service method is executed.</span></span> <span data-ttu-id="0b884-170">익명 액세스 허용 되지 않는 경우 401 HTTP 반환 코드를 다시 클라이언트에 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-170">If anonymous access is disallowed, a 401 HTTP return code is sent back to the client.</span></span> <span data-ttu-id="0b884-171">에 대 한 응답의 <xref:System.Web.Services.Protocols.WebClientProtocol> 클래스 웹 서버에 인증 자격 증명을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-171">In response, the <xref:System.Web.Services.Protocols.WebClientProtocol> class returns authentication credentials to the Web server.</span></span> <span data-ttu-id="0b884-172">클라이언트가 인증 되 고 XML 웹 서비스에 액세스할 수 있는 권한이 이후에, XML 웹 서비스 메서드가 실행 실행 됩니다. 그렇지 않으면 클라이언트는 액세스가 거부 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-172">If the client is authenticated and subsequently authorized to access the XML Web service, the XML Web service method is executed; otherwise the client is denied access.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.PreAuthenticate" />
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestEncoding : System.Text.Encoding with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.RequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b884-173">XML Web services에 클라이언트 요청을 하는 데 사용되는 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-173">The <see cref="T:System.Text.Encoding" /> used to make the client request to the XML Web service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b884-174">클라이언트 요청의 문자 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-174">The character encoding for the client request.</span>
          </span>
          <span data-ttu-id="0b884-175">기본값은 기본 전송 수단 및 프로토콜에 대해 기본 인코딩을 사용하는 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-175">The default is <see langword="null" />, which uses the default encoding for the underlying transport and protocol.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b884-176"><xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> 요청 메시지에 대 한 인코딩을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-176">The <xref:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding%2A> determines the encoding for the request message.</span></span> <span data-ttu-id="0b884-177"><xref:System.Net.WebRequest.ContentType%2A> 요청의 인코딩 값으로 주석을 달아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-177">The <xref:System.Net.WebRequest.ContentType%2A> of the request will be annotated with the encoding value.</span></span>  
  
 <span data-ttu-id="0b884-178">파생 된 클래스 <xref:System.Web.Services.Protocols.WebClientProtocol> 같은 특정 프로토콜을 지 원하는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> 는 soap의 경우 특정 프로토콜에 대 한 인코딩 요구 사항에 맞게이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-178">Classes deriving from <xref:System.Web.Services.Protocols.WebClientProtocol> support a particular protocol, such as <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> does for SOAP, set this property to conform to encoding requirements for the specific protocol.</span></span> <span data-ttu-id="0b884-179">예를 들어는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> 기본 인코딩을 u t F-8로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-179">For example, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol> sets the default encoding to UTF-8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b884-180">다음 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 `Math`합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-180">The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="0b884-181">내에서 `EnterBtn_Click` 함수 Web Form을 명시적으로 설정 RequestEncoding을 u t F-8입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-181">Within the `EnterBtn_Click` function, the Web Form explicitly sets RequestEncoding to UTF-8.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0b884-182">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-182">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0b884-183">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-183">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0b884-184">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="0b884-184">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.RequestEncoding Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100000)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b884-185">동기 XML Web services 요청에 대한 응답이 도착하기까지 대기하는 시간(밀리초)을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-185">Indicates the time an XML Web service client waits for the reply to a synchronous XML Web service request to arrive (in milliseconds).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b884-186">XML Web services에 대한 동기 호출의 제한 시간(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-186">The time out, in milliseconds, for synchronous calls to the XML Web service.</span>
          </span>
          <span data-ttu-id="0b884-187">기본값은 100000 밀리초입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-187">The default is 100000 milliseconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b884-188">설정의 <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> 속성을 <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> 요청 제한 시간이 초과 되지 않은 것을 나타냅니다. XML 웹 서비스 클라이언트 설정 수 있지만 <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> 제한 시간이 초과 되지 속성, 서버 쪽에서 웹 서버 요청 제한 시간이 초과 발생할 여전히 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-188">Setting the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> indicates that the request does not time out. Even though an XML Web service client can set the <xref:System.Web.Services.Protocols.WebClientProtocol.Timeout%2A> property to not time out, the Web server can still cause the request to time out on the server side.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b884-189">다음 예제에서는 `Timeout` 15000 (15 초)에 대 한 동기 호출에 대 한 값은 `Add` 내에서 XML 웹 서비스 메서드는 `Math` XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-189">The following example sets the `Timeout` value to 15000 (15 seconds) for the synchronous call to the `Add` XML Web service method within the `Math` XML Web service.</span></span>  
  
 [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Timeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b884-190">클라이언트에서 요청 중인 XML Web services의 기본 URL을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-190">Gets or sets the base URL of the XML Web service the client is requesting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b884-191">클라이언트에서 요청 중인 XML Web services의 기본 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-191">The base URL of the XML Web service the client is requesting.</span>
          </span>
          <span data-ttu-id="0b884-192">기본값은 <see cref="F:System.String.Empty" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-192">The default is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b884-193">Wsdl.exe를 사용 하 여 생성 된 프록시 클래스는 기본 설정 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 속성을 사용 하도록 클라이언트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-193">Proxy classes generated using Wsdl.exe will set a default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the client to use.</span></span> <span data-ttu-id="0b884-194">기본 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 를 프록시 클래스가 생성 된 서비스 설명에 위치 특성에 의해 결정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-194">The default <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> is determined by the location attribute found in the service description from which the proxy class was generated.</span></span>  
  
 <span data-ttu-id="0b884-195">파생 클래스와 같은 특정 프로토콜을 지 원하는 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> 및 <xref:System.Web.Services.Protocols.HttpPostClientProtocol> 추가 정보를 추가할 수 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> XML 웹 서비스 요청을 합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-195">Derived classes supporting specific protocols, such as <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> might add extra information to <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> to make the XML Web service request.</span></span>  
  
 <span data-ttu-id="0b884-196"><xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 동일한 서비스 설명에서 생성 된 프록시 클래스를 구현 하는 모든 XML 웹 서비스를 참조로 속성을 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-196">The <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property can be changed to refer to any XML Web service that implements the same service description that the proxy class was generated from.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b884-197">다음 예제에서는 변경 된 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 속성에 대 한는 `math` XML 웹 서비스 라는 웹 서버를 `http:// www.contoso.com`합니다.</span><span class="sxs-lookup"><span data-stu-id="0b884-197">The following example changes the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property for the `math` XML Web service to the Web server named `http:// www.contoso.com`.</span></span>  
  
 [!code-cpp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebClientProtocol.Url Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/CS/source.cs#1)]
 [!code-vb[Classic WebClientProtocol.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebClientProtocol.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0b884-198">
            <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> 속성을 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 속성 값으로 설정할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-198">Gets or sets a value that indicates whether to set the <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> property to the value of the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0b884-199">자격 증명 속성이 <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> 속성 값으로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0b884-199">
              <see langword="true" /> if the Credentials property is set to the value of the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="P:System.Net.WebRequest.ContentType" />
        <altmember cref="T:System.Net.WebRequest" />
      </Docs>
    </Member>
  </Members>
</Type>