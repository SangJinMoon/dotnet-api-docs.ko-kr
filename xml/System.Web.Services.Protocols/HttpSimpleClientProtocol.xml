<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpSimpleClientProtocol.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac524110eb1ffa47f6267659a07e83cab2de1a0dfeb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24110eb1ffa47f6267659a07e83cab2de1a0dfeb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</source>
          <target state="translated">간단한 HTTP-GET 및 HTTP-POST 프로토콜 바인딩을 사용하여 XML Web services와 통신하기 위한 기본 클래스를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</source>
          <target state="translated">이 클래스는 대부분 인코더를 사용 하 여 매개 변수를 인코딩하고 일반적인 MIME 형식으로 값을 반환 하는 HTTP를 통해 XML 웹 서비스와 통신 하기 위한 구현을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>These encoders derive from the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> class.</source>
          <target state="translated">이러한 인코더에서 파생 되는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.MimeFormatter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>By default, a proxy class deriving from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</source>
          <target state="translated">기본적으로에서 파생 되는 프록시 클래스 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> 일반 xml에서 응용 프로그램/x-www-형식-urlencoded MIME 형식 및 응답을 사용 하 여 매개 변수를 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Custom mime formatters can be specified using the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> attribute, however, there is no support for integrating this into a service description and proxy generation.</source>
          <target state="translated">그러나 사용자 지정 mime 포맷터를 사용 하 여 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> 특성,이 서비스 설명 및 프록시 생성에 통합에 대 한 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source><ph id="ph1">`Notes to Inheritors:`</ph> When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</source>
          <target state="translated"><ph id="ph1">`Notes to Inheritors:`</ph> 이 클래스를 재정의 하는 경우에 특정 종류의 XML 웹 서비스에만 적용 되는 파생된 클래스에서 메서드를 도입할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</source>
          <target state="translated">메서드 매개 변수를 단순히 캡처하고 사이트와의 통신의 작업을 수행 하기 위해 기본 클래스를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>If the introduced methods are asynchronous, call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> methods.</source>
          <target state="translated">도입 된 메서드는 비동기 호출의 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>If the introduced methods are synchronous, call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method.</source>
          <target state="translated">도입 된 메서드는 동기적, 경우에 호출 된 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The overridden constructor typically sets the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to the URI of the XML Web service method.</source>
          <target state="translated">다시 정의 된 생성자 일반적으로 설정 하는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> 속성을 XML 웹 서비스 메서드에서의 URI입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The Web Services Description Language tool (Wsdl.exe) generates derived classes of <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> for a given Service Description.</source>
          <target state="translated">파생된 클래스를 생성 하는 웹 서비스 기술 언어 도구 (Wsdl.exe) <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> 지정 된 서비스 설명에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">다음 코드 예제는 Wsdl.exe에 의해 생성 된 프록시 클래스는 <ph id="ph1">`Math`</ph> 아래 XML 웹 서비스.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The proxy class derives from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph>, which derives from the abstract <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> class.</source>
          <target state="translated">프록시 클래스에서 파생 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph>, 추상에서 파생 되는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`Math`</ph> 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The name of the XML Web service method.</source>
          <target state="translated">XML Web services 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The URL to use when creating the <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>를 만들 때 사용할 URL입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An array of objects containing the parameters to pass to the XML Web service method.</source>
          <target state="translated">XML Web services 메서드에 전달할 매개 변수가 들어 있는 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">배열 내의 값 순서는 파생 클래스의 호출 메서드에 있는 매개 변수의 순서와 일치합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The delegate to call when the asynchronous method call is complete.</source>
          <target state="translated">비동기 메서드 호출이 완료될 때 호출할 대리자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>콜백<ept id="p1">&lt;/c&gt;</ept>이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 대리자가 호출되지 않습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The additional information supplied by a client.</source>
          <target state="translated">클라이언트에서 제공한 추가 정보입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Starts an asynchronous invocation of a method of an XML Web service.</source>
          <target state="translated">XML Web services 메서드의 비동기 호출을 시작합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that can be passed to the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method to obtain the return values from the XML Web service method.</source>
          <target state="translated">XML Web services 메서드에서 반환 값을 가져오기 위해 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드에 전달할 수 있는 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the types of the parameters and return values of the method that is invoking the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph> 매개 변수는 유형의 매개 변수를 찾고 메서드를 호출 하는 값을 반환 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>It is also used to find custom attributes that may have been added to the method.</source>
          <target state="translated">메서드에 추가 된 사용자 지정 특성을 찾을 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> provide additional information on the derived method that is required for the HTTP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph><ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapRpcMethodAttribute&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> HTTP 프로토콜에 필요한 파생된 메서드에 대 한 추가 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> 에 전달 되 <ph id="ph2">`callback`</ph> 에 포함 되어는 <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in <ph id="ph1">`callback`</ph>.</source>
          <target state="translated">비동기 결과 처리에 대 한 비동기 호출의 컨텍스트를 정보를 전달 하는 데 유용 <ph id="ph1">`callback`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">다음 코드 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 <ph id="ph1">`Math`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form starts and completes an asynchronous invocation of the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`EnterBtn_Click`</ph> 함수 Web Form에 시작 및 비동기 호출을 완료는 <ph id="ph2">`Add`</ph> XML 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">다음 코드 예제는 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스에 대 한는 <ph id="ph1">`Math`</ph> 아래 XML 웹 서비스.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`BeginAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method starts an asynchronous invocation of the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`BeginAdd`</ph> 프록시 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> 메서드는 비동기 호출의 시작는 <ph id="ph3">`Add`</ph> XML 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`Math`</ph> 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드에서 반환된 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Completes asynchronous invocation of an XML Web service method using HTTP.</source>
          <target state="translated">HTTP를 사용하여 XML Web services 메서드의 비동기 호출을 완료합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An array of objects containing the return value and any by reference or <ph id="ph1">&lt;paramref name="out" /&gt;</ph> parameters for the XML Web service method.</source>
          <target state="translated">XML Web services 메서드의 반환 값과 By Reference 매개 변수 또는 <ph id="ph1">&lt;paramref name="out" /&gt;</ph> 매개 변수가 들어 있는 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">다음 코드 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 <ph id="ph1">`Math`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form starts and completes an asynchronous invocation of the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`EnterBtn_Click`</ph> 함수 Web Form에 시작 및 비동기 호출을 완료는 <ph id="ph2">`Add`</ph> XML 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">다음 코드 예제는 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스에 대 한는 <ph id="ph1">`Math`</ph> 아래 XML 웹 서비스.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EndAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method starts an asynchronous invocation of the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`EndAdd`</ph> 프록시 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> 메서드는 비동기 호출의 시작는 <ph id="ph3">`Add`</ph> XML 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the above proxy class was created.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`Math`</ph> 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is not the return value from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> 메서드의 반환 값이 아닌 경우</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The name of the XML Web service method in the derived class that is invoking the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /&gt;</ph> 메서드를 호출하고 있는 파생 클래스의 XML Web services 메서드 이름입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The URL of the XML Web service method that the client is requesting.</source>
          <target state="translated">클라이언트에서 요청하고 있는 XML Web services 메서드의 URL입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>An array of objects containing the parameters to pass to the remote XML Web service.</source>
          <target state="translated">원격 XML Web services에 전달할 매개 변수가 들어 있는 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">배열 내의 값 순서는 파생 클래스의 호출 메서드에 있는 매개 변수의 순서와 일치합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Invokes an XML Web service method using HTTP.</source>
          <target state="translated">HTTP를 사용하여 XML Web services 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>An array of objects containing the return value and any by-reference or <ph id="ph1">&lt;paramref name="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">파생 클래스 메서드의 반환 값과 By Reference 매개 변수 또는 <ph id="ph1">&lt;paramref name="out" /&gt;</ph> 매개 변수가 들어 있는 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the types of the parameters and return values of the method that is invoking the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph> 매개 변수는 유형의 매개 변수를 찾고 메서드를 호출 하는 값을 반환 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>It is also used to find custom attributes which may have been added to the method.</source>
          <target state="translated">또한 사용자 지정 특성을 메서드에 추가 된 찾는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> provide additional information on the derived method that is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpMethodAttribute&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> SOAP 프로토콜에 필요한 파생된 메서드에 대 한 추가 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is an ASP.NET Web Form, which calls an XML Web service named <ph id="ph1">`Math`</ph>.</source>
          <target state="translated">다음 코드 예제는 명명 된 XML 웹 서비스를 호출 하는 ASP.NET Web Form을 <ph id="ph1">`Math`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> function, the Web Form synchronously invokes the <ph id="ph2">`Add`</ph> XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`EnterBtn_Click`</ph> 함수 Web Form 동기적으로 호출 된 <ph id="ph2">`Add`</ph> XML 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service below.</source>
          <target state="translated">다음 코드 예제는 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스에 대 한는 <ph id="ph1">`Math`</ph> 아래 XML 웹 서비스.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>Within the <ph id="ph1">`Add`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method synchronously invokes the <ph id="ph3">`Add`</ph> Web Service method.</source>
          <target state="translated">내에서 <ph id="ph1">`Add`</ph> 프록시 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> 메서드가 동기적으로 호출 하는 <ph id="ph3">`Add`</ph> 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the above proxy class was created.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`Math`</ph> 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">지정한 메서드를 비동기적으로 호출합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The name of the method to invoke.</source>
          <target state="translated">호출할 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The request URL of the invoked web service.</source>
          <target state="translated">호출한 웹 서비스의 요청 URL입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">메서드에 전달할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">메서드 호출이 완료될 때 호출되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">지정한 메서드를 비동기적으로 호출합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The name of the method to invoke.</source>
          <target state="translated">호출할 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The request URL of the invoked web service.</source>
          <target state="translated">호출한 웹 서비스의 요청 URL입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">메서드에 전달할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">메서드 호출이 완료될 때 호출되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>An object containing associated state information that is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the method has completed.</source>
          <target state="translated">메서드가 완료될 때 <bpt id="p1">&lt;c&gt;</bpt>콜백<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달되는 연결 상태 정보가 들어 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>Invokes the specified method asynchronously while maintaining an associated state.</source>
          <target state="translated">연결 상태를 유지하면서 지정한 메서드를 비동기적으로 호출합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>