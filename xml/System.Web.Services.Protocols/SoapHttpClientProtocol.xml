<Type Name="SoapHttpClientProtocol" FullName="System.Web.Services.Protocols.SoapHttpClientProtocol">
  <TypeSignature Language="C#" Value="public class SoapHttpClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapHttpClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapHttpClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHttpClientProtocol : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="17a99-101">SOAP를 사용할 때 클라이언트 프록시가 파생되는 클래스를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-101">Specifies the class client that proxies derive from when using SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a99-102">XML 웹 서비스 클라이언트를 작성 하는 경우 다음 프록시 클래스에서 파생 된 직접 또는 간접적으로 <xref:System.Web.Services.Protocols.WebClientProtocol> XML 웹 서비스에 대 한 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-102">If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> must be created for the XML Web service.</span></span> <span data-ttu-id="17a99-103">프록시 클래스에서 파생 되어야 XML 웹 서비스 클라이언트가 SOAP를 사용 하 여 데이터를 호출할 때 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>에서 파생 되는 <xref:System.Web.Services.Protocols.HttpWebClientProtocol>합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-103">When the XML Web service client calls using SOAP, the proxy class must derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from <xref:System.Web.Services.Protocols.HttpWebClientProtocol>.</span></span> <span data-ttu-id="17a99-104"><xref:System.Web.Services.Protocols.HttpWebClientProtocol>에서 파생 <xref:System.Web.Services.Protocols.WebClientProtocol>합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-104"><xref:System.Web.Services.Protocols.HttpWebClientProtocol>, in turn, derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.</span></span>  
  
 <span data-ttu-id="17a99-105">XML 웹 서비스와 통신할에서 직접 또는 간접적으로 파생 되는 프록시 클래스를 만듭니다 <xref:System.Web.Services.Protocols.WebClientProtocol> 호출 하려는 XML 웹 서비스에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-105">To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> for the XML Web service you want to call.</span></span> <span data-ttu-id="17a99-106">프록시 클래스를 수동으로 만들지 않고 지정된 된 XML 웹 서비스의 서비스 설명에 대 한 프록시 클래스를 만들려면 웹 서비스 기술 언어 도구 (Wsdl.exe)를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-106">Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</span></span> <span data-ttu-id="17a99-107">SOAP 프로토콜에 대 한 프록시 클래스 생성 되 면 동기를 XML 웹 서비스 메서드 호출을 통해는 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> 메서드를 사용 하 여 비동기 호출이 수행 되는 반면는 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> 메서드 및 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="17a99-107">When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method, whereas asynchronous calls are made using the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method and the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17a99-108">다음 코드 예제는 Wsdl.exe에 의해 생성 된 프록시 클래스는 `Math` XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-108">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="17a99-109">프록시 클래스에서 파생 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, 추상에서 파생 되는 <xref:System.Web.Services.Protocols.WebClientProtocol> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-109">The proxy class derives from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.WebClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="17a99-110">다음 코드 예제는 `Math` XML 웹 서비스를 생성 한 위의 프록시 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-110">The following code example is the `Math` XML Web service, from which the preceding proxy class was generated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="17a99-111">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-111">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="17a99-112">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-112">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="17a99-113">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="17a99-113">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="17a99-114">이 형식은 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-114">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="17a99-115">이 클래스를 재정의 하면 특정 유형의 XML 웹 서비스와 관련 된 파생된 클래스에서 메서드를 도입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-115">When you override this class, you can introduce methods in the derived class which are specific to a particular type of XML Web service.</span></span> <span data-ttu-id="17a99-116">메서드 매개 변수를 캡처 및 XML 웹 서비스와의 통신 작업 수행을 위해 기본 클래스를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-116">The methods capture the parameters and call the base class to do the work of communicating with the XML Web service.</span></span> <span data-ttu-id="17a99-117">도입 된 메서드는 비동기 호출의 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 메서드 및 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="17a99-117">If the introduced methods are asynchronous, call the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method and the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method.</span></span> <span data-ttu-id="17a99-118">도입 된 메서드는 동기적, 경우에 호출 된 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> 메서드.</span><span class="sxs-lookup"><span data-stu-id="17a99-118">If the introduced methods are synchronous, call the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /> method.</span></span> <span data-ttu-id="17a99-119">재정의 된 생성자는 일반적으로 설정 된 <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> 속성을 XML 웹 서비스 메서드의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-119">The overridden constructor typically sets the <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /> property to the URL of the XML Web service method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHttpClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHttpClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17a99-120"><see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-120">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="17a99-121"><see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 메서드를 호출하고 있는 파생 클래스의 XML Web services 메서드 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-121">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <param name="parameters"><span data-ttu-id="17a99-122">XML 웹 서비스에 전달할 매개 변수가 들어 있는 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-122">An array of objects containing the parameters to pass to the XML Web service.</span></span> <span data-ttu-id="17a99-123">배열 내의 값 순서는 파생 클래스의 호출 메서드에 있는 매개 변수의 순서와 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-123">The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</span></span></param>
        <param name="callback"><span data-ttu-id="17a99-124">비동기 호출이 완료될 때 호출할 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-124">The delegate to call when the asynchronous invoke is complete.</span></span> <span data-ttu-id="17a99-125"><c>콜백</c>이 <see langword="null" />이면 대리자가 호출되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-125">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17a99-126">호출자가 제공한 추가 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-126">Extra information supplied by the caller.</span></span></param>
        <summary><span data-ttu-id="17a99-127">SOAP를 사용하여 XML Web services의 비동기 호출을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-127">Starts an asynchronous invocation of an XML Web service method using SOAP.</span></span></summary>
        <returns><span data-ttu-id="17a99-128">원격 메서드 호출에서 반환 값을 가져오기 위해 <see cref="T:System.IAsyncResult" /> 메서드에 전달된 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-128">An <see cref="T:System.IAsyncResult" /> that is passed to the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the remote method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a99-129">일반적으로 하지 호출 하는 것은 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 메서드를 직접 XML 웹 서비스에 대 한 프록시 클래스를 직접 작성 한다고 하지 않는 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-129">Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.</span></span>  
  
 <span data-ttu-id="17a99-130">서비스 설명에서 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스는 XML 웹 서비스 메서드를 동기적으로 호출 하는 프록시 클래스에서 파생 된 이름으로는 XML 웹 서비스 메서드를 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-130">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</span></span> <span data-ttu-id="17a99-131">XML 웹 서비스 메서드를 비동기적으로 호출 하려면 두 개의 추가 방법으로 각 XML 웹 서비스 메서드에 대 한 프록시 클래스에 추가 됩니다는 `Begin` XML 웹 서비스 메서드 및를 사용 하면 이름에 추가 하는 접두사는 `End` 접두사를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-131">To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.</span></span>  
  
 <span data-ttu-id="17a99-132">호출 하 여 프록시 클래스는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 메서드는 XML 웹 서비스 메서드에 대 한 비동기 호출 호출을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-132">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method to start an asynchronous invocation call to the XML Web service method.</span></span> <span data-ttu-id="17a99-133">예를 들어, XML 웹 서비스 이름이 인 XML 웹 서비스 메서드를 노출 하는 경우 `Add`, 라는 메서드를 포함 하는 프록시 클래스 `BeginAdd`, XML 웹 호출을 시작 하기 위한 서비스 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-133">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `BeginAdd`, for starting an invocation to the XML Web service method.</span></span> <span data-ttu-id="17a99-134">에 대 한 코드 내에서 `BeginAdd`, 호출에 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 메서드 결과 대 한 반환 형식으로 변환 됩니다 `Add`합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-134">Within the code for the `BeginAdd`, a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method and the results are placed into the expected return type for `Add`.</span></span>  
  
 <span data-ttu-id="17a99-135">`methodName` 등 메서드를 추가 된 사용자 지정 특성을 찾는 데 사용 됩니다 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-135">The `methodName` is used to find the custom attributes which may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</span></span> <span data-ttu-id="17a99-136"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> SOAP 프로토콜에 필요한 파생된 방법에 대 한 추가 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-136"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information about the derived method that is required for the SOAP protocol.</span></span>  
  
 <span data-ttu-id="17a99-137">`asyncState` 에 전달 되 `callback` 에 포함 되어는 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="17a99-137">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="17a99-138">`asyncState` 에 지정 된 비동기 호출의 컨텍스트에 대 한 정보를 전달 하려면 매개 변수를 사용할 수는 `callback` 결과 처리 하는 대리자에 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-138">The `asyncState` parameter can be used to pass information about the context of the asynchronous call, specified in the `callback` parameter, to the delegate that handles the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17a99-139">다음 코드 예제는 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스에 대 한는 `Math` XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-139">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service.</span></span> <span data-ttu-id="17a99-140">내에서 `BeginAdd` 프록시 클래스의 메서드는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> 메서드를 비동기식으로 호출을 시작 하는 것은 `Add` XML 웹 서비스 메서드.</span><span class="sxs-lookup"><span data-stu-id="17a99-140">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method is starting an asynchronous invocation to the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.BeginInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.BeginInvoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="17a99-141">다음 코드 예제는 `Math` 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-141">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="17a99-142">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="17a99-142">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17a99-143">요청은 개체의 현재 상태에서 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-143">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="17a99-144">네트워크에 액세스하는 동안 오류가 발생한 경우.</span><span class="sxs-lookup"><span data-stu-id="17a99-144">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="Discover">
      <MemberSignature Language="C#" Value="public void Discover ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Discover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover" />
      <MemberSignature Language="VB.NET" Value="Public Sub Discover ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Discover();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17a99-145"><see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />의 검색 문서에 설명되어 있는 XML Web services에 동적으로 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-145">Dynamically binds to an XML Web service described in the discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a99-146">XML 웹 서비스 클라이언트가 사용 하 여 프록시 클래스에서 참조 하는 것과 다른 XML 웹 서비스를 동적으로 바인딩할 수는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="17a99-146">An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method.</span></span> <span data-ttu-id="17a99-147">일반적으로 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 속성은 XML 웹 서비스의 기본 주소를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-147">Typically, the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property refers to the base address of the XML Web service.</span></span> <span data-ttu-id="17a99-148">그러나 호출 하기 전에는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> 메서드를 설정의 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 속성을 검색 문서의 URL입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-148">However, before invoking the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method, set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to a URL of a discovery document.</span></span> <span data-ttu-id="17a99-149"><xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> 메서드는 일치 하는 프록시 클래스에 정의 된 바인딩에 검색 문서에서 찾은을 동적으로 바인딩할 하려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-149">The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</span></span> <span data-ttu-id="17a99-150">성공 하면 후속 메서드 호출은 검색 문서에서 설명 되는 XML 웹 서비스에 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-150">If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</span></span>  
  
 <span data-ttu-id="17a99-151">프록시 클래스를 사용 하 여 호출 하는 XML 웹 서비스 메서드를 구현한 바인딩을 정의 웹 서비스 기술 언어 도구 (Wsdl.exe)를 사용 하 여 프록시 클래스 작성 되는 경우는 <xref:System.Web.Services.WebServiceBindingAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-151">If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <xref:System.Web.Services.WebServiceBindingAttribute>.</span></span> <span data-ttu-id="17a99-152">여러 개의 바인딩을 구현 하는 XML 웹 서비스, Wsdl.exe 각 바인딩에 대 한 프록시 클래스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-152">When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</span></span> <span data-ttu-id="17a99-153">각 프록시 클래스에는 적용 되는 <xref:System.Web.Services.WebServiceBindingAttribute> 바인딩와 네임 스페이스의 이름을 정의 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-153">Applied to each proxy class is a <xref:System.Web.Services.WebServiceBindingAttribute> that defines the name of the binding and its namespace.</span></span> <span data-ttu-id="17a99-154">설정 검색 문서는 <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> 속성을 동일한 바인딩 이름 및 네임 스페이스를 구현 하는 XML 웹 서비스에 대 한 참조를 포함 해야 합니다 또는 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-154">The discovery document you set the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17a99-155">다음 코드 예제는 Wsdl.exe 유틸리티를 사용 하 여 생성 하는 프록시 클래스는 `Math` XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-155">The following code example is a proxy class generated using the Wsdl.exe utility for the `Math` XML Web service.</span></span> <span data-ttu-id="17a99-156">A <xref:System.Web.Services.WebServiceBindingAttribute> 에 적용 되는 `Math` 바인딩 이름을 설정 하는 프록시 클래스 `MathSoap` 및 네임 스페이스를 `http://tempuri.org/`합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-156">A <xref:System.Web.Services.WebServiceBindingAttribute> is applied to the `Math` proxy class setting the binding name to `MathSoap` and its namespace to `http://tempuri.org/`.</span></span>  
  
 [!code-cpp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CPP/source.cpp#1)]
 [!code-csharp[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/source.cs#1)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/source.vb#1)]  
  
 <span data-ttu-id="17a99-157">다음 코드 예제는 위의 프록시 클래스를 사용 하는 웹 서비스 클라이언트입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-157">The following code example is a Web Service client using the preceding proxy class.</span></span> <span data-ttu-id="17a99-158">내에서 `EnterBtn_Click` XML 웹 서비스 클라이언트 호출 웹 폼의 이벤트는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> 메서드는 사용자가 제공 하는 URL에 동적으로 바인딩하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-158">Within the `EnterBtn_Click` event of the Web Form, the XML Web service client calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A> method attempting to dynamically bind to the URL supplied by the user.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="17a99-159">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-159">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="17a99-160">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-160">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="17a99-161">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="17a99-161">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/CS/sourcecs.aspx#2)]
 [!code-vb[SoapHttpClientProtocol.Discover Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.Discover Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="17a99-162">프록시 클래스에 정의된 바인딩이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-162">The proxy class does not have a binding defined.</span></span></exception>
        <altmember cref="T:System.Web.Services.WebServiceBindingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object[] EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17a99-163"><see cref="T:System.IAsyncResult" /> 메서드에서 반환된 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-163">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="17a99-164">SOAP를 사용하여 XML Web services 메서드의 비동기 호출을 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-164">Ends an asynchronous invocation of an XML Web service method using SOAP.</span></span></summary>
        <returns><span data-ttu-id="17a99-165">파생 클래스 메서드의 반환 값과 By Reference 매개 변수 또는 <see langword="out" /> 매개 변수가 들어 있는 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-165">An array of objects that contains the return value and any by-reference or <see langword="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a99-166">일반적으로 하지 호출 하는 것은 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> 메서드를 직접 XML 웹 서비스에 대 한 프록시 클래스를 직접 작성 한다고 하지 않는 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-166">Typically, you would not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method directly, unless you were building your own proxy class for an XML Web service.</span></span>  
  
 <span data-ttu-id="17a99-167">XML 웹 서비스에 대 한 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스는 XML 웹 서비스 메서드를 동기적으로 호출 하기 위한 프록시 클래스에서 파생 된 이름으로는 XML 웹 서비스 메서드를 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-167">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</span></span> <span data-ttu-id="17a99-168">XML 웹 서비스 메서드를 비동기적으로 호출에 대 한 두 개의 추가 방법으로 각 XML 웹 서비스 메서드에 대 한 프록시 클래스에 추가 됩니다는 `Begin` XML 웹 서비스 메서드 및를 사용 하면 이름에 추가 하는 접두사는 `End` 접두사를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-168">For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the `Begin` prefix added to the name of the XML Web service method and one with the `End` prefix added.</span></span>  
  
 <span data-ttu-id="17a99-169">호출 하 여 프록시 클래스는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> 메서드가 XML 웹 서비스 메서드에 대 한 비동기 호출 호출을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-169">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method to complete an asynchronous invocation call to the XML Web service method.</span></span> <span data-ttu-id="17a99-170">예를 들어, XML 웹 서비스 이름이 인 XML 웹 서비스 메서드를 노출 하는 경우 `Add`, 라는 메서드를 포함 하는 프록시 클래스 `EndAdd`, XML Web 비동기 호출을 완료 하기 위한 서비스 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-170">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class contains a method named `EndAdd`, for completing an asynchronous invocation of an XML Web service method.</span></span> <span data-ttu-id="17a99-171">에 대 한 코드 내에서 `EndAdd` 를 호출할는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> 메서드 및 결과 대 한 반환 형식에 배치 됩니다 `Add`합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-171">Within the code for the `EndAdd` a call is made to the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method and then the results are placed into the expected return type for `Add`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17a99-172">다음 코드 예제는 Wsdl.exe에 의해 생성 된 프록시 클래스는 `Math` XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-172">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="17a99-173">내에서 `EndAdd` 프록시 클래스의 메서드는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> 메서드가 완료 되는 비동기 호출을는 `Add` XML 웹 서비스 메서드.</span><span class="sxs-lookup"><span data-stu-id="17a99-173">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method completes the asynchronous invocation to the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.EndInvoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="17a99-174">다음 코드 예제는 `Math` 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-174">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="17a99-175"><paramref name="asyncResult" />가 <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> 메서드의 반환 값이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="17a99-175"><paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="17a99-176">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="17a99-176">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17a99-177">요청은 개체의 현재 상태에서 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-177">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="17a99-178">네트워크에 액세스하는 동안 오류가 발생한 경우.</span><span class="sxs-lookup"><span data-stu-id="17a99-178">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <Member MemberName="GetReaderForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader GetReaderForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetReaderForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReaderForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ GetReaderForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="17a99-179"><see cref="T:System.Web.Services.Protocols.SoapClientMessage" />를 초기화할 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />을 제공하는 <see cref="T:System.Xml.XmlReader" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-179">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="17a99-180"><see cref="T:System.IO.StreamReader" />에서 사용하는 <see cref="T:System.Xml.XmlReader" />의 초기 버퍼 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-180">The initial buffer size of the <see cref="T:System.IO.StreamReader" /> used by the <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <summary><span data-ttu-id="17a99-181"><see cref="T:System.Xml.XmlReader" /> 매개 변수의 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 속성을 사용하여 초기화된 <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-181">Returns an <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="17a99-182"><paramref name="message" /> 매개 변수의 <see cref="T:System.Xml.XmlReader" /> 속성을 사용하여 초기화된 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-182">A <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="17a99-183"><see cref="T:System.Uri" />를 만들 때 사용할 <see cref="T:System.Net.WebRequest" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-183">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <summary><span data-ttu-id="17a99-184">지정된 <paramref name="uri" />에 대한 새 <see cref="T:System.Net.WebRequest" />를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-184">Creates a <see cref="T:System.Net.WebRequest" /> for the specified <paramref name="uri" />.</span></span></summary>
        <returns><span data-ttu-id="17a99-185">지정된 URI에 대한 <see cref="T:System.Net.WebRequest" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-185">The <see cref="T:System.Net.WebRequest" /> for the specified URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a99-186">사용자 지정 하려면이 메서드를 재정의할 수는 <xref:System.Net.WebRequest> 전에 XML 웹 서비스 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-186">This method can be overridden to customize the <xref:System.Net.WebRequest> before the XML Web service request is made.</span></span> <span data-ttu-id="17a99-187">예를 들어 요청에 사용자 지정 헤더를 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-187">For example, you could add a custom header to the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17a99-188"><paramref name="uri" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="17a99-188">The <paramref name="uri" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
        <altmember cref="T:System.Net.HttpWebRequest" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="GetWriterForMessage">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlWriter GetWriterForMessage (System.Web.Services.Protocols.SoapClientMessage message, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlWriter GetWriterForMessage(class System.Web.Services.Protocols.SoapClientMessage message, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWriterForMessage (message As SoapClientMessage, bufferSize As Integer) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlWriter ^ GetWriterForMessage(System::Web::Services::Protocols::SoapClientMessage ^ message, int bufferSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Web.Services.Protocols.SoapClientMessage" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="17a99-189"><see cref="T:System.Web.Services.Protocols.SoapClientMessage" />를 초기화할 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />을 제공하는 <see cref="T:System.Xml.XmlWriter" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-189">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlWriter" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="17a99-190"><see cref="T:System.IO.StreamWriter" />에서 사용하는 <see cref="T:System.Xml.XmlWriter" />의 초기 버퍼 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-190">The initial buffer size of the <see cref="T:System.IO.StreamWriter" /> used by the <see cref="T:System.Xml.XmlWriter" />.</span></span></param>
        <summary><span data-ttu-id="17a99-191"><see cref="T:System.Xml.XmlWriter" /> 매개 변수의 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> 속성을 사용하여 초기화된 <see cref="T:System.Web.Services.Protocols.SoapClientMessage" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-191">Returns a <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="17a99-192"><paramref name="message" /> 매개 변수의 <see cref="T:System.Xml.XmlWriter" /> 속성을 사용하여 초기화된 <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-192">A <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object[] Invoke (string methodName, object[] parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string methodName, object[] parameters) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, parameters As Object()) As Object()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="protected object[] Invoke (string method_name, object[] parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] Invoke(string method_name, object[] parameters) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (method_name As String, parameters As Object()) As Object()" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ Invoke(System::String ^ method_name, cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="method_name" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="method_name">To be added.</param>
        <param name="parameters"><span data-ttu-id="17a99-193">XML 웹 서비스에 전달할 매개 변수가 들어 있는 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-193">An array of objects that contains the parameters to pass to the XML Web service.</span></span> <span data-ttu-id="17a99-194">배열 내의 값 순서는 파생 클래스의 호출 메서드에 있는 매개 변수의 순서와 일치합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-194">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <summary><span data-ttu-id="17a99-195">SOAP를 사용하여 XML Web services 메서드를 동기적으로 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-195">Invokes an XML Web service method synchronously using SOAP.</span></span></summary>
        <returns><span data-ttu-id="17a99-196">파생 클래스 메서드의 반환 값과 <see langword="reference" /> 또는 <see langword="out" /> 매개 변수가 들어 있는 개체의 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-196">An array of objects that contains the return value and any <see langword="reference" /> or <see langword="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a99-197">호출 하지 않으면 일반적으로 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> 메서드를 직접 XML 웹 서비스에 대 한 프록시 클래스를 직접 작성 하는 경우가 아니면 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-197">Typically, you do not call the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method directly, unless you are building your own proxy class for an XML Web service.</span></span>  
  
 <span data-ttu-id="17a99-198">XML 웹 서비스에 대 한 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스 프록시 클래스에서 파생 된 이름으로는 XML 웹 서비스 메서드를 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-198">A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</span></span> <span data-ttu-id="17a99-199">호출 하 여 프록시 클래스는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> 메서드를 호출 하는 XML 웹 서비스 메서드 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-199">The proxy class calls the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method to invoke an XML Web service method call.</span></span> <span data-ttu-id="17a99-200">예를 들어, XML 웹 서비스 이름이 인 XML 웹 서비스 메서드를 노출 하는 경우 `Add`, 프록시 클래스 라는 메서드가 포함 되어 `Add`합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-200">For example, if an XML Web service exposes an XML Web service method named `Add`, the proxy class also contains a method named `Add`.</span></span> <span data-ttu-id="17a99-201">에 대 한 코드 내에서 `Add` 프록시 클래스에서 메서드를 동기 호출을 통해 XML 웹 서비스 메서드에 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> 메서드 및 결과 대 한 반환 형식에 배치 됩니다 `Add`합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-201">Within the code for the `Add` method in the proxy class, a synchronous call is made to the XML Web service method through the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method and then the results are placed into the expected return type for `Add`.</span></span>  
  
 <span data-ttu-id="17a99-202">`methodName` 와 같은 메서드를 추가 된 사용자 지정 특성을 찾기 위해 매개 변수는 사용 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-202">The `methodName` parameter is used to find the custom attributes that may have been added to the method, such as <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>.</span></span> <span data-ttu-id="17a99-203"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> SOAP 프로토콜에 필요한 파생된 메서드에 대 한 추가 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-203"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> provides additional information on the derived method which is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17a99-204">다음 코드 예제는 Wsdl.exe에 의해 생성 된 프록시 클래스는 `Math` XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-204">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service.</span></span> <span data-ttu-id="17a99-205">내에서 `Add` 프록시 클래스의 메서드는 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> 메서드를 호출 하는 `Add` XML 웹 서비스 메서드.</span><span class="sxs-lookup"><span data-stu-id="17a99-205">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A> method is calling the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHttpClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHttpClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="17a99-206">다음 코드 예제는 `Math` 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-206">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Services.Protocols.SoapException"><span data-ttu-id="17a99-207">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="17a99-207">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17a99-208">요청은 개체의 현재 상태에서 유효하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-208">The request was not valid for the object's current state.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="17a99-209">네트워크에 액세스하는 동안 오류가 발생한 경우.</span><span class="sxs-lookup"><span data-stu-id="17a99-209">An error occurred while accessing the network.</span></span></exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17a99-210">지정한 메서드를 비동기적으로 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-210">Invokes the specified method asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="17a99-211">호출할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-211">The name of the method to invoke.</span></span></param>
        <param name="parameters"><span data-ttu-id="17a99-212">메서드에 전달할 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-212">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="17a99-213">메서드 호출이 완료될 때 호출되는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-213">The delegate called when the method invocation has completed.</span></span></param>
        <summary><span data-ttu-id="17a99-214">지정한 메서드를 비동기적으로 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-214">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="17a99-215">호출할 메서드의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-215">The name of the method to invoke.</span></span></param>
        <param name="parameters"><span data-ttu-id="17a99-216">메서드에 전달할 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-216">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="17a99-217">메서드 호출이 완료될 때 호출되는 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-217">The delegate called when the method invocation has completed.</span></span></param>
        <param name="userState"><span data-ttu-id="17a99-218">상태 정보를 <c>콜백</c> 대리자에 전달하는 데 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-218">An object used to pass state information into the <c>callback</c> delegate.</span></span></param>
        <summary><span data-ttu-id="17a99-219">지정한 메서드를 비동기적으로 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-219">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); void set(System::Web::Services::Protocols::SoapProtocolVersion value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17a99-220">XML Web services에 대한 SOAP 요청을 만드는 데 사용되는 SOAP 프로토콜의 버전을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-220">Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</span></span></summary>
        <value><span data-ttu-id="17a99-221"><see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-221">One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values.</span></span> <span data-ttu-id="17a99-222">기본값은 <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />입니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-222">The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17a99-223"><xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> 를 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스에서 속성을 설정할 <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> 기본적으로 WSDL 문서는 XML 웹 서비스에 대 한 SOAP 1.1 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-223">The <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> by default when a WSDL document for an XML Web service supports SOAP version 1.1.</span></span> <span data-ttu-id="17a99-224">그러나 때 XML 웹 서비스 지원 SOAP 1.2, Wsdl.exe 집합은 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> 속성을 <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-224">However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>.</span></span> <span data-ttu-id="17a99-225">파일을 Wsdl.exe 사용 하 여 프록시 클래스를 생성 하는 경우 SOAP 프로토콜의 버전을 선택 하려면 사용 하 여는 `/protocol` 바꾸십시오는 `SOAP` 또는 `SOAP12` 설정할 설정의 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> 속성을 <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> 및 <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>각각 .</span><span class="sxs-lookup"><span data-stu-id="17a99-225">To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the `/protocol` switch with the `SOAP` or `SOAP12` settings to set the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A> property to <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11> and <xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17a99-226">다음 코드 예제에서는 SOAP 1.2에는 XML 웹 서비스와 통신 하는 데 사용 하는 프로토콜의 버전을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="17a99-226">The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.</span></span>  
  
 [!code-aspx-csharp[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/CS/serverusageclientcs.aspx#1)]
 [!code-aspx-vb[SoapHttpClientProtocol.SoapVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapHttpClientProtocol.SoapVersion/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
  </Members>
</Type>