<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SoapHttpClientProtocol.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552aa1387c99dd8edc36ffe0708a22518888b226fd1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa1387c99dd8edc36ffe0708a22518888b226fd1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Specifies the class client that proxies derive from when using SOAP.</source>
          <target state="translated">SOAP를 사용할 때 클라이언트 프록시가 파생되는 클래스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If you are building an XML Web service client, then a proxy class that derives indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> must be created for the XML Web service.</source>
          <target state="translated">XML 웹 서비스 클라이언트를 작성 하는 경우 다음 프록시 클래스에서 파생 된 직접 또는 간접적으로 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> XML 웹 서비스에 대 한 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When the XML Web service client calls using SOAP, the proxy class must derive from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, which derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>.</source>
          <target state="translated">프록시 클래스에서 파생 되어야 XML 웹 서비스 클라이언트가 SOAP를 사용 하 여 데이터를 호출할 때 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>에서 파생 되는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>, in turn, derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpWebClientProtocol&gt;</ph>에서 파생 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>To communicate with an XML Web service, create a proxy class that derives indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> for the XML Web service you want to call.</source>
          <target state="translated">XML 웹 서비스와 통신할에서 직접 또는 간접적으로 파생 되는 프록시 클래스를 만듭니다 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> 호출 하려는 XML 웹 서비스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Instead of creating the proxy class manually, use the Web Services Description Language tool (Wsdl.exe) to create a proxy class for a given XML Web service's service description.</source>
          <target state="translated">프록시 클래스를 수동으로 만들지 않고 지정된 된 XML 웹 서비스의 서비스 설명에 대 한 프록시 클래스를 만들려면 웹 서비스 기술 언어 도구 (Wsdl.exe)를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When a proxy class is generated for the SOAP protocol, synchronous calls to XML Web service methods are made via the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> method, whereas asynchronous calls are made using the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> method.</source>
          <target state="translated">SOAP 프로토콜에 대 한 프록시 클래스 생성 되 면 동기를 XML 웹 서비스 메서드 호출을 통해는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A&gt;</ph> 메서드를 사용 하 여 비동기 호출이 수행 되는 반면는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A&gt;</ph> 메서드 및 <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">다음 코드 예제는 Wsdl.exe에 의해 생성 된 프록시 클래스는 <ph id="ph1">`Math`</ph> XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The proxy class derives from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, which derives from the abstract <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> class.</source>
          <target state="translated">프록시 클래스에서 파생 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>, 추상에서 파생 되는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was generated.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`Math`</ph> XML 웹 서비스를 생성 한 위의 프록시 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>When you override this class, you can introduce methods in the derived class which are specific to a particular type of XML Web service.</source>
          <target state="translated">이 클래스를 재정의 하면 특정 유형의 XML 웹 서비스와 관련 된 파생된 클래스에서 메서드를 도입할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The methods capture the parameters and call the base class to do the work of communicating with the XML Web service.</source>
          <target state="translated">메서드 매개 변수를 캡처 및 XML 웹 서비스와의 통신 작업 수행을 위해 기본 클래스를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If the introduced methods are asynchronous, call the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method and the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">도입 된 메서드는 비동기 호출의 <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> 메서드 및 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>If the introduced methods are synchronous, call the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">도입 된 메서드는 동기적, 경우에 호출 된 <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>The overridden constructor typically sets the <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph> property to the URL of the XML Web service method.</source>
          <target state="translated">재정의 된 생성자는 일반적으로 설정 된 <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph> 속성을 XML 웹 서비스 메서드의 URL입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The name of the XML Web service method in the derived class that is invoking the <ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> 메서드를 호출하고 있는 파생 클래스의 XML Web services 메서드 이름입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An array of objects containing the parameters to pass to the XML Web service.</source>
          <target state="translated">XML 웹 서비스에 전달할 매개 변수가 들어 있는 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">배열 내의 값 순서는 파생 클래스의 호출 메서드에 있는 매개 변수의 순서와 일치합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The delegate to call when the asynchronous invoke is complete.</source>
          <target state="translated">비동기 호출이 완료될 때 호출할 대리자입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>콜백<ept id="p1">&lt;/c&gt;</ept>이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 대리자가 호출되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Extra information supplied by the caller.</source>
          <target state="translated">호출자가 제공한 추가 정보입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Starts an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">SOAP를 사용하여 XML Web services의 비동기 호출을 시작합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is passed to the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph> method to obtain the return values from the remote method call.</source>
          <target state="translated">원격 메서드 호출에서 반환 값을 가져오기 위해 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드에 전달된 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Typically, you would not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">일반적으로 하지 호출 하는 것은 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> 메서드를 직접 XML 웹 서비스에 대 한 프록시 클래스를 직접 작성 한다고 하지 않는 한 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) from a Service Description exposes the XML Web service methods as names derived from the proxy class to call the XML Web service methods synchronously.</source>
          <target state="translated">서비스 설명에서 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스는 XML 웹 서비스 메서드를 동기적으로 호출 하는 프록시 클래스에서 파생 된 이름으로는 XML 웹 서비스 메서드를 노출 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>To call the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">XML 웹 서비스 메서드를 비동기적으로 호출 하려면 두 개의 추가 방법으로 각 XML 웹 서비스 메서드에 대 한 프록시 클래스에 추가 됩니다는 <ph id="ph1">`Begin`</ph> XML 웹 서비스 메서드 및를 사용 하면 이름에 추가 하는 접두사는 <ph id="ph2">`End`</ph> 접두사를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method to start an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">호출 하 여 프록시 클래스는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> 메서드는 XML 웹 서비스 메서드에 대 한 비동기 호출 호출을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`BeginAdd`</ph>, for starting an invocation to the XML Web service method.</source>
          <target state="translated">예를 들어, XML 웹 서비스 이름이 인 XML 웹 서비스 메서드를 노출 하는 경우 <ph id="ph1">`Add`</ph>, 라는 메서드를 포함 하는 프록시 클래스 <ph id="ph2">`BeginAdd`</ph>, XML 웹 호출을 시작 하기 위한 서비스 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the code for the <ph id="ph1">`BeginAdd`</ph>, a call is made to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method and the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">에 대 한 코드 내에서 <ph id="ph1">`BeginAdd`</ph>, 호출에 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> 메서드 결과 대 한 반환 형식으로 변환 됩니다 <ph id="ph3">`Add`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`methodName`</ph> is used to find the custom attributes which may have been added to the method, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph> 등 메서드를 추가 된 사용자 지정 특성을 찾는 데 사용 됩니다 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> provides additional information about the derived method that is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> SOAP 프로토콜에 필요한 파생된 방법에 대 한 추가 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source><ph id="ph1">`asyncState`</ph> is passed into <ph id="ph2">`callback`</ph> and is included in the <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> that is returned from the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> 에 전달 되 <ph id="ph2">`callback`</ph> 에 포함 되어는 <ph id="ph3">&lt;xref:System.IAsyncResult&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">`asyncState`</ph> parameter can be used to pass information about the context of the asynchronous call, specified in the <ph id="ph2">`callback`</ph> parameter, to the delegate that handles the result.</source>
          <target state="translated"><ph id="ph1">`asyncState`</ph> 에 지정 된 비동기 호출의 컨텍스트에 대 한 정보를 전달 하려면 매개 변수를 사용할 수는 <ph id="ph2">`callback`</ph> 결과 처리 하는 대리자에 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">다음 코드 예제는 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스에 대 한는 <ph id="ph1">`Math`</ph> XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>Within the <ph id="ph1">`BeginAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> method is starting an asynchronous invocation to the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`BeginAdd`</ph> 프록시 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A&gt;</ph> 메서드를 비동기식으로 호출을 시작 하는 것은 <ph id="ph3">`Add`</ph> XML 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`Math`</ph> 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">요청은 개체의 현재 상태에서 유효하지 않습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">네트워크에 액세스하는 동안 오류가 발생한 경우.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Dynamically binds to an XML Web service described in the discovery document at <ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" /&gt;</ph>의 검색 문서에 설명되어 있는 XML Web services에 동적으로 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>An XML Web service client can dynamically bind to an XML Web service other than the one referenced in the proxy class using the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method.</source>
          <target state="translated">XML 웹 서비스 클라이언트가 사용 하 여 프록시 클래스에서 참조 하는 것과 다른 XML 웹 서비스를 동적으로 바인딩할 수는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property refers to the base address of the XML Web service.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> 속성은 XML 웹 서비스의 기본 주소를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>However, before invoking the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method, set the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to a URL of a discovery document.</source>
          <target state="translated">그러나 호출 하기 전에는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> 메서드를 설정의 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> 속성을 검색 문서의 URL입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method attempts to find a match in the discovery document to the binding defined in the proxy class and then dynamically bind to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> 메서드는 일치 하는 프록시 클래스에 정의 된 바인딩에 검색 문서에서 찾은을 동적으로 바인딩할 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>If successful, subsequent method calls are directed to the XML Web service described in the discovery document.</source>
          <target state="translated">성공 하면 후속 메서드 호출은 검색 문서에서 설명 되는 XML 웹 서비스에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>If the proxy class is built using the Web Services Description Language tool (Wsdl.exe), the proxy class defines the binding implemented by the XML Web service methods it invokes using the <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph>.</source>
          <target state="translated">프록시 클래스를 사용 하 여 호출 하는 XML 웹 서비스 메서드를 구현한 바인딩을 정의 웹 서비스 기술 언어 도구 (Wsdl.exe)를 사용 하 여 프록시 클래스 작성 되는 경우는 <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>When an XML Web service implements multiple bindings, Wsdl.exe creates a proxy class for each binding.</source>
          <target state="translated">여러 개의 바인딩을 구현 하는 XML 웹 서비스, Wsdl.exe 각 바인딩에 대 한 프록시 클래스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Applied to each proxy class is a <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> that defines the name of the binding and its namespace.</source>
          <target state="translated">각 프록시 클래스에는 적용 되는 <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> 바인딩와 네임 스페이스의 이름을 정의 하는 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The discovery document you set the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> property to must contain a reference to an XML Web service that implements the same binding name and namespace, or an exception is thrown.</source>
          <target state="translated">설정 검색 문서는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A&gt;</ph> 속성을 동일한 바인딩 이름 및 네임 스페이스를 구현 하는 XML 웹 서비스에 대 한 참조를 포함 해야 합니다 또는 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The following code example is a proxy class generated using the Wsdl.exe utility for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">다음 코드 예제는 Wsdl.exe 유틸리티를 사용 하 여 생성 하는 프록시 클래스는 <ph id="ph1">`Math`</ph> XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>A <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> is applied to the <ph id="ph2">`Math`</ph> proxy class setting the binding name to <ph id="ph3">`MathSoap`</ph> and its namespace to <ph id="ph4">`http://tempuri.org/`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.Services.WebServiceBindingAttribute&gt;</ph> 에 적용 되는 <ph id="ph2">`Math`</ph> 바인딩 이름을 설정 하는 프록시 클래스 <ph id="ph3">`MathSoap`</ph> 및 네임 스페이스를 <ph id="ph4">`http://tempuri.org/`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The following code example is a Web Service client using the preceding proxy class.</source>
          <target state="translated">다음 코드 예제는 위의 프록시 클래스를 사용 하는 웹 서비스 클라이언트입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>Within the <ph id="ph1">`EnterBtn_Click`</ph> event of the Web Form, the XML Web service client calls the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> method attempting to dynamically bind to the URL supplied by the user.</source>
          <target state="translated">내에서 <ph id="ph1">`EnterBtn_Click`</ph> XML 웹 서비스 클라이언트 호출 웹 폼의 이벤트는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover%2A&gt;</ph> 메서드는 사용자가 제공 하는 URL에 동적으로 바인딩하는 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
          <source>The proxy class does not have a binding defined.</source>
          <target state="translated">프록시 클래스에 정의된 바인딩이 없습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 메서드에서 반환된 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Ends an asynchronous invocation of an XML Web service method using SOAP.</source>
          <target state="translated">SOAP를 사용하여 XML Web services 메서드의 비동기 호출을 종료합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An array of objects that contains the return value and any by-reference or <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">파생 클래스 메서드의 반환 값과 By Reference 매개 변수 또는 <ph id="ph1">&lt;see langword="out" /&gt;</ph> 매개 변수가 들어 있는 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Typically, you would not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method directly, unless you were building your own proxy class for an XML Web service.</source>
          <target state="translated">일반적으로 하지 호출 하는 것은 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> 메서드를 직접 XML 웹 서비스에 대 한 프록시 클래스를 직접 작성 한다고 하지 않는 한 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class for calling the XML Web service methods synchronously.</source>
          <target state="translated">XML 웹 서비스에 대 한 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스는 XML 웹 서비스 메서드를 동기적으로 호출 하기 위한 프록시 클래스에서 파생 된 이름으로는 XML 웹 서비스 메서드를 노출 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>For calling the XML Web service methods asynchronously, two additional methods are added to the proxy class for each XML Web service method, one with the <ph id="ph1">`Begin`</ph> prefix added to the name of the XML Web service method and one with the <ph id="ph2">`End`</ph> prefix added.</source>
          <target state="translated">XML 웹 서비스 메서드를 비동기적으로 호출에 대 한 두 개의 추가 방법으로 각 XML 웹 서비스 메서드에 대 한 프록시 클래스에 추가 됩니다는 <ph id="ph1">`Begin`</ph> XML 웹 서비스 메서드 및를 사용 하면 이름에 추가 하는 접두사는 <ph id="ph2">`End`</ph> 접두사를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method to complete an asynchronous invocation call to the XML Web service method.</source>
          <target state="translated">호출 하 여 프록시 클래스는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> 메서드가 XML 웹 서비스 메서드에 대 한 비동기 호출 호출을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class contains a method named <ph id="ph2">`EndAdd`</ph>, for completing an asynchronous invocation of an XML Web service method.</source>
          <target state="translated">예를 들어, XML 웹 서비스 이름이 인 XML 웹 서비스 메서드를 노출 하는 경우 <ph id="ph1">`Add`</ph>, 라는 메서드를 포함 하는 프록시 클래스 <ph id="ph2">`EndAdd`</ph>, XML Web 비동기 호출을 완료 하기 위한 서비스 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the code for the <ph id="ph1">`EndAdd`</ph> a call is made to the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method and then the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">에 대 한 코드 내에서 <ph id="ph1">`EndAdd`</ph> 를 호출할는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> 메서드 및 결과 대 한 반환 형식에 배치 됩니다 <ph id="ph3">`Add`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">다음 코드 예제는 Wsdl.exe에 의해 생성 된 프록시 클래스는 <ph id="ph1">`Math`</ph> XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>Within the <ph id="ph1">`EndAdd`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> method completes the asynchronous invocation to the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`EndAdd`</ph> 프록시 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A&gt;</ph> 메서드가 완료 되는 비동기 호출을는 <ph id="ph3">`Add`</ph> XML 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`Math`</ph> 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is not the return value from the <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>가 <ph id="ph2">&lt;see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /&gt;</ph> 메서드의 반환 값이 아닌 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">요청은 개체의 현재 상태에서 유효하지 않습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">네트워크에 액세스하는 동안 오류가 발생한 경우.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> to initialize the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>를 초기화할 <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph>을 제공하는 <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>The initial buffer size of the <ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StreamReader" /&gt;</ph>에서 사용하는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>의 초기 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 매개 변수의 <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> 속성을 사용하여 초기화된 <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;paramref name="message" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="message" /&gt;</ph> 매개 변수의 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 속성을 사용하여 초기화된 <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> to use when creating the <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>를 만들 때 사용할 <ph id="ph2">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>Creates a <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> for the specified <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;paramref name="uri" /&gt;</ph>에 대한 새 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph> for the specified URI.</source>
          <target state="translated">지정된 URI에 대한 <ph id="ph1">&lt;see cref="T:System.Net.WebRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>This method can be overridden to customize the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> before the XML Web service request is made.</source>
          <target state="translated">사용자 지정 하려면이 메서드를 재정의할 수는 <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> 전에 XML 웹 서비스 요청 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>For example, you could add a custom header to the request.</source>
          <target state="translated">예를 들어 요청에 사용자 지정 헤더를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="uri" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uri" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> that provides the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> to initialize the <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>를 초기화할 <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph>을 제공하는 <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>The initial buffer size of the <ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.StreamWriter" /&gt;</ph>에서 사용하는 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>의 초기 버퍼 크기입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 매개 변수의 <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> 속성을 사용하여 초기화된 <ph id="ph3">&lt;see cref="T:System.Web.Services.Protocols.SoapClientMessage" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> initialized with the <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph> property of the <ph id="ph3">&lt;paramref name="message" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="message" /&gt;</ph> 매개 변수의 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 속성을 사용하여 초기화된 <ph id="ph2">&lt;see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An array of objects that contains the parameters to pass to the XML Web service.</source>
          <target state="translated">XML 웹 서비스에 전달할 매개 변수가 들어 있는 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</source>
          <target state="translated">배열 내의 값 순서는 파생 클래스의 호출 메서드에 있는 매개 변수의 순서와 일치합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Invokes an XML Web service method synchronously using SOAP.</source>
          <target state="translated">SOAP를 사용하여 XML Web services 메서드를 동기적으로 호출합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An array of objects that contains the return value and any <ph id="ph1">&lt;see langword="reference" /&gt;</ph> or <ph id="ph2">&lt;see langword="out" /&gt;</ph> parameters of the derived class method.</source>
          <target state="translated">파생 클래스 메서드의 반환 값과 <ph id="ph1">&lt;see langword="reference" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="out" /&gt;</ph> 매개 변수가 들어 있는 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Typically, you do not call the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method directly, unless you are building your own proxy class for an XML Web service.</source>
          <target state="translated">호출 하지 않으면 일반적으로 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> 메서드를 직접 XML 웹 서비스에 대 한 프록시 클래스를 직접 작성 하는 경우가 아니면 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>A proxy class generated by the Web Services Description Language tool (Wsdl.exe) for an XML Web service exposes the XML Web service methods as names off of the proxy class.</source>
          <target state="translated">XML 웹 서비스에 대 한 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스 프록시 클래스에서 파생 된 이름으로는 XML 웹 서비스 메서드를 노출 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The proxy class calls the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method to invoke an XML Web service method call.</source>
          <target state="translated">호출 하 여 프록시 클래스는 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> 메서드를 호출 하는 XML 웹 서비스 메서드 호출 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>For example, if an XML Web service exposes an XML Web service method named <ph id="ph1">`Add`</ph>, the proxy class also contains a method named <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">예를 들어, XML 웹 서비스 이름이 인 XML 웹 서비스 메서드를 노출 하는 경우 <ph id="ph1">`Add`</ph>, 프록시 클래스 라는 메서드가 포함 되어 <ph id="ph2">`Add`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Within the code for the <ph id="ph1">`Add`</ph> method in the proxy class, a synchronous call is made to the XML Web service method through the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method and then the results are placed into the expected return type for <ph id="ph3">`Add`</ph>.</source>
          <target state="translated">에 대 한 코드 내에서 <ph id="ph1">`Add`</ph> 프록시 클래스에서 메서드를 동기 호출을 통해 XML 웹 서비스 메서드에 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> 메서드 및 결과 대 한 반환 형식에 배치 됩니다 <ph id="ph3">`Add`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The <ph id="ph1">`methodName`</ph> parameter is used to find the custom attributes that may have been added to the method, such as <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`methodName`</ph> 와 같은 메서드를 추가 된 사용자 지정 특성을 찾기 위해 매개 변수는 사용 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> provides additional information on the derived method which is required for the SOAP protocol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute&gt;</ph> SOAP 프로토콜에 필요한 파생된 메서드에 대 한 추가 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The following code example is a proxy class generated by Wsdl.exe for the <ph id="ph1">`Math`</ph> XML Web service.</source>
          <target state="translated">다음 코드 예제는 Wsdl.exe에 의해 생성 된 프록시 클래스는 <ph id="ph1">`Math`</ph> XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>Within the <ph id="ph1">`Add`</ph> method of the proxy class, the <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> method is calling the <ph id="ph3">`Add`</ph> XML Web service method.</source>
          <target state="translated">내에서 <ph id="ph1">`Add`</ph> 프록시 클래스의 메서드는 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke%2A&gt;</ph> 메서드를 호출 하는 <ph id="ph3">`Add`</ph> XML 웹 서비스 메서드.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The following code example is the <ph id="ph1">`Math`</ph> XML Web service, from which the preceding proxy class was created.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">`Math`</ph> 위의 프록시 클래스 생성 된 XML 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The request reached the server computer, but was not processed successfully.</source>
          <target state="translated">서버 컴퓨터에 요청이 도달했지만 성공적으로 처리되지 않은 경우</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>The request was not valid for the object's current state.</source>
          <target state="translated">요청은 개체의 현재 상태에서 유효하지 않습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
          <source>An error occurred while accessing the network.</source>
          <target state="translated">네트워크에 액세스하는 동안 오류가 발생한 경우.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">지정한 메서드를 비동기적으로 호출합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The name of the method to invoke.</source>
          <target state="translated">호출할 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">메서드에 전달할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">메서드 호출이 완료될 때 호출되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">지정한 메서드를 비동기적으로 호출합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The name of the method to invoke.</source>
          <target state="translated">호출할 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The parameters to pass to the method.</source>
          <target state="translated">메서드에 전달할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>The delegate called when the method invocation has completed.</source>
          <target state="translated">메서드 호출이 완료될 때 호출되는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>An object used to pass state information into the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate.</source>
          <target state="translated">상태 정보를 <bpt id="p1">&lt;c&gt;</bpt>콜백<ept id="p1">&lt;/c&gt;</ept> 대리자에 전달하는 데 사용되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
          <source>Invokes the specified method asynchronously.</source>
          <target state="translated">지정한 메서드를 비동기적으로 호출합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</source>
          <target state="translated">XML Web services에 대한 SOAP 요청을 만드는 데 사용되는 SOAP 프로토콜의 버전을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property is set in the proxy class generated by the Web Services Description Language tool (Wsdl.exe) to <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> by default when a WSDL document for an XML Web service supports SOAP version 1.1.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> 를 웹 서비스 기술 언어 도구 (Wsdl.exe)에 의해 생성 된 프록시 클래스에서 속성을 설정할 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> 기본적으로 WSDL 문서는 XML 웹 서비스에 대 한 SOAP 1.1 지원 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>However, when an XML Web service only supports SOAP 1.2, Wsdl.exe sets the <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>.</source>
          <target state="translated">그러나 때 XML 웹 서비스 지원 SOAP 1.2, Wsdl.exe 집합은 <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>To choose the version of the SOAP protocol when generating the proxy class with Wsdl.exe, use the <ph id="ph1">`/protocol`</ph> switch with the <ph id="ph2">`SOAP`</ph> or <ph id="ph3">`SOAP12`</ph> settings to set the <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> property to <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> and <ph id="ph6">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>, respectively.</source>
          <target state="translated">파일을 Wsdl.exe 사용 하 여 프록시 클래스를 생성 하는 경우 SOAP 프로토콜의 버전을 선택 하려면 사용 하 여는 <ph id="ph1">`/protocol`</ph> 바꾸십시오는 <ph id="ph2">`SOAP`</ph> 또는 <ph id="ph3">`SOAP12`</ph> 설정할 설정의 <ph id="ph4">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion%2A&gt;</ph> 속성을 <ph id="ph5">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap11&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Web.Services.Protocols.SoapProtocolVersion.Soap12&gt;</ph>각각 .</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
          <source>The following code example sets the version of the protocol used to communicate with an XML Web service to SOAP 1.2.</source>
          <target state="translated">다음 코드 예제에서는 SOAP 1.2에는 XML 웹 서비스와 통신 하는 데 사용 하는 프로토콜의 버전을 설정 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>