<Type Name="SerializerWriterCollator" FullName="System.Windows.Documents.Serialization.SerializerWriterCollator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bd19525fca7d42e4fdc22477e73f9dd5c15e0c0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36363861" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SerializerWriterCollator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializerWriterCollator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializerWriterCollator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializerWriterCollator abstract" />
  <TypeSignature Language="F#" Value="type SerializerWriterCollator = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>플러그 인 문서 직렬화 <see cref="T:System.Windows.Media.Visual" /> 병합기를 구현하는 데 필요한 추상 메서드를 정의합니다.</summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides">
      <para>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 사용 하 여 만든는 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" /> 의 메서드는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 클래스입니다.  <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 여에 기록 될 때 동일한 출력 스트림에 씁니다는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 만든는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />합니다.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializerWriterCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializerWriterCollator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 사용 하 여 만든는 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" /> 의 메서드는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 클래스입니다.  <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 여에 기록 될 때 동일한 출력 스트림에 씁니다는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 만든는 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginBatchWrite">
      <MemberSignature Language="C#" Value="public abstract void BeginBatchWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginBatchWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginBatchWrite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginBatchWrite();" />
      <MemberSignature Language="F#" Value="abstract member BeginBatchWrite : unit -&gt; unit" Usage="serializerWriterCollator.BeginBatchWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의되는 경우 일괄 쓰기 작업을 시작합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public abstract void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Cancel();" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit" Usage="serializerWriterCollator.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 동기 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" /> 작업을 취소합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public abstract void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelAsync();" />
      <MemberSignature Language="F#" Value="abstract member CancelAsync : unit -&gt; unit" Usage="serializerWriterCollator.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의되는 경우 비동기 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" /> 작업을 취소합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="EndBatchWrite">
      <MemberSignature Language="C#" Value="public abstract void EndBatchWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndBatchWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndBatchWrite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndBatchWrite();" />
      <MemberSignature Language="F#" Value="abstract member EndBatchWrite : unit -&gt; unit" Usage="serializerWriterCollator.EndBatchWrite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생 클래스에서 재정의되는 경우 일괄 쓰기 작업을 완료합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 serialization 스트림에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.Write%2A> 와 연결 된 스트림을 쓰면는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 만든는 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator> 를 호출 하 여 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Media.Visual -&gt; unit" Usage="serializerWriterCollator.Write visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.IO.Stream" /> serialization에 쓸 시각적 요소입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 serialization 스트림에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.Write%2A> 메서드를와 연결 된 스트림을 작성는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 만든는 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator> 를 호출 하 여 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriterCollator.Write (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">스트림에 쓰여지는 <see cref="T:System.Windows.Media.Visual" />입니다.</param>
        <param name="printTicket">자료를 인쇄하는 방법에 대한 기본 설정을 지정하는 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 연결된 인쇄 티켓과 함께 serialization 스트림에 동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.Write%2A> 메서드를와 연결 된 스트림을 작성는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 만든는 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator> 를 호출 하 여 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 serialization 스트림에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A> 와 연결 된 스트림을 쓰면는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 만든는 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator> 를 호출 하 여 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual -&gt; unit" Usage="serializerWriterCollator.WriteAsync visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.IO.Stream" /> serialization에 쓸 시각적 요소입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 serialization 스트림에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A> 와 연결 된 스트림을 쓰면는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 만든는 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator> 를 호출 하 여 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * obj -&gt; unit" Usage="serializerWriterCollator.WriteAsync (visual, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.IO.Stream" /> serialization에 쓸 시각적 요소입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 지정된 이벤트 식별자와 함께 serialization 스트림에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A> 와 연결 된 스트림을 쓰면는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 만든는 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator> 를 호출 하 여 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>합니다.  
  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriterCollator.WriteAsync (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.IO.Stream" /> serialization에 쓸 시각적 요소입니다.</param>
        <param name="printTicket">
          <c>visual</c> 요소에 대한 기본 인쇄 설정입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 연결된 인쇄 티켓과 함께 serialization 스트림에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A> 메서드를와 연결 된 스트림을 작성는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 만든는 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator> 를 호출 하 여 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>합니다.  
  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriterCollator.WriteAsync (visual, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.IO.Stream" /> serialization에 쓸 시각적 요소입니다.</param>
        <param name="printTicket">
          <c>visual</c> 요소에 대한 기본 인쇄 설정입니다.</param>
        <param name="userState">비동기 쓰기 작업을 식별하기 위해 호출자가 지정한 개체입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Windows.Media.Visual" /> 요소를 연결된 인쇄 티켓 및 식별자와 함께 serialization 스트림에 비동기적으로 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A> 메서드를와 연결 된 스트림을 작성는 <xref:System.Windows.Documents.Serialization.SerializerWriter> 만든는 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator> 를 호출 하 여 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>합니다.  
  
 `printTicket` 수 `null` 기본 인쇄 설정이 없는 경우.  
  
 `userState` 에 전달 되는 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> 때는 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> 이벤트가 발생 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </Member>
  </Members>
</Type>