<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableSortedSet`1+Builder.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac579170aea0ffea2d8a6dde54d4fd7585b7a160ac0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79170aea0ffea2d8a6dde54d4fd7585b7a160ac0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableSortedSet`1.Builder">
          <source>Represents a sorted set that enables changes with little or no memory allocations, and efficiently manipulates or builds immutable sorted sets.</source>
          <target state="translated">메모리 할당 없이 변경 가능하고 변경할 수 없는 정렬된 집합을 효율적으로 조작하거나 작성하는 정렬된 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableSortedSet`1.Builder">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet 패키지<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>변경할 수 없는 컬렉션 정보 및 설치 방법<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableSortedSet`1.Builder">
          <source>Although <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Union%2A?displayProperty=nameWithType&gt;</ph> and other methods already provide fast bulk change operations on a collection, the <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> class enables multiple combinations of changes to be made to a set with equal or greater efficiency, depending on the operation.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Union%2A?displayProperty=nameWithType&gt;</ph> 다른 메서드는 컬렉션에서 빠른 대량 변경 작업을 이미 제공 하 고는 <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> 클래스를 사용 하면 여러 작업에 따라 같거나 더 큰 효율적으로 집합에 대해 적용할 변경 사항 조합 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Add(`0)">
          <source>The element to add to the set.</source>
          <target state="translated">집합에 추가할 요소입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Add(`0)">
          <source>Adds an element to the current set and returns a value to indicate whether the element was successfully added.</source>
          <target state="translated">현재 집합에 요소를 추가하고 요소가 성공적으로 추가되었는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Add(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is added to the set; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the element is already in the set</source>
          <target state="translated">요소가 집합에 추가되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 요소가 집합에 이미 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Clear">
          <source>Removes all elements from this set.</source>
          <target state="translated">이 집합에서 모든 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Contains(`0)">
          <source>The object to locate in the set.</source>
          <target state="translated">집합에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Contains(`0)">
          <source>Determines whether the set contains the specified object.</source>
          <target state="translated">집합에 지정한 개체가 포함되어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the set; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="item" /&gt;</ph>가 집합에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Count">
          <source>Gets the number of elements in the immutable sorted set.</source>
          <target state="translated">변경할 수 없는 정렬된 집합의 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Count">
          <source>The number of elements in this set.</source>
          <target state="translated">이 집합의 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from the set.</source>
          <target state="translated">집합에서 제거할 항목의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes the specified set of items from the current set.</source>
          <target state="translated">현재 집합에서 지정된 항목 집합을 제거합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.GetEnumerator">
          <source>Returns an enumerator that iterates through the set.</source>
          <target state="translated">집합에서 반복되는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.GetEnumerator">
          <source>A enumerator that can be used to iterate through the set.</source>
          <target state="translated">집합에서 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current set so that it contains only elements that are also in a specified collection.</source>
          <target state="translated">지정된 컬렉션에도 있는 요소만 포함되도록 현재 집합을 수정합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current set is a proper (strict) subset of a specified collection.</source>
          <target state="translated">현재 집합이 지정된 컬렉션의 적절한(고급) 하위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a proper subset of <ph id="ph2">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 <ph id="ph2">&lt;paramref name="other" /&gt;</ph>의 적절한 하위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current set is a proper (strict) superset of a specified collection.</source>
          <target state="translated">현재 집합이 지정된 컬렉션의 적절한(고급) 하위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a proper superset of <ph id="ph2">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 <ph id="ph2">&lt;paramref name="other" /&gt;</ph>의 적절한 상위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection is compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current set is a subset of a specified collection.</source>
          <target state="translated">현재 집합이 지정된 컬렉션의 하위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a subset of <ph id="ph2">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 <ph id="ph2">&lt;paramref name="other" /&gt;</ph>의 하위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current set is a superset of a specified collection.</source>
          <target state="translated">현재 집합이 지정된 컬렉션의 상위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a superset of <ph id="ph2">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 <ph id="ph2">&lt;paramref name="other" /&gt;</ph>의 상위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Item(System.Int32)">
          <source>The 0-based index of the element in the set to return.</source>
          <target state="translated">반환할 집합에서 요소의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Item(System.Int32)">
          <source>Gets the element of the set at the given index.</source>
          <target state="translated">지정된 인덱스에서 집합의 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Item(System.Int32)">
          <source>The element at the given position.</source>
          <target state="translated">지정 된 위치의 요소입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Item(System.Int32)">
          <source>No index setter is offered because the element being replaced may not sort             to the same position in the sorted collection as the replacing element.</source>
          <target state="translated">인덱스 setter는 대체 되 고 요소 대체 요소와 정렬 된 컬렉션의 동일한 위치에 정렬 되지 않을 수 있습니다 때문에 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.KeyComparer">
          <source>Gets or sets the object that is used to determine equality for the values in the immutable sorted set.</source>
          <target state="translated">변경할 수 없는 정렬된 집합의 값이 같은지 확인하는 데 사용되는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.KeyComparer">
          <source>The comparer that is used to determine equality for the values in the set.</source>
          <target state="translated">집합의 값이 같은지 확인하는 데 사용되는 비교자입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.KeyComparer">
          <source>If the comparer is changed in a way that would introduce collisions, the conflicting elements are dropped, leaving only one of each matching pair in the collection.</source>
          <target state="translated">비교자는 충돌을 소개 하는 방식으로 변경 되 면 충돌 하는 요소 컬렉션에 일치 하는 각 쌍 중 하나만 남겨 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Max">
          <source>Gets the maximum value in the immutable sorted set, as defined by the comparer.</source>
          <target state="translated">비교자로 정의된 변경할 수 없는 정렬된 집합의 최대값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Max">
          <source>The maximum value in the set.</source>
          <target state="translated">집합의 최대값입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Min">
          <source>Gets the minimum value in the immutable sorted set, as defined by the comparer.</source>
          <target state="translated">비교자로 정의된 변경할 수 없는 정렬된 집합의 최소값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Min">
          <source>The minimum value in the set.</source>
          <target state="translated">집합의 최소값입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current set overlaps with the specified collection.</source>
          <target state="translated">현재 집합이 지정된 컬렉션과 겹치는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set and <ph id="ph2">&lt;paramref name="other" /&gt;</ph> share at least one common element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합과 <ph id="ph2">&lt;paramref name="other" /&gt;</ph>가 적어도 하나의 공통 요소를 공유하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Remove(`0)">
          <source>The object to remove from the set.</source>
          <target state="translated">집합에서 제거할 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Remove(`0)">
          <source>Removes the first occurrence of the specified object from the set.</source>
          <target state="translated">집합에서 첫 번째로 나타나는 지정된 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> was removed from the set; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if <ph id="ph4">&lt;paramref name="item" /&gt;</ph> was not found in the set.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="item" /&gt;</ph>가 집합에서 제거되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph4">&lt;paramref name="item" /&gt;</ph>가 집합에 없으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Reverse">
          <source>Returns an enumerator that iterates over the immutable sorted set in reverse order.</source>
          <target state="translated">이 변경할 수 없는 정렬된 집합을 역순으로 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.Reverse">
          <source>An enumerator that iterates over the set in reverse order.</source>
          <target state="translated">집합을 역순으로 반복하는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current set and the specified collection contain the same elements.</source>
          <target state="translated">현재 집합과 지정된 컬렉션에 같은 요소가 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is equal to <ph id="ph2">&lt;paramref name="other" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 <ph id="ph2">&lt;paramref name="other" /&gt;</ph>와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 중 하나에만 있는 요소만 포함하도록 현재 집합을 수정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The element to add to the set.</source>
          <target state="translated">집합에 추가할 요소입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an element to the current set and returns a value to indicate whether the element was successfully added.</source>
          <target state="translated">현재 집합에 요소를 추가하고 요소가 성공적으로 추가되었는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from collection.</source>
          <target state="translated">컬렉션에서 복사된 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>Copies the elements of the collection to an array, starting at a particular array index.</source>
          <target state="translated">특정 배열 인덱스부터 시작하여 컬렉션의 요소를 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Gets a value indicating whether this instance is read-only.</source>
          <target state="translated">이 인스턴스가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>Always <bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">항상 <bpt id="p1">&lt;c&gt;</bpt>false<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">컬렉션을 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>A enumerator that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the set.</source>
          <target state="translated">집합에서 복사한 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the set to an array, starting at a particular array index.</source>
          <target state="translated">집합의 요소를 특정 배열 인덱스에서 시작하여 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#IsSynchronized">
          <source>true if access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">컬렉션을 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>A enumerator that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Builder&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.ToImmutable">
          <source>Creates an immutable sorted set based on the contents of this instance.</source>
          <target state="translated">이 인스턴스의 내용을 기반으로 변경할 수 없는 정렬된 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.ToImmutable">
          <source>An immutable set.</source>
          <target state="translated">변경할 수 없는 집합입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.ToImmutable">
          <source>This method is an O(n) operation and approaches O(1) time as the number of actual mutations to the set since the last call to this method approaches 0.</source>
          <target state="translated">이 메서드는 o (n) 작업 및 접근 방식을 o (1) 시간 수가 실제 변경이 집합 0이 메서드 접근 방식에 대 한 마지막 호출 후 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current state.</source>
          <target state="translated">현재 상태와 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableSortedSet`1.Builder.UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current set so that it contains all elements that are present in both the current set and in the specified collection.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 다에 있는 모든 요소를 포함하도록 현재 집합을 수정합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>