<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableDictionary`2.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ca035a9f818bab85fa4db823783bb94b7421ae73.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca035a9f818bab85fa4db823783bb94b7421ae73</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableDictionary`2">
          <source>The type of the keys in the dictionary.</source>
          <target state="translated">사전에 있는 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableDictionary`2">
          <source>The type of the values in the dictionary.</source>
          <target state="translated">사전에 있는 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableDictionary`2">
          <source>Represents an immutable, unordered collection of keys and values.</source>
          <target state="translated">순서가 지정되지 않은 변경할 수 없는 키/값 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableDictionary`2">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet 패키지<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>변경할 수 없는 컬렉션 정보 및 설치 방법<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableDictionary`2">
          <source>When you manipulate an immutable dictionary a copy of the original dictionary is made, manipulations applied and a new immutable dictionary is returned.</source>
          <target state="translated">변경할 수 없는 사전을 원래 사전의 복사본을 수정 하면 여 조작 적용 하 고 변경할 수 없는 새 사전 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableDictionary`2">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Add(`0,`1)">
          <source>The key of the element to add.</source>
          <target state="translated">추가할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Add(`0,`1)">
          <source>The value of the element to add.</source>
          <target state="translated">추가할 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Add(`0,`1)">
          <source>Adds an element with the specified key and value to the immutable dictionary.</source>
          <target state="translated">지정한 키와 값을 가진 요소를 변경할 수 없는 사전에 추가합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Add(`0,`1)">
          <source>A new immutable dictionary that contains the additional key/value pair.</source>
          <target state="translated">추가 키/값 쌍이 포함된 변경할 수 없는 새 사전입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Add(`0,`1)">
          <source>If the given key/value pair already exists in the dictionary, the existing instance of the dictionary is returned.</source>
          <target state="translated">지정한 키/값 쌍이 사전에 이미 있으면 사전의 기존 인스턴스가 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Add(`0,`1)">
          <source>The given key already exists in the dictionary but has a different value.</source>
          <target state="translated">지정된 키가 이미 사전에 있지만 값이 다릅니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>The key/value pairs to add.</source>
          <target state="translated">추가할 키/값 쌍입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>Adds the specified key/value pairs to the immutable dictionary.</source>
          <target state="translated">지정한 키/값 쌍을 변경할 수 없는 사전에 추가합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>A new immutable dictionary that contains the additional key/value pairs.</source>
          <target state="translated">추가 키/값 쌍이 포함된 변경할 수 없는 새 사전입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>One of the given keys already exists in the dictionary but has a different value.</source>
          <target state="translated">지정된 키 중 하나가 이미 사전에 있지만 값이 다릅니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Clear">
          <source>Retrieves an empty immutable dictionary that has the same ordering and key/value comparison rules as this dictionary instance.</source>
          <target state="translated">이 사전 인스턴스와 순서 및 키/값 비교 규칙이 동일한 변경할 수 없는 빈 사전을 검색합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Clear">
          <source>An empty dictionary with equivalent ordering and key/value comparison rules.</source>
          <target state="translated">순서 및 키/값 비교 규칙이 동일한 빈 사전입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
          <source>The key/value pair to locate.</source>
          <target state="translated">찾을 키/값 쌍입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
          <source>Determines whether this immutable dictionary contains the specified key/value pair.</source>
          <target state="translated">이 변경할 수 없는 사전에 지정된 키/값 쌍이 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key/value pair is found in the dictionary; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 키/값 쌍이 사전에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ContainsKey(`0)">
          <source>The key to locate.</source>
          <target state="translated">찾을 키입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ContainsKey(`0)">
          <source>Determines whether the immutable dictionary contains an element with the specified key.</source>
          <target state="translated">변경할 수 없는 사전에 지정된 키를 가진 요소가 포함되어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ContainsKey(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the immutable dictionary contains an element with the specified key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">변경할 수 없는 사전에 지정된 키를 가진 요소가 포함되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ContainsValue(`1)">
          <source>The value to locate.</source>
          <target state="translated">찾을 값입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ContainsValue(`1)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">참조 형식에 대해 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ContainsValue(`1)">
          <source>Determines whether the immutable dictionary contains an element with the specified value.</source>
          <target state="translated">변경할 수 없는 사전에 지정된 값을 가진 요소가 포함되어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ContainsValue(`1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dictionary contains an element with the specified value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사전에 지정된 값을 가진 요소가 포함되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Count">
          <source>Gets the number of key/value pairs in the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에서 키/값 쌍 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Count">
          <source>The number of key/value pairs in the dictionary.</source>
          <target state="translated">사전에 있는 키/값 쌍 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Collections.Immutable.ImmutableDictionary`2.Empty">
          <source>Gets an empty immutable dictionary</source>
          <target state="translated">변경할 수 없는 빈 사전을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.GetEnumerator">
          <source>Returns an enumerator that iterates through the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에서 반복되는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.GetEnumerator">
          <source>An enumerator that can be used to iterate through the dictionary.</source>
          <target state="translated">사전에서 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.IsEmpty">
          <source>Gets a value that indicates whether this instance of the immutable dictionary is empty.</source>
          <target state="translated">변경할 수 없는 사전의 이 인스턴스가 비어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance is empty; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스가 비어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Item(`0)">
          <source>The type of the key.</source>
          <target state="translated">키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Item(`0)">
          <source>Gets the <ph id="ph1">&lt;paramref name="TValue" /&gt;</ph> associated with the specified key.</source>
          <target state="translated">지정된 키와 연결된 <ph id="ph1">&lt;paramref name="TValue" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Item(`0)">
          <source>The value associated with the specified key.</source>
          <target state="translated">지정한 키와 연결된 값입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Item(`0)">
          <source>If no results are found, the operation throws an exception.</source>
          <target state="translated">결과가 없으면 작업에서 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.KeyComparer">
          <source>Gets the key comparer for the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에 대한 키 비교자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.KeyComparer">
          <source>The key comparer.</source>
          <target state="translated">키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Keys">
          <source>Gets the keys in the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에서 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Keys">
          <source>The keys in the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전의 키입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Remove(`0)">
          <source>The key of the element to remove.</source>
          <target state="translated">제거할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Remove(`0)">
          <source>Removes the element with the specified key from the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에서 지정된 키를 가진 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.Remove(`0)">
          <source>A new immutable dictionary with the specified element removed; or this instance if the specified key cannot be found in the dictionary.</source>
          <target state="translated">지정된 요소가 제거된 변경할 수 없는 새 사전입니다. 또는 사전에서 지정된 키를 찾을 수 없는 경우 이 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The keys of the elements to remove.</source>
          <target state="translated">제거할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes the elements with the specified keys from the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에서 지정된 키를 가진 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable dictionary with the specified keys removed; or this instance if the specified keys cannot be found in the dictionary.</source>
          <target state="translated">지정된 키가 제거된 변경할 수 없는 새 사전입니다. 또는 사전에서 지정된 키를 찾을 수 없는 경우 이 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItem(`0,`1)">
          <source>The key of the entry to add.</source>
          <target state="translated">추가할 엔트리의 키입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItem(`0,`1)">
          <source>The key value to set.</source>
          <target state="translated">설정할 키 값입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItem(`0,`1)">
          <source>Sets the specified key and value in the immutable dictionary, possibly overwriting an existing value for the key.</source>
          <target state="translated">변경할 수 없는 사전에서 지정된 키와 값을 설정합니다. 키의 기존 값을 덮어쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItem(`0,`1)">
          <source>A new immutable dictionary that contains the specified key/value pair.</source>
          <target state="translated">지정된 키/값 쌍이 포함된 변경할 수 없는 새 사전입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItem(`0,`1)">
          <source>If the specified key/value pair already exists in the dictionary, this method returns the existing instance of the dictionary.</source>
          <target state="translated">지정 된 키/값 쌍이 사전에 이미 있으면이 메서드는 사전의 기존 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItem(`0,`1)">
          <source>If the key already exists but has a different value, this method returns a new instance of the dictionary with the overwritten value.</source>
          <target state="translated">키는 이미 존재 하지만 값이 다를 경우이 메서드는 덮어쓸된 값을 사용 하 여 사전의 새 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>The key/value pairs to set in the dictionary.</source>
          <target state="translated">사전에서 설정할 키/값 쌍입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>If any of the keys already exist in the dictionary, this method will overwrite their previous values.</source>
          <target state="translated">사전에 키가 이미 있는 경우 이 메서드는 해당 키의 이전 값을 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>Sets the specified key/value pairs in the immutable dictionary, possibly overwriting existing values for the keys.</source>
          <target state="translated">변경할 수 없는 사전에서 지정된 키/값 쌍을 설정합니다. 키의 기존 값을 덮어쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
          <source>A new immutable dictionary that contains the specified key/value pairs.</source>
          <target state="translated">지정된 키/값 쌍이 포함된 변경할 수 없는 새 사전입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the dictionary.</source>
          <target state="translated">사전에서 복사한 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the dictionary to an array, starting at a particular array index.</source>
          <target state="translated">특정 배열 인덱스부터 시작하여 사전의 요소를 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#IsSynchronized">
          <source>true if access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, false.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">추가할 요소의 키로 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">추가할 요소의 값으로 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds an element with the provided key and value to the immutable dictionary object.</source>
          <target state="translated">제공한 키와 값을 가진 요소를 변경할 수 없는 사전 개체에 추가합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Clear">
          <source>Clears this instance.</source>
          <target state="translated">이 인스턴스를 지웁니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Clear">
          <source>The dictionary object is read-only.</source>
          <target state="translated">사전 개체는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the dictionary object.</source>
          <target state="translated">사전 개체에서 찾을 키입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the immutable dictionary object contains an element with the specified key.</source>
          <target state="translated">변경할 수 없는 사전 개체에 지정된 키를 가진 요소가 포함되어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dictionary contains an element with the key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키를 가진 요소가 사전에 포함되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the immutable dictionary object.</source>
          <target state="translated">변경할 수 없는 사전 개체에 대한 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>An enumerator object for the dictionary object.</source>
          <target state="translated">사전 개체에 대한 열거자 개체입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 개체의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#IsFixedSize">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size; otherwise, false.</source>
          <target state="translated">true 이면은 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 개체에는 고정 크기, 그렇지않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#IsReadOnly">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> is read-only; otherwise, false.</source>
          <target state="translated">true 이면은 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 읽기 전용, 되지 않았으면 false를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>The key.</source>
          <target state="translated">키입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">지정한 키를 가진 요소를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>의 키를 포함하는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the keys of the object that implements <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>를 구현하는 개체의 키를 포함하는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">제거할 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the immutable dictionary object.</source>
          <target state="translated">변경할 수 없는 사전 개체에서 지정된 키를 가진 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Values">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>의 값이 들어 있는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IDictionary#Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> containing the values in the object that implements <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph>를 구현하는 개체의 값을 포함하는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">컬렉션을 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator object that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션에서 반복하는 데 사용할 수 있는 열거자 개체입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableDictionary%602&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ToBuilder">
          <source>Creates an immutable dictionary with the same contents as this dictionary that can be efficiently mutated across multiple operations by using standard mutable interfaces.</source>
          <target state="translated">변경 가능한 표준 인터페이스를 사용하여 여러 작업 간에 효율적으로 변경할 수 있으며 이 사전과 내용이 동일한 변경할 수 없는 사전을 만듭니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ToBuilder">
          <source>A collection with the same contents as this dictionary that can be efficiently mutated across multiple operations by using standard mutable interfaces.</source>
          <target state="translated">변경 가능한 표준 인터페이스를 사용하여 여러 작업 간에 효율적으로 변경할 수 있으며 이 사전과 내용이 동일한 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ToBuilder">
          <source>This is an O(1) operation and results in only a single (small) memory allocation.</source>
          <target state="translated">o (1) 작업으로 단일 (작은) 메모리 할당만 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.ToBuilder">
          <source>The mutable collection that is returned is not thread safe.</source>
          <target state="translated">반환 되는 변경할 수 있는 컬렉션이 스레드로부터 안전 하 게 보호 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetKey(`0,`0@)">
          <source>The key to search for.</source>
          <target state="translated">검색할 키입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetKey(`0,`0@)">
          <source>The matching key located in the dictionary if found, or <bpt id="p1">&lt;c&gt;</bpt>equalkey<ept id="p1">&lt;/c&gt;</ept> if no match is found.</source>
          <target state="translated">사전에서 일치하는 키가 있으면 그대로이고, 일치하는 키가 없으면 <bpt id="p1">&lt;c&gt;</bpt>equalkey<ept id="p1">&lt;/c&gt;</ept>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetKey(`0,`0@)">
          <source>Determines whether this dictionary contains a specified key.</source>
          <target state="translated">이 사전에 지정된 키가 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetKey(`0,`0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a match for <ph id="ph2">&lt;paramref name="equalKey" /&gt;</ph> is found; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="equalKey" /&gt;</ph>에 대한 일치하는 항목이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetKey(`0,`0@)">
          <source>Following are some scenarios where <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedDictionary%602.TryGetKey%2A&gt;</ph> may be useful:</source>
          <target state="translated">다음은 몇 가지 시나리오를 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedDictionary%602.TryGetKey%2A&gt;</ph> 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetKey(`0,`0@)">
          <source>You want to reuse a previously stored object reference instead of creating a new reference.</source>
          <target state="translated">새 참조를 만드는 대신 이전에 저장 된 개체 참조를 다시 사용 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetKey(`0,`0@)">
          <source>You want to look up the canonical value of an object</source>
          <target state="translated">개체의 정식 값을 조회.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetKey(`0,`0@)">
          <source>You want to retrieve more complete data about an object</source>
          <target state="translated">개체에 대 한 자세한 데이터를 검색.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetValue(`0,`1@)">
          <source>The key whose value will be retrieved.</source>
          <target state="translated">값을 검색할 키입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetValue(`0,`1@)">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, contains the default value for the type of the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated">이 메서드가 반환될 때 지정된 키가 있으면 해당 키와 연결된 값을 포함하고, 그렇지 않으면 <bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept> 매개 변수의 형식에 대한 기본값을 포함합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetValue(`0,`1@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetValue(`0,`1@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">지정한 키와 연결된 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object that implements the dictionary contains an element with the specified key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사전을 구현하는 개체에 지정된 키를 가진 요소가 포함되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.TryGetValue(`0,`1@)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.ValueComparer">
          <source>Gets the value comparer used to determine whether values are equal.</source>
          <target state="translated">값이 같은지 여부를 확인하는 데 사용되는 값 비교자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.ValueComparer">
          <source>The value comparer used to determine whether values are equal.</source>
          <target state="translated">값이 같은지 여부를 확인하는 데 사용되는 값 비교자입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Values">
          <source>Gets the values in the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전에서 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableDictionary`2.Values">
          <source>The values in the immutable dictionary.</source>
          <target state="translated">변경할 수 없는 사전의 값입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.WithComparers(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The key comparer to use.</source>
          <target state="translated">사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.WithComparers(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Gets an instance of the immutable dictionary that uses the specified key comparer.</source>
          <target state="translated">지정된 키 비교자를 사용하는 변경할 수 없는 사전의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.WithComparers(System.Collections.Generic.IEqualityComparer{`0})">
          <source>An instance of the immutable dictionary that uses the given comparer.</source>
          <target state="translated">지정된 비교자를 사용하는 변경할 수 없는 사전의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.WithComparers(System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
          <source>The key comparer to use.</source>
          <target state="translated">사용할 키 비교자입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.WithComparers(System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
          <source>The value comparer to use.</source>
          <target state="translated">사용할 값 비교자입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.WithComparers(System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
          <source>Gets an instance of the immutable dictionary that uses the specified key and value comparers.</source>
          <target state="translated">지정된 키 및 값 비교자를 사용하는 변경할 수 없는 사전의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableDictionary`2.WithComparers(System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
          <source>An instance of the immutable dictionary that uses the given comparers.</source>
          <target state="translated">지정된 비교자를 사용하는 변경할 수 없는 사전의 인스턴스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>