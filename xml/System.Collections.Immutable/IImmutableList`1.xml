<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IImmutableList`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac572b2fd1fceb7eff332be2255f1f5473e2c04a5ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72b2fd1fceb7eff332be2255f1f5473e2c04a5ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>The type of elements in the list.</source>
          <target state="translated">목록에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>Represents a list of elements that cannot be modified.</source>
          <target state="translated">수정할 수 없는 요소의 목록을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet 패키지<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>변경할 수 없는 컬렉션 정보 및 설치 방법<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>When you add or remove items from an <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph>, a copy of the original list is created, with the changes applied..</source>
          <target state="translated">추가 하거나 항목을 제거할 때는 <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph>, 변경 내용이 적용 된 원래 목록의 복사본을 만들...</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>Incremental changes to a list share as much memory as possible with earlier versions of a list and enable garbage collection to clean up any unique list data that is no longer being referenced.</source>
          <target state="translated">목록에 대 한 증분 변경 가능한 이전 버전의 목록에 많은 메모리를 공유 하 고 더 이상 참조 되는 모든 고유 목록 데이터를 정리 가비지 수집을 사용 하도록 설정.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>To create a new list, use the Create method.</source>
          <target state="translated">새 목록을 만들려면 Create 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph> has no public constructor, as this would create an empty immutable list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.IImmutableList%601&gt;</ph> 생성자가 없는 공개 변경할 수 없는 빈 목록을 만드는 것이 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>You should create a new list using the Create method.</source>
          <target state="translated">Create 메서드를 사용 하 여 목록을 새로 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.IImmutableList`1">
          <source>You can add new items to a copy of the original list using the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Add%2A&gt;</ph>, and <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A&gt;</ph> methods.</source>
          <target state="translated">새 항목을 사용 하 여 원래 목록의 복사본을 추가할 수는 <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableList%601.Add%2A&gt;</ph>, 및 <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableList%601.AddRange%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>The object to add to the list.</source>
          <target state="translated">목록에 추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>Makes a copy of the list, and adds the specified object to the end of the  copied list.</source>
          <target state="translated">목록의 복사본을 만들고 복사한 목록의 끝에 지정된 개체를 추가합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Add(`0)">
          <source>A new list with the object added, or this list if the object is already in the list.</source>
          <target state="translated">개체가 추가된 새 목록입니다. 개체가 목록에 이미 있는 경우 이 목록입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>The objects to add to the list.</source>
          <target state="translated">목록에 추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>Makes a copy of the list and adds the specified objects to the end of the copied list.</source>
          <target state="translated">목록의 복사본을 만들고 복사한 목록의 끝에 지정된 개체를 추가합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
          <source>A new list with the elements added, or this list if the elements already exist in the list.</source>
          <target state="translated">요소가 추가된 새 목록입니다. 요소가 목록에 이미 있는 경우 이 목록입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Clear">
          <source>Creates  a list with all the items removed, but with the same sorting and ordering semantics as this list.</source>
          <target state="translated">모든 항목이 제거되었지만 정렬 및 순서 의미 체계가 이 목록과 동일한 목록을 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Clear">
          <source>An empty list that has the same sorting and ordering semantics as this instance.</source>
          <target state="translated">정렬 및 순서 의미 체계가 이 인스턴스와 동일한 빈 목록입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>This value can be null for reference types.</source>
          <target state="translated">참조 형식의 경우 이 값은 null일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting indes of the search.</source>
          <target state="translated">검색의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0은 빈 목록에서 유효합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">검색할 섹션에 있는 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to locate <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>항목<ept id="p1">&lt;/c&gt;</ept>을 찾을 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that starts at the specified index and contains the specified number of elements.</source>
          <target state="translated">지정된 개체를 검색하고, 지정된 인덱스에서 시작하여 지정된 수의 요소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>의 요소 범위에서 처음으로 검색한 개체의 인덱스(0부터 시작)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based index of the first occurrence of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> within the range of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that starts at <ph id="ph3">&lt;paramref name="index" /&gt;</ph> and contains <ph id="ph4">&lt;paramref name="count" /&gt;</ph> number of elements if found; otherwise -1.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="index" /&gt;</ph>에서 시작하여 <ph id="ph4">&lt;paramref name="count" /&gt;</ph>개의 요소를 포함하는 <ph id="ph2">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>의 요소 범위에 <ph id="ph1">&lt;paramref name="item" /&gt;</ph>이 있으면 첫 번째로 나타나는 개체의 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>The zero-based index at which to insert the value.</source>
          <target state="translated">값을 삽입할 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>Inserts the specified element at the specified index in the immutable list.</source>
          <target state="translated">변경할 수 없는 목록의 지정된 인덱스에 지정된 요소를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)">
          <source>A new immutable list that includes the specified element.</source>
          <target state="translated">지정된 요소가 포함된 변경할 수 없는 새 목록입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The zero-based index at which the new elements should be inserted.</source>
          <target state="translated">새 요소가 삽입되어야 하는 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>The elements to insert.</source>
          <target state="translated">삽입할 요소입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>Inserts the specified elements at the specified index in the immutable list.</source>
          <target state="translated">변경할 수 없는 목록의 지정된 인덱스에 지정된 요소를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable list that includes the specified elements.</source>
          <target state="translated">지정된 요소가 포함된 변경할 수 없는 새 목록입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to locate in the list.</source>
          <target state="translated">목록에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">참조 형식에 대해 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The zero-based starting index of the search.</source>
          <target state="translated">검색의 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>0 (zero) is valid in an empty list.</source>
          <target state="translated">0은 빈 목록에서 유효합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The number of elements in the section to search.</source>
          <target state="translated">검색할 섹션에 있는 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to match <bpt id="p1">&lt;c&gt;</bpt>item<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>항목<ept id="p1">&lt;/c&gt;</ept>을 일치시킬 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph> that contains the specified number of elements and ends at the specified index.</source>
          <target state="translated">지정된 개체를 검색하며, 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>의 요소 범위에서 마지막으로 검색한 개체의 인덱스(0부터 시작)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The object to remove from the list.</source>
          <target state="translated">목록에서 제거할 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to locate <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>을 찾을 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Removes the first occurrence of a specified object from this immutable list.</source>
          <target state="translated">이 변경할 수 없는 목록에서 첫 번째로 나타나는 지정된 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns a new list with the specified object removed.</source>
          <target state="translated">지정된 개체가 제거된 새 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>The delegate that defines the conditions of the elements to remove.</source>
          <target state="translated">제거할 요소의 조건을 정의하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>Removes all the elements that match the conditions defined by the specified predicate.</source>
          <target state="translated">지정된 조건자에 정의된 조건과 일치하는 요소를 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})">
          <source>A new immutable list with the elements removed.</source>
          <target state="translated">요소가 제거된 변경할 수 없는 새 목록입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>The index of the element to remove.</source>
          <target state="translated">제거할 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of the immutable list.</source>
          <target state="translated">변경할 수 없는 목록의 지정한 인덱스에서 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)">
          <source>A new list with the element removed.</source>
          <target state="translated">요소가 제거된 새 목록입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The objects to remove from the list.</source>
          <target state="translated">목록에서 제거할 개체입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use to determine if <bpt id="p1">&lt;c&gt;</bpt>items<ept id="p1">&lt;/c&gt;</ept> match any objects in the list.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>항목<ept id="p1">&lt;/c&gt;</ept>이 목록의 개체와 일치하는지 확인하는 데 사용할 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>Removes the specified object from the list.</source>
          <target state="translated">목록에서 지정한 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
          <source>A new immutable list with the specified objects removed, if <ph id="ph1">&lt;paramref name="items" /&gt;</ph> matched objects in the list.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="items" /&gt;</ph>가 목록의 개체와 일치하는 경우 지정된 개체가 제거된 변경할 수 없는 새 목록입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>The zero-based starting index of the range of elements to remove.</source>
          <target state="translated">제거할 요소의 범위에 대한 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>The number of elements to remove.</source>
          <target state="translated">제거할 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>Removes a range of elements from the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Immutable.IImmutableList`1" /&gt;</ph>에서 요소의 범위를 제거합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)">
          <source>A new immutable list with the elements removed.</source>
          <target state="translated">요소가 제거된 변경할 수 없는 새 목록입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The element to be replaced.</source>
          <target state="translated">바꿀 요소입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The element to replace the  the first occurrence of <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept> with</source>
          <target state="translated">첫 번째로 나타나는 <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>를 바꿀 요소입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use for matching <bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>oldValue<ept id="p1">&lt;/c&gt;</ept>와 일치시키는 데 사용할 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>Returns a new list with the first matching element in the list replaced with the specified element.</source>
          <target state="translated">목록에서 일치하는 첫 번째 요소가 지정된 요소로 바뀐 새 목록을 반환합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source>A new list that contains <ph id="ph1">&lt;paramref name="newValue" /&gt;</ph>, even if <ph id="ph2">&lt;paramref name="oldvalue" /&gt;</ph> is the same as <ph id="ph3">&lt;paramref name="newValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newValue" /&gt;</ph>가 포함된 새 목록입니다. 이는 <ph id="ph2">&lt;paramref name="oldvalue" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="newValue" /&gt;</ph>와 같은 경우에도 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})">
          <source><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph> does not exist in the list.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="oldValue" /&gt;</ph>가 목록에 없습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>The position in the list of the element to replace.</source>
          <target state="translated">바꿀 요소의 목록 내 위치입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>The element to replace the old element with.</source>
          <target state="translated">이전 요소와 바꿀 요소입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>Replaces an element in the list at a given position with the specified element.</source>
          <target state="translated">목록에서 지정된 위치에 있는 요소를 지정된 요소로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)">
          <source>A new list that contains the new element, even if the element at the specified location is the same as the new element.</source>
          <target state="translated">새 요소가 포함된 새 목록입니다. 이는 지정된 위치의 요소가 새 요소와 같은 경우에도 마찬가지입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>