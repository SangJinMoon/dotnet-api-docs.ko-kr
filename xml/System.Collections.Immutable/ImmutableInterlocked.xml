<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableInterlocked.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d19aa0691ed03f804f80061cb74c1dca4cddf890.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d19aa0691ed03f804f80061cb74c1dca4cddf890</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableInterlocked">
          <source>Contains interlocked exchange mechanisms for immutable collections.</source>
          <target state="translated">변경할 수 없는 컬렉션에 대한 연동된 교환 메커니즘을 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableInterlocked">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet 패키지<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>변경할 수 없는 컬렉션 정보 및 설치 방법<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableInterlocked">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
          <source>The variable or field to atomically update if the specified  is not in the dictionary.</source>
          <target state="translated">지정된 키가 사전에 없는 경우 원자적으로 업데이트할 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
          <source>The key for the value to add or update.</source>
          <target state="translated">추가하거나 업데이트할 값의 키입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
          <source>The function that receives the key and returns a new value to add to the dictionary when no value previously exists.</source>
          <target state="translated">키를 받고 이전 값이 없는 경우 사전에 추가할 새 값을 반환하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
          <source>The function that receives the key and prior value and returns the new value with which to update the dictionary.</source>
          <target state="translated">키와 이전 값을 받고 사전을 업데이트할 새 값을 반환하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
          <source>Obtains the value from a dictionary after having added it or updated an existing entry.</source>
          <target state="translated">값을 추가하거나 기존 항목을 업데이트한 후 사전에서 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1},System.Func{``0,``1,``1})">
          <source>The added or updated value.</source>
          <target state="translated">추가되거나 업데이트된 값입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,System.Func{``0,``1,``1})">
          <source>The variable or field to atomically update if the specified  is not in the dictionary.</source>
          <target state="translated">지정된 키가 사전에 없는 경우 원자적으로 업데이트할 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,System.Func{``0,``1,``1})">
          <source>The key for the value to add or update.</source>
          <target state="translated">추가하거나 업데이트할 값의 키입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,System.Func{``0,``1,``1})">
          <source>The value to use if no previous value exists.</source>
          <target state="translated">이전 값이 없는 경우에 사용할 값입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,System.Func{``0,``1,``1})">
          <source>The function that receives the key and prior value and returns the new value with which to update the dictionary.</source>
          <target state="translated">키와 이전 값을 받고 사전을 업데이트할 새 값을 반환하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,System.Func{``0,``1,``1})">
          <source>Obtains the value from a dictionary after having added it or updated an existing entry.</source>
          <target state="translated">값을 추가하거나 기존 항목을 업데이트한 후 사전에서 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.AddOrUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,System.Func{``0,``1,``1})">
          <source>The added or updated value.</source>
          <target state="translated">추가되거나 업데이트된 값입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.Enqueue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0)">
          <source>The type of items contained in the collection</source>
          <target state="translated">컬렉션에 포함된 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Enqueue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0)">
          <source>The variable or field to atomically update.</source>
          <target state="translated">원자적으로 업데이트할 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Enqueue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0)">
          <source>The value to enqueue.</source>
          <target state="translated">큐에 넣을 값입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Enqueue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0)">
          <source>Atomically enqueues an element to the end of a queue.</source>
          <target state="translated">원자적으로 큐의 끝에 요소를 넣습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})">
          <source>The type of the keys contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})">
          <source>The type of the values contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})">
          <source>The variable or field to atomically update if the specified  is not in the dictionary.</source>
          <target state="translated">지정된 키가 사전에 없는 경우 원자적으로 업데이트할 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})">
          <source>The key for the value to retrieve or add.</source>
          <target state="translated">검색하거나 추가할 값의 키입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})">
          <source>The function to execute to obtain the value to insert into the dictionary if the key is not found.</source>
          <target state="translated">키가 없는 경우 사전에 삽입할 값을 가져오기 위해 실행할 함수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})">
          <source>This delegate will not be invoked more than once.</source>
          <target state="translated">이 대리자는 두 번 이상 호출되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})">
          <source>Gets the value for the specified key from the dictionary, or if the key was not found, adds a new value to the dictionary.</source>
          <target state="translated">사전에서 지정된 키의 값을 가져오거나, 키가 없는 경우 새 값을 사전에 추가합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``1})">
          <source>The value at the specified key or <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> if the key was not present.</source>
          <target state="translated">지정된 키의 값 또는 <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph>(키가 없는 경우)입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The type of the keys contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The type of the values contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The variable or field to atomically update if the specified key is not in the dictionary.</source>
          <target state="translated">지정된 키가 사전에 없는 경우 원자적으로 업데이트할 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The key for the value to get or add.</source>
          <target state="translated">가져오거나 추가할 값의 키입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The value to add to the dictionary the key is not found.</source>
          <target state="translated">키가 없는 경우 사전에 추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>Gets the value for the specified key from the dictionary, or if the key was not found, adds a new value to the dictionary.</source>
          <target state="translated">사전에서 지정된 키의 값을 가져오거나, 키가 없는 경우 새 값을 사전에 추가합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The value at the specified key or <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> if the key was not present.</source>
          <target state="translated">지정된 키의 값 또는 <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph>(키가 없는 경우)입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)">
          <source>The type of the keys contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)">
          <source>The type of the values contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)">
          <source>The variable or field to update if the specified is not in the dictionary.</source>
          <target state="translated">지정된 키가 사전에 없는 경우 업데이트할 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)">
          <source>The key for the value to retrieve or add.</source>
          <target state="translated">검색하거나 추가할 값의 키입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)">
          <source>The function to execute to obtain the value to insert into the dictionary if the key is not found.</source>
          <target state="translated">키가 없는 경우 사전에 삽입할 값을 가져오기 위해 실행할 함수입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)">
          <source>The argument to pass to the value factory.</source>
          <target state="translated">값 팩터리에 전달할 인수입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)">
          <source>Gets the value for the specified key from the dictionary, or if the key was not found, adds a new value to the dictionary.</source>
          <target state="translated">사전에서 지정된 키의 값을 가져오거나, 키가 없는 경우 새 값을 사전에 추가합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.GetOrAdd``3(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,System.Func{``0,``2,``1},``2)">
          <source>The value at the specified key or <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> if the key was not present.</source>
          <target state="translated">지정된 키의 값 또는 <ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph>(키가 없는 경우)입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedCompareExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element stored by the array.</source>
          <target state="translated">배열에 의해 저장되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedCompareExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0})">
          <source>The destination, whose value is compared with <bpt id="p1">&lt;c&gt;</bpt>comparand<ept id="p1">&lt;/c&gt;</ept> and possibly replaced.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>피연산자<ept id="p1">&lt;/c&gt;</ept>와 비교하여 바뀔 수 있는 값을 가진 대상입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedCompareExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0})">
          <source>The value that replaces the destination value if the comparison results in equality.</source>
          <target state="translated">비교 결과가 같은 경우 대상 값을 바꿀 값입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedCompareExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0})">
          <source>The value that is compared to the value at <bpt id="p1">&lt;c&gt;</bpt>location<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>위치<ept id="p1">&lt;/c&gt;</ept>의 값과 비교할 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedCompareExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0})">
          <source>Compares two immutable arrays for equality and, if they are equal, replaces one of the arrays.</source>
          <target state="translated">변경할 수 없는 두 배열이 같은지 비교하여 같으면 배열 중 하나를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedCompareExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0},System.Collections.Immutable.ImmutableArray{``0})">
          <source>The original value in <ph id="ph1">&lt;paramref name="location" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="location" /&gt;</ph>의 원래 값입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element stored by the array.</source>
          <target state="translated">배열에 의해 저장되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to set to the specified value.</source>
          <target state="translated">지정된 값으로 설정할 배열입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>The value to which the <bpt id="p1">&lt;c&gt;</bpt>location<ept id="p1">&lt;/c&gt;</ept> parameter is set.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>위치<ept id="p1">&lt;/c&gt;</ept> 매개 변수를 설정할 값입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>Sets an array to the specified array and returns a reference to the original array, as an atomic operation.</source>
          <target state="translated">원자 단위 연산으로 배열을 지정된 배열로 설정하고 참조를 원래 배열로 반환합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedExchange``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>The original value of <ph id="ph1">&lt;paramref name="location" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="location" /&gt;</ph>의 원래 값입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedInitialize``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>The type of element stored by the array.</source>
          <target state="translated">배열에 의해 저장되는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedInitialize``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>The array to set to the specified value.</source>
          <target state="translated">지정된 값으로 설정할 배열입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedInitialize``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>The value to which the <bpt id="p1">&lt;c&gt;</bpt>location<ept id="p1">&lt;/c&gt;</ept> parameter is set, if it’s not initialized.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>위치<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 초기화되지 않은 경우 해당 매개 변수를 설정할 값입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedInitialize``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source>Sets an array to the specified array if the array has not been initialized.</source>
          <target state="translated">배열이 초기화되지 않은 경우 배열을 지정된 배열로 설정합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.InterlockedInitialize``1(System.Collections.Immutable.ImmutableArray{``0}@,System.Collections.Immutable.ImmutableArray{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the array was assigned the specified value;  otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">배열에 지정된 값이 할당되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.Push``1(System.Collections.Immutable.ImmutableStack{``0}@,``0)">
          <source>The type of items in the stack.</source>
          <target state="translated">스택에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Push``1(System.Collections.Immutable.ImmutableStack{``0}@,``0)">
          <source>The stack to update.</source>
          <target state="translated">업데이트할 스택입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Push``1(System.Collections.Immutable.ImmutableStack{``0}@,``0)">
          <source>The value to push on the stack.</source>
          <target state="translated">스택에 푸시할 값입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Push``1(System.Collections.Immutable.ImmutableStack{``0}@,``0)">
          <source>Pushes a new element onto the stack.</source>
          <target state="translated">새 요소를 스택에 푸시합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The type of the keys contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The type of the values contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The dictionary to update with the specified key and value.</source>
          <target state="translated">지정한 키와 값으로 업데이트할 사전입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The key to add, if is not already defined in the dictionary.</source>
          <target state="translated">사전에 아직 정의되지 않은 경우 추가할 키입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>The value to add.</source>
          <target state="translated">추가할 값입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source>Adds the specified key and value to the dictionary if the key is not in the dictionary.</source>
          <target state="translated">키가 사전에 없는 경우 지정된 키와 값을 사전에 추가합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryAdd``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is not in the dictionary; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키가 사전에 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryDequeue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0@)">
          <source>The type of items in the queue.</source>
          <target state="translated">큐에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryDequeue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0@)">
          <source>The variable or field to atomically update.</source>
          <target state="translated">원자적으로 업데이트할 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryDequeue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0@)">
          <source>Set to the value from the head of the queue, if the queue not empty.</source>
          <target state="translated">큐가 비어 있지 않은 경우 큐의 헤드에 있는 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryDequeue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0@)">
          <source>Atomically removes and returns the specified element at the head of the queue, if the queue is not empty.</source>
          <target state="translated">큐가 비어 있지 않은 경우 큐의 헤드에서 지정된 요소를 원자적으로 제거하고 반환합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryDequeue``1(System.Collections.Immutable.ImmutableQueue{``0}@,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the queue is not empty and the head element is removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">큐가 비어 있지 않고 헤드 요소가 제거되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryPop``1(System.Collections.Immutable.ImmutableStack{``0}@,``0@)">
          <source>The type of items in the stack.</source>
          <target state="translated">스택에 있는 항목의 형식입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryPop``1(System.Collections.Immutable.ImmutableStack{``0}@,``0@)">
          <source>The stack to update.</source>
          <target state="translated">업데이트할 스택입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryPop``1(System.Collections.Immutable.ImmutableStack{``0}@,``0@)">
          <source>Receives the value removed from the stack, if the stack is not empty.</source>
          <target state="translated">스택이 비어 있지 않은 경우 스택에서 제거된 값을 받습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryPop``1(System.Collections.Immutable.ImmutableStack{``0}@,``0@)">
          <source>Removes an element from the top of the stack, if there is an element to remove.</source>
          <target state="translated">스택의 맨 위에 제거할 요소가 있는 경우 해당 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryPop``1(System.Collections.Immutable.ImmutableStack{``0}@,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an element is removed from the stack; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스택에서 요소가 제거되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryRemove``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1@)">
          <source>The type of the keys contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryRemove``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1@)">
          <source>The type of the values contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryRemove``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1@)">
          <source>The dictionary to update.</source>
          <target state="translated">업데이트할 사전입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryRemove``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1@)">
          <source>The key to remove.</source>
          <target state="translated">제거할 키입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryRemove``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1@)">
          <source>Receives the value of the removed item, if the dictionary is not empty.</source>
          <target state="translated">사전이 비어 있지 않은 경우 제거된 항목의 값을 받습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryRemove``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1@)">
          <source>Removes the element with the specified key, if the key exists.</source>
          <target state="translated">키가 있는 경우 지정된 키를 가진 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryRemove``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was found and removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키를 찾아서 제거했으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)">
          <source>The type of the keys contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 키의 형식입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)">
          <source>The type of the values contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 값의 형식입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)">
          <source>The dictionary to update.</source>
          <target state="translated">업데이트할 사전입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)">
          <source>The key to update.</source>
          <target state="translated">업데이트할 키입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)">
          <source>The new value to set.</source>
          <target state="translated">설정할 새 값입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)">
          <source>The current value for <bpt id="p1">&lt;c&gt;</bpt>key<ept id="p1">&lt;/c&gt;</ept> in order for the update to succeed.</source>
          <target state="translated">업데이트에 성공하기 위한 <bpt id="p1">&lt;c&gt;</bpt>키<ept id="p1">&lt;/c&gt;</ept>의 현재 값입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)">
          <source>Sets the specified key to the specified value if the specified key already is set to a specific value.</source>
          <target state="translated">지정된 키가 특정 값으로 이미 설정된 경우 지정된 키를 지정된 값으로 설정합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.TryUpdate``2(System.Collections.Immutable.ImmutableDictionary{``0,``1}@,``0,``1,``1)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> and <ph id="ph3">&lt;paramref name="comparisonValue" /&gt;</ph> are present in the dictionary and comparison was updated to <ph id="ph4">&lt;paramref name="newValue" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="key" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="comparisonValue" /&gt;</ph>가 사전에 있고 비교가 <ph id="ph4">&lt;paramref name="newValue" /&gt;</ph>로 업데이트되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph5">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``1(``0@,System.Func{``0,``0})">
          <source>The type of data.</source>
          <target state="translated">데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``1(``0@,System.Func{``0,``0})">
          <source>The variable or field to be changed, which may be accessed by multiple threads.</source>
          <target state="translated">여러 스레드에서 액세스할 수 있는 변경될 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``1(``0@,System.Func{``0,``0})">
          <source>A function that mutates the value.</source>
          <target state="translated">값을 변경하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``1(``0@,System.Func{``0,``0})">
          <source>This function should be side-effect free,              as it may run multiple times when races occur with other threads.</source>
          <target state="translated">이 함수는 다른 스레드에서 레이스가 발생하는 경우 여러 번 실행할 수 있으므로 부작용이 없어야 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``1(``0@,System.Func{``0,``0})">
          <source>Mutates a value in-place with optimistic locking transaction semantics             via a specified transformation function.</source>
          <target state="translated">지정된 변환 함수를 통해 낙관적 잠금 트랜잭션 의미 체계를 사용하여 준비된 값을 변경합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``1(``0@,System.Func{``0,``0})">
          <source>The transformation is retried as many times as necessary to win the optimistic locking race.</source>
          <target state="translated">변환은 낙관적 잠금 레이스에서 이기기 위해 필요한 만큼 여러 번 다시 시도됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``1(``0@,System.Func{``0,``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>true<ept id="p1">&lt;/c&gt;</ept> if the location's value is changed by applying the result of the              <ph id="ph1">&lt;paramref name="transformer" /&gt;</ph> function;             <bpt id="p2">&lt;c&gt;</bpt>false<ept id="p2">&lt;/c&gt;</ept> if the location's value remained the same because the last              invocation of <ph id="ph2">&lt;paramref name="transformer" /&gt;</ph> returned the existing value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transformer" /&gt;</ph> 함수의 결과를 적용하여 해당 위치 값이 변경되면 <bpt id="p1">&lt;c&gt;</bpt>true<ept id="p1">&lt;/c&gt;</ept>이고 <ph id="ph2">&lt;paramref name="transformer" /&gt;</ph>의 마지막 호출이 기존 값을 반환하기 때문에 해당 위치 값이 동일하게 유지되면 <bpt id="p2">&lt;c&gt;</bpt>false<ept id="p2">&lt;/c&gt;</ept>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source>The type of data.</source>
          <target state="translated">데이터 형식입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source>The type of argument passed to the <bpt id="p1">&lt;c&gt;</bpt>transformer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">에 전달 된 인수 형식이 고 <bpt id="p1">&lt;c&gt;</bpt>transformer<ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source>The variable or field to be changed, which may be accessed by multiple threads.</source>
          <target state="translated">여러 스레드에서 액세스할 수 있는 변경될 변수 또는 필드입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source>A function that mutates the value.</source>
          <target state="translated">값을 변경하는 함수입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source>This function should be side-effect free,              as it may run multiple times when races occur with other threads.</source>
          <target state="translated">이 함수는 다른 스레드에서 레이스가 발생하는 경우 여러 번 실행할 수 있으므로 부작용이 없어야 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source>The argument to pass to <bpt id="p1">&lt;c&gt;</bpt>transformer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>transformer<ept id="p1">&lt;/c&gt;</ept>에 전달할 인수입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source>Mutates a value in-place with optimistic locking transaction semantics             via a specified transformation function.</source>
          <target state="translated">지정된 변환 함수를 통해 낙관적 잠금 트랜잭션 의미 체계를 사용하여 준비된 값을 변경합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source>The transformation is retried as many times as necessary to win the optimistic locking race.</source>
          <target state="translated">변환은 낙관적 잠금 레이스에서 이기기 위해 필요한 만큼 여러 번 다시 시도됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableInterlocked.Update``2(``0@,System.Func{``0,``1,``0},``1)">
          <source><bpt id="p1">&lt;c&gt;</bpt>true<ept id="p1">&lt;/c&gt;</ept> if the location's value is changed by applying the result of the              <ph id="ph1">&lt;paramref name="transformer" /&gt;</ph> function;             <bpt id="p2">&lt;c&gt;</bpt>false<ept id="p2">&lt;/c&gt;</ept> if the location's value remained the same because the last              invocation of <ph id="ph2">&lt;paramref name="transformer" /&gt;</ph> returned the existing value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transformer" /&gt;</ph> 함수의 결과를 적용하여 해당 위치 값이 변경되면 <bpt id="p1">&lt;c&gt;</bpt>true<ept id="p1">&lt;/c&gt;</ept>이고 <ph id="ph2">&lt;paramref name="transformer" /&gt;</ph>의 마지막 호출이 기존 값을 반환하기 때문에 해당 위치 값이 동일하게 유지되면 <bpt id="p2">&lt;c&gt;</bpt>false<ept id="p2">&lt;/c&gt;</ept>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>