<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableHashSet`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55004e8716d781712df8ca6ed28bdc7387b516000.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5004e8716d781712df8ca6ed28bdc7387b516000</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableHashSet`1">
          <source>The type of elements in the hash set.</source>
          <target state="translated">해시 집합에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableHashSet`1">
          <source>Represents an immutable, unordered hash set.</source>
          <target state="translated">변경할 수 없는 정렬되지 않은 해시 집합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableHashSet`1">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet 패키지<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>변경할 수 없는 컬렉션 정보 및 설치 방법<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableHashSet`1">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Add(`0)">
          <source>The element to add to the set.</source>
          <target state="translated">집합에 추가할 요소입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Add(`0)">
          <source>Adds the specified element to the hash set.</source>
          <target state="translated">지정한 요소를 해시 집합에 추가합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Add(`0)">
          <source>A hash set that contains the added value and any values previously held by the  <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableHashSet`1" /&gt;</ph> object.</source>
          <target state="translated">추가된 값 및 <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableHashSet`1" /&gt;</ph> 개체에서 이전에 보유한 모든 값을 포함하는 해시 집합입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Clear">
          <source>Retrieves an empty immutable hash set that has the same sorting and ordering semantics as this instance.</source>
          <target state="translated">정렬 및 순서 의미 체계가 이 인스턴스와 동일한 변경할 수 없는 빈 해시 집합을 검색합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Clear">
          <source>An empty hash set that has the same sorting and ordering semantics as this instance.</source>
          <target state="translated">정렬 및 순서 의미 체계가 이 인스턴스와 동일한 변경할 수 없는 빈 해시 집합입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Contains(`0)">
          <source>The object to locate in the immutable hash set.</source>
          <target state="translated">변경할 수 없는 해시 집합에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Contains(`0)">
          <source>Determines whether this immutable hash set contains the specified element.</source>
          <target state="translated">이 변경할 수 없는 해시 집합에 지정한 요소가 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="item" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Immutable.ImmutableHashSet`1" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="item" /&gt;</ph>에 있으면 <ph id="ph3">&lt;see cref="T:System.Collections.Immutable.ImmutableHashSet`1" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableHashSet`1.Count">
          <source>Gets the number of elements in the immutable hash set.</source>
          <target state="translated">변경할 수 없는 해시 집합의 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableHashSet`1.Count">
          <source>The number of elements in the hash set.</source>
          <target state="translated">해시 집합에 있는 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Collections.Immutable.ImmutableHashSet`1.Empty">
          <source>Gets an immutable hash set for this type that uses the default <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>.</source>
          <target state="translated">기본 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEqualityComparer`1" /&gt;</ph>를 사용하는 이 형식에 대한 변경할 수 없는 해시 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Except(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from this set.</source>
          <target state="translated">이 집합에서 제거할 항목의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Except(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes the elements in the specified collection from the current immutable hash set.</source>
          <target state="translated">현재 변경할 수 없는 해시 집합에서 지정된 컬렉션의 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Except(System.Collections.Generic.IEnumerable{`0})">
          <source>A new set with the items removed; or the original set if none of the items were in the set.</source>
          <target state="translated">항목이 제거된 새 집합입니다. 집합에 항목이 없는 경우 원래 집합입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">컬렉션을 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates an immutable hash set that contains elements that exist in both this set and the specified set.</source>
          <target state="translated">이 집합과 지정된 집합 모두에 존재하는 요소가 포함된 변경할 수 없는 해시 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable set that contains any elements that exist in both sets.</source>
          <target state="translated">두 집합 모두에 존재하는 요소가 포함된 변경할 수 없는 새 집합입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableHashSet`1.IsEmpty">
          <source>Gets a value that indicates whether the current immutable hash set is empty.</source>
          <target state="translated">현재 변경할 수 없는 해시 집합이 비어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableHashSet`1.IsEmpty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance is empty; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 인스턴스가 비어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable hash set is a proper (strict) subset of a specified collection.</source>
          <target state="translated">현재 변경할 수 없는 해시 집합이 지정된 컬렉션의 적절한(고급) 하위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a proper subset of the specified collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 지정된 컬렉션의 적절한 하위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the current set is a proper subset of <ph id="ph1">`other`</ph>, <ph id="ph2">`other`</ph> must have at least one element that the current set does not have.</source>
          <target state="translated">현재 집합의 적절 한 하위 집합이 면 <ph id="ph1">`other`</ph>, <ph id="ph2">`other`</ph> 갖고 있지 않은 하나 이상의 요소가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable hash set is a proper (strict) superset of a specified collection.</source>
          <target state="translated">현재 변경할 수 없는 해시 집합이 지정된 컬렉션의 적절한(고급) 상위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a proper superset of the specified collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 지정된 컬렉션의 적절한 상위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>If the current set is a proper superset of <ph id="ph1">`other`</ph>, the current set must have at least one element that <ph id="ph2">`other`</ph> does not have.</source>
          <target state="translated">현재 집합이의 적절 한 상위 집합이 면 <ph id="ph1">`other`</ph>, 현재 집합에 요소가 하나 이상 있어야 하는 <ph id="ph2">`other`</ph> 가 없습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable hash set is a subset of a specified collection.</source>
          <target state="translated">현재 변경할 수 없는 해시 집합이 지정된 컬렉션의 하위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a subset of the specified collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 지정된 컬렉션의 하위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable hash set is a superset of a specified collection.</source>
          <target state="translated">현재 변경할 수 없는 해시 집합이 지정된 컬렉션의 상위 집합인지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set is a superset of the specified collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합이 지정된 컬렉션의 상위 집합이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableHashSet`1.KeyComparer">
          <source>Gets the object that is used to obtain hash codes for the keys and to check the equality of values in the immutable hash set.</source>
          <target state="translated">키의 해시 코드를 가져오고 변경할 수 없는 해시 집합의 값과 동일한지 확인하는 데 사용되는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableHashSet`1.KeyComparer">
          <source>The comparer used to obtain hash codes for the keys and check equality.</source>
          <target state="translated">키에 대 한 해시 코드를 가져오고 같은지 여부를 확인하는 데 사용되는 비교자입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable hash set overlaps with the specified collection.</source>
          <target state="translated">현재 변경할 수 없는 해시 집합이 지정된 컬렉션과 겹치는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current set and the specified collection share at least one common element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 집합과 지정된 컬렉션이 하나 이상 공통 요소를 공유하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Remove(`0)">
          <source>The element to remove.</source>
          <target state="translated">제거할 요소입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Remove(`0)">
          <source>Removes the specified element from this immutable hash set.</source>
          <target state="translated">이 변경할 수 없는 해시 집합에서 지정된 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Remove(`0)">
          <source>A new set with the specified element removed, or the current set if the element cannot be found in the set.</source>
          <target state="translated">지정된 요소가 제거된 새 집합입니다. 집합에서 요소를 찾을 수 없는 경우 현재 집합입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source>Determines whether the current immutable hash set and the specified collection contain the same elements.</source>
          <target state="translated">현재 변경할 수 없는 해시 집합과 지정된 컬렉션에 같은 요소가 들어 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sets are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">집합이 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates an immutable hash set that contains only elements that are present either in the current set or in the specified collection, but not both.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 중 하나에만 있는 요소만 포함하는 변경할 수 없는 해시 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>A new set that contains the elements that are present only in the current set or in the specified collection, but not both.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 중 하나에만 있는 요소를 포함하는 새 집합입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The object to add to the set.</source>
          <target state="translated">집합에 추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an item to the set.</source>
          <target state="translated">집합에 항목을 추가합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Add(`0)">
          <source>The set is read-only.</source>
          <target state="translated">집합은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>Removes all items from this set.</source>
          <target state="translated">이 집합서 모든 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Clear">
          <source>The set is read-only.</source>
          <target state="translated">집합은 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the set.</source>
          <target state="translated">집합에서 복사한 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>Copies the elements of the set to an array, starting at a particular index.</source>
          <target state="translated">특정 인덱스에서 시작하여 집합의 요소를 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#CopyTo(`0[],System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#IsReadOnly">
          <source>See the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> 인터페이스를 확인합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The object to remove from the set.</source>
          <target state="translated">집합에서 제거할 개체입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>Removes the first occurrence of a specific object from the set.</source>
          <target state="translated">집합에서 첫 번째로 나타나는 특정 개체를 제거합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요소가 제거되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ICollection&amp;lt;T&amp;gt;#Remove(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">컬렉션을 반복하는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An enumerator that iterates through the collection.</source>
          <target state="translated">컬렉션을 반복하는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#Add(`0)">
          <source>The element to add to the collection.</source>
          <target state="translated">컬렉션에 추가할 요소입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds an element to the current set and returns a value that indicates whether the element was successfully added.</source>
          <target state="translated">현재 집합에 요소를 추가하고 요소가 성공적으로 추가되었는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#Add(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is added to the set; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the element is already in the set.</source>
          <target state="translated">요소가 집합에 추가되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 요소가 집합에 이미 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove.</source>
          <target state="translated">제거할 항목의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes all elements in the specified collection from the current set.</source>
          <target state="translated">현재 집합에서 지정된 컬렉션의 모든 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#ExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current collection.</source>
          <target state="translated">현재 컬렉션과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current set so that it contains only elements that are also in a specified collection.</source>
          <target state="translated">지정된 컬렉션에도 있는 요소만 포함되도록 현재 집합을 수정합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#IntersectWith(System.Collections.Generic.IEnumerable{`0})">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current set so that it contains only elements that are present either in the current set or in the specified collection, but not both.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 중 하나에만 있는 요소만 포함하도록 현재 집합을 수정합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>Modifies the current set so that it contains all elements that are present in either the current set or in the specified collection.</source>
          <target state="translated">현재 집합 또는 지정된 컬렉션 중 하나에 있는 요소가 모두 포함되도록 현재 집합을 수정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Generic#ISet&amp;lt;T&amp;gt;#UnionWith(System.Collections.Generic.IEnumerable{`0})">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ISet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the set.</source>
          <target state="translated">집합에서 복사한 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the set to an array, starting at a particular index.</source>
          <target state="translated">특정 인덱스에서 시작하여 집합의 요소를 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#ICollection#IsSynchronized">
          <source>See the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 인터페이스를 확인합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#ICollection#SyncRoot">
          <source>See <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a set.</source>
          <target state="translated">집합에서 반복되는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the set.</source>
          <target state="translated">집합에서 반복하는 데 사용할 수 있는 열거자입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Add(`0)">
          <source>The element to add.</source>
          <target state="translated">추가할 요소입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Add(`0)">
          <source>Adds the specified element to this immutable set.</source>
          <target state="translated">지정한 요소를 이 변경할 수 없는 집합에 추가합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Add(`0)">
          <source>A new set with the element added, or this set if the element is already in the set.</source>
          <target state="translated">요소가 추가된 새 집합입니다. 해당 요소가 집합에 이미 있는 경우 이 집합입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Add(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Add(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Clear">
          <source>Retrieves an empty set that has the same sorting and ordering semantics as this instance.</source>
          <target state="translated">정렬 및 순서 의미 체계가 이 인스턴스와 동일한 변경할 수 없는 빈 집합을 검색합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Clear">
          <source>An empty set that has the same sorting or ordering semantics as this instance.</source>
          <target state="translated">정렬 또는 순서 의미 체계가 이 인스턴스와 동일한 빈 집합입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Clear">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Clear">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Except(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection of items to remove from this set.</source>
          <target state="translated">이 집합에서 제거할 항목의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Except(System.Collections.Generic.IEnumerable{`0})">
          <source>Removes the elements in the specified collection from the current set.</source>
          <target state="translated">현재 집합에서 지정된 컬렉션의 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Except(System.Collections.Generic.IEnumerable{`0})">
          <source>A new set with the items removed; or the original set if none of the items were in the set.</source>
          <target state="translated">항목이 제거된 새 집합입니다. 집합에 항목이 없는 경우 원래 집합입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Except(System.Collections.Generic.IEnumerable{`0})">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Except(System.Collections.Generic.IEnumerable{`0})">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates an immutable set that contains elements that exist in both this set and the specified set.</source>
          <target state="translated">이 집합과 지정된 집합 모두에 존재하는 요소가 포함된 변경할 수 없는 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable set that contains any elements that exist in both sets.</source>
          <target state="translated">두 집합 모두에 존재하는 요소가 포함된 변경할 수 없는 새 집합입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Intersect(System.Collections.Generic.IEnumerable{`0})">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Remove(`0)">
          <source>The element to remove.</source>
          <target state="translated">제거할 요소입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Remove(`0)">
          <source>Removes the specified element from this immutable set.</source>
          <target state="translated">이 변경할 수 없는 집합에서 지정된 요소를 제거합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Remove(`0)">
          <source>A new set with the specified element removed, or the current set if the element cannot be found in the set.</source>
          <target state="translated">지정된 요소가 제거된 새 집합입니다. 집합에서 요소를 찾을 수 없는 경우 현재 집합입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Remove(`0)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Remove(`0)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to compare to the current set.</source>
          <target state="translated">현재 집합과 비교할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates an immutable set that contains only elements that are present either in the current set or in the specified collection, but not both.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 중 하나에만 있는 요소만 포함하는 변경할 수 없는 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>A new set that contains the elements that are present only in the current set or in the specified collection, but not both.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 중 하나에만 있는 요소를 포함하는 새 집합입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#SymmetricExcept(System.Collections.Generic.IEnumerable{`0})">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Union(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to add elements from.</source>
          <target state="translated">요소를 추가할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Union(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates a new immutable set that contains all elements that are present in either the current set or in the specified collection.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 중 하나에만 있는 모든 요소를 포함하는 변경할 수 없는 새 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Union(System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable set with the items added; or the original set if all the items were already in the set.</source>
          <target state="translated">항목이 추가된 변경할 수 없는 새 집합입니다. 모든 항목이 집합에 이미 있던 경우 원래 집합입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Union(System.Collections.Generic.IEnumerable{`0})">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.System#Collections#Immutable#IImmutableSet&amp;lt;T&amp;gt;#Union(System.Collections.Generic.IEnumerable{`0})">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableHashSet%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.Collections.Immutable.IImmutableSet%601&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.ToBuilder">
          <source>Creates an immutable hash set that has the same contents as this set and can be efficiently mutated across multiple operations by using standard mutable interfaces.</source>
          <target state="translated">변경 가능한 표준 인터페이스를 사용하여 여러 작업 간에 효율적으로 변경할 수 있으며 이 집합과 내용이 동일한 변경할 수 없는 해시 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.ToBuilder">
          <source>A set with the same contents as this set that can be efficiently mutated across multiple operations by using standard mutable interfaces.</source>
          <target state="translated">변경 가능한 표준 인터페이스를 사용하여 여러 작업 간에 효율적으로 변경할 수 있으며 이 집합과 내용이 동일한 집합입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.ToBuilder">
          <source>This is an O(1) operation and results in only a single (small) memory allocation.</source>
          <target state="translated">o (1) 작업으로 단일 (작은) 메모리 할당만 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.ToBuilder">
          <source>The mutable collection that is returned is not thread safe.</source>
          <target state="translated">반환 되는 변경할 수 있는 컬렉션이 스레드로부터 안전 하 게 보호 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.TryGetValue(`0,`0@)">
          <source>The value to search for.</source>
          <target state="translated">검색할 값입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.TryGetValue(`0,`0@)">
          <source>The value from the set that the search found, or the original value if the search yielded no match.</source>
          <target state="translated">집합에서 검색한 값입니다. 검색에서 일치하는 항목을 찾지 못한 경우 원래 값입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.TryGetValue(`0,`0@)">
          <source>Searches the set for a given value and returns the equal value it finds, if any.</source>
          <target state="translated">집합에서 지정된 값을 검색하여 동일한 값을 찾은 경우 해당 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.TryGetValue(`0,`0@)">
          <source>A value indicating whether the search was successful.</source>
          <target state="translated">검색에 성공했는지 여부를 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Immutable.ImmutableHashSet`1.TryGetValue(`0,`0@)">
          <source>This can be useful when you want to reuse a previously stored reference instead of a newly constructed one (so that more sharing of references can occur) or to look up a value that has more complete data than the value you currently have, although their comparer functions indicate they are equal.</source>
          <target state="translated">이 경우 유용할 수 있습니다 (참조의 더 많은 공유 발생할 수 있도록) 대신 새로 생성 된 이전에 저장 된 참조를 다시 사용 하거나 있지만 현재 있는 값 보다 자세한 데이터를 포함 하는 값을 조회 하는 비교자 함수 같은지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Union(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection to add elements from.</source>
          <target state="translated">요소를 추가할 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Union(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates a new immutable hash set that contains all elements that are present in either the current set or in the specified collection.</source>
          <target state="translated">현재 집합과 지정된 컬렉션 둘 중 하나에만 있는 모든 요소를 포함하는 변경할 수 없는 새 해시 집합을 만듭니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.Union(System.Collections.Generic.IEnumerable{`0})">
          <source>A new immutable hash set with the items added; or the original set if all the items were already in the set.</source>
          <target state="translated">항목이 추가된 변경할 수 없는 새 해시 집합입니다. 모든 항목이 집합에 이미 있던 경우 원래 집합입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.WithComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>The equality comparer to use.</source>
          <target state="translated">사용할 같음 비교자입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.WithComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>Gets an instance of the immutable hash set that uses the specified equality comparer for its search methods.</source>
          <target state="translated">해당 검색 메서드에 지정된 같음 비교자를 사용하는 변경할 수 없는 해시 집합의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableHashSet`1.WithComparer(System.Collections.Generic.IEqualityComparer{`0})">
          <source>An instance of this immutable hash set that uses the given comparer.</source>
          <target state="translated">지정된 비교자를 사용하는 이 변경할 수 없는 해시 집합의 인스턴스입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>