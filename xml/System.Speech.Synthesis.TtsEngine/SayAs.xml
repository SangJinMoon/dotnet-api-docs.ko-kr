<Type Name="SayAs" FullName="System.Speech.Synthesis.TtsEngine.SayAs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4a42e4105c7182a6a8bee7f31dbc651bf24c007" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30526517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SayAs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit SayAs extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SayAs" />
  <TypeSignature Language="VB.NET" Value="Public Class SayAs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SayAs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>콘텐츠 형식(예: 통화, 날짜, 주소) 또는 텍스트의 읽는 방법을 결정하는 언어 구문에 대한 정보가 들어 있습니다.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SayAs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SayAs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SayAs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <c>SayAs</c> 클래스의 새 인스턴스를 만듭니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성은 <xref:System.Speech.Synthesis.TtsEngine.SayAs> 클래스는의 특성에 대 한 값을 가져오거나 설정 하는 데 사용 되는 `say-as` SSML 태그 요소에에서 합니다. <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A> 속성에서 사용 하는 <xref:System.Speech.Synthesis.TtsEngine.SayAs> 알리기 위해 인스턴스는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 에 포함 된 텍스트를 사용 하는 방법의 <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> 속성은 <xref:System.Speech.Synthesis.TtsEngine.TextFragment>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detail">
      <MemberSignature Language="C#" Value="public string Detail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Detail" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Detail" />
      <MemberSignature Language="VB.NET" Value="Public Property Detail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Detail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프롬프트의 SSML 태그 언어에서 <c>say-as</c> 요소에 대한 <c>detail</c> 특성의 값을 가져오거나 설정합니다.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> 속성에 대 한 값을 가져오거나는 <xref:System.Speech.Synthesis.TtsEngine.SayAs.Detail%2A> 속성에는 <xref:System.Speech.Synthesis.TtsEngine.SayAs> 인스턴스.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Format { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프롬프트의 SSML 태그 언어에서 <c>say-as</c> 요소에 대한 <c>format</c> 특성의 값을 가져오거나 설정합니다.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> 속성에 대 한 값을 가져오거나는 <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> 속성에는 <xref:System.Speech.Synthesis.TtsEngine.SayAs> 인스턴스.  
  
 메시지가 라는 구가 포함 될 수 있습니다 예를 들어 "시간은 `<say-as interpret-as="time"> 05:00 </say-as>`"입니다.  이 예제에서는 `05:00` "5 시" 또는 "5 오전"로 줄여서 말합니다 수 또는 "오 5 백"입니다. <xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A> 속성의 값을 사용 하면는 `interpret-as` 확장으로 언급 해야 할 어떤 시간 형식을 지정 하는 특성입니다. 경우에 대 한 값은 `interpret-as` 특성은 "시간: 24 시간"는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 말하는 "오 5 백"입니다. 경우에 대 한 값은 `interpret-as` 특성은 "시간: 12 시간"는 <xref:System.Speech.Synthesis.SpeechSynthesizer> "M A 5"을 말합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpretAs">
      <MemberSignature Language="C#" Value="public string InterpretAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterpretAs" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpretAs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InterpretAs { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>프롬프트의 SSML 태그 언어에서 <c>say-as</c> 요소에 대한 <c>interpret-as</c> 특성의 값을 가져오거나 설정합니다.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=nameWithType> 속성에 대 한 값을 가져오거나는 <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> 속성에는 <xref:System.Speech.Synthesis.TtsEngine.SayAs> 인스턴스.  
  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 표시 된 콘텐츠 형식을 사용 하 여는 <xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A> 속성을 지정 된 텍스트를 렌더링 하는 방법을 결정 합니다.  
  
 예를 들어 이름으로 Edgar 통용 될 수 없습니다 이름: "Edgar 입니다"입니다. 으로 지정 된 대로 문자로 명시 될 수 없습니다 또는 `interpret-as` 이 문장에는 특성: "인 `<say-as interpret-as="spell-out"> Edgar </say-as>`." 이 경우에 <xref:System.Speech.Synthesis.SpeechSynthesizer> Edgar "E D G A R"으로 대상으로 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>