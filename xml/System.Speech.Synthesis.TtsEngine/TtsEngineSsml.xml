<Type Name="TtsEngineSsml" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c219b0e7a240dcdb864633218b0d33ebd17771c9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TtsEngineSsml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TtsEngineSsml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TtsEngineSsml" />
  <TypeSignature Language="C++ CLI" Value="public ref class TtsEngineSsml abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="911bd-101">음성 합성 엔진에 대한 모든 텍스트에 의해 구현될 추상 기본 클래스</span>
      <span class="sxs-lookup">
        <span data-stu-id="911bd-101">Abstract base class to be implemented by all text to speech synthesis engines.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-102">사용자 지정 텍스트 음성 변환 엔진을 생성 하려면 응용 프로그램의 추상 기본 클래스에서 파생 된 클래스 구현 항상 해야 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-102">To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span></span>  
  
 <span data-ttu-id="911bd-103">구현 하는 제대로 등록된 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> 여 신시사이저 음성으로 사용할 수 있습니다 <xref:System.Speech.Synthesis> 네임 스페이스 기반 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-103">A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.</span></span>  
  
 <span data-ttu-id="911bd-104">개체에서 상속 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> 멤버를 재정의 해야 합니다: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> 및 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-104">Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span></span>  
  
 <span data-ttu-id="911bd-105">가장 중요 한 멤버는 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> 를 구현 해야 하는 클래스는는 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="911bd-105">The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="911bd-106"><xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> 수신 인프라 텍스트 파서 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-106">The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:</span></span>  
  
1.  <span data-ttu-id="911bd-107">에 대 한 참조는 <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> 도 큐 및 오디오 출력을 쓰기와 같은 시스템 서비스에 대 한 액세스를 제공 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-107">A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.</span></span>  
  
2.  <span data-ttu-id="911bd-108">배열 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 음성 합성 Markup Language (SSML) 입력 으로부터 생성 된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="911bd-108">An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input.</span></span> <span data-ttu-id="911bd-109">음성 렌더링할 텍스트 뿐만 아니라 음성의의 요청된 된 특성에 대 한 정보를 저장 된 SSML을 구문 분석 한 <xref:System.Speech.Synthesis.TtsEngine.FragmentState> 각 들어오는와 연결 된 인스턴스 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-109">In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.</span></span>  
  
 <span data-ttu-id="911bd-110">음성 신시사이저 응용 프로그램을 구현 하 여 지정 된 출력 형식에 대 한 요청을 수행할 필요에 따라 수 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> 올바른 오디오 출력을 제공 하려고 할 때 플랫폼에서 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-110">A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.</span></span>  
  
 <span data-ttu-id="911bd-111">구현 자가 해당 구현에 의해 발음 또는 사전을, 외부 정의 관리 하기 위한 지원을 제공할 수도 있습니다 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> 및 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-111">An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TtsEngineSsml (string registryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string registryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (registryKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TtsEngineSsml(System::String ^ registryKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registryKey">
          <span data-ttu-id="911bd-112">
            <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 구현과 연관된 음성 토큰 레지스트리 키의 전체 이름</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-112">Full name of the registry key for the Voice Token associated with the <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> implementation.</span>
          </span>
          <span data-ttu-id="911bd-113">엔진.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-113">engine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="911bd-114">적절한 음성 토큰 레지스트리 키에 따라 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />의 새 인스턴스를 생성합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-114">Constructs a new instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> based on an appropriate Voice Token registry key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-115">이 생성자에 대 한 호출에서 일반적으로 생성 된 <xref:System.Speech.Synthesis> 기반 응용 프로그램 신시사이저 음성 선택의 인스턴스에서 사용할 <xref:System.Speech.Synthesis.SpeechSynthesizer>합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-115">Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
 <span data-ttu-id="911bd-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens에서 레지스터 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLexicon(class System.Uri uri, string mediaType, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddLexicon(Uri ^ uri, System::String ^ mediaType, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="911bd-117">어휘 정보의 위치를 나타내는 <see langword="System.Uri" />의 유효한 인스턴스</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-117">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="911bd-118">어휘집의 미디어 유형을 포함하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-118">A string containing the media type of the lexicon.</span>
          </span>
          <span data-ttu-id="911bd-119">미디어 형식은 대소문자를 구분합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-119">Media types are case insensitive.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="911bd-120">플랫폼 인프라스트럭처와 상호 작용하는데 사용되는 <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 인터페이스에 대한 참조</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-120">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface used to interact with the platform infrastructure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="911bd-121">현재 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 인스턴스에 의해 구현되는 <see langword="Synthesizer" /><see langword="Voice" />에 어휘를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-121">Adds a lexicon to the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-122">발음 lexicon은 단어 또는 구의 함께 적절 한 발음 알파벳을 사용 하 여 지정 된 발음의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-122">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="911bd-123">이 메서드는 플랫폼 인프라에 대 한 응답에는 일반적으로 <xref:System.Speech.Synthesis> 기반 응용 프로그램 호출 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> 현재 구현 신시사이저 음성을 사용 하 여 및 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="911bd-123">This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
 <span data-ttu-id="911bd-124">값 `mediaType` 는 일반적으로 MIME 사양 SSML 사양 미디어 사양에 대 한 MIME를 사용 하 게 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-124">The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911bd-125">구현 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> 사용 하 여는 <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> 인터페이스에 전달 된 리소스에서 사전 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-125">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource.</span></span> <span data-ttu-id="911bd-126">다음 저장 한 `System.IO.Stream` 에서 어휘 집에는 `System.Collections.Generic.Dictionary` URI 어휘 집에 의해 인덱싱된 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="911bd-126">It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="911bd-127">것은 완벽 하 게 잘 알고 있어야 하 고에 저장 된 어휘 집 처리할 수 하는 구현 담당 <paramref name="uri" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="911bd-127">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span>
            </span>
            <span data-ttu-id="911bd-128">또한 구현을 추적 하 고 추가 하는 모든 집의 수명을 관리 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="911bd-128">The implementation must also keep track and manage the lifetimes of all lexicons it adds.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormat">
      <MemberSignature Language="C#" Value="public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetOutputFormat(valuetype System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, native int targetWaveFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IntPtr GetOutputFormat(System::Speech::Synthesis::TtsEngine::SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speakOutputFormat" Type="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />
        <Parameter Name="targetWaveFormat" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="speakOutputFormat">
          <span data-ttu-id="911bd-129">요청된 오디오 출력 형식을 나타내는 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> 열거형의 올바른 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-129">Valid member of the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> enumeration indicating the type of requested audio output format.</span>
          </span>
        </param>
        <param name="targetWaveFormat">
          <span data-ttu-id="911bd-130">
            <c>speakOutputFormat</c> 인수에서 표현하는 오디오 형식에 대한 자세한 설정을 포함하는 <see langword="struct" />에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-130">A pointer to a <see langword="struct" /> containing detail setting for the audio format type requested by the <c>speakOutputFormat</c> argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="911bd-131">신시사이저 엔진의 특정 출력 형식 지원 요청에 응답하는 지정된 synthesize 엔진에서 지원한 최적의 오디오 출력을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-131">Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="911bd-132">출력 형식에 대한 자세한 정보가 포함된 <see langword="IntPtr" />를 참조하는 올바른 <see langword="struct" /> 인스턴스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-132">Returns a valid <see langword="IntPtr" /> instance referring to a <see langword="struct" /> containing detailed information about the output format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-133">로 사용 되는 구조 `targetWaveFormat` 반환한 메서드와 호환 해야는 `WAVEFORMATEX` SAPI, 아래에서 사용할 수 있는 사용 하 여 반환 되는 값을 할당 해야 하 고 `CoTaskMemAlloc`합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-133">The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.</span></span>  
  
 <span data-ttu-id="911bd-134">`struct` 동일한 기능을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-134">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="911bd-135">아래 샘플 구현 허용 오차에 있는 경우에 사용, 그렇지 않으면 기본값을 사용 하 여 선택한 입력의 유효성을 검사 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-135">The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.</span></span>  
  
```  
public IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  
    WaveFormat waveFormat = new WaveFormat();  
    WaveFormat rq=new WaveFormat();  
    Marshal.PtrToStructure(targetWaveFormat,rq);  
  
    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  
    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  
    waveFormat.BlockAlign = 2;  
    waveFormat.Channels = 1;  
    waveFormat.FormatTag = 1;  
    waveFormat.SamplesPerSec = 16000;  
    waveFormat.Size = 0;  
  
    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  
    Marshal.StructureToPtr(waveFormat, wfx, false);  
  
    //Console.WriteLine ("GetOutputFormat called");  
    return wfx;  
}  
internal struct WaveFormat {  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="911bd-136">개체에서 상속 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 에 지정 된 대로 요청 된 출력 형식을 검사 해야 <paramref name="targetWaveFormat" /> 하 고 지원 되는 가장 가까운 형식을 반환 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="911bd-136">Object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> should examine the requested output format as specified by <paramref name="targetWaveFormat" /> and return the closest format that it supports.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLexicon(class System.Uri uri, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveLexicon(Uri ^ uri, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="911bd-137">어휘 정보의 위치를 나타내는 <see langword="System.Uri" />의 유효한 인스턴스</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-137">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="911bd-138">인프라 리소스에 대한 액세스를 허용하기 위해 플랫폼 인프라에서 전달하는 <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 인터페이스에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-138">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="911bd-139">
            <see langword="Synthesizer" />
            <see langword="Voice" /> 에 의해 현재 로딩된 렉시콘을 제거한다. 이것은 현재의  <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 예에 의해 이행된 것이다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-139">Removes a lexicon currently loaded by the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-140">발음 lexicon은 단어 또는 구의 함께 적절 한 발음 알파벳을 사용 하 여 지정 된 발음의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-140">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="911bd-141">이 메서드는 일반적으로 대 한 응답으로 호출 됩니다는 <xref:System.Speech.Synthesis> 기반 응용 프로그램 호출 <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> 현재 구현 신시사이저 음성을 사용 하 여 및 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="911bd-141">This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911bd-142">구현 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> 어휘 집 URI를 사용 하 여 인스턴스를 쿼리할 `System.Collections.Generic.Dictionary` 에 대 한는 `System.IO.Stream`스트림을 닫고 어휘 집을 가리키는 uri를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-142">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="911bd-143">것은 완벽 하 게 잘 알고 있어야 하 고에 저장 된 어휘 집 처리할 수 하는 구현 담당 <paramref name="uri" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="911bd-143">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span>
            </span>
            <span data-ttu-id="911bd-144">또한 구현을 추적 하 고 제거 하는 모든 집의 수명을 관리 해야 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="911bd-144">The implementation must also keep track and manage the lifetimes of all lexicons it removes.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak(class System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, native int waveHeader, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Speak (fragment As TextFragment(), waveHeader As IntPtr, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Speak(cli::array &lt;System::Speech::Synthesis::TtsEngine::TextFragment ^&gt; ^ fragment, IntPtr waveHeader, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.Speech.Synthesis.TtsEngine.TextFragment[]" />
        <Parameter Name="waveHeader" Type="System.IntPtr" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="fragment">
          <span data-ttu-id="911bd-145">음성에 렌더링할 텍스트를 포함하는 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 인스턴스의 배열</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-145">An array of <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> instances containing the text to be rendered into speech.</span>
          </span>
        </param>
        <param name="waveHeader">
          <span data-ttu-id="911bd-146">오디오 출력 형식을 포함하는 구조체를 가리키는 <see langword="IntPtr" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-146">An <see langword="IntPtr" /> pointing to a structure containing audio output format.</span>
          </span>
        </param>
        <param name="site">
          <span data-ttu-id="911bd-147">인프라 리소스에 대한 액세스를 허용하기 위해 플랫폼 인프라에서 전달하는 <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 인터페이스에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-147">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="911bd-148">명시된 출력 양식에서 명시된<see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 배열을 제공한다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="911bd-148">Renders specified <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> array in the specified output format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-149">으로 사용 되는 구조 `waveHeader` 반환한 메서드와 호환 해야는 `WAVEFORMATEX` SAPI에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-149">The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.</span></span>  
  
 <span data-ttu-id="911bd-150">`struct` 동일한 기능을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-150">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="911bd-151">아래 예제에서 상속 하는 사용자 지정 음성 합성 구현의 일부인 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, 및을 사용 하 여 <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, 및 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="911bd-151">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="911bd-152">구현 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="911bd-152">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="911bd-153">형식의 배열을 받습니다 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 인스턴스를 새 배열을 만듭니다 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 전달 되는 인스턴스는 `Speak` 메서드는 기본 합성 엔진이를 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-153">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="911bd-154">경우는 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> 에서 열거형 값으로 찾을 <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> 속성에는 <xref:System.Speech.Synthesis.TtsEngine.FragmentState> 에서 반환 되는 <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> 각 속성 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 인스턴스가 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, 구현</span><span class="sxs-lookup"><span data-stu-id="911bd-154">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="911bd-155">읽을 텍스트의 Americanism Britishisms 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-155">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="911bd-156">경우는 <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> 속성에는 <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> 구현 지원에 제공 하는 인터페이스는 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> 이벤트 유형에 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> 인스턴스 이벤트 신시사이저 진행률 표시기가 만든 드라이브를 만드는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-156">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="911bd-157">음성 렌더링 엔진이 라고 다음으로 수정 된 <xref:System.Speech.Synthesis.TtsEngine.TextFragment> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-157">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
    _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="911bd-158">사용 하 여 사용자 지정 음성 신시사이저 구현 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 및 <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> 필터 또는 신시사이저 응용 프로그램의 멤버를 통해 플랫폼 인프라를 사용 하 여 생성 간의 매개자와 같이 사용할는 <see cref="N:System.Speech.Synthesis" /> 네임 스페이스 및 시스템 음성 합성 엔진 원본으로 사용 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="911bd-158">Custom speech synthesizer implements using <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> work as filters or intermediaries between synthesizer applications constructed using the platform infrastructure through the members of the <see cref="N:System.Speech.Synthesis" /> namespace and underlying system speech synthesis engines.</span>
            </span>
            <span data-ttu-id="911bd-159">A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> 구현:</span>
            <span class="sxs-lookup">
              <span data-stu-id="911bd-159">A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implementation:</span>
            </span>  
  
1.  <span data-ttu-id="911bd-160">트랩 들어오는의 요소를 수정 하거나 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 개체</span><span class="sxs-lookup"><span data-stu-id="911bd-160">Traps or modify aspects of the incoming <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objects</span></span>  
  
2.  <span data-ttu-id="911bd-161">에 대 한 사이트 참조를 사용 하 여 필요한 이벤트를 생성 한 <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> 인스턴스</span><span class="sxs-lookup"><span data-stu-id="911bd-161">Generates any necessary events using the site reference to a <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> instance</span></span>  
  
3.  <span data-ttu-id="911bd-162">실제 신시사이저 음성을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-162">Generates the actual synthesized speech.</span></span><span data-ttu-id="911bd-163">음성 생성은 가장 일반적으로 호출 하 여 수행 됩니다 <c>Speak</c> 운영 체제에서 제공 하는 엔진 렌더링 음성 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-163">Generation of speech is most typically done by calling <c>Speak</c> on one of the speech rendering engines provided by the operating system.</span></span><span data-ttu-id="911bd-164">사용할 수 있는 음성 렌더링 엔진 중 하나를 사용 하지 않으면는 개체에서 상속 하는 경우 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 자체 음성 렌더링 엔진을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-164">If one of the available speech rendering engines is not used, a object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> must create its own speech rendering engine.</span></span><span data-ttu-id="911bd-165">에 대 한 액세스는 <c>Speak</c> 메서드 레지스트리 및 리플렉션 가져온 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-165">Access to the <c>Speak</c> method on obtained using the registry and reflection.</span></span><span data-ttu-id="911bd-166">이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-166">.</span></span><span data-ttu-id="911bd-167">상속 하는 경우 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, 멤버를 재정의 해야 합니다: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, 및 <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-167">When you inherit from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, you must override the following members: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>