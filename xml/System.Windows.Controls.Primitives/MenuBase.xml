<Type Name="MenuBase" FullName="System.Windows.Controls.Primitives.MenuBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d3d308cc35068c9509fdddab3bdc562312b67b7b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37581610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MenuBase : System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract MenuBase extends System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MenuBase&#xA;Inherits ItemsControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuBase abstract : System::Windows::Controls::ItemsControl" />
  <TypeSignature Language="F#" Value="type MenuBase = class&#xA;    inherit ItemsControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ItemsControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="080e6-101">사용자가 선택하게 될 선택 항목을 정의하는 컨트롤을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="080e6-101">Represents a control that defines choices for users to select.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="080e6-102"><xref:System.Windows.Controls.Primitives.MenuBase> 선택 하는 사용자에 대 한 선택 항목을 정의 하는 컨트롤에 대 한 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-102">The <xref:System.Windows.Controls.Primitives.MenuBase> is the base class for controls that define choices for users to select.</span></span> <span data-ttu-id="080e6-103">합니다 <xref:System.Windows.Controls.Menu> 하 고 <xref:System.Windows.Controls.ContextMenu> 에서 상속 <xref:System.Windows.Controls.Primitives.MenuBase> 일부 작업을 호출 하는 항목을 선택 하 고 사용자입니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-103">The <xref:System.Windows.Controls.Menu> and <xref:System.Windows.Controls.ContextMenu> inherit from <xref:System.Windows.Controls.Primitives.MenuBase> and allow the user to select an item to invoke some action.</span></span>  
  
 <span data-ttu-id="080e6-104"><xref:System.Windows.Controls.Primitives.MenuBase> 가 <xref:System.Windows.Controls.ItemsControl>, 즉 모든 형식 (예: 문자열, 이미지 또는 패널) 개체의 컬렉션을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-104"><xref:System.Windows.Controls.Primitives.MenuBase> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="080e6-105">자세한 내용은 <xref:System.Windows.Controls.ItemsControl> 클래스를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="080e6-105">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MenuBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MenuBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="080e6-106">
            <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-106">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MenuBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="menuBase.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="080e6-107">지정된 항목을 표시하는 데 사용되는 요소를 만들거나 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-107">Creates or identifies the element used to display the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="080e6-108">지정된 항목을 표시하는 데 사용되는 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-108">The element used to display the specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected virtual void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menuBase.HandleMouseButton e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="080e6-109">마우스 이벤트에 대한 이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-109">The event data for a mouse event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="080e6-110">마우스 단추를 누르거나 놓을 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-110">Called when a mouse button is pressed or released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="menuBase.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="080e6-111">항목 컨테이너인지 여부를 확인할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-111">The item to check whether it is an item container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="080e6-112">지정된 항목이 자신의 항목 컨테이너인지 또는 컨테이너가 될 수 있는지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-112">Determines whether the specified item is, or is eligible to be, its own item container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="080e6-113">항목이 <see cref="T:System.Windows.Controls.MenuItem" /> 또는 <see cref="T:System.Windows.Controls.Separator" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-113">
              <see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.MenuItem" /> or a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerTemplateSelector As ItemContainerTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerTemplateSelector ^ ItemContainerTemplateSelector { System::Windows::Controls::ItemContainerTemplateSelector ^ get(); void set(System::Windows::Controls::ItemContainerTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerTemplateSelector : System.Windows.Controls.ItemContainerTemplateSelector with get, set" Usage="System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="080e6-114">각 항목을 표시하는 데 사용되는 템플릿을 선택하기 위한 사용자 지정 논리를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-114">Gets or sets the custom logic for choosing a template used to display each item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="080e6-115">논리를 제공하며 항목 컨테이너를 반환하는 사용자 지정 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-115">A custom object that provides logic and returns an item container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="080e6-116">사용 하 여는 <xref:System.Windows.Controls.ItemContainerTemplateSelector> 컬렉션에 항목이 동일한 형식 및 항목 컨테이너를 선택 하는 사용자 지정 논리를 제공 해야 하는 경우 다른 항목 컨테이너를 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-116">Use an <xref:System.Windows.Controls.ItemContainerTemplateSelector> to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="080e6-117">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="080e6-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="080e6-118">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="080e6-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty>|  
|<span data-ttu-id="080e6-119">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="080e6-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="080e6-120">없음</span><span class="sxs-lookup"><span data-stu-id="080e6-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemContainerTemplateSelectorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="080e6-121">
            <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.MenuBase.ItemContainerTemplateSelector" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="menuBase.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="080e6-122">
            <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> 이벤트에 대한 이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-122">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="080e6-123">
            <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> 속성이 변경되면 응답합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-123">Responds to a change to the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menuBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="080e6-124">
            <see cref="E:System.Windows.UIElement.KeyDown" /> 이벤트에 대한 이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-124">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="080e6-125">사용자가 키를 누를 때 발생하는 <see cref="E:System.Windows.UIElement.KeyDown" /> 라우트된 이벤트에 대한 클래스 처리를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-125">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="080e6-126">사용자가 ESC, ALT + ALT 또는 ALT + f10 키를 누르면이 구현을 표시 합니다 <xref:System.Windows.UIElement.KeyDown> 이벤트를 설정 하 여 처리 됨으로 합니다 <xref:System.Windows.RoutedEventArgs.Handled%2A> 이벤트 데이터의 속성 `true`.</span><span class="sxs-lookup"><span data-stu-id="080e6-126">If the user presses ESC, ALT+ALT, or ALT+F10, this implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="080e6-127">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, 항상 기본 구현을 호출 하면 <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> 구현 합니다. 최종 클래스의 런타임 동작을 변경할 수는 클래스 처리기를 사용 하 여 이벤트 처리에서 기본 클래스를 방지 하는 기본 구현을 호출 하지 못했습니다. 기본 구현은 앞 이나 뒤에 특수 한 처리 요구 사항에 따라 호출할 수 있습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-127">
              <para>If you override <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="menuBase.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="080e6-128">
            <see cref="E:System.Windows.UIElement.MouseLeave" /> 이벤트에 대한 이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-128">The event data for the <see cref="E:System.Windows.UIElement.MouseLeave" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="080e6-129">마우스가 이 컨트롤에서 나가면 발생하는 <see cref="E:System.Windows.UIElement.MouseLeave" /> 라우트된 이벤트에 대한 클래스 처리를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-129">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="080e6-130">이 구현은 처리 상태를 변경 하지 않습니다 (합니다 <xref:System.Windows.RoutedEventArgs.Handled%2A> 속성)의 <xref:System.Windows.UIElement.MouseLeave> 이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-130">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.MouseLeave> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="080e6-131">
            <para>재정의 하는 경우 <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, 항상 기본 구현을 호출 하면 <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> 구현 합니다. 최종 클래스의 런타임 동작을 변경할 수는 클래스 처리기를 사용 하 여 이벤트 처리에서 기본 클래스를 방지 하는 기본 구현을 호출 하지 못했습니다. 기본 구현은 앞 이나 뒤에 특수 한 처리 요구 사항에 따라 호출할 수 있습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-131">
              <para>If you override <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplate">
      <MemberSignature Language="C#" Value="public bool UsesItemContainerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesItemContainerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesItemContainerTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesItemContainerTemplate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesItemContainerTemplate : bool with get, set" Usage="System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="080e6-132">기본 컬렉션 또는 다른 경험적 접근의 항목 형식에 따라 메뉴가 다른 항목 컨테이너를 선택하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-132">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="080e6-133">
            <see langword="true" /> 메뉴 항목은 다른 컨테이너를 선택하고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-133">
              <see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="080e6-134">등록된 기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-134">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="080e6-135">값에 영향을 줄 수 있습니다 요소에 대 한 자세한 내용은 [종속성 속성 값 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)을 참조 하세요.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-135">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="080e6-136">이 속성은 컬렉션에 바인딩하여 메뉴를 만들려는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-136">This property is useful if you want to create a menu by binding to a collection.</span></span>  <span data-ttu-id="080e6-137">항목 컨테이너에는 컬렉션의 개체를 표시 하는 UI 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-137">The item container is the UI element that displays the object in a collection.</span></span> <span data-ttu-id="080e6-138">경우 바인딩할 컬렉션에 있는 메뉴를 만들려면 <xref:System.Windows.Controls.MenuItem> 개체 및 <xref:System.Windows.Controls.Separator> 개체를 설정 합니다 <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> 속성을 true로 만들기를 <xref:System.Windows.Controls.ItemContainerTemplate> 컬렉션에서 개체의 각 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-138">If you want to bind to a collection to create a menu that contains <xref:System.Windows.Controls.MenuItem> objects and <xref:System.Windows.Controls.Separator> objects, set the <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> property to true and create an <xref:System.Windows.Controls.ItemContainerTemplate> for each type of object in your collection.</span></span>  <span data-ttu-id="080e6-139">각 <xref:System.Windows.Controls.ItemContainerTemplate> 포함 해야 합니다는 <xref:System.Windows.Controls.MenuItem> 또는 <xref:System.Windows.Controls.Separator>합니다.</span><span class="sxs-lookup"><span data-stu-id="080e6-139">Each <xref:System.Windows.Controls.ItemContainerTemplate> must contain either a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.Separator>.</span></span>  
  
<a name="dependencyPropertyInfo_UsesItemContainerTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="080e6-140">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="080e6-140">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="080e6-141">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="080e6-141">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty>|  
|<span data-ttu-id="080e6-142">메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="080e6-142">Metadata properties set to `true`</span></span>|<span data-ttu-id="080e6-143">없음</span><span class="sxs-lookup"><span data-stu-id="080e6-143">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UsesItemContainerTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UsesItemContainerTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UsesItemContainerTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="080e6-144">
            <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="080e6-144">Identifies the <see cref="P:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>