<Type Name="TextBoxBase" FullName="System.Windows.Controls.Primitives.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ba5f622c0b780f6e8495de72238a63c56c4e2cf" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31044209" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract TextBoxBase extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Controls::Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="29105-101">
        <see cref="T:System.Windows.Controls.TextBox" /> 및 <see cref="T:System.Windows.Controls.RichTextBox" /> 등의 텍스트 편집 컨트롤에 기능을 제공하는 추상 기본 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29105-101">An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-102">다음 예제에서는 파생을 사용 하는 방법을 <xref:System.Windows.Controls.TextBox> 개체 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-102">The following example demonstrates how to use the derived <xref:System.Windows.Controls.TextBox> object in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 <span data-ttu-id="29105-103">다음 예제에서는 파생을 사용 하는 방법을 <xref:System.Windows.Controls.RichTextBox> 코드에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-103">The following example demonstrates how to use the derived <xref:System.Windows.Controls.RichTextBox> object in code.</span></span>  
  
 [!code-csharp[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_richtextbox_mouseupdown)]
 [!code-vb[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_richtextbox_mouseupdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TextBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-104">사용자가 Enter 키를 누를 때 텍스트 편집 컨트롤이 응답하는 방법을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-104">Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-105">&lt;Enter&gt; 키를 누를 때 현재 커서 위치에 새 줄이 삽입되면 <see langword="true" />이고, 그렇지 않으면 &lt;Enter&gt; 키가 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-105">
              <see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored.</span>
          </span>
          <span data-ttu-id="29105-106">기본값은 <see cref="T:System.Windows.Controls.TextBox" />에 대해서는 <see langword="false" />이고 <see cref="T:System.Windows.Controls.RichTextBox" />에 대해서는 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-106">The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-107">ENTER 키에 해당 `VK_RETURN` 가상 키 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-107">The ENTER key corresponds to `VK_RETURN` virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsReturn"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-108">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-108">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-109">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-109">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty>|  
|<span data-ttu-id="29105-110">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-110">Metadata properties set to `true`</span></span>|<span data-ttu-id="29105-111">없음</span><span class="sxs-lookup"><span data-stu-id="29105-111">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-112">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-112">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-113">사용자가 &lt;Tab&gt; 키를 누를 때 텍스트 편집 컨트롤이 응답하는 방법을 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-113">Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-114">Tab 키를 누를 때 현재 커서 위치에 탭 문자가 삽입되면 <see langword="true" />이고, Tab 키를 누를 때 탭 정지로 표시된 다음 컨트롤로 포커스가 이동하고 탭 문자가 삽입되지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-114">
              <see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.</span>
          </span>
          <span data-ttu-id="29105-115">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-115">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-116">TAB 키에 해당 **VK_TAB** 가상 키 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-116">The TAB key corresponds to **VK_TAB** virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsTab"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-117">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-118">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty>|  
|<span data-ttu-id="29105-119">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="29105-120">없음</span><span class="sxs-lookup"><span data-stu-id="29105-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-121">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="29105-122">텍스트 컨트롤의 현재 내용에 추가할 텍스트를 지정하는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-122">A string that specifies the text to append to the current contents of the text control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-123">텍스트 컨트롤의 내용에 문자열을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-123">Appends a string to the contents of a text control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-124"><xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> 메서드 많은 연결이 필요할 때 더 나은 성능을 얻을 수 있는 텍스트 연결을 사용 하지 않고 텍스트 컨트롤의 내용에 텍스트를 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-124">The <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method enables the user to append text to the contents of a text control without using text concatenation, which, can yield better performance when many concatenations are required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-125">다음 예제에서는 <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="29105-125">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase11)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-126">사용자가 마우스로 단어를 끌어 단어의 일부를 선택할 때 단어의 나머지가 선택되는 방법을 결정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-126">Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-127">단어 단위로 선택 기능이 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-127">
              <see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-128">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-129">때 <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> 가 사용 하도록 설정 될 때마다 해당 단어의 일부 마우스를 사용 하 여 단어의 일부를 끌어 오는 사용자가 선택 되어, 선택 영역 자동으로 포함 하도록 확장 됩니다 단어 단위로.</span><span class="sxs-lookup"><span data-stu-id="29105-129">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is enabled, every time that part of a word is selected by the user dragging over part of a word using the mouse, the selection is automatically expanded to include the whole word.</span></span> <span data-ttu-id="29105-130">사용자는 일시적으로 내용을 선택으로 마우스 포인터를 끄는 방향을 반대로 바꿔 단어 단위로 자동으로 선택을 무시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-130">The user can override automatic selection of a whole word by momentarily reversing the direction in which the mouse pointer is being dragged as the selection is made.</span></span> <span data-ttu-id="29105-131">이 작업이 전체 단어를 자동으로 선택 되지 하 고 정확히 단어의 전체 또는 일부를 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-131">This action undoes the automatic selection of the whole word, and enables the user to precisely select part or all of the word.</span></span>  
  
 <span data-ttu-id="29105-132">때 <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> 는 선택 영역 자동으로 축소 되어 전체 단어가 포함;이 경우 정확 하 게 선택 항목은 항상 결정 수동으로 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-132">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is disabled, a selection is not automatically expanded to include whole words; in this case, precise selections are always determined manually.</span></span>  
  
 <span data-ttu-id="29105-133">**참고:** 자동 선택에 첫 번째 단어를 통해 끌어서 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-133">**Note:** Auto selection does not affect the first word that the user drags across.</span></span> <span data-ttu-id="29105-134">것은이 첫 번째 단어 경계가 교차할 자동 선택 내용이 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-134">It is only after this first word boundary is crossed that auto selection takes effect.</span></span>  
  
<a name="dependencyPropertyInfo_AutoWordSelection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-135">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-136">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-136">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty>|  
|<span data-ttu-id="29105-137">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="29105-138">없음</span><span class="sxs-lookup"><span data-stu-id="29105-138">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoWordSelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoWordSelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoWordSelectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoWordSelectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-139">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-139">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChange">
      <MemberSignature Language="C#" Value="public void BeginChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-140">변경 블록을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-140">Begins a change block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-141">**참고:** 호출 하는 경우 <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>를 호출 해야 <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> 변경 블록을 완료 하 고, 그렇지는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-141">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="29105-142">변경 블록은 논리적으로 하나의 실행 취소 단위에 여러 변경 내용을 그룹화 하 고 변경 블록 지날 때까지 발생 하지 텍스트 내용이 나 선택 변경 이벤트를 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-142">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="29105-143">이러한 방식으로 텍스트 요소를 동시에 다른 수신기가 변경 되는 위험 없이 텍스트 요소에 다중 편집을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-143">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another listener.</span></span> <span data-ttu-id="29105-144">변경 블록을 호출 하 여 만든는 <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="29105-144">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="29105-145">호출 된 <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> 메서드를 사용 하면 모든 후속 변경 내용은 해당 호출 될 때까지 지정 된 변경이 블록에 포함할 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> 메서드 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29105-145">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-146">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> 및 <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> 메서드 변경 블록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="29105-146">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-147">가장 최근의 실행 취소 작업을 다시 실행할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-147">Gets a value that indicates whether the most recent undo action can be redone.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-148">가장 최근의 실행 취소 작업을 다시 실행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-148">
              <see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-149">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-149">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-150">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> 속성을 가장 최근의 실행 취소 작업을 다시 실행할 수 있는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-150">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> property to determine whether the most recent undo action can be redone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-151">가장 최근 작업을 취소할 수 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-151">Gets a value that indicates whether the most recent action can be undone.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-152">
            <see langword="true" /> 가장 최근의 작업을 취소할 수 있으면 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-152">
              <see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-153">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-153">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-154">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> 속성을 가장 최근의 작업을 취소할 수 있는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-154">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> property to determine whether the most recent action can be undone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-155">텍스트 상자의 캐럿을 칠하는 데 사용되는 브러시를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-155">Gets or sets the brush that is used to paint the caret of the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-156">텍스트 상자의 캐럿을 칠하는 데 사용되는 브러시입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-156">The brush that is used to paint the caret of the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-157">다음 예제에서는 한 <xref:System.Windows.Controls.TextBox> "This is 일부 text." 라는 텍스트를 추가 하 고</span><span class="sxs-lookup"><span data-stu-id="29105-157">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="29105-158">예제에서는 <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> 및 <xref:System.Windows.Controls.Control.Foreground%2A> 의 속성을 <xref:System.Windows.Controls.TextBox> 파랑 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-158">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties of a <xref:System.Windows.Controls.TextBox> to blue.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="29105-159">앞의 예제는 다음 그림과 같이 하는 출력을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-159">The preceding example produces output that is like the following illustration.</span></span>  
  
 <span data-ttu-id="29105-160">![Caretbrush가 있는 TextBox 파랑으로 설정 합니다. ] (~/add/media/textboxcaretbrush.png "Caretbrush가 있는 TextBox 파랑으로 설정 합니다.")</span><span class="sxs-lookup"><span data-stu-id="29105-160">![TextBox with CaretBrush set to blue.](~/add/media/textboxcaretbrush.png "TextBox with CaretBrush set to blue.")</span></span>  
<span data-ttu-id="29105-161">Caretbrush가 있는 TextBox 파랑으로 설정</span><span class="sxs-lookup"><span data-stu-id="29105-161">TextBox with CaretBrush set to blue</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-162">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-162">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-163">텍스트 편집 컨트롤의 현재 선택 영역을 <see cref="T:System.Windows.Clipboard" />에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-163">Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-164">복사 작업을 선택한 텍스트를 복사 하 여 <xref:System.Windows.Clipboard>합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-164">A copy operation copies the selected text to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="29105-165">Note 텍스트 편집 컨트롤에는 프로세스에서에서 선택한 텍스트 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-165">Note that the selected text is not removed from the text editing control in the process.</span></span> <span data-ttu-id="29105-166">유사한 방법 <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, 현재 선택 영역을 이동 하는 <xref:System.Windows.Clipboard> 텍스트 편집 컨트롤에는 프로세스에서에서 선택한 텍스트를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-166">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, moves the current selection to the <xref:System.Windows.Clipboard> and removes the selected text from the text editing control in the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-167">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> 에서 선택한 텍스트를 복사 하는 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-167">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> method to copy the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase4)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="29105-168">상속자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-168">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="29105-169">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-169">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-170">현재 선택 영역을 텍스트 편집 컨트롤에서 제거하고 <see cref="T:System.Windows.Clipboard" />에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-170">Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-171">잘라내기 작업 텍스트 편집 컨트롤에서에서 현재 선택 영역을 제거 하 고에 복사는 <xref:System.Windows.Clipboard>합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-171">A cut operation removes the current selection from the text editing control and copies it to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="29105-172">선택한 텍스트 제거 (잘라내기)에서 텍스트 편집 컨트롤의 프로세스에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-172">Note that the selected text is removed (cut) from the text editing control in the process.</span></span> <span data-ttu-id="29105-173">비슷한 메서드인 <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, 현재 선택 영역을 클립보드에 복사 하기는 하지만 텍스트 편집 컨트롤에서에서 선택한 텍스트를 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-173">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copies the current selection to the Clipboard, but does not remove the selected text from the text editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-174">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> 에서 선택한 텍스트를 삭제 하는 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-174">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> method to delete the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase5)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="29105-175">상속자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-175">for full trust for inheritors.</span>
          </span>
          <span data-ttu-id="29105-176">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 상속할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-176">This member cannot be inherited by partially trusted code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="DeclareChangeBlock">
      <MemberSignature Language="C#" Value="public IDisposable DeclareChangeBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeclareChangeBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
      <MemberSignature Language="VB.NET" Value="Public Function DeclareChangeBlock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeclareChangeBlock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-177">변경 블록을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-177">Creates a change block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29105-178">새 변경 블록을 참조하는 <see cref="T:System.IDisposable" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-178">An <see cref="T:System.IDisposable" /> object that refers to a new change block.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-179">변경 블록은 여러 변경 내용을 단일 실행 취소 단위에 논리적으로 그룹화합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-179">A change block logically groups multiple changes into a single undo unit.</span></span> <span data-ttu-id="29105-180">변경 블록을 호출 하 여 만든는 <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="29105-180">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="29105-181">호출 된 <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> 메서드를 사용 하면 모든 후속 변경 내용은 해당 호출 될 때까지 지정 된 변경이 블록에 포함할 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> 메서드 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29105-181">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="EndChange">
      <MemberSignature Language="C#" Value="public void EndChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-182">변경 블록을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-182">Ends a change block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-183">**참고:** 호출 하는 경우 <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>를 호출 해야 <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> 변경 블록을 완료 하 고, 그렇지는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-183">**Note:** When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="29105-184">변경 블록은 논리적으로 하나의 실행 취소 단위에 여러 변경 내용을 그룹화 하 고 변경 블록 지날 때까지 발생 하지 텍스트 내용이 나 선택 변경 이벤트를 방지 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-184">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="29105-185">이러한 방식으로 텍스트 요소를 다른 프로세스에 의해 동시에 변경할 위험 없이 텍스트 요소에 다중 편집을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-185">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another process.</span></span> <span data-ttu-id="29105-186">변경 블록을 호출 하 여 만든는 <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="29105-186">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="29105-187">호출 된 <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> 메서드를 사용 하면 모든 후속 변경 내용은 해당 호출 될 때까지 지정 된 변경이 블록에 포함할 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> 메서드 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29105-187">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-188">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> 및 <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> 메서드 변경 블록을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="29105-188">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-189">표시되는 콘텐츠 영역의 세로 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-189">Gets the vertical size of the visible content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-190">표시되는 콘텐츠 영역의 세로 크기를 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 단위로 지정하는 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-190">A floating-point value that specifies the vertical size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="29105-191">텍스트 편집 컨트롤이 스크롤을 지원하도록 구성되지 않은 경우 이 속성의 값은 0.0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-191">The value of this property is 0.0 if the text-editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="29105-192">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-192">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-193">다음 예제에서는의 값을 읽을 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-193">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-194">표시되는 콘텐츠 영역의 가로 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-194">Gets the horizontal size of the visible content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-195">표시되는 콘텐츠 영역의 가로 크기를 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 단위로 지정하는 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-195">A floating-point value that specifies the horizontal size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="29105-196">텍스트 편집 컨트롤이 스크롤을 지원하도록 구성되지 않은 경우 이 속성의 값은 0.0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-196">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="29105-197">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-197">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-198">다음 예제에서는의 값을 읽을 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-198">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-199">가로 스크롤 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-199">Gets or sets the horizontal scroll position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-200">가로 스크롤 위치를 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 단위로 지정하는 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-200">A floating-point value that specifies the horizontal scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="29105-201">이 속성을 설정하면 텍스트 편집 컨트롤이 지정된 가로 오프셋으로 스크롤됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-201">Setting this property causes the text editing control to scroll to the specified horizontal offset.</span>
          </span>
          <span data-ttu-id="29105-202">이 속성을 읽으면 현재 가로 오프셋이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-202">Reading this property returns the current horizontal offset.</span>
          </span>
          <span data-ttu-id="29105-203">텍스트 편집 컨트롤이 스크롤을 지원하도록 구성되지 않은 경우 이 속성의 값은 0.0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-203">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="29105-204">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-204">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-205">가로 오프셋은 오른쪽에서 왼쪽 모드에서 작업 하는 경우 표시 되는 텍스트 영역의 오른쪽에서 측정 그렇지 않으면 왼쪽에서 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29105-205">The horizontal offset is measured from the right of the visible text area if you are working in right-to-left mode; otherwise, it is measured from the left.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-206">다음 예제에서는의 값을 읽을 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-206">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29105-207">이 속성을 음수 값으로 설정하려고 시도한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-207">An attempt is made to set this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-208">가로 스크롤 막대가 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-208">Gets or sets a value that indicates whether a horizontal scroll bar is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-209">
            <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 열거형으로 정의되는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-209">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="29105-210">기본값은 <see cref="F:System.Windows.Visibility.Hidden" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-210">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HorizontalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-211">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-211">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-212">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-212">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty>|  
|<span data-ttu-id="29105-213">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-213">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="29105-214">다음 예제에서는의 값을 설정 하는 <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> 사용 하 여 속성 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-214">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-215">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-215">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-216">텍스트 상자에 포커스가 없는 경우 텍스트 상자가 선택된 텍스트를 표시하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-216">Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-217">텍스트 상자에 포커스가 없을 때 텍스트 상자에 선택한 텍스트가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-217">
              <see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-218">등록된 기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-218">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-219">값에 영향을 줄 수 요소에 대 한 자세한 내용은 참조 [종속성 속성 값 우선 순위](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-219">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-220">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-220">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-221">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-221">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="29105-222">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-222">Metadata properties set to `true`</span></span>|<span data-ttu-id="29105-223">없음</span><span class="sxs-lookup"><span data-stu-id="29105-223">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-224">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-224">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-225">텍스트 편집 컨트롤과 사용자의 상호 작용에 대해 읽기 전용인지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-225">Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-226">사용자에게 텍스트 편집 컨트롤의 내용이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 텍스트 편집 컨트롤의 내용을 사용자가 수정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-226">
              <see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user.</span>
          </span>
          <span data-ttu-id="29105-227">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-227">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-228">이 값은 사용자를 컨트롤과 상호 작용 하는만 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="29105-228">This value only affects a user who is interacting with the control.</span></span> <span data-ttu-id="29105-229">텍스트 편집 컨트롤의 내용은 프로그래밍 방식으로 수정할 수 항상 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-229">The contents of a text editing control can always be modified programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-230">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-230">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-231">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-231">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty>|  
|<span data-ttu-id="29105-232">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-232">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisible">
      <MemberSignature Language="C#" Value="public bool IsReadOnlyCaretVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnlyCaretVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnlyCaretVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnlyCaretVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-233">읽기 전용 텍스트 상자에 캐럿이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-233">Gets or sets a value that indicates whether a read-only text box displays a caret.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-234">읽기 전용 텍스트 상자에 캐럿이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-234">
              <see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-235">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-235">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-236">때 <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> 은 `true`, 사용자 수 여전히 텍스트를 선택 하 고 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-236">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `true`, a user can still select and copy text.</span></span> <span data-ttu-id="29105-237">경우는 <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> 도 속성이 `true`, 텍스트 상자에 키보드 포커스가 있을 때 캐럿 텍스트 상자에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29105-237">If the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property is also set to `true`, a caret will appear in the text box when the text box has keyboard focus.</span></span> <span data-ttu-id="29105-238">때 <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> 은 `false`, <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> 속성이 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-238">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `false`, the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyCaretVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyCaretVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-239">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-239">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-240">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-240">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-241">텍스트 상자에 포커스와 선택한 텍스트가 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-241">Gets a value that indicates whether the text box has focus and selected text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-242">텍스트 상자에 포커스와 선택된 텍스트가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-242">
              <see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-243">등록된 기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-243">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-244">값에 영향을 줄 수 요소에 대 한 자세한 내용은 참조 [종속성 속성 값 우선 순위](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-244">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-245">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-245">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-246">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-246">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty>|  
|<span data-ttu-id="29105-247">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-247">Metadata properties set to `true`</span></span>|<span data-ttu-id="29105-248">없음</span><span class="sxs-lookup"><span data-stu-id="29105-248">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-249">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-249">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabled">
      <MemberSignature Language="C#" Value="public bool IsUndoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUndoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUndoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUndoEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-250">텍스트 편집 컨트롤에 실행 취소 기능을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-250">Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-251">실행 취소 지원이 사용하도록 설정되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-251">
              <see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-252">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-252">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-253">이 속성을 설정 `false` 실행 취소 스택을 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="29105-253">Setting this property to `false` clears the undo stack.</span></span> <span data-ttu-id="29105-254">따라서 실행 취소를 사용 하지 않도록 설정 하 고 다시 활성화 하는 경우 실행 취소 명령을 여전히 없으므로 작동 되지 실행 취소를 사용 하지 않도록 설정 하는 경우 실행 취소 스택이 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-254">Therefore, if you disable undo and then re-enable it, undo commands still do not work because the undo stack was emptied when you disabled undo.</span></span>  
  
<a name="dependencyPropertyInfo_IsUndoEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-255">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-256">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-256">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty>|  
|<span data-ttu-id="29105-257">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-257">Metadata properties set to `true`</span></span>|<span data-ttu-id="29105-258">없음</span><span class="sxs-lookup"><span data-stu-id="29105-258">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="29105-259">다음 예제에서는 사용 하는 <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> 속성에 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-259">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsUndoEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsUndoEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsUndoEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsUndoEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-260">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-260">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-261">컨트롤 내용을 한 줄 아래로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-261">Scrolls the contents of the control down by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-262">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-262">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase13)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-263">컨트롤 내용을 한 줄 왼쪽으로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-263">Scrolls the contents of the control to the left by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-264">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-264">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase14)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-265">컨트롤 내용을 한 줄 오른쪽으로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-265">Scrolls the contents of the control to the right by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-266">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-266">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase15)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-267">컨트롤 내용을 한 줄 위로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-267">Scrolls the contents of the control upward by one line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-268">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-268">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase16)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      </Docs>
    </Member>
    <Member MemberName="LockCurrentUndoUnit">
      <MemberSignature Language="C#" Value="public void LockCurrentUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockCurrentUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockCurrentUndoUnit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockCurrentUndoUnit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-269">응용 프로그램의 실행 취소 스택에서 가장 최근의 실행 취소 단위를 잠급니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-269">Locks the most recent undo unit of the undo stack of the application.</span>
          </span>
          <span data-ttu-id="29105-270">이렇게 하면 이후에 추가되는 실행 취소 단위가 잠긴 단위와 병합되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-270">This prevents the locked unit from being merged with undo units that are added subsequently.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-271">텍스트가 아닌 실행 취소 단위를 응용 프로그램의 주 실행 취소 스택에 추가 되 면이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-271">Call this method when a non-text undo unit is added to the application's main undo stack.</span></span> <span data-ttu-id="29105-272">이렇게 하면 이후에 추가되는 실행 취소 단위가 잠긴 단위와 병합되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-272">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-273">컨트롤 템플릿이 적용될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-273">Is called when a control template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-274"><xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-274">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="29105-275">파생된 클래스에서 구현 된 경우이 메서드는 호출 응용 프로그램 코드 또는 내부 프로세스 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="29105-275">When implemented in a derived class, this method is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-276">이벤트의 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-276">Arguments of the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-277">처리되지 않은 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 라우트된 이벤트가 해당 경로에서 이 클래스에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-277">Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span>
          </span>
          <span data-ttu-id="29105-278">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-278">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-279">이 메서드는 기본 구현이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-279">This method has no default implementation.</span></span> <span data-ttu-id="29105-280">상속의 중간 클래스가이 메서드를 구현 하는 경우에 기본 구현을 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-280">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="29105-281">이 메서드는 다소 비슷합니다 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 이벤트 패턴에서 \* 방법: 인스턴스 처리기 대신 클래스 처리기를 사용 하 여 파생된 클래스에서 일치 하는 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-281">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="29105-282">이 경우 일치 하는 이벤트 라우트된 이벤트가입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-282">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="29105-283">On \* 메서드의 구현 패턴 차이가 있는 라우트된 이벤트의 처리기를 호출 하는 요소가 아닌 자식 요소에 의해 발생 했을 수 있으므로 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-283">The implementation pattern of the On\* methods is different for routed events because the routed event might have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="29105-284">따라서 구현 이벤트 인수의 원본 속성을 고려 하는 데 필요한 (및 다시 대부분의 경우에서 이벤트를 발생 시키면 안).</span><span class="sxs-lookup"><span data-stu-id="29105-284">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="29105-285">서브 클래스 <xref:System.Windows.Controls.Primitives.TextBoxBase> 경로 따라 이벤트를 받으면 전용 클래스 처리기 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-285">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="29105-286">한 시나리오는 이벤트의 인수를 사용 하 고 신중 하 게 처리 된 것으로 이벤트를 표시 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-286">One scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-287">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-287">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-288">처리되지 않은 연결된 <see cref="E:System.Windows.DragDrop.DragEnter" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-288">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-289">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-289">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-290">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-290">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-291">처리되지 않은 연결된 <see cref="E:System.Windows.DragDrop.DragLeave" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-291">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-292">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-292">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-293">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-293">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-294">처리되지 않은 연결된 <see cref="E:System.Windows.DragDrop.DragOver" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-294">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-295">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-295">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-296">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-296">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-297">처리되지 않은 연결된 <see cref="E:System.Windows.DragDrop.DragEnter" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-297">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-298">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-298">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-299">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-299">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-300">처리되지 않은 연결된 <see cref="E:System.Windows.DragDrop.GiveFeedback" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-300">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-301">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-301">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-302">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-302">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-303">처리되지 않은 연결된 <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-303">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-304">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-304">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-305">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-305">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-306">처리되지 않은 연결된 <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-306">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-307">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-307">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-308">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-308">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-309">처리되지 않은 연결된 <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-309">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-310">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-310">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-311">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-311">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-312">제공된 인수를 사용하여 <see cref="E:System.Windows.UIElement.LostFocus" /> 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-312">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-313">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-313">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-314">처리되지 않은 연결된 <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-314">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-315">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-315">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-316">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-316">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-317">처리되지 않은 연결된 <see cref="E:System.Windows.Input.Mouse.MouseDown" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-317">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-318">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-318">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-319">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-319">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-320">처리되지 않은 연결된 <see cref="E:System.Windows.Input.Mouse.MouseMove" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-320">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-321">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-321">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-322">이벤트의 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-322">Arguments of the event.</span>
          </span>
          <span data-ttu-id="29105-323">이러한 인수에는 놓은 마우스 단추 및 처리 상태에 대한 세부 내용이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-323">These arguments will include details about which mouse button was depressed, and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-324">처리되지 않은 <see cref="E:System.Windows.Input.Mouse.MouseUp" /> 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-324">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-325">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-325">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-326">이 이벤트에 연결된 마우스 휠 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-326">The mouse wheel arguments that are associated with this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-327">
            <see cref="E:System.Windows.UIElement.MouseWheel" /> 이벤트가 이 클래스 또는 이 클래스에서 상속되는 클래스로 라우트될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-327">Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-328"><xref:System.Windows.UIElement.MouseWheel> 이벤트 마우스 휠을 돌릴 때 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-328">The <xref:System.Windows.UIElement.MouseWheel> event occurs when the mouse wheel is rolled.</span></span>  
  
 <span data-ttu-id="29105-329"><xref:System.Windows.UIElement.OnMouseWheel%2A>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-329">Overrides <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-330">이벤트 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-330">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-331">
            <see cref="E:System.Windows.UIElement.KeyDown" />이 발생할 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-331">Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-332">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-332">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-333">처리되지 않은 연결된 <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-333">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-334">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-334">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-335">이 메서드는 기본 구현이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-335">This method has no default implementation.</span></span> <span data-ttu-id="29105-336">Base () 구현에서 호출 하는 것이 좋습니다 상속의 중간 클래스가이 메서드를 구현 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="29105-336">Calling base() in your implementation is still recommended, in case an intermediate class in the inheritance implemented this method.</span></span> <span data-ttu-id="29105-337">요구 사항에 따라 앞 이나 뒤를 별도로 처리 base ()를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-337">You may call base() either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="29105-338">이 메서드는 다소 비슷합니다 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 이벤트 패턴에서 \* 방법: 인스턴스 처리기 대신 클래스 처리기를 사용 하 여 파생된 클래스에서 일치 하는 이벤트를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-338">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="29105-339">이 경우 일치 하는 이벤트 라우트된 이벤트가입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-339">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="29105-340">On \* 메서드의 구현 패턴 차이가 있는 라우트된 이벤트의 처리기를 호출 하는 요소가 아닌 자식 요소에 의해 발생 했을 수 있으므로 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-340">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="29105-341">따라서 구현 이벤트 인수의 원본 속성을 고려 하는 데 필요한 (및 다시 대부분의 경우에서 이벤트를 발생 시키면 안).</span><span class="sxs-lookup"><span data-stu-id="29105-341">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="29105-342">서브 클래스 <xref:System.Windows.Controls.Primitives.TextBoxBase> 경로 따라 이벤트를 받으면 전용 클래스 처리기 메서드를 호출 하도록 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-342">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="29105-343">한 시나리오는 이벤트의 인수를 사용 하 고 처리 된 것으로 이벤트를 표시 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-343">One scenario is to take the arguments of the event and mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-344">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-344">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-345">처리되지 않은 연결된 <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-345">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-346">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-346">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-347">
            <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> 이벤트에 연결된 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-347">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-348">캐럿 또는 현재 선택 영역의 위치가 변경될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-348">Is called when the caret or current selection changes position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-349">이 메서드는 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-349">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">
          <span data-ttu-id="29105-350">현재 활성화된 컨트롤 템플릿을 지정하는 <see cref="T:System.Windows.Controls.ControlTemplate" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</span>
          </span>
        </param>
        <param name="newTemplate">
          <span data-ttu-id="29105-351">사용할 새 컨트롤 템플릿을 지정하는 <see cref="T:System.Windows.Controls.ControlTemplate" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-351">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-352">컨트롤 템플릿이 변경될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-352">Is called when the control template changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-353"><xref:System.Windows.Controls.Control.OnTemplateChanged%2A>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-353">Overrides <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (System.Windows.Controls.TextChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.Windows.Controls.TextChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As TextChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(System::Windows::Controls::TextChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.TextChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-354">
            <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 이벤트에 연결된 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-354">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-355">이 편집 컨트롤의 내용이 변경될 때 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-355">Is called when content in this editing control changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-356">이 메서드는 <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-356">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="29105-357">이벤트에 대한 데이터를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-357">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-358">처리되지 않은 연결된 <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> 라우트된 이벤트가 해당 경로에서 이 클래스에서 파생된 요소에 도달할 때마다 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-358">Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route.</span>
          </span>
          <span data-ttu-id="29105-359">이 이벤트에 대한 클래스 처리를 추가하려면 이 메서드를 구현합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-359">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageDown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-360">컨트롤 내용을 한 페이지 아래로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-360">Scrolls the contents of the control down by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-361">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-361">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase17)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageLeft();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-362">컨트롤 내용을 한 페이지 왼쪽으로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-362">Scrolls the contents of the control to the left by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-363">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-363">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase18)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageRight();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-364">컨트롤 내용을 한 페이지 오른쪽으로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-364">Scrolls the contents of the control to the right by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-365">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-365">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase19)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageUp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-366">컨트롤 내용을 한 페이지 위로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-366">Scrolls the contents of the control up by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-367">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-367">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase20)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-368">클립보드의 내용을 텍스트 편집 컨트롤의 현재 선택 영역에 붙여 넣어 덮어씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-368">Pastes the contents of the Clipboard over the current selection in the text editing control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-369">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> 으로 선택한 콘텐츠를 붙여넣을 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-369">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> method to paste selected content into a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase6)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-370">가장 최근의 실행 취소 명령을 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-370">Undoes the most recent undo command.</span>
          </span>
          <span data-ttu-id="29105-371">즉, 실행 취소 스택에서 가장 최근의 실행 취소 단위를 다시 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-371">In other words, redoes the most recent undo unit on the undo stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29105-372">다시 실행 작업에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-372">
              <see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-373">실행 취소 스택이 비어 있어 사용 가능한 실행 취소 명령이 없으면 이 메서드에서 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-373">This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-374">다음 예제에서는 <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="29105-374">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToEnd">
      <MemberSignature Language="C#" Value="public void ScrollToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-375">편집 컨트롤의 뷰를 내용 끝으로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-375">Scrolls the view of the editing control to the end of the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-376">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-376">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase22)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHome">
      <MemberSignature Language="C#" Value="public void ScrollToHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHome();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-377">편집 컨트롤의 뷰를 뷰포트 시작 부분으로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-377">Scrolls the view of the editing control to the beginning of the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-378">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> 의 내용을 스크롤할 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-378">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase21)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="29105-379">스크롤할 가로 오프셋을 지정하는 double 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-379">A double value that specifies the horizontal offset to scroll to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-380">편집 컨트롤의 내용을 지정된 가로 오프셋으로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-380">Scrolls the contents of the editing control to the specified horizontal offset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="29105-381">스크롤할 세로 오프셋을 지정하는 double 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-381">A double value that specifies the vertical offset to scroll to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29105-382">편집 컨트롤의 콘텐츠를 지정된 세로 오프셋으로 스크롤합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-382">Scrolls the contents of the editing control to the specified vertical offset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-383">텍스트 편집 컨트롤의 모든 내용을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-383">Selects all the contents of the text editing control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-384">다음 예제에서는 사용 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> 의 모든 내용을 선택 하는 메서드는 <xref:System.Windows.Controls.TextBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-384">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> method to select all the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase7)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-385">선택된 텍스트를 강조 표시하는 브러시를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-385">Gets or sets the brush that highlights selected text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-386">선택된 텍스트를 강조 표시하는 브러시입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-386">The brush that highlights selected text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-387">설정 하 여 선택한 텍스트를 강조 표시 하는 브러시를 지정할 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> 및 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-387">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> properties.</span></span> <span data-ttu-id="29105-388"><xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> 의 불투명도 지정 하는 속성은 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-388">The <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property specifies the opacity of the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-389">다음 예제에서는 한 <xref:System.Windows.Controls.TextBox> "This is 일부 text." 라는 텍스트를 추가 하 고</span><span class="sxs-lookup"><span data-stu-id="29105-389">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="29105-390">예제에서는 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> 을 빨간색 속성 및 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> 속성을 선택한 텍스트의 모양을 사용자 지정 하는 0.5입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-390">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="29105-391">다음 그림에서는 <xref:System.Windows.Controls.TextBox> 선택한 해당 텍스트와 앞의 예제에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-391">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="29105-392">![빨간색 SelectionBrush 있는 TextBox](~/add/media/textboxselectionbrush.png "빨간색 SelectionBrush 있는 TextBox")</span><span class="sxs-lookup"><span data-stu-id="29105-392">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="29105-393">선택한 텍스트 SelectionBrush 있는 TextBox에 빨간색으로 설정</span><span class="sxs-lookup"><span data-stu-id="29105-393">Selected text in a TextBox with SelectionBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-394">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-394">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-395">텍스트 선택 내용이 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-395">Occurs when the text selection has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectionChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="29105-396">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="29105-396">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-397">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-397">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent>|  
|<span data-ttu-id="29105-398">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="29105-398">Routing strategy</span></span>|<span data-ttu-id="29105-399">버블링</span><span class="sxs-lookup"><span data-stu-id="29105-399">Bubbling</span></span>|  
|<span data-ttu-id="29105-400">대리자</span><span class="sxs-lookup"><span data-stu-id="29105-400">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="29105-401">다음 예제에서는 처리 하는 방법을 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> 코드를 사용 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-401">The following example demonstrates how to handle the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event by using code.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase10)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectionChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectionChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectionChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-402">
            <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> 라우트된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-402">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-403">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />의 불투명도를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-403">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-404">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />의 불투명도입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-404">The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span>
          </span>
          <span data-ttu-id="29105-405">기본값은 0.4입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-405">The default is 0.4.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-406">경우 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> 0으로 설정 된 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> 투명 하 고 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-406">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 0, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="29105-407">경우 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> 1.0 이상 설정 된, <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> 불투명 하 게 선택 하 고는 텍스트를 볼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-407">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 1.0 or greater, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-408">다음 예제에서는 한 <xref:System.Windows.Controls.TextBox> "This is 일부 text." 라는 텍스트를 추가 하 고</span><span class="sxs-lookup"><span data-stu-id="29105-408">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="29105-409">예제에서는 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> 을 빨간색 속성 및 <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> 속성을 선택한 텍스트의 모양을 사용자 지정 하는 0.5입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-409">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="29105-410">다음 그림에서는 <xref:System.Windows.Controls.TextBox> 선택한 해당 텍스트와 앞의 예제에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-410">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="29105-411">![빨간색 SelectionBrush 있는 TextBox](~/add/media/textboxselectionbrush.png "빨간색 SelectionBrush 있는 TextBox")</span><span class="sxs-lookup"><span data-stu-id="29105-411">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="29105-412">선택한 텍스트에 SelectionOpacity 0.5로 설정 된 TextBox</span><span class="sxs-lookup"><span data-stu-id="29105-412">Selected text in a TextBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-413">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-413">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheck">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellCheck SpellCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SpellCheck SpellCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellCheck As SpellCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellCheck ^ SpellCheck { System::Windows::Controls::SpellCheck ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-414">
            <see cref="T:System.Windows.Controls.SpellCheck" /> 또는 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" />의 텍스트 내용에 있는 맞춤법 오류에 대한 액세스를 제공하는 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-414">Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-415">
            <see cref="T:System.Windows.Controls.SpellCheck" /> 또는 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" />의 텍스트 내용에 있는 맞춤법 오류에 대한 액세스를 제공하는 <see cref="T:System.Windows.Controls.RichTextBox" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-415">A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span>
          </span>
          <span data-ttu-id="29105-416">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-416">This property has no default value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.SpellingError" />
        <altmember cref="T:System.Windows.Controls.SpellingReform" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.TextChangedEventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.TextChangedEventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As TextChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::TextChangedEventHandler ^ TextChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.TextChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-417">텍스트 요소의 콘텐츠가 변경되면 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-417">Occurs when content changes in the text element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-418">에 대 한는 <xref:System.Windows.Controls.TextBox>, 텍스트 변경; 될 때이 이벤트 발생에 대 한는 <xref:System.Windows.Controls.RichTextBox>, 될 때이 이벤트가 발생 콘텐츠 또는 서식을 변경할 (예: 이미지, 테이블 또는 명령 프롬프트 창의 배경색).</span><span class="sxs-lookup"><span data-stu-id="29105-418">For a <xref:System.Windows.Controls.TextBox>, this event occurs when its text changes; for a <xref:System.Windows.Controls.RichTextBox>, this event occurs when any content or formatting changes (for example, images, table, or background color).</span></span>  
  
<a name="routedEventInfo_TextChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="29105-419">라우팅 이벤트 정보</span><span class="sxs-lookup"><span data-stu-id="29105-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-420">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-420">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent>|  
|<span data-ttu-id="29105-421">라우팅 전략</span><span class="sxs-lookup"><span data-stu-id="29105-421">Routing strategy</span></span>|<span data-ttu-id="29105-422">버블링</span><span class="sxs-lookup"><span data-stu-id="29105-422">Bubbling</span></span>|  
|<span data-ttu-id="29105-423">대리자</span><span class="sxs-lookup"><span data-stu-id="29105-423">Delegate</span></span>|<xref:System.Windows.Controls.TextChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.TextChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TextChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-424">
            <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> 라우트된 이벤트를 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-424">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29105-425">가장 최근의 실행 취소 명령을 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-425">Undoes the most recent undo command.</span>
          </span>
          <span data-ttu-id="29105-426">즉, 실행 취소 스택에서 가장 최근의 실행 취소 단위를 취소합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-426">In other words, undoes the most recent undo unit on the undo stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29105-427">실행 취소 작업에 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-427">
              <see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29105-428">실행 취소 스택이 비어 있으면 이 메서드에서 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-428">This method returns <see langword="false" /> if the undo stack is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-429">다음 예제에서는 <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="29105-429">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="UndoLimit">
      <MemberSignature Language="C#" Value="public int UndoLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UndoLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property UndoLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UndoLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-430">실행 취소 대기열에 저장되는 작업의 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-430">Gets or sets the number of actions stored in the undo queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-431">실행 취소 대기열에 저장되는 작업의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-431">The number of actions stored in the undo queue.</span>
          </span>
          <span data-ttu-id="29105-432">기본값은 실행 취소 대기열이 사용 가능한 메모리로 제한됨을 나타내는 –1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-432">The default is –1, which means the undo queue is limited to the memory that is available.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-433">설정 <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> 실행 취소 큐를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="29105-433">Setting <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> clears the undo queue.</span></span> <span data-ttu-id="29105-434">때 <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> 설정 된 실행 취소 큐-1로 사용할 수 있는 메모리에 의해서만 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29105-434">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to –1, the undo queue is limited only by the memory that is available.</span></span> <span data-ttu-id="29105-435">때 <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> 설정 된 0으로 실행 취소에서 사용할 수 없습니다는 <xref:System.Windows.Controls.Primitives.TextBoxBase>합니다.</span><span class="sxs-lookup"><span data-stu-id="29105-435">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to 0, undo is disabled on the <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span></span>  
  
 <span data-ttu-id="29105-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-436"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="29105-437">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="29105-437">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="29105-438">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />은 <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />를 호출한 후 <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />를 호출하기 전에 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-438">
              <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UndoLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UndoLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UndoLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UndoLimitProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-439">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-439">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="29105-440"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> is introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="29105-441">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="29105-441">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-442">세로 스크롤 위치를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-442">Gets or sets the vertical scroll position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-443">세로 스크롤 위치를 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 단위로 지정하는 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-443">A floating-point value that specifies the vertical scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="29105-444">이 속성을 설정하면 텍스트 편집 컨트롤이 지정된 세로 오프셋으로 스크롤됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-444">Setting this property causes the text editing control to scroll to the specified vertical offset.</span>
          </span>
          <span data-ttu-id="29105-445">이 속성을 읽으면 현재 세로 오프셋이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-445">Reading this property returns the current vertical offset.</span>
          </span>
          <span data-ttu-id="29105-446">텍스트 편집 컨트롤이 스크롤을 지원하도록 구성되지 않은 경우 이 속성의 값은 0.0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-446">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="29105-447">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-447">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29105-448">세로 오프셋 표시 되는 텍스트 영역의 위쪽에서 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="29105-448">The vertical offset is measured from the top of the visible text area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29105-449">다음 예제에서는의 값을 읽을 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-449">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29105-450">이 속성을 음수 값으로 설정하려고 시도한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-450">An attempt is made to set this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-451">세로 스크롤 막대가 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-451">Gets or sets a value that indicates whether a vertical scroll bar is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-452">
            <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> 열거형으로 정의되는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-452">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span>
          </span>
          <span data-ttu-id="29105-453">기본값은 <see cref="F:System.Windows.Visibility.Hidden" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-453">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_VerticalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="29105-454">종속성 속성 정보</span><span class="sxs-lookup"><span data-stu-id="29105-454">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="29105-455">식별자 필드</span><span class="sxs-lookup"><span data-stu-id="29105-455">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty>|  
|<span data-ttu-id="29105-456">로 메타 데이터 속성 설정 `true`</span><span class="sxs-lookup"><span data-stu-id="29105-456">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="T:System.Windows.Controls.ScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-457">
            <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> 종속성 속성을 식별합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-457">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-458">스크롤 가능한 콘텐츠 영역의 세로 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-458">Gets the vertical size of the scrollable content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-459">스크롤할 수 있는 콘텐츠 영역의 세로 크기를 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 단위로 지정하는 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-459">A floating-point value that specifies the vertical size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="29105-460">텍스트 편집 컨트롤이 스크롤을 지원하도록 구성되지 않은 경우 이 속성의 값은 0.0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-460">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="29105-461">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-461">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-462">다음 예제에서는의 값을 읽을 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-462">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29105-463">스크롤 가능한 콘텐츠 영역의 가로 크기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-463">Gets the horizontal size of the scrollable content area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29105-464">스크롤할 수 있는 콘텐츠 영역의 가로 크기를 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 단위로 지정하는 부동 소수점 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-464">A floating-point value that specifies the horizontal size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="29105-465">텍스트 편집 컨트롤이 스크롤을 지원하도록 구성되지 않은 경우 이 속성의 값은 0.0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-465">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span>
          </span>
          <span data-ttu-id="29105-466">이 속성에는 기본값이 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29105-466">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="29105-467">다음 예제에서는의 값을 읽을 수는 <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="29105-467">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
  </Members>
</Type>