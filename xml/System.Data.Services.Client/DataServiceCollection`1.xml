<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataServiceCollection`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57f7b278d015e6d86633b4ded520037c7d887e501.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f7b278d015e6d86633b4ded520037c7d887e501</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>An entity type.</source>
          <target state="translated">엔터티 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>Represents a dynamic entity collection that provides notifications when items get added, removed, or when the list is refreshed.</source>
          <target state="translated">항목이 추가되거나 제거된 경우 또는 목록이 새로 고쳐진 경우 알림을 제공하는 동적 엔터티 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source><ph id="ph1">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> provides the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> class to support binding data to controls in client applications.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> 제공 된 <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> 클라이언트 응용 프로그램에서 데이터를 컨트롤에 바인딩 지원 하기 위해 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>This class inherits from the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> class, which implements the <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface and is the primary data binding mechanism for Windows Presentation Foundation (WPF) and Silverlight-based applications.</source>
          <target state="translated">이 클래스에서 상속 된 <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 클래스를 구현 하는 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> 인터페이스 및 Windows Presentation Foundation (WPF) 및 Silverlight 기반 응용 프로그램에 대 한 기본 데이터 바인딩 메커니즘인 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>You can load an <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> binding collection by using any collection that implements the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ObjectModel.ObservableCollection%601&gt;</ph> 인터페이스를 구현하는 모든 컬렉션을 사용하여 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 바인딩 컬렉션을 로드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>Items loaded into the binding collection must implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface.</source>
          <target state="translated">바인딩 컬렉션에 로드된 항목은 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 인터페이스를 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Data to Controls<ept id="p1">](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>컨트롤에 데이터 바인딩<ept id="p1">](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>The following example is from the code-behind page for an Extensible Application Markup Language (XAML) page that defines the <ph id="ph1">`SalesOrders`</ph> window in WPF.</source>
          <target state="translated">다음 예제는 WPF에서 <ph id="ph1">`SalesOrders`</ph> 창을 정의하는 XAML(Extensible Application Markup Language) 페이지에 대한 코드 숨김 페이지에서 가져온 것입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>When the window is loaded, an <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> is created based on the result of a query that returns customers with related objects, filtered by country.</source>
          <target state="translated">창을 로드하면 관련 개체와 함께 고객을 국가별로 필터링하여 반환하는 쿼리 결과를 기준으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>This result is bound to the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> that is the root layout control for the WPF window.</source>
          <target state="translated">이 결과는 WPF 창의 루트 레이아웃 컨트롤인 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 속성에 바인딩됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>The following is the XAML that defines the <ph id="ph1">`SalesOrders`</ph> window in WPF for the previous example.</source>
          <target state="translated">다음은 위 예제의 <ph id="ph1">`SalesOrders`</ph> 창을 WPF에서 정의하는 XAML입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor">
          <source>By default, automatic change tracking is enabled for a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 자동 변경 내용 추적을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor">
          <source>You can create an instance of <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> that uses manual change tracking when you create an instance using a constructor that enables you to supply a value of <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> for <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 대한 <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> 값을 제공할 수 있는 생성자를 사용하여 인스턴스를 만들면 수동 변경 내용 추적을 사용하는 <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph> 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor">
          <source>When you use manual tracking, you must implement <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> and handle the raise events to manually report changes to the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
          <target state="translated">수동 추적을 사용할 경우 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>를 구현하고 발생 이벤트를 처리하여 변경 내용을 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>에 수동으로 보고해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor">
          <source>Automatic change tracking begins after items are loaded into the collection.</source>
          <target state="translated">자동 변경 내용 추적은 항목이 컬렉션에 로드된 후에 시작됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQuery`1" /&gt;</ph> or LINQ query that  returns an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection of objects that are used to initialize the collection.</source>
          <target state="translated">컬렉션을 초기화하는 데 사용되는 개체의 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQuery`1" /&gt;</ph> 컬렉션을 반환하는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 또는 LINQ 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> class based on query execution.</source>
          <target state="translated">쿼리 실행을 기반으로 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection of objects supplied for <ph id="ph2">`items`</ph> is usually a query that returns the items in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>에 대해 제공되는 개체의 <ph id="ph2">`items`</ph> 컬렉션은 일반적으로 컬렉션의 항목을 반환하는 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>However, any <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection of the correct type can be supplied.</source>
          <target state="translated">그러나 올바른 형식의 모든 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 컬렉션을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>By default, automatic change tracking is enabled for a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 자동 변경 내용 추적을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>You can create an instance of <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> that uses manual change tracking when you create an instance using a constructor that enables you to supply a value of <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> for <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 대한 <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> 값을 제공할 수 있는 생성자를 사용하여 인스턴스를 만들면 수동 변경 내용 추적을 사용하는 <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph> 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>When you use manual tracking, you must implement <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> and handle the raise events to manually report changes to the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
          <target state="translated">수동 추적을 사용할 경우 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>를 구현하고 발생 이벤트를 처리하여 변경 내용을 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>에 수동으로 보고해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph> used to track changes to objects in the collection.</source>
          <target state="translated">컬렉션에서 항목의 변경 내용을 추적하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> class that uses the specified <ph id="ph2">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph>를 사용하는 <ph id="ph2">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)">
          <source>Use this constructor to create an empty <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> to which entity objects can be added without executing a query against the service or when an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> is not available.</source>
          <target state="translated">이 생성자를 사용하여 서비스에 대해 쿼리를 실행하지 않고도 엔터티 개체를 추가하거나 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>을 사용할 수 없는 경우 엔터티 개체를 추가할 수 있는 빈 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)">
          <source>By default, automatic change tracking is enabled for a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 자동 변경 내용 추적을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)">
          <source>You can create an instance of <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> that uses manual change tracking when you create an instance using a constructor that enables you to supply a value of <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> for <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 대한 <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> 값을 제공할 수 있는 생성자를 사용하여 인스턴스를 만들면 수동 변경 내용 추적을 사용하는 <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph> 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)">
          <source>When you use manual tracking, you must implement <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> and handle the raise events to manually report changes to the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
          <target state="translated">수동 추적을 사용할 경우 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>를 구현하고 발생 이벤트를 처리하여 변경 내용을 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>에 수동으로 보고해야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQuery`1" /&gt;</ph> or LINQ query that returns an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection of objects that are used to initialize the collection.</source>
          <target state="translated">컬렉션을 초기화하는 데 사용되는 개체의 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQuery`1" /&gt;</ph> 컬렉션을 반환하는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 또는 LINQ 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.TrackingMode" /&gt;</ph> value that indicated whether or not changes made to items in the collection are automatically tracked.</source>
          <target state="translated">컬렉션의 항목에 적용된 변경 내용을 자동으로 추적할지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.TrackingMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> class based on query execution and with the specified tracking mode.</source>
          <target state="translated">지정된 추적 모드를 사용하여 쿼리 실행을 기반으로 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
          <source>By default, automatic change tracking is enabled for a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 자동 변경 내용 추적을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
          <source>Use this class constructor and supply a value of <ph id="ph1">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> for <ph id="ph2">`trackingMode`</ph> to create an instance of <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> that uses manual change tracking.</source>
          <target state="translated">이 클래스 생성자를 사용하고 <ph id="ph1">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph>에 대한 <ph id="ph2">`trackingMode`</ph> 값을 제공하여 수동 변경 내용 추적을 사용하는 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
          <source>When you use manual tracking, you must implement <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> and handle the raise events to manually report changes to the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
          <target state="translated">수동 추적을 사용할 경우 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>를 구현하고 발생 이벤트를 처리하여 변경 내용을 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>에 수동으로 보고해야 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection of objects supplied for <ph id="ph2">`items`</ph> is usually a query that returns the items in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>에 대해 제공되는 개체의 <ph id="ph2">`items`</ph> 컬렉션은 일반적으로 컬렉션의 항목을 반환하는 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
          <source>However, any <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection of the correct type can be supplied.</source>
          <target state="translated">그러나 올바른 형식의 모든 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 컬렉션을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph> used to track items in the collection.</source>
          <target state="translated">컬렉션의 항목을 추적하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The entity set of the objects in the collection.</source>
          <target state="translated">컬렉션에 있는 개체의 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A delegate that encapsulates a method that is called when an entity changes.</source>
          <target state="translated">엔터티가 변경될 때 호출되는 메서드를 캡슐화하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A delegate that encapsulates a method that is called when the collection of entities changes.</source>
          <target state="translated">엔터티 컬렉션이 변경될 때 호출되는 메서드를 캡슐화하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> class with the supplied change method delegates and that uses the specified <ph id="ph2">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>.</source>
          <target state="translated">제공된 변경 메서드 대리자 및 지정된 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph>를 사용하여 쿼리 실행을 기반으로 <ph id="ph2">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>Use this constructor to create an empty <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> to which entity objects can be added without executing a query against the service or when an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> is not available.</source>
          <target state="translated">이 생성자를 사용하여 서비스에 대해 쿼리를 실행하지 않고도 엔터티 개체를 추가하거나 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>을 사용할 수 없는 경우 엔터티 개체를 추가할 수 있는 빈 <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>By default, automatic change tracking is enabled for a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 자동 변경 내용 추적을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>You can create an instance of <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> that uses manual change tracking when you create an instance using a constructor that enables you to supply a value of <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> for <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 대한 <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> 값을 제공할 수 있는 생성자를 사용하여 인스턴스를 만들면 수동 변경 내용 추적을 사용하는 <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph> 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>When you use manual tracking, you must implement <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> and handle the raise events to manually report changes to the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
          <target state="translated">수동 추적을 사용할 경우 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>를 구현하고 발생 이벤트를 처리하여 변경 내용을 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>에 수동으로 보고해야 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQuery`1" /&gt;</ph> or LINQ query that returns an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection of objects that are used to initialize the collection.</source>
          <target state="translated">컬렉션을 초기화하는 데 사용되는 개체의 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQuery`1" /&gt;</ph> 컬렉션을 반환하는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 또는 LINQ 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.TrackingMode" /&gt;</ph> value that indicated whether or not changes made to items in the collection are automatically tracked.</source>
          <target state="translated">컬렉션의 항목에 적용된 변경 내용을 자동으로 추적할지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.TrackingMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The entity set of the objects in the collection.</source>
          <target state="translated">컬렉션에 있는 개체의 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A delegate that encapsulates a method that is called when an entity changes.</source>
          <target state="translated">엔터티가 변경될 때 호출되는 메서드를 캡슐화하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A delegate that encapsulates a method that is called when the collection of entities changes.</source>
          <target state="translated">엔터티 컬렉션이 변경될 때 호출되는 메서드를 캡슐화하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> class a based on query execution and with the supplied change method delegates.</source>
          <target state="translated">제공된 변경 메서드 대리자를 사용하여 쿼리 실행을 기반으로 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The <ph id="ph1">`entityChanged`</ph> and <ph id="ph2">`collectionChanged`</ph> functions are invoked by the <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> events, respectively.</source>
          <target state="translated"><ph id="ph1">`entityChanged`</ph> 및 <ph id="ph2">`collectionChanged`</ph> 함수는 각각 <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> 이벤트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The <ph id="ph1">`entityChanged`</ph> method takes an <ph id="ph2">&lt;xref:System.Data.Services.Client.EntityCollectionChangedParams&gt;</ph> value and the <ph id="ph3">`collectionChanged`</ph> method takes a <ph id="ph4">&lt;xref:System.Data.Services.Client.EntityChangedParams&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">`entityChanged`</ph> 메서드는 <ph id="ph2">&lt;xref:System.Data.Services.Client.EntityCollectionChangedParams&gt;</ph> 값을 사용하고 <ph id="ph3">`collectionChanged`</ph> 메서드는 <ph id="ph4">&lt;xref:System.Data.Services.Client.EntityChangedParams&gt;</ph> 값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>Both methods must return a Boolean value that indicates whether the event was handled by the function.</source>
          <target state="translated">두 메서드 모두 이벤트가 함수에 의해 처리되었는지 여부를 나타내는 부울 값을 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>When the method returns <ph id="ph1">`true`</ph>, the default behavior still occurs.</source>
          <target state="translated">메서드가 반환 될 때 <ph id="ph1">`true`</ph>, 기본 동작이 계속 발생 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>By default, automatic change tracking is enabled for a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 자동 변경 내용 추적을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>You can create an instance of <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> that uses manual change tracking when you create an instance using a constructor that enables you to supply a value of <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> for <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 대한 <ph id="ph2">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> 값을 제공할 수 있는 생성자를 사용하여 인스턴스를 만들면 수동 변경 내용 추적을 사용하는 <ph id="ph3">&lt;xref:System.Data.Services.Client.TrackingMode&gt;</ph> 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>When you use manual tracking, you must implement <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> and handle the raise events to manually report changes to the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
          <target state="translated">수동 추적을 사용할 경우 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>를 구현하고 발생 이벤트를 처리하여 변경 내용을 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>에 수동으로 보고해야 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph> used to track items in the collection.</source>
          <target state="translated">컬렉션의 항목을 추적하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQuery`1" /&gt;</ph> or LINQ query that returns an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection of objects that are used to initialize the collection.</source>
          <target state="translated">컬렉션을 초기화하는 데 사용되는 개체의 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQuery`1" /&gt;</ph> 컬렉션을 반환하는 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 또는 LINQ 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.TrackingMode" /&gt;</ph> value that indicated whether or not changes made to items in the collection are automatically tracked.</source>
          <target state="translated">컬렉션의 항목에 적용된 변경 내용을 자동으로 추적할지 여부를 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.TrackingMode" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The entity set of the objects in the collection.</source>
          <target state="translated">컬렉션에 있는 개체의 엔터티 집합입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A delegate that encapsulates a method that is called when an entity changes.</source>
          <target state="translated">엔터티가 변경될 때 호출되는 메서드를 캡슐화하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>A delegate that encapsulates a method that is called when the collection of entities changes.</source>
          <target state="translated">엔터티 컬렉션이 변경될 때 호출되는 메서드를 캡슐화하는 대리자입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph> class a based on query execution, with the supplied change method delegates, and that uses the supplied <ph id="ph2">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>.</source>
          <target state="translated">제공된 변경 메서드 대리자 및 제공된 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph>를 사용하여 쿼리 실행을 기반으로 <ph id="ph2">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph> 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>By default, automatic change tracking is enabled for a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated">기본적으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 자동 변경 내용 추적을 사용하도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>Use this class constructor to supply a value of <ph id="ph1">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph> for <ph id="ph2">`trackingMode`</ph> to create an instance of <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> that uses manual change tracking.</source>
          <target state="translated">이 클래스 생성자를 사용해 <ph id="ph1">&lt;xref:System.Data.Services.Client.TrackingMode.None&gt;</ph>에 대한 <ph id="ph2">`trackingMode`</ph> 값을 제공하여 수동 변경 내용 추적을 사용하는 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>When you use manual tracking, you must implement <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> and handle the raise events to manually report changes to the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
          <target state="translated">수동 추적을 사용할 경우 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph>를 구현하고 발생 이벤트를 처리하여 변경 내용을 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>에 수동으로 보고해야 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> must be supplied when <ph id="ph2">`items`</ph> is not a <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.Services.Client.QueryOperationResponse%601&gt;</ph> that has a reference to a <ph id="ph5">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>가 <ph id="ph2">`items`</ph> 인스턴스를 참조하는 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Data.Services.Client.QueryOperationResponse%601&gt;</ph>가 아닌 경우 <ph id="ph5">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>를 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The <ph id="ph1">`entityChanged`</ph> and <ph id="ph2">`collectionChanged`</ph> functions are invoked by the <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> and <ph id="ph4">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> events, respectively.</source>
          <target state="translated"><ph id="ph1">`entityChanged`</ph> 및 <ph id="ph2">`collectionChanged`</ph> 함수는 각각 <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> 이벤트에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>The <ph id="ph1">`entityChanged`</ph> method takes an <ph id="ph2">&lt;xref:System.Data.Services.Client.EntityCollectionChangedParams&gt;</ph> value and the <ph id="ph3">`collectionChanged`</ph> method takes a <ph id="ph4">&lt;xref:System.Data.Services.Client.EntityChangedParams&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">`entityChanged`</ph> 메서드는 <ph id="ph2">&lt;xref:System.Data.Services.Client.EntityCollectionChangedParams&gt;</ph> 값을 사용하고 <ph id="ph3">`collectionChanged`</ph> 메서드는 <ph id="ph4">&lt;xref:System.Data.Services.Client.EntityChangedParams&gt;</ph> 값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>Both methods must return a Boolean value that indicates whether the event was handled by the function.</source>
          <target state="translated">두 메서드 모두 이벤트가 함수에 의해 처리되었는지 여부를 나타내는 부울 값을 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
          <source>When the method returns <ph id="ph1">`true`</ph>, the default behavior will still occur.</source>
          <target state="translated">메서드가 반환 될 때 <ph id="ph1">`true`</ph>, 기본 동작이 계속 발생 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)">
          <source>When <ph id="ph1">&lt;see langword="true" /&gt;</ph>, detaches all items from the <ph id="ph2">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>인 경우 <ph id="ph2">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>에서 모든 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)">
          <source>Removes all items from the collection, and optionally detaches all the items from the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>.</source>
          <target state="translated">컬렉션에서 모든 항목을 제거하고 선택적으로 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph>에서 모든 항목을 분리합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)">
          <source>When an item is detached, all related objects in the data graph are also detached from the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>.</source>
          <target state="translated">항목이 분리되면 데이터 그래프의 모든 관련 개체도 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>에서 분리됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>Gets a continuation object that is used to return the next set of paged results.</source>
          <target state="translated">다음 페이징된 결과 집합을 반환하는 데 사용되는 연속 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /&gt;</ph> object that contains the URI to return the next set of paged results.</source>
          <target state="translated">다음 페이징된 결과 집합을 반환할 URI가 포함된 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A&gt;</ph> property returns a link that is used to access the next set of paged results when paging is enabled in the data service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A&gt;</ph> 속성은 데이터 서비스에서 페이징이 사용되는 경우 다음 페이징된 결과 집합에 액세스하는 데 사용되는 링크를 반환합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>For more information, see <bpt id="p1">[</bpt>Configuring the Data Service<ept id="p1">](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 서비스 구성<ept id="p1">](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>When loading a paged result into a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>, you must explicitly load pages by calling the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29&gt;</ph> method on the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> by passing the result of the execution of the URI that was obtained from the <ph id="ph4">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A&gt;</ph> property.</source>
          <target state="translated">페이징된 결과를 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 로드할 경우 <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29&gt;</ph>에서 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> 메서드를 호출하여 <ph id="ph4">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A&gt;</ph> 속성에서 가져온 URI 실행 결과를 전달하는 방식으로 페이지를 명시적으로 로드해야 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>The following example is from the code-behind page for an Extensible Application Markup Language (XAML) page that defines the <ph id="ph1">`SalesOrders`</ph> window in WPF.</source>
          <target state="translated">다음 예제는 WPF에서 <ph id="ph1">`SalesOrders`</ph> 창을 정의하는 XAML(Extensible Application Markup Language) 페이지에 대한 코드 숨김 페이지에서 가져온 것입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>When the window is loaded, a <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> is created based on the result of a query that returns customers, filtered by country.</source>
          <target state="translated">창을 로드하면 고객을 국가별로 필터링하여 반환하는 쿼리 결과를 기준으로 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>All of the pages of this paged result are loaded, along with the related orders, and are bound to the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> that is the root layout control for the WPF window.</source>
          <target state="translated">이 페이징 결과의 모든 페이지가 관련 주문과 함께 로드되고 WPF 창의 루트 레이아웃 컨트롤인 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 속성에 바인딩됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Bind Data to Windows Presentation Foundation Elements<ept id="p1">](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: Windows Presentation Foundation 요소에 데이터 바인딩<ept id="p1">](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.Detach">
          <source>Disables <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph> tracking of all items in the collection.</source>
          <target state="translated">컬렉션의 모든 항목에 대한 <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceContext" /&gt;</ph> 추적을 사용하지 않도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.Detach">
          <source>The <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A&gt;</ph> method can only be called when <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph> is the root collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>이 루트 컬렉션인 경우에만 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.Detach">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A&gt;</ph> method is called on a collection that is a root collection, tracking is also stopped for all related objects in the data graph.</source>
          <target state="translated">루트 컬렉션인 컬렉션에서 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A&gt;</ph> 메서드가 호출되면 데이터 그래프의 모든 관련 개체에 대한 추적이 중지됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)">
          <source>Index at which to add the item.</source>
          <target state="translated">항목을 추가할 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)">
          <source>The item to add.</source>
          <target state="translated">추가할 항목입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)">
          <source>Adds a specified item to the collection at the specified index.</source>
          <target state="translated">컬렉션의 지정한 인덱스에 지정된 항목을 추가합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)">
          <source>When you are manually tracking changes to the collection, you must override the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A&gt;</ph> method to prevent items from being automatically added to the collection.</source>
          <target state="translated">컬렉션의 변경 내용을 수동으로 추적하는 경우 항목이 컬렉션에 자동으로 추가되지 않도록 <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A&gt;</ph> 메서드를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="T:System.Data.Services.Client.DataServiceCollection`1">
          <source>Loads entities into the collection.</source>
          <target state="translated">엔터티를 컬렉션에 로드합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})">
          <source>Collection of entity objects to be added to the <ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Services.Client.DataServiceCollection`1" /&gt;</ph>에 추가할 엔터티 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})">
          <source>Loads a collection of entity objects into the collection.</source>
          <target state="translated">엔터티 개체의 컬렉션을 컬렉션에 로드합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A&gt;</ph> method attaches all objects in the collection, if they are not already attached to the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> that is associated with the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A&gt;</ph> 메서드를 호출하면 컬렉션의 모든 개체가 추가됩니다(<ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>과 연관된 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 이미 연결되어 있지 않은 경우).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})">
          <source>When an object is attached by using the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A&gt;</ph> method, all related objects are also attached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A&gt;</ph>를 통해 개체가 추가되면 관련 개체도 모두 추가됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)">
          <source>Entity object to be added.</source>
          <target state="translated">추가할 엔터티 개체입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)">
          <source>Loads a single entity object into the collection.</source>
          <target state="translated">단일 엔터티 개체를 컬렉션에 로드합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A&gt;</ph> method attaches the object, if it is not already attached to the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> that is associated with the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A&gt;</ph> 메서드를 호출하면 개체가 추가됩니다(<ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph>과 연관된 <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceCollection%601&gt;</ph>에 이미 연결되어 있지 않은 경우).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)">
          <source>When an object is attached by using the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A&gt;</ph> method, all related objects are also attached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A&gt;</ph>를 통해 개체가 추가되면 관련 개체도 모두 추가됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>