<Type Name="WindowsPrincipal" FullName="System.Security.Principal.WindowsPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="557e738279013f54ed693289355a9cba4b121a55" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30501207" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsPrincipal : System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WindowsPrincipal extends System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="DocId" Value="T:System.Security.Principal.WindowsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsPrincipal&#xA;Inherits ClaimsPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsPrincipal : System::Security::Claims::ClaimsPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Principal.Windows</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>코드에서 Windows 사용자의 Windows 그룹 멤버 자격을 확인할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Principal.WindowsPrincipal> 클래스는 Windows 사용자의 역할을 확인 하는 데 주로 사용 됩니다. <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A?displayProperty=nameWithType> 메서드 오버 로드를 통해 다른 역할 컨텍스트를 사용 하 여 사용자 역할을 확인할 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하 여 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 오버 로드 합니다. <xref:System.Security.Principal.WindowsBuiltInRole> 열거형의 Rid (상대 식별자)는 기본 제공 역할을 식별 하는 대 한 원본으로 사용 됩니다. Rid는 현재 사용자의 역할을 확인 하는 데 사용 됩니다.  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsPrincipal (System.Security.Principal.WindowsIdentity ntIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.WindowsIdentity ntIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ntIdentity As WindowsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsPrincipal(System::Security::Principal::WindowsIdentity ^ ntIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ntIdentity" Type="System.Security.Principal.WindowsIdentity" />
      </Parameters>
      <Docs>
        <param name="ntIdentity">
          <see cref="T:System.Security.Principal.WindowsPrincipal" />의 새 인스턴스를 만들 개체입니다.</param>
        <summary>지정된 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체를 사용하여 <see cref="T:System.Security.Principal.WindowsPrincipal" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 새 <xref:System.Security.Principal.WindowsPrincipal> 개체는 현재에서 <xref:System.Security.Principal.WindowsIdentity> 개체입니다.  
  
 [!code-cpp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.WindowsPrincipal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.WindowsPrincipal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ntIdentity" />가 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="DeviceClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; DeviceClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.DeviceClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ DeviceClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_DeviceClaims&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 보안 주체의 모든 Windows 장치 클레임을 가져옵니다.</summary>
        <value>이 보안 주체의 모든 Windows 장치 클레임 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 보안 주체(principal)의 ID를 가져옵니다.</summary>
        <value>현재 보안 주체의 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제를 사용 하 여 사용자의 이름을 검색는 <xref:System.Security.Principal.WindowsPrincipal.Identity%2A> 의 속성은 <xref:System.Security.Principal.WindowsPrincipal> 개체입니다.  
  
 [!code-cpp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/CS/source.cs#1)]
 [!code-vb[Classic WindowsPrincipal.Identity Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic WindowsPrincipal.Identity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 보안 주체가 지정된 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에 대 한 4 개의 오버 로드가 있습니다. 성능상의 이유로 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 오버 로드는 것이 좋습니다.  
  
> [!IMPORTANT]
>  <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드가 Windows 98 또는 Windows Millennium Edition에서 지원 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (int rid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(int32 rid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (rid As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(int rid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rid">보안 주체의 멤버 자격 상태를 확인하는 데 사용되는 Windows 사용자 그룹의 RID입니다.</param>
        <summary>현재 보안 주체가 지정된 RID(상대 식별자)를 갖는 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</summary>
        <returns>
          현재 보안 주체가 지정된 Windows 사용자 그룹의 멤버이면, 즉 특정 역할에 속해 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 사용자 또는 새 그룹을 새로 만든된 역할 정보를 테스트할 때에 로그 아웃 한 도메인 내에서 역할 정보 전파 되도록에 로그인 하는 작업을 해야 합니다. 이렇게 하지 않으면 발생할 수 있습니다는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 반환할 테스트 `false`합니다. Windows 98 또는 Windows Millennium Edition에서 이 메서드가 지원되지 않는 경우  
  
 성능상의 이유로 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 오버 로드는 사용자의 역할을 결정 하기 위한 것이 좋습니다 오버 로드로 것이 좋습니다.  
  
> [!NOTE]
>  Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다. 기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다. 기본적으로 표준 사용자 역할이 지정됩니다. 관리자 권한이 필요한 작업을 수행 하려는 경우에 동의 대화 상자를 사용 하 여 사용자의 역할을 동적으로 높일 수 있습니다. 실행 하는 코드는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 동의 대화 상자를 표시 하지 않습니다. 기본 제공 Administrators 그룹에 있는 경우에 표준 사용자 역할이 있는 경우 false를 반환 하는 코드입니다. 응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭 하 고 관리자 권한으로 실행 되도록 지정 하 여 코드를 실행 하기 전에 귀하의 권한을 높일 수 있습니다.  
  
 Rid (상대 식별자)는 Windows 사용자 그룹의 보안 식별자 (SID)의 구성 요소 및 플랫폼 지역화 문제를 방지 하려면 지원 됩니다. 많은 사용자 계정, 로컬 그룹 및 글로벌 그룹은 모든 버전의 Windows에서 상수 하 기본 RID 값이 있어야 합니다.  
  
 예를 들어, BUILTIN\Administrators 역할에 대 한 RID 0x220입니다. 0x220에 대 한 입력된 매개 변수로 사용 하는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 방법을 사용 `true` 가 현재 사용자가 관리자 인지를 반환 합니다.  
  
 다음 표에서 기본 RID 값을 보여 줍니다.  
  
|기본 제공 사용자|제거|  
|---------------------|---------|  
|DOMAINNAME\Administrator|0x1F4|  
|DOMAINNAME\Guest|0x1F5|  
  
|기본 제공 글로벌 그룹|제거|  
|-----------------------------|---------|  
|DOMAINNAME\Domain 관리자|0x200|  
|DOMAINNAME\Domain 사용자|0x201|  
|DOMAINNAME\Domain 게스트|0x202|  
  
|기본 제공 로컬 그룹|제거|  
|----------------------------|---------|  
|BUILTIN\Administrators|0x220|  
|BUILTIN\Users|0x221|  
|BUILTIN\Guests|0x222|  
|BUILTIN\Account 연산자|0x224|  
|BUILTIN\Server 연산자|0x225|  
|BUILTIN\Print 연산자|0x226|  
|BUILTIN\Backup 연산자|0x227|  
|BUILTIN\Replicator|0x228|  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드. <xref:System.Security.Principal.WindowsBuiltInRole> 열거형 기본 제공 역할을 식별 하는 rid 원본으로 사용 됩니다. Rid는 현재 사용자의 역할을 확인 하는 데 사용 됩니다.  
  
 [!code-cpp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CPP/source.cpp#1)]
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#1)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (sid As SecurityIdentifier) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::SecurityIdentifier ^ sid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid">Windows 사용자 그룹을 고유하게 식별하는 <see cref="T:System.Security.Principal.SecurityIdentifier" />입니다.</param>
        <summary>현재 보안 주체가 지정된 SID(보안 식별자)를 갖는 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</summary>
        <returns>
          현재 보안 주체가 지정된 Windows 사용자 그룹의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Principal.SecurityIdentifier> 사용자 또는 Windows 2000, Windows Server 및 Windows XP는 구현에는 그룹을 고유 하 게 식별 합니다. 새 사용자 또는 새 그룹을 새로 만든된 역할 정보를 테스트할 때에 로그 아웃 한 도메인 내에서 역할 정보 전파 되도록에 로그인 하는 작업을 해야 합니다. 이렇게 하지 않으면 발생할 수 있습니다는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 반환할 테스트 `false`합니다. Windows 98 또는 Windows Millennium Edition에서 이 메서드가 지원되지 않는 경우  
  
> [!NOTE]
>  Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다. 기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다. 기본적으로 표준 사용자 역할이 지정됩니다. 관리자 권한이 필요한 작업을 수행 하려는 경우에 동의 대화 상자를 사용 하 여 사용자의 역할을 동적으로 높일 수 있습니다. 실행 하는 코드는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 동의 대화 상자를 표시 하지 않습니다. 기본 제공 Administrators 그룹에 있는 경우에 표준 사용자 역할이 있는 경우 false를 반환 하는 코드입니다. 응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭 하 고 관리자 권한으로 실행 되도록 지정 하 여 코드를 실행 하기 전에 귀하의 권한을 높일 수 있습니다.  
  
 성능상의 이유로, 사용자의 역할을 확인 하는 것이 좋습니다 오버 로드입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29?displayProperty=nameWithType> 메서드. <xref:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid> 열거형 값 현재 보안 주체가 관리자 인지 확인 하는 데 사용 됩니다. 전체 코드 예제에 대 한 참조는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 메서드.  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#5)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sid" />가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.Security.SecurityException">Windows에서 Win32 오류를 반환한 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (System.Security.Principal.WindowsBuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(valuetype System.Security.Principal.WindowsBuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As WindowsBuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::Security::Principal::WindowsBuiltInRole role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role">
          <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 값 중 하나입니다.</param>
        <summary>현재 보안 주체가 지정된 <see cref="T:System.Security.Principal.WindowsBuiltInRole" />을 갖는 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</summary>
        <returns>
          현재 보안 주체가 지정된 Windows 사용자 그룹의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 사용자 또는 새 그룹을 새로 만든된 역할 정보를 테스트할 때에 로그 아웃 한 도메인 내에서 역할 정보 전파 되도록에 로그인 하는 작업을 해야 합니다. 이렇게 하지 않으면 발생할 수 있습니다는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 반환할 테스트 `false`합니다. Windows 98 또는 Windows Millennium Edition에서 이 메서드가 지원되지 않는 경우  
  
 성능상의 이유로 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 오버 로드는 사용자의 역할을 결정 하기 위한 것이 좋습니다 오버 로드로 것이 좋습니다.  
  
> [!NOTE]
>  Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다. 기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다. 기본적으로 표준 사용자 역할이 지정됩니다. 관리자 권한이 필요한 작업을 수행 하려는 경우에 동의 대화 상자를 사용 하 여 사용자의 역할을 동적으로 높일 수 있습니다. 실행 하는 코드는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 동의 대화 상자를 표시 하지 않습니다. 기본 제공 Administrators 그룹에 있는 경우에 표준 사용자 역할이 있는 경우 false를 반환 하는 코드입니다. 응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭 하 고 관리자 권한으로 실행 되도록 지정 하 여 코드를 실행 하기 전에 귀하의 권한을 높일 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형을 사용 하는 현재 보안 주체 인지 확인 하는 <xref:System.Security.Principal.WindowsBuiltInRole.Administrator>합니다. 전체 코드 예제에 대 한 참조는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 메서드.  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#4)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="role" />은 유효한 <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> 값이 아닙니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Principal.Windows</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">멤버 자격을 확인할 Windows 사용자 그룹의 이름입니다.</param>
        <summary>현재 보안 주체가 지정된 이름을 갖는 Windows 사용자 그룹에 속하는지 여부를 확인합니다.</summary>
        <returns>
          현재 보안 주체가 지정된 Windows 사용자 그룹의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 사용자 또는 새 그룹을 새로 만든된 역할 정보를 테스트할 때에 로그 아웃 한 도메인 내에서 역할 정보 전파 되도록에 로그인 하는 작업을 해야 합니다. 이렇게 하지 않으면 발생할 수 있습니다는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 반환할 테스트 `false`합니다. Windows 98 또는 Windows Millennium Edition에서 이 메서드가 지원되지 않는 경우  
  
 성능상의 이유로 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Security.Principal.SecurityIdentifier%29> 오버 로드는 사용자의 역할을 결정 하기 위한 것이 좋습니다 오버 로드로 것이 좋습니다.  
  
> [!NOTE]
>  Windows Vista에서는 UAC(사용자 계정 컨트롤)가 사용자 권한을 결정합니다. 기본 제공 Administrators 그룹의 멤버인 경우 두 개의 런타임 액세스 토큰(표준 사용자 액세스 토큰 및 관리자 액세스 토큰)이 할당됩니다. 기본적으로 표준 사용자 역할이 지정됩니다. 관리자 권한이 필요한 작업을 수행 하려는 경우에 동의 대화 상자를 사용 하 여 사용자의 역할을 동적으로 높일 수 있습니다. 실행 하는 코드는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 메서드 동의 대화 상자를 표시 하지 않습니다. 기본 제공 Administrators 그룹에 있는 경우에 표준 사용자 역할이 있는 경우 false를 반환 하는 코드입니다. 응용 프로그램 아이콘을 마우스 오른쪽 단추로 클릭 하 고 관리자 권한으로 실행 되도록 지정 하 여 코드를 실행 하기 전에 귀하의 권한을 높일 수 있습니다.  
  
 기본 제공 역할에 대 한는 `role` 문자열 형식에서 이어야 합니다 "BUILTIN\\*RoleNameHere*"입니다. 예를 들어 Windows 관리자 역할의 멤버 자격을 테스트 하려면 역할을 나타내는 문자열 "BUILTIN\Administrators" 이어야 합니다. 백슬래시를 이스케이프 처리 해야 할 수 있는 참고 합니다. 다음 표에서 기본 제공 역할을 나열합니다.  
  
> [!NOTE]
>  사용 되는 맞춤법에서와 다른 문자열 형식에서 기본 제공 역할에 대해 맞춤법은 <xref:System.Security.Principal.WindowsBuiltInRole> 열거형입니다. 예를 들어 열거형에는 관리자에 대 한 철자가 "Administrator", "Administrators" 하지 않습니다. 이 오버 로드를 사용할 경우 철자를 사용 하 여 다음 표에 역할에 대 한.  
  
|기본 제공 로컬 그룹|  
|----------------------------|  
|BUILTIN\Administrators|  
|BUILTIN\Users|  
|BUILTIN\Guests|  
|BUILTIN\Account 연산자|  
|BUILTIN\Server 연산자|  
|BUILTIN\Print 연산자|  
|BUILTIN\Backup 연산자|  
|BUILTIN\Replicator|  
  
 컴퓨터 전용 역할에 대 한는 `role` 문자열 형식에서 이어야 합니다 "MachineName\\*RoleNameHere*"입니다.  
  
 도메인 특정 역할에 대 한는 `role` 문자열 형식에서 이어야 합니다 "DomainName\\*RoleNameHere*" 등의 `"SomeDomain\Domain Users`"입니다.  
  
> [!NOTE]
>  .NET Framework 버전 1.0에서에서는 `role` 매개 변수는 대/소문자 구분 합니다. .NET Framework 1.1 이상 버전에서에서의 `role` 매개 변수는 대/소문자 구분 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> 메서드.  
  
 문자열 `BUILTIN\Administrators` 및 `BUILTIN\Users` 현재 보안 주체 관리자나 사용자 인지 확인 하는 데 사용 됩니다. 전체 코드 예제에 대 한 참조는 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%28System.Int32%29?displayProperty=nameWithType> 메서드.  
  
 [!code-csharp[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/CS/source.cs#3)]
 [!code-vb[System.Security.Principal.WindowsBuiltInRole Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Principal.WindowsBuiltInRole Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">보안 주체 개체를 조작할 수 있습니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
        <altmember cref="T:System.Security.Principal.WindowsBuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="UserClaims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; UserClaims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Principal.WindowsPrincipal.UserClaims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserClaims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ UserClaims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Principal.WindowsPrincipal/&lt;get_UserClaims&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 보안 주체의 모든 Windows 사용자 클레임을 가져옵니다.</summary>
        <value>이 보안 주체의 모든 Windows 사용자 클레임 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>