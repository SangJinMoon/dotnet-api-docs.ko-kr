<Type Name="DefaultHttpHandler" FullName="System.Web.DefaultHttpHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc7d752bf19d6536bba9d1d2c183c129c177b5cb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37586150" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultHttpHandler : System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHttpHandler extends System.Object implements class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.DefaultHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultHttpHandler&#xA;Implements IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultHttpHandler : System::Web::IHttpAsyncHandler" />
  <TypeSignature Language="F#" Value="type DefaultHttpHandler = class&#xA;    interface IHttpAsyncHandler&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bfc39-101">기본 HTTP 처리기의 속성 및 메서드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bfc39-101">Represents the properties and methods of a default HTTP handler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-102"><xref:System.Web.DefaultHttpHandler> 요청 가로채기가 인터넷 정보 서비스 (IIS) 6.0를 통해 구성 및 요청된 된 확장에 명시적 바인딩이 적용 하는 경우 개체는 HTTP 파이프라인에서 들어오는 요청을 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-102">A <xref:System.Web.DefaultHttpHandler> object intercepts incoming requests in the HTTP pipeline when both request interception has been configured through Internet Information Services (IIS) 6.0 and no explicit  bindings apply to the requested extension.</span></span>  
  
 <span data-ttu-id="bfc39-103">IIS 6.0에 도입 된 와일드 카드 응용 프로그램 매핑 기능을 통해 요청 인터 셉 션을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-103">Request interception can be set up through the wildcard application mapping feature introduced in IIS 6.0.</span></span> <span data-ttu-id="bfc39-104">자세한 내용은 합니다 [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) URL을 다시 맵핑 하려면 와일드 카드 응용 프로그램 맵을 사용 하는 방법에 대 한 정보에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-104">For more information, search the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) for information about using wildcard application maps to remap a URL.</span></span>  
  
 <span data-ttu-id="bfc39-105">합니다 <xref:System.Web.DefaultHttpHandler> 구현 클래스는 <xref:System.Web.IHttpAsyncHandler> 비동기 요청 처리를 제공 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-105">The <xref:System.Web.DefaultHttpHandler> class implements the <xref:System.Web.IHttpAsyncHandler> interface to provide asynchronous request processing.</span></span> <span data-ttu-id="bfc39-106">HTTP 처리기에 대 한 일반적인 정보를 참조 하세요 [HTTP 처리기 및 HTTP 모듈 개요](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b)합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-106">For general information about HTTP handlers, see [HTTP Handlers and HTTP Modules Overview](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span></span> <span data-ttu-id="bfc39-107">또한 자세한 내용은 다음을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-107">Additionally, for more information see the following:</span></span>  
  
-   <span data-ttu-id="bfc39-108">비동기 HTTP 처리기를 만드는 방법에 대 한 참조 [연습: 비동기 HTTP 처리기를 만드는](http://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9)합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-108">About creating asynchronous HTTP handlers, see [Walkthrough: Creating an Asynchronous HTTP Handler](http://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9).</span></span>  
  
-   <span data-ttu-id="bfc39-109">HTTP 처리기를 등록 하는 방법에 대 한 참조 [방법: HTTP 처리기 등록](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-109">About registering HTTP handlers, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span></span>  
  
 <span data-ttu-id="bfc39-110">클래스에서 파생할 수는 <xref:System.Web.DefaultHttpHandler> 요청의 사용자 지정된 처리를 제공 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-110">Classes can derive from the <xref:System.Web.DefaultHttpHandler> class to provide customized handling of requests.</span></span> <span data-ttu-id="bfc39-111">파생 되는 비동기 HTTP 처리기를 <xref:System.Web.DefaultHttpHandler> 재정의할 수는 <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> 요청 처리 방법을 변경 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-111">An asynchronous HTTP handler that is derived from the <xref:System.Web.DefaultHttpHandler> could override the <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> method to change how requests are processed.</span></span>  
  
 <span data-ttu-id="bfc39-112"><xref:System.Web.DefaultHttpHandler> ASP.NET 오류를 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-112">A <xref:System.Web.DefaultHttpHandler> does not use ASP.NET errors.</span></span> <span data-ttu-id="bfc39-113">기존 콘텐츠 IIS 오류를 사용 하는 또는 독점 ISAPI 사용자 지정 오류 메커니즘을 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-113">Existing content that uses IIS errors or a propriety ISAPI custom error mechanism would work unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc39-114">다음 코드 예제에서 파생 하 여 사용자 지정된 HTTP 처리기를 구현 하는 방법에 설명 합니다 <xref:System.Web.DefaultHttpHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-114">The following code example demonstrates how to implement a customized HTTP handler by deriving from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 [!code-csharp[System.Web.DefaultHttpHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/CS/source.cs#1)]
 [!code-vb[System.Web.DefaultHttpHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHttpHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultHttpHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfc39-115">
            <see cref="T:System.Web.DefaultHttpHandler" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-115">Initializes a new instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessRequest">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginProcessRequest (context As HttpContext, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="defaultHttpHandler.BeginProcessRequest (context, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bfc39-116">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-116">An object that provides references to intrinsic server objects that are used to service HTTP requests.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="bfc39-117">비동기 메서드 호출이 완료될 때 호출할 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-117">The method to call when the asynchronous method call is complete.</span>
          </span>
          <span data-ttu-id="bfc39-118">
            <c>콜백</c>이 <see langword="null" />이면 대리자가 호출되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-118">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="bfc39-119">요청을 처리하는 데 필요한 상태 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-119">Any state data that is needed to process the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfc39-120">HTTP 처리기에 대한 비동기 호출을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-120">Initiates an asynchronous call to the HTTP handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfc39-121">프로세스 상태에 대한 정보가 들어 있는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-121">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-122">처리기를 사용 하 여 비동기에 대 한 HTTP 처리기를 만드는 경우 비동기 구현 해야 합니다 <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> 및 <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> ASP.NET에서 비동기적으로 호출 되는 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-122">When creating an HTTP handler for asynchronous use, your handler must implement the asynchronous <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> and <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> methods that are called asynchronously by ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="bfc39-123">요청을 처리하는 전제 조건이 실패하고 요청된 파일의 접미사가 .asp이거나 요청을 POST를 통해 보낸 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-123">The preconditions for processing a request fail and either the requested file has the suffix .asp or the request was sent through POST.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.DefaultHttpHandler.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfc39-124">현재 <see cref="T:System.Web.DefaultHttpHandler" /> 개체와 관련된 컨텍스트를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-124">Gets the context that is associated with the current <see cref="T:System.Web.DefaultHttpHandler" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfc39-125">현재 컨텍스트가 들어 있는 <see cref="T:System.Web.HttpContext" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-125">An <see cref="T:System.Web.HttpContext" /> object that contains the current context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-126">합니다 <xref:System.Web.DefaultHttpHandler.Context%2A> 속성은 현재 액세스 제공 <xref:System.Web.HttpContext> 파생된 클래스에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-126">The <xref:System.Web.DefaultHttpHandler.Context%2A> property provides access to the current <xref:System.Web.HttpContext> object for derived classes.</span></span> <span data-ttu-id="bfc39-127"><xref:System.Web.HttpContext> 내장 함수에 대 한 액세스를 제공 하는 개체 <xref:System.Web.HttpApplication.Request%2A>를 <xref:System.Web.HttpApplication.Response%2A>, 및 <xref:System.Web.HttpApplication.Server%2A> 요청에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-127">An <xref:System.Web.HttpContext> object provides access to the intrinsic <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, and <xref:System.Web.HttpApplication.Server%2A> properties for the request.</span></span> <span data-ttu-id="bfc39-128">컨텍스트 정보에 액세스 하는 방법에 대 한 자세한 내용은 참조 하세요. <xref:System.Web.HttpContext>합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-128">For more information about accessing contextual information, see <xref:System.Web.HttpContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="EndProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndProcessRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndProcessRequest : IAsyncResult -&gt; unit&#xA;override this.EndProcessRequest : IAsyncResult -&gt; unit" Usage="defaultHttpHandler.EndProcessRequest result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="bfc39-129">프로세스 상태에 대한 정보가 들어 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-129">An object that contains information about the status of the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfc39-130">비동기 프로세스를 위한 end 메서드를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-130">Provides an end method for an asynchronous process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-131">사용할 수는 <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> 비동기 프로세스 중 발생 하는 모든 예외를 throw 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-131">You can use the <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> method to throw any exceptions that are caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUrlHeaders">
      <MemberSignature Language="C#" Value="protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ExecuteUrlHeaders As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Specialized::NameValueCollection ^ ExecuteUrlHeaders { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteUrlHeaders : System.Collections.Specialized.NameValueCollection" Usage="System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfc39-132">요청과 함께 전송할 요청 헤더와 요청 값의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-132">Gets a collection of request headers and request values to transfer along with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfc39-133">요청 헤더와 값이 들어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-133">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing request headers and values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-134">합니다 <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> 속성에서 파생 된 클래스에서 채워집니다 하지 않는 경우 빈 컬렉션을 반환 합니다 <xref:System.Web.DefaultHttpHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-134">The <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> property returns an empty collection unless it is populated in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span> <span data-ttu-id="bfc39-135">추가 되는 헤더는 요청 다시 인터넷 정보 서비스 (IIS)를 전달 하기 전에 요청에서 헤더의 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-135">The headers that are added are appended to the collection of headers in the request before passing the request back to Internet Information Services (IIS).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.DefaultHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bfc39-136">다른 요청에서 <see cref="T:System.Web.DefaultHttpHandler" /> 클래스의 현재 인스턴스를 사용할 수 있는지 여부를 나타내는 부울 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-136">Gets a Boolean value indicating that another request can use the current instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bfc39-137">
            <see cref="T:System.Web.DefaultHttpHandler" />를 다시 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-137">
              <see langword="true" /> if the <see cref="T:System.Web.DefaultHttpHandler" /> is reusable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-138">명시적으로 설정 합니다 <xref:System.Web.DefaultHttpHandler.IsReusable%2A> 속성을 `true` 또는 `false`, 재정의 <xref:System.Web.DefaultHttpHandler.IsReusable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-138">To explicitly set the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property to `true` or `false`, override the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="OnExecuteUrlPreconditionFailure">
      <MemberSignature Language="C#" Value="public virtual void OnExecuteUrlPreconditionFailure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExecuteUrlPreconditionFailure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExecuteUrlPreconditionFailure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExecuteUrlPreconditionFailure();" />
      <MemberSignature Language="F#" Value="abstract member OnExecuteUrlPreconditionFailure : unit -&gt; unit&#xA;override this.OnExecuteUrlPreconditionFailure : unit -&gt; unit" Usage="defaultHttpHandler.OnExecuteUrlPreconditionFailure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfc39-139">전제 조건에 따라 <see cref="T:System.Web.DefaultHttpHandler" /> 개체에서 요청을 처리하지 못하는 경우 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-139">Called when preconditions prevent the <see cref="T:System.Web.DefaultHttpHandler" /> object from processing a request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-140">사전 조건이 클라이언트 요청 헤더 필드에서 지정 되 고 웹 서버에서 평가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-140">Preconditions are specified by the client in the request-header fields and are evaluated on the Web server.</span></span> <span data-ttu-id="bfc39-141">예를 들어, 전제 조건을 사용 하면 클라이언트 방지할 수 있습니다 (예: GET) 요청 된 메서드가 다른 리소스에 적용 되 고에서.</span><span class="sxs-lookup"><span data-stu-id="bfc39-141">For example, by using preconditions, clients can prevent a requested method (for example, GET) from being applied to a resource other than the one intended.</span></span> <span data-ttu-id="bfc39-142">자세한 내용은 14, "헤더 필드 정의" 섹션을 참조 합니다 [Hypertext Transfer Protocol-HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) World Wide Web Consortium (W3C) 웹 사이트에 대 한 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-142">For more information, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 <span data-ttu-id="bfc39-143"><xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> 메서드는 사전 조건을 방지는 <xref:System.Web.DefaultHttpHandler> 개체에서 요청을 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-143">The <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method is called when preconditions prevent the <xref:System.Web.DefaultHttpHandler> object from processing a request.</span></span> <span data-ttu-id="bfc39-144">파생 클래스에서 재정의 될 수 있습니다는 <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> 사전 조건 실패 하는 경우 예외를 throw 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-144">A deriving class might override the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method to throw an exception when the preconditions fail.</span></span> <span data-ttu-id="bfc39-145">합니다 <xref:System.Web.DefaultHttpHandler> 예외를 throw 하지 않습니다는 <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="bfc39-145">The <xref:System.Web.DefaultHttpHandler> does not throw an exception in the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method.</span></span>  
  
 <span data-ttu-id="bfc39-146">다음 중 하나를 하면 전제 조건이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-146">Any of the following will cause the preconditions to fail:</span></span>  
  
-   <span data-ttu-id="bfc39-147"><xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>를 호출할 경우</span><span class="sxs-lookup"><span data-stu-id="bfc39-147">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="bfc39-148"><xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>를 호출할 경우</span><span class="sxs-lookup"><span data-stu-id="bfc39-148">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="bfc39-149"><xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>를 호출할 경우</span><span class="sxs-lookup"><span data-stu-id="bfc39-149">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="bfc39-150">응답에 대 한 캐시 정책을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-150">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="bfc39-151">추가 된 <xref:System.IO.Stream> 을 필터로 사용 되는 개체는 <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="bfc39-151">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideExecuteUrlPath">
      <MemberSignature Language="C#" Value="public virtual string OverrideExecuteUrlPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OverrideExecuteUrlPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OverrideExecuteUrlPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ OverrideExecuteUrlPath();" />
      <MemberSignature Language="F#" Value="abstract member OverrideExecuteUrlPath : unit -&gt; string&#xA;override this.OverrideExecuteUrlPath : unit -&gt; string" Usage="defaultHttpHandler.OverrideExecuteUrlPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bfc39-152">현재 요청에 대해 대상 URL을 재정의합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-152">Overrides the target URL for the current request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bfc39-153">요청에 사용할 재정의된 URL이거나, 재정의된 URL이 제공되지 않은 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-153">The overridden URL to use in the request; or <see langword="null" /> if an overridden URL is not provided.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-154">합니다 <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> 메서드가 반환 `null` 에서 파생 된 클래스에서 재정의 되지 않으면를 <xref:System.Web.DefaultHttpHandler> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-154">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method returns `null` unless it is overridden in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 <span data-ttu-id="bfc39-155"><xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> 전에 수정 하는 경우 응답 및 IIS 6.0에서 ASP.NET 작업자 프로세스 격리 모드에서 실행 중인 경우에 메서드가 호출 됩니다는 <xref:System.Web.DefaultHttpHandler> 개체 호출 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-155">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method is called only if ASP.NET is running in worker process isolation mode on IIS 6.0, and if the response was not modified before the <xref:System.Web.DefaultHttpHandler> object was called.</span></span> <span data-ttu-id="bfc39-156">응답은 다음 중 하나에서 수정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-156">The response is modified by any of the following:</span></span>  
  
-   <span data-ttu-id="bfc39-157"><xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>를 호출할 경우</span><span class="sxs-lookup"><span data-stu-id="bfc39-157">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="bfc39-158"><xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>를 호출할 경우</span><span class="sxs-lookup"><span data-stu-id="bfc39-158">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="bfc39-159"><xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>를 호출할 경우</span><span class="sxs-lookup"><span data-stu-id="bfc39-159">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="bfc39-160">응답에 대 한 캐시 정책을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-160">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="bfc39-161">추가 된 <xref:System.IO.Stream> 을 필터로 사용 되는 개체는 <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="bfc39-161">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="defaultHttpHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="bfc39-162">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-162">An object that provides references to intrinsic server objects used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bfc39-163">
            <see cref="T:System.Web.DefaultHttpHandler" /> 개체가 HTTP 웹 요청 프로세스를 처리할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-163">Enables a <see cref="T:System.Web.DefaultHttpHandler" /> object to process of HTTP Web requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc39-164"><xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> 메서드가 동기적으로 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-164">The <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> method should not be called synchronously.</span></span> <span data-ttu-id="bfc39-165">파생 된 클래스는 <xref:System.Web.DefaultHttpHandler> 클래스에서 재정의할 수는 <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> 사용자 지정된 요청 처리를 제공 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="bfc39-165">Classes that are derived from the <xref:System.Web.DefaultHttpHandler> class can override the <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> to provide customized request processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bfc39-166">
            <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />가 동기식으로 호출되는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="bfc39-166">The <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> is called synchronously.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
  </Members>
</Type>