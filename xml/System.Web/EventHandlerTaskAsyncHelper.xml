<Type Name="EventHandlerTaskAsyncHelper" FullName="System.Web.EventHandlerTaskAsyncHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38de994921eae4fc9b99c34bc35cb2bf431d1e46" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574753" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerTaskAsyncHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerTaskAsyncHelper sealed" />
  <TypeSignature Language="F#" Value="type EventHandlerTaskAsyncHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b183d-101">작업 반환 비동기 메서드를 이전 버전의 ASP.NET에서 사용되는 비동기 프로그래밍 모델을 사용하고 시작 및 종료 이벤트를 기반으로 하는 메서드로 변환합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b183d-101">Converts task-returning asynchronous methods into methods that use the asynchronous programming model used in previous versions of ASP.NET and that is based on begin and end events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b183d-102">ASP.NET 4.5에 비동기 작업을 처리 하려면 작업을 반환 하는 논리를 구현 하는 <xref:System.Web.TaskEventHandler> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="b183d-102">To handle asynchronous tasks in ASP.NET 4.5, you implement the logic to return a task as a <xref:System.Web.TaskEventHandler> delegate.</span></span> <span data-ttu-id="b183d-103">이 비동기 작업 기반 프로그래밍이 모델에는 이전 버전의 ASP.NET에서 모든 이벤트에 대 한 처리를 시작 및 끝 이벤트는 자료에 사용 된 모델 보다 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="b183d-103">This model of asynchronous task-based programming supersedes the model used in previous versions of ASP.NET, which bases all event handling on begin and end events.</span></span> <span data-ttu-id="b183d-104">구현 되 고 나면는 <xref:System.Web.TaskEventHandler> 대리자에 전달할 수 있습니다 하는 <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> 작업 반환 하는 논리를 래핑하고 처리기를 사용 하 여 시작 및 끝 이벤트 모델로 변환 하는 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="b183d-104">After you implement a <xref:System.Web.TaskEventHandler> delegate, you can then pass it to the <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, which wraps the task-returning logic and converts the handler to the model that uses begin and end events.</span></span> <span data-ttu-id="b183d-105"><xref:System.Web.EventHandlerTaskAsyncHelper> 사용 하도록 설정 하면 <xref:System.Web.TaskEventHandler> 개체 ASP.NET 페이지 프레임 워크와 호환 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="b183d-105">The <xref:System.Web.EventHandlerTaskAsyncHelper> class enables your <xref:System.Web.TaskEventHandler> object to be compatible with the ASP.NET page framework.</span></span> <span data-ttu-id="b183d-106">호출 하는 경우는 <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> 사용할 수 있습니다 프로세스 작업에 비동기 페이지에 대 한 메서드는 <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> 및 <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> 변환 된 시작 이벤트와 이벤트 처리기 메서드에 전달할 속성을 합니다.</span><span class="sxs-lookup"><span data-stu-id="b183d-106">When you call the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to process the task for an asynchronous page, you can use the <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> and <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> properties to pass the converted begin and event handlers to the method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerTaskAsyncHelper (System.Web.TaskEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.TaskEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As TaskEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerTaskAsyncHelper(System::Web::TaskEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.EventHandlerTaskAsyncHelper : System.Web.TaskEventHandler -&gt; System.Web.EventHandlerTaskAsyncHelper" Usage="new System.Web.EventHandlerTaskAsyncHelper handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.TaskEventHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="b183d-107">비동기 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b183d-107">The asynchronous task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b183d-108">
            <see cref="T:System.Web.EventHandlerTaskAsyncHelper" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b183d-108">Initializes a new instance of the <see cref="T:System.Web.EventHandlerTaskAsyncHelper" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginEventHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginEventHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginEventHandler : System.Web.BeginEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b183d-109">비동기 작업에 대한 <see cref="T:System.Web.BeginEventHandler" /> 메서드를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b183d-109">Represents the <see cref="T:System.Web.BeginEventHandler" /> method for an asynchronous task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b183d-110">비동기 작업에 대한 시작 이벤트를 처리하는 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b183d-110">The method that handles the begin event for the asynchronous task.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndEventHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndEventHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndEventHandler : System.Web.EndEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b183d-111">비동기 작업에 대한 <see cref="T:System.Web.EndEventHandler" /> 메서드를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b183d-111">Represents the <see cref="T:System.Web.EndEventHandler" /> method for an asynchronous task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b183d-112">비동기 작업에 대한 끝 이벤트를 처리하는 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b183d-112">The method that handles the end event for the asynchronous task.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>