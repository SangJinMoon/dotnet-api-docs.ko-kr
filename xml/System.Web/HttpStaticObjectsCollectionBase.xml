<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpStaticObjectsCollectionBase.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac522942c712c8c445463de61eb84ac36a37b7ad297.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22942c712c8c445463de61eb84ac36a37b7ad297</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpStaticObjectsCollectionBase">
          <source>Serves as the base class for classes that provide a collection of application-scoped objects for the <ph id="ph1">&lt;see cref="P:System.Web.HttpApplicationState.StaticObjects" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpApplicationState.StaticObjects" /&gt;</ph> 속성에 대한 응용 프로그램 범위 개체의 컬렉션을 제공하는 클래스에 대한 기본 클래스 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpStaticObjectsCollectionBase">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionBase&gt;</ph> class is an abstract class that contains the same members as the <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionBase&gt;</ph> 클래스는 추상 클래스와 동일한 멤버를 포함 하는 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpStaticObjectsCollectionBase">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionBase&gt;</ph> class lets you create derived classes that are like the <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> class, but that you can customize and that work outside the ASP.NET pipeline.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionBase&gt;</ph> 클래스를 사용 하면 파생된는 클래스를 만들는 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> 클래스 같지만 ASP.NET 파이프라인 외부에서 작동 하 고 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpStaticObjectsCollectionBase">
          <source>When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</source>
          <target state="translated">단위 테스트를 수행할 때 일반적으로 파생된 클래스를 사용 하 여 테스트 중인 시나리오를 충족 하는 사용자 지정 된 동작으로 멤버를 구현 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpStaticObjectsCollectionBase">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionWrapper&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollectionBase&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionWrapper&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollectionBase&gt;</ph> 클래스에서 파생됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpStaticObjectsCollectionBase">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionWrapper&gt;</ph> class serves as a wrapper for the <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionWrapper&gt;</ph> 클래스에 대 한 래퍼로 사용은 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpStaticObjectsCollectionBase">
          <source>At run time, you typically use an instance of the <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionWrapper&gt;</ph> class to call members of the <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> object.</source>
          <target state="translated">런타임 시 일반적으로의 인스턴스를 사용는 <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollectionWrapper&gt;</ph> 클래스의 멤버를 호출 하는 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.#ctor">
          <source>Initializes the class for use by an inherited class instance.</source>
          <target state="translated">상속된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.#ctor">
          <source>This constructor can only be called by an inherited class.</source>
          <target state="translated">이 생성자는 상속된 클래스에서만 호출될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements that are copied from the collection.</source>
          <target state="translated">컬렉션에서 복사한 요소의 대상인 1차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which to begin copying.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사가 시작되는 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.CopyTo(System.Array,System.Int32)">
          <source>When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 배열의 지정된 인덱스에서 시작하여 배열에 컬렉션의 요소를 복사합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.CopyTo(System.Array,System.Int32)">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.Count">
          <source>When overridden in a derived class, gets the number of objects in the collection.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 이 컬렉션의 개체 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollectionBase.Count">
          <source>The number of objects in the collection.</source>
          <target state="translated">컬렉션의 개체 수입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.Count">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.GetEnumerator">
          <source>When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 컬렉션을 반복하는 데 사용할 수 있는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.GetEnumerator">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">컬렉션을 반복하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.GetEnumerator">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.GetObject(System.String)">
          <source>The case-insensitive name of the object to return.</source>
          <target state="translated">반환할 개체의 이름으로, 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.GetObject(System.String)">
          <source>When overridden in a derived class, returns the object that has the specified name from the collection.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 컬렉션의 지정된 이름을 가진 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.GetObject(System.String)">
          <source>The object that is specified by <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>이 지정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.GetObject(System.String)">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.IsReadOnly">
          <source>When overridden in a derived class, gets a value that indicates whether the collection is read-only.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollectionBase.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컬렉션이 읽기 전용이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.IsReadOnly">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.IsSynchronized">
          <source>When overridden in a derived class, gets a value that indicates whether the collection is thread-safe.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 컬렉션이 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollectionBase.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is thread-safe; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컬렉션이 스레드로부터 안전하게 보호되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.IsSynchronized">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.Item(System.String)">
          <source>The case-insensitive name of the object to get.</source>
          <target state="translated">가져올 개체의 이름으로, 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.Item(System.String)">
          <source>When overridden in a derived class, gets the object that has the specified name from the collection.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 컬렉션에서 지정된 이름을 가진 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollectionBase.Item(System.String)">
          <source>The object that is specified by <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph>이 지정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.Item(System.String)">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.NeverAccessed">
          <source>When overridden in a derived class, gets a value that indicates whether the collection has been accessed.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 컬렉션에 액세스했는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollectionBase.NeverAccessed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection has never been accessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컬렉션에 액세스한 적이 없으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.NeverAccessed">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.Serialize(System.IO.BinaryWriter)">
          <source>The object to use to write the serialized collection to a stream or encoded string.</source>
          <target state="translated">직렬화된 컬렉션을 스트림 또는 인코드된 문자열에 쓰는 데 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.Serialize(System.IO.BinaryWriter)">
          <source>When overridden in a derived class, writes the contents of the collection to a <ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph> object.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 컬렉션의 내용을 <ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph> 개체에 씁니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollectionBase.Serialize(System.IO.BinaryWriter)">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.SyncRoot">
          <source>When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollectionBase.SyncRoot">
          <source>An object that can be used to synchronize access to the collection.</source>
          <target state="translated">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollectionBase.SyncRoot">
          <source>Always.</source>
          <target state="translated">항상</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>