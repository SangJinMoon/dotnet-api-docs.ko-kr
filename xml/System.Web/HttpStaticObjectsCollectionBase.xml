<Type Name="HttpStaticObjectsCollectionBase" FullName="System.Web.HttpStaticObjectsCollectionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22942c712c8c445463de61eb84ac36a37b7ad297" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608497" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpStaticObjectsCollectionBase : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpStaticObjectsCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpStaticObjectsCollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpStaticObjectsCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpStaticObjectsCollectionBase abstract : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5ef1f-101">
        <see cref="P:System.Web.HttpApplicationState.StaticObjects" /> 속성에 대한 응용 프로그램 범위 개체의 컬렉션을 제공하는 클래스에 대한 기본 클래스 역할을 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ef1f-101">Serves as the base class for classes that provide a collection of application-scoped objects for the <see cref="P:System.Web.HttpApplicationState.StaticObjects" /> property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ef1f-102"><xref:System.Web.HttpStaticObjectsCollectionBase> 클래스는 추상 클래스와 동일한 멤버를 포함 하는 <xref:System.Web.HttpStaticObjectsCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5ef1f-102">The <xref:System.Web.HttpStaticObjectsCollectionBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpStaticObjectsCollection> class.</span></span> <span data-ttu-id="5ef1f-103"><xref:System.Web.HttpStaticObjectsCollectionBase> 클래스를 사용 하면 파생된는 클래스를 만들는 <xref:System.Web.HttpStaticObjectsCollection> 클래스 같지만 ASP.NET 파이프라인 외부에서 작동 하 고 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ef1f-103">The <xref:System.Web.HttpStaticObjectsCollectionBase> class lets you create derived classes that are like the <xref:System.Web.HttpStaticObjectsCollection> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="5ef1f-104">단위 테스트를 수행할 때 일반적으로 파생된 클래스를 사용 하 여 테스트 중인 시나리오를 충족 하는 사용자 지정 된 동작으로 멤버를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ef1f-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="5ef1f-105"><xref:System.Web.HttpStaticObjectsCollectionWrapper> 클래스는 <xref:System.Web.HttpStaticObjectsCollectionBase> 클래스에서 파생됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ef1f-105">The <xref:System.Web.HttpStaticObjectsCollectionWrapper> class derives from the <xref:System.Web.HttpStaticObjectsCollectionBase> class.</span></span> <span data-ttu-id="5ef1f-106"><xref:System.Web.HttpStaticObjectsCollectionWrapper> 클래스에 대 한 래퍼로 사용은 <xref:System.Web.HttpStaticObjectsCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5ef1f-106">The <xref:System.Web.HttpStaticObjectsCollectionWrapper> class serves as a wrapper for the <xref:System.Web.HttpStaticObjectsCollection> class.</span></span> <span data-ttu-id="5ef1f-107">런타임 시 일반적으로의 인스턴스를 사용는 <xref:System.Web.HttpStaticObjectsCollectionWrapper> 클래스의 멤버를 호출 하는 <xref:System.Web.HttpStaticObjectsCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ef1f-107">At run time, you typically use an instance of the <xref:System.Web.HttpStaticObjectsCollectionWrapper> class to call members of the <xref:System.Web.HttpStaticObjectsCollection> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpStaticObjectsCollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpStaticObjectsCollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ef1f-108">상속된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-108">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="5ef1f-109">이 생성자는 상속된 클래스에서만 호출될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-109">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5ef1f-110">컬렉션에서 복사한 요소의 대상인 1차원 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-110">The one-dimensional array that is the destination of the elements that are copied from the collection.</span>
          </span>
          <span data-ttu-id="5ef1f-111">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-111">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5ef1f-112">
            <c>배열</c>에서 복사가 시작되는 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-112">The zero-based index in <c>array</c> at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ef1f-113">파생 클래스에서 재정의된 경우 배열의 지정된 인덱스에서 시작하여 배열에 컬렉션의 요소를 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-113">When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-114">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-114">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ef1f-115">파생 클래스에서 재정의된 경우 이 컬렉션의 개체 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-115">When overridden in a derived class, gets the number of objects in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ef1f-116">컬렉션의 개체 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-116">The number of objects in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-117">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-117">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ef1f-118">파생 클래스에서 재정의된 경우 컬렉션을 반복하는 데 사용할 수 있는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-118">When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ef1f-119">컬렉션을 반복하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-119">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-120">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-120">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5ef1f-121">반환할 개체의 이름으로, 대/소문자를 구분하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-121">The case-insensitive name of the object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ef1f-122">파생 클래스에서 재정의된 경우 컬렉션의 지정된 이름을 가진 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-122">When overridden in a derived class, returns the object that has the specified name from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ef1f-123">
            <paramref name="name" />이 지정하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-123">The object that is specified by <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-124">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-124">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ef1f-125">파생 클래스에서 재정의된 경우 컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-125">When overridden in a derived class, gets a value that indicates whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ef1f-126">컬렉션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-126">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-127">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-127">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ef1f-128">파생 클래스에서 재정의된 경우 컬렉션이 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-128">When overridden in a derived class, gets a value that indicates whether the collection is thread-safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ef1f-129">컬렉션이 스레드로부터 안전하게 보호되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-129">
              <see langword="true" /> if the collection is thread-safe; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-130">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-130">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5ef1f-131">가져올 개체의 이름으로, 대/소문자를 구분하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-131">The case-insensitive name of the object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ef1f-132">파생 클래스에서 재정의된 경우 컬렉션에서 지정된 이름을 가진 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-132">When overridden in a derived class, gets the object that has the specified name from the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ef1f-133">
            <paramref name="name" />이 지정하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-133">The object that is specified by <paramref name="name" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-134">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-134">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NeverAccessed">
      <MemberSignature Language="C#" Value="public virtual bool NeverAccessed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeverAccessed" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.NeverAccessed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NeverAccessed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool NeverAccessed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ef1f-135">파생 클래스에서 재정의된 경우 컬렉션에 액세스했는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-135">When overridden in a derived class, gets a value that indicates whether the collection has been accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ef1f-136">컬렉션에 액세스한 적이 없으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-136">
              <see langword="true" /> if the collection has never been accessed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-137">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-137">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual void Serialize (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollectionBase.Serialize(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Serialize (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::BinaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="5ef1f-138">직렬화된 컬렉션을 스트림 또는 인코드된 문자열에 쓰는 데 사용할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-138">The object to use to write the serialized collection to a stream or encoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ef1f-139">파생 클래스에서 재정의되는 경우 컬렉션의 내용을 <see cref="T:System.IO.BinaryWriter" /> 개체에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-139">When overridden in a derived class, writes the contents of the collection to a <see cref="T:System.IO.BinaryWriter" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-140">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-140">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollectionBase.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ef1f-141">파생 클래스에서 재정의된 경우 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-141">When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ef1f-142">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-142">An object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ef1f-143">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ef1f-143">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>