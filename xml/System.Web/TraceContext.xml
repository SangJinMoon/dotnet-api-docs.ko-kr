<Type Name="TraceContext" FullName="System.Web.TraceContext">
  <TypeSignature Language="C#" Value="public sealed class TraceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="76ac1-101">웹 요청에 대한 실행 정보를 캡처하여 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-101">Captures and presents execution details about a Web request.</span></span> <span data-ttu-id="76ac1-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-103">메시지를 특정 추적 범주에 추가 하려면이 클래스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-103">You can use this class to append messages to specific trace categories.</span></span> <span data-ttu-id="76ac1-104">예를 들어의 인스턴스를 만들려는 경우에 <xref:System.Web.UI.WebControls.Calendar> 클래스 응용 프로그램에 대 한 "렌더링 시작" 추적 메시지에 포함 렌더링 프로시저와 "OnChange 이벤트를 발생 시키는" 이벤트 처리기 프로시저에서입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-104">For example, if you are creating an instance of the <xref:System.Web.UI.WebControls.Calendar> class for your application, you might include the trace message "Starting To Render" in a rendering procedure, and "Raising OnChange Event" in an event handler procedure.</span></span>  
  
 <span data-ttu-id="76ac1-105">사용할 수도 있습니다는 <xref:System.Web.TraceContext> 클래스를 사용자 지정 처리에 대 한 요청을 실행의 끝에 추적 레코드의 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-105">You can also use the <xref:System.Web.TraceContext> class to obtain a set of trace records at the end of request execution for custom processing.</span></span> <span data-ttu-id="76ac1-106">자세한 내용은 참조 [ASP.NET 추적 개요](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416)합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-106">For more information, see [ASP.NET Tracing Overview](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).</span></span>  
  
 <span data-ttu-id="76ac1-107">추적을 사용 하려면 설정는 `Trace` 특성에 [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) 지시문 또는 <xref:System.Web.TraceContext.IsEnabled%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-107">To enable tracing, set the `Trace` attribute in the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the <xref:System.Web.TraceContext.IsEnabled%2A> property to `true`.</span></span> <span data-ttu-id="76ac1-108">사용자가 지정한 추적 콘텐츠를 표시할 뿐만 아니라 추적을 사용 하는 경우는 <xref:System.Web.UI.Page> 성능 데이터, 컨트롤-트리 구조 정보 및 상태 관리 콘텐츠의 모든 요청에 대해 자동으로 클래스를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-108">When tracing is enabled, in addition to showing user-provided trace content, the <xref:System.Web.UI.Page> class automatically includes performance data, control-tree structure information, and state management content for every request.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
    <altmember cref="T:System.Web.TraceContextRecord" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.#ctor(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContext(System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="76ac1-109">현재 웹 요청에 대한 정보가 들어 있는 <see cref="T:System.Web.HttpContext" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-109">An <see cref="T:System.Web.HttpContext" /> that contains information about the current Web request.</span></span></param>
        <summary><span data-ttu-id="76ac1-110"><see cref="T:System.Web.TraceContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-110">Initializes a new instance of the <see cref="T:System.Web.TraceContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76ac1-111">현재 웹 요청에 대해 추적 기능을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-111">Gets or sets a value indicating whether tracing is enabled for the current Web request.</span></span></summary>
        <value>
          <span data-ttu-id="76ac1-112">추적을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-112"><see langword="true" /> if tracing is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-113">이 플래그를 사용 하 여 페이지 또는 응용 프로그램 출력 하는지 여부를 추적 정보를 추적 로그를 기록 하기 전에 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-113">Use this flag to check whether your page or application should output tracing information before it writes anything to the trace log.</span></span>  
  
 <span data-ttu-id="76ac1-114">값은 <xref:System.Web.TraceContext.IsEnabled%2A> 속성의 하위 섹션의 설정에 따라 달라 집니다는 `system.web` 구성 섹션의 값과는 `trace` 지시문의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-114">The value of the <xref:System.Web.TraceContext.IsEnabled%2A> property depends on the settings in the  subsection of the `system.web` configuration section and the value of the `trace` attribute of the  directive.</span></span> <span data-ttu-id="76ac1-115">Page 지시문에 설정 된 추적 옵션이 구성 파일에 설정 된 옵션 보다 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-115">The tracing option set in the page directive takes precedence over the option set in the configuration file.</span></span> <span data-ttu-id="76ac1-116">설정의 <xref:System.Web.TraceContext.IsEnabled%2A> 값 프로그래밍 방식으로 모두 페이지 지시문 특성 및 우선 구성 설정입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-116">Setting the <xref:System.Web.TraceContext.IsEnabled%2A> value programmatically takes precedence over both the page directive attribute and the configuration setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76ac1-117">설정 하는 경우는 <xref:System.Web.TraceContext.IsEnabled%2A> 속성을 `true` 전체 응용 프로그램에 대 한 명시적으로 설정 해야이 속성 `false` 를 원하지 않는 추적 정보를 표시 하는 응용 프로그램의 모든 페이지에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-117">If you set the <xref:System.Web.TraceContext.IsEnabled%2A> property to `true` for an entire application, you must explicitly set this property to `false` for any page in the application for which you do not want tracing information displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76ac1-118">다음 코드 예제에서는 한 페이지에 대 한 추적이 사용 되는지를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-118">The following code example demonstrates how you can determine whether tracing is enabled for a page.</span></span> <span data-ttu-id="76ac1-119">코드는 해당 데이터 집합에서 각 행에 대 한 추적 문을 작성 하는 데이터 집합의 행을 반복 합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-119">The code iterates through the rows in a dataset, writing trace statements for each row in that dataset.</span></span>  
  
 [!code-csharp[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/CS/source.cs#1)]
 [!code-vb[Classic TraceContext.IsEnabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.IsEnabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceFinished">
      <MemberSignature Language="C#" Value="public event System.Web.TraceContextEventHandler TraceFinished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.TraceContextEventHandler TraceFinished" />
      <MemberSignature Language="DocId" Value="E:System.Web.TraceContext.TraceFinished" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TraceFinished As TraceContextEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::TraceContextEventHandler ^ TraceFinished;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContextEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76ac1-120"><see cref="T:System.Web.TraceContext" /> 개체는 요청 정보가 모두 수집된 후 추적 메시지를 노출하기 위해 이 이벤트를 발생시킵니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-120">Raised by the <see cref="T:System.Web.TraceContext" /> object to expose trace messages after all request information is gathered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-121"><xref:System.Web.TraceContext.TraceFinished> 이벤트 중에 발생는 `EndRequest` HTTP 요청을 처리의 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-121">The <xref:System.Web.TraceContext.TraceFinished> event is raised during the `EndRequest` stage of HTTP request processing.</span></span> <span data-ttu-id="76ac1-122">에 의해 발생 한 <xref:System.Web.TraceContext> 개체의 컬렉션을 노출 하려면 모든 요청 정보를 수집한 다음 <xref:System.Web.TraceContextRecord> 등록 메시지 <xref:System.Web.TraceContextEventHandler> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-122">It is raised by a <xref:System.Web.TraceContext> object after all request information is gathered, to expose the collection of <xref:System.Web.TraceContextRecord> messages to registered <xref:System.Web.TraceContextEventHandler> delegates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76ac1-123">다음 코드 예제에서는 등록 하는 방법을 보여 줍니다.는 <xref:System.Web.TraceContextEventHandler> 처리 하는 <xref:System.Web.TraceContext.TraceFinished> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-123">The following code example demonstrates how you can register a <xref:System.Web.TraceContextEventHandler> to handle the <xref:System.Web.TraceContext.TraceFinished> event.</span></span> <span data-ttu-id="76ac1-124">이 예제에서는 대리자 추적 메시지를 반복 하 고 응답 스트림에 기록 그러나 데이터베이스 또는 프로 파일링 도구 소비자 동일한 정보를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-124">In this example, the delegate iterates through the trace messages and writes them to the response stream; however, you could write the same information to a database or a profiling tool consumer.</span></span>  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContextEventHandler" />
        <altmember cref="T:System.Web.TraceContextEventArgs" />
        <altmember cref="T:System.Web.TraceContextRecord" />
      </Docs>
    </Member>
    <Member MemberName="TraceMode">
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContext.TraceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceMode As TraceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceMode { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76ac1-125">요청한 브라우저에 추적 메시지를 출력할 정렬 순서를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-125">Gets or sets the sorted order in which trace messages should be output to a requesting browser.</span></span></summary>
        <value><span data-ttu-id="76ac1-126"><see cref="T:System.Web.TraceMode" /> 열거형 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-126">One of the <see cref="T:System.Web.TraceMode" /> enumeration values.</span></span> <span data-ttu-id="76ac1-127">기본값은 구성 파일에서 <see langword="traceMode" /> 섹션의 <see langword="trace" /> 특성에 지정된 설정인 <see langword="SortByTime" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-127">The default is the setting specified by the <see langword="traceMode" /> attribute in the <see langword="trace" /> section of a configuration file, whose default is <see langword="SortByTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-128">추적 메시지는 처리 된 순서로 또는 사용자 정의 범주에 따라 사전순으로 정렬할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-128">Trace messages can be sorted in the order they were processed, or alphabetically by user-defined category.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76ac1-129">다음 코드 예제에서는 방법을 있습니다 페이지의 추적 문을 사전순으로 정렬할 수 문에 할당 범주별으로 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-129">The following code example demonstrates how you can sort a page's trace statements alphabetically by the categories that you have assigned to the statements.</span></span>  
  
 [!code-aspx-csharp[Classic TraceContext.TraceMode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic TraceContext.TraceMode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic TraceContext.TraceMode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="76ac1-130">선택한 값이 <see cref="T:System.Web.TraceMode" /> 열거형 값 중 하나가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="76ac1-130">The selected value is not one of the <see cref="T:System.Web.TraceMode" /> enumeration values.</span></span></exception>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Warn">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76ac1-131">추적 로그에 추적 정보를 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-131">Writes trace information to the trace log.</span></span> <span data-ttu-id="76ac1-132"><see cref="M:System.Web.TraceContext.Write(System.String)" />과 달리 모든 경고가 로그에 빨강 텍스트로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-132">Unlike <see cref="M:System.Web.TraceContext.Write(System.String)" />, all warnings appear in the log as red text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="76ac1-133">로그에 기록할 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-133">The trace message to write to the log.</span></span></param>
        <summary><span data-ttu-id="76ac1-134">추적 로그에 추적 메시지를 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-134">Writes a trace message to the trace log.</span></span> <span data-ttu-id="76ac1-135">모든 경고가 로그에 빨강 텍스트로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-135">All warnings appear in the log as red text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-136">될 때마다는 <xref:System.Web.TraceContext.Warn%2A> 메서드가 호출 되는 <xref:System.Web.TraceContext> 추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> 메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-136">Every time the <xref:System.Web.TraceContext.Warn%2A> method is called, a <xref:System.Web.TraceContext> trace message is added to the <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> messages collection, which is accessible when you handle the <xref:System.Web.TraceContext.TraceFinished> event.</span></span> <span data-ttu-id="76ac1-137">메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A> 속성이로 설정 `true` 및 해당 <xref:System.Web.TraceContextRecord.ErrorInfo%2A> 속성이로 설정 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-137">The message is added with its <xref:System.Web.TraceContextRecord.IsWarning%2A> property set to `true` and its <xref:System.Web.TraceContextRecord.ErrorInfo%2A> property set to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="76ac1-138">메시지를 받는 추적 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-138">The trace category that receives the message.</span></span></param>
        <param name="message"><span data-ttu-id="76ac1-139">로그에 기록할 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-139">The trace message to write to the log.</span></span></param>
        <summary><span data-ttu-id="76ac1-140">추적 로그에 사용자 정의 범주와 추적 메시지를 포함한 추적 정보를 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-140">Writes trace information to the trace log, including any user-defined categories and trace messages.</span></span> <span data-ttu-id="76ac1-141">모든 경고가 로그에 빨강 텍스트로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-141">All warnings appear in the log as red text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-142">될 때마다는 <xref:System.Web.TraceContext.Warn%2A> 메서드가 호출 되는 <xref:System.Web.TraceContext> 추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> 메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-142">Every time the <xref:System.Web.TraceContext.Warn%2A> method is called, a <xref:System.Web.TraceContext> trace message is added to the <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> messages collection, which is accessible when you handle the <xref:System.Web.TraceContext.TraceFinished> event.</span></span> <span data-ttu-id="76ac1-143">메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A> 속성이로 설정 `true` 및 해당 <xref:System.Web.TraceContextRecord.ErrorInfo%2A> 속성이로 설정 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-143">The message is added with its <xref:System.Web.TraceContextRecord.IsWarning%2A> property set to `true` and its <xref:System.Web.TraceContextRecord.ErrorInfo%2A> property set to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warn">
      <MemberSignature Language="C#" Value="public void Warn (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warn(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Warn(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warn (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warn(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="76ac1-144">메시지를 받는 추적 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-144">The trace category that receives the message.</span></span></param>
        <param name="message"><span data-ttu-id="76ac1-145">로그에 기록할 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-145">The trace message to write to the log.</span></span></param>
        <param name="errorInfo"><span data-ttu-id="76ac1-146">오류에 대한 정보가 들어 있는 <see cref="T:System.Exception" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-146">An <see cref="T:System.Exception" /> that contains information about the error.</span></span></param>
        <summary><span data-ttu-id="76ac1-147">추적 로그에 사용자 정의 범주, 추적 메시지 및 오류 정보를 비롯한 추적 정보를 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-147">Writes trace information to the trace log, including any user-defined categories, trace messages, and error information.</span></span> <span data-ttu-id="76ac1-148">모든 경고가 로그에 빨강 텍스트로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-148">All warnings appear in the log as red text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-149">될 때마다는 <xref:System.Web.TraceContext.Warn%2A> 메서드가 호출 되는 <xref:System.Web.TraceContext> 추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> 메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-149">Every time the <xref:System.Web.TraceContext.Warn%2A> method is called, a <xref:System.Web.TraceContext> trace message is added to the <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> messages collection, which is accessible when you handle the <xref:System.Web.TraceContext.TraceFinished> event.</span></span> <span data-ttu-id="76ac1-150">메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A> 속성이로 설정 `true`, 및 <xref:System.Web.TraceContextRecord.ErrorInfo%2A> 전달 된 개체가 속성은 `errorInfo` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-150">The message is added with its <xref:System.Web.TraceContextRecord.IsWarning%2A> property set to `true`, and the <xref:System.Web.TraceContextRecord.ErrorInfo%2A> property is set to the object passed by the `errorInfo` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76ac1-151">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.TraceContext.Write%2A> 메서드가 추적 로그에 오류 추적 메시지를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-151">The following code example demonstrates how to call the <xref:System.Web.TraceContext.Write%2A> method to write an error trace message to the trace log.</span></span> <span data-ttu-id="76ac1-152">이 예제에서는 서로 다른 예외는 오류 또는 경고로 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-152">In this example, different exceptions are traced as errors and warnings.</span></span> <span data-ttu-id="76ac1-153">페이지 throw 하는 경우는 <xref:System.ArgumentException>, 사용 하 여 경고 메시지를 쓰는 것은 <xref:System.Web.TraceContext.Warn%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="76ac1-153">When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method.</span></span> <span data-ttu-id="76ac1-154">페이지 throw 하는 경우는 <xref:System.InvalidOperationException>, 사용 하 여 오류 메시지를 쓰는 것은 <xref:System.Web.TraceContext.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="76ac1-154">When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76ac1-155">추적 로그에 추적 정보를 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-155">Writes trace information to the trace log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="76ac1-156">로그에 기록할 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-156">The trace message to write to the log.</span></span></param>
        <summary><span data-ttu-id="76ac1-157">추적 로그에 추적 메시지를 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-157">Writes a trace message to the trace log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-158">될 때마다는 <xref:System.Web.TraceContext.Write%2A> 메서드가 호출 되는 <xref:System.Web.TraceContext> 추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> 메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-158">Every time the <xref:System.Web.TraceContext.Write%2A> method is called, a <xref:System.Web.TraceContext> trace message is added to the <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> messages collection, which is accessible when you handle the <xref:System.Web.TraceContext.TraceFinished> event.</span></span> <span data-ttu-id="76ac1-159">메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A> 속성이로 설정 `false` 및 해당 <xref:System.Web.TraceContextRecord.ErrorInfo%2A> 속성이로 설정 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-159">The message is added with its <xref:System.Web.TraceContextRecord.IsWarning%2A> property set to `false` and its <xref:System.Web.TraceContextRecord.ErrorInfo%2A> property set to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="76ac1-160">메시지를 받는 추적 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-160">The trace category that receives the message.</span></span></param>
        <param name="message"><span data-ttu-id="76ac1-161">로그에 기록할 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-161">The trace message to write to the log.</span></span></param>
        <summary><span data-ttu-id="76ac1-162">추적 로그에 메시지와 사용자 정의 범주를 포함한 추적 정보를 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-162">Writes trace information to the trace log, including a message and any user-defined categories.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-163">될 때마다는 <xref:System.Web.TraceContext.Write%2A> 메서드가 호출 되는 <xref:System.Web.TraceContext> 추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> 메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-163">Every time the <xref:System.Web.TraceContext.Write%2A> method is called, a <xref:System.Web.TraceContext> trace message is added to the <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> messages collection, which is accessible when you handle the <xref:System.Web.TraceContext.TraceFinished> event.</span></span> <span data-ttu-id="76ac1-164">메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A> 속성이로 설정 `false` 및 해당 <xref:System.Web.TraceContextRecord.ErrorInfo%2A> 속성이로 설정 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-164">The message is added with its <xref:System.Web.TraceContextRecord.IsWarning%2A> property set to `false` and its <xref:System.Web.TraceContextRecord.ErrorInfo%2A> property set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76ac1-165">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.TraceContext.Write%2A> 메서드가 추적 로그에 오류 추적 메시지를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-165">The following code example demonstrates how to call the <xref:System.Web.TraceContext.Write%2A> method to write an error trace message to the trace log.</span></span> <span data-ttu-id="76ac1-166">이 예제에서는 대리자 추적 메시지를 반복 하 고 HTML 테이블; 형식으로 기록 그러나 데이터베이스 또는 프로 파일링 도구 소비자 동일한 정보를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-166">In this example, the delegate iterates through the trace messages and writes them as an HTML table; however, you can write the same information to a database or a profiling tool consumer.</span></span>  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string category, string message, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string category, string message, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContext.Write(System.String,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (category As String, message As String, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ category, System::String ^ message, Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="76ac1-167">메시지를 받는 추적 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-167">The trace category that receives the message.</span></span></param>
        <param name="message"><span data-ttu-id="76ac1-168">로그에 기록할 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-168">The trace message to write to the log.</span></span></param>
        <param name="errorInfo"><span data-ttu-id="76ac1-169">오류에 대한 정보가 들어 있는 <see cref="T:System.Exception" />입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-169">An <see cref="T:System.Exception" /> that contains information about the error.</span></span></param>
        <summary><span data-ttu-id="76ac1-170">추적 로그에 사용자 정의 범주, 추적 메시지 및 오류 정보를 비롯한 추적 정보를 기록합니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-170">Writes trace information to the trace log, including any user-defined categories, trace messages, and error information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76ac1-171">될 때마다는 <xref:System.Web.TraceContext.Write%2A> 메서드가 호출 되는 <xref:System.Web.TraceContext> 추적 메시지에 추가 됩니다는 <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> 메시지 처리 하는 경우 액세스할 수 있는 컬렉션은 <xref:System.Web.TraceContext.TraceFinished> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-171">Every time the <xref:System.Web.TraceContext.Write%2A> method is called, a <xref:System.Web.TraceContext> trace message is added to the <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> messages collection, which is accessible when you handle the <xref:System.Web.TraceContext.TraceFinished> event.</span></span> <span data-ttu-id="76ac1-172">메시지와 함께 추가 됩니다 해당 <xref:System.Web.TraceContextRecord.IsWarning%2A> 속성이로 설정 `false`, 및 <xref:System.Web.TraceContextRecord.ErrorInfo%2A> 전달 된 개체가 속성은 `errorInfo` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-172">The message is added with its <xref:System.Web.TraceContextRecord.IsWarning%2A> property set to `false`, and the <xref:System.Web.TraceContextRecord.ErrorInfo%2A> property is set to the object passed by the `errorInfo` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76ac1-173">다음 코드 예제에서는 호출 하는 방법을 보여 줍니다.는 <xref:System.Web.TraceContext.Write%2A> 메서드가 추적 로그에 오류 추적 메시지를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-173">The following code example demonstrates how to call the <xref:System.Web.TraceContext.Write%2A> method to write an error trace message to the trace log.</span></span> <span data-ttu-id="76ac1-174">이 예제에서는 서로 다른 예외는 오류 또는 경고로 추적 됩니다.</span><span class="sxs-lookup"><span data-stu-id="76ac1-174">In this example, different exceptions are traced as errors and warnings.</span></span> <span data-ttu-id="76ac1-175">페이지 throw 하는 경우는 <xref:System.ArgumentException>, 사용 하 여 경고 메시지를 쓰는 것은 <xref:System.Web.TraceContext.Warn%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="76ac1-175">When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method.</span></span> <span data-ttu-id="76ac1-176">페이지 throw 하는 경우는 <xref:System.InvalidOperationException>, 사용 하 여 오류 메시지를 쓰는 것은 <xref:System.Web.TraceContext.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="76ac1-176">When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>