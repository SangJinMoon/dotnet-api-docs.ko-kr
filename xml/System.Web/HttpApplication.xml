<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpApplication.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5763b66da8b1dceadda77652804c5bae9caa303a5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">763b66da8b1dceadda77652804c5bae9caa303a5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.</source>
          <target state="translated">ASP.NET 응용 프로그램 내의 모든 응용 프로그램 개체에 공통되는 메서드, 속성 및 이벤트를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>This class is the base class for applications that are defined by the user in the Global.asax file.</source>
          <target state="translated">이 클래스는 Global.asax 파일에서 사용자가 정의한 응용 프로그램에 대한 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class are created in the ASP.NET infrastructure, not by the user directly.</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> 클래스 직접 사용자가 아니라 ASP.NET 인프라에서 만들어집니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>One instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class is used to process many requests in its lifetime.</source>
          <target state="translated">한 인스턴스는 <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> 클래스 수명 중에 많은 요청을 처리 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>However, it can process only one request at a time.</source>
          <target state="translated">그러나 한 번에 요청 하나만 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Thus, member variables can be used to store per-request data.</source>
          <target state="translated">따라서 요청 데이터를 저장할 멤버 변수를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>An application raises events that can be handled by custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface or by event handler code that is defined in the Global.asax file.</source>
          <target state="translated">응용 프로그램에 구현 하는 사용자 지정 모듈에 의해 처리 될 수 있는 이벤트를 발생 시킵니다.는 <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> 인터페이스 또는 Global.asax에 정의 된 이벤트 처리기 코드 파일.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface can be put in the App_Code folder or in a DLL in the Bin folder.</source>
          <target state="translated">구현 하는 사용자 지정 모듈은 <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> 인터페이스 dll에 Bin 폴더 또는 App_Code 폴더에 배치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.</source>
          <target state="translated">IIS 7.0, 통합된 모드에서 실행할 때는 App_Code 폴더 또는 Bin 폴더에서 사용자 지정 모듈 요청 파이프라인의 모든 요청에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.</source>
          <target state="translated">Global.asax 파일에 이벤트 처리기 코드는 ASP.NET 처리기에 매핑되는 요청에만 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The application events are raised in the following order:</source>
          <target state="translated">응용 프로그램 이벤트는 다음 순서 대로 발생 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> event and before the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> event, an event handler (which is a page that corresponds to the request URL) is created.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> 이벤트 하기 전에 <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> 이벤트의 경우 (즉, 요청 URL에 해당 하는 페이지)는 이벤트 처리기가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is raised.</source>
          <target state="translated">서버를 실행 중인 경우 IIS 7.0 및 통합된 모드에서 최소.NET Framework 버전 3.0의 <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.</source>
          <target state="translated">서버 클래식 모드 또는 IIS의 이전 버전의 IIS 7.0을 실행 중인 경우이 이벤트를 처리할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The event handler is executed.</source>
          <target state="translated">이벤트 처리기가 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> event is raised, any existing response filters will filter the output.</source>
          <target state="translated">이후에 <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> 이벤트가 발생 하면 기존 응답 필터는 모두 출력을 필터링 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">이 이벤트 및 IIS 7.0 통합 모드에서 지원 되는 최소.NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">이 이벤트는 지원 되는 IIS 7.0 통합 모드 이상 및.NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following two examples demonstrate how to use the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class and its events.</source>
          <target state="translated">다음 두 예제는 사용 하는 방법을 보여 주기는 <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> 클래스 및 해당 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The first example demonstrates how to create a custom HTTP module and connect an event to it.</source>
          <target state="translated">첫 번째 예제에서는 사용자 지정 HTTP 모듈 만들고 이벤트를 연결할 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The second example demonstrates how to modify the Web.config file.</source>
          <target state="translated">두 번째 예 Web.config 파일을 수정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example demonstrates how to create a custom HTTP module and connect the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event to the HTTP module.</source>
          <target state="translated">다음 예제에서는 사용자 지정 HTTP 모듈 만들고 연결 하는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> HTTP 모듈에는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests.</source>
          <target state="translated">HTTP 모듈 하는 웹 응용 프로그램 리소스, 클라이언트 요청을 필터링 할 수 있으므로 요청을 가로챕니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Any HTTP module that subscribes to an <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> event must implement the <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> interface.</source>
          <target state="translated">구독 하는 모든 HTTP 모듈은 <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> 이벤트를 구현 해야 합니다는 <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module.</source>
          <target state="translated">사용자 지정 HTTP 모듈에서 이벤트 발생 하기 전에 asp HTTP 모듈에 대 한 Web.config 파일에서 구성 설정을 수정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example shows the appropriate configuration setting in the <ph id="ph1">`httpModules`</ph> section of the Web.config file.</source>
          <target state="translated">다음 예제에서는 적절 한 구성 설정에는 <ph id="ph1">`httpModules`</ph> Web.config 파일의 섹션입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.</source>
          <target state="translated">다음 설정이 이전 버전의 IIS 및 IIS 7.0 클래식 모드에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Integrated mode.</source>
          <target state="translated">IIS 7.0 통합 모드에 다음 설정이 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.</source>
          <target state="translated">ASP.NET에서 현재 요청과 관련된 현재 상태(예: 세션 상태)를 가져오는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event is raised after the event handler has been created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> 이벤트는 이벤트 처리기가 만들어진 후 발생 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For an example of handling the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event, see the <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> overview topic.</source>
          <target state="translated">처리에 대 한 예제는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> 이벤트 참조는 <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> 개요 항목입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>를 추가합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> collection.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> 컬렉션에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the event.</source>
          <target state="translated">이벤트의 비동기 처리를 시작하는 <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> collection.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> 컬렉션에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> 이벤트 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>의 비동기 처리를 시작하는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>의 비동기 처리를 끝내는 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>에 추가할 관련 상태입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">현재 요청에 대한 비동기 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> 이벤트 처리기의 컬렉션에 지정된 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> 이벤트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Application">
          <source>Gets the current state of an application.</source>
          <target state="translated">응용 프로그램의 현재 상태를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> for the current request.</source>
          <target state="translated">현재 요청에 대한 <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.</source>
          <target state="translated">응용 프로그램의 현재 상태는.NET Framework 개체와 여러 클라이언트에서 여러 웹 요청에 관련 된 스칼라 값을 저장 하는 데 사용할 수 있는 응용 프로그램 수준 개체의 키/값 사전 구성 됩니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">보안 모듈에서 사용자의 ID를 설정한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event signals that the configured authentication mechanism has authenticated the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> 이벤트 신호를 구성 된 인증 메커니즘이 현재 요청을 인증 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event ensures that the request will be authenticated before processing the attached module or event handler.</source>
          <target state="translated">구독 하는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> 이벤트를 사용 하면 연결된 된 모듈 또는 이벤트 처리기를 처리 하기 전에 요청을 인증할 수 됩니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Occurs when a security module has verified user authorization.</source>
          <target state="translated">보안 모듈에서 사용자 인증을 확인한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> 이벤트 신호를 ASP.NET 현재 요청에 권한이 부여 되었습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.</source>
          <target state="translated">구독 하는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> 이벤트 확인 요청을 인증 하며 연결된 된 모듈 또는 이벤트 처리기를 처리 하기 전에 권한을 부여 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">ASP.NET이 요청에 응답할 때 HTTP 파이프라인 형태의 첫 번째 이벤트로 발생합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> event signals the creation of any given new request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> 이벤트 신호 제공된 된 새 요청을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>This event is always raised and is always the first event to occur during the processing of a request.</source>
          <target state="translated">이 이벤트는 항상 발생 하며 항상 요청을 처리 중에 첫 번째 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.CompleteRequest">
          <source>Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event.</source>
          <target state="translated">ASP.NET이 실행의 HTTP 파이프라인 체인에 있는 모든 이벤트와 필터링을 무시하고 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> 이벤트를 직접 실행하도록 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Context">
          <source>Gets HTTP-specific information about the current request.</source>
          <target state="translated">현재 요청에 대한 HTTP 관련 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Context">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> for the current request.</source>
          <target state="translated">현재 요청에 대한 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Dispose">
          <source>Disposes the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> 인스턴스를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> properties are not available for use when the <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method executes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> 속성을 사용할 수 없는 사용 하는 경우는 <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> 메서드가 실행 합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> method on each of the registered <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> in the application instance and raises the <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> 메서드 호출의 <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> 등록 된 각 메서드 <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> 응용 프로그램 인스턴스 및 생성에는 <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> in a derived class, make sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Disposed">
          <source>Occurs when the application is disposed.</source>
          <target state="translated">응용 프로그램이 삭제되는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> 대리자를 만드는 경우 이벤트를 처리하는 메서드를 식별합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>To associate the event with your event handler, add an instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate to the event.</source>
          <target state="translated">이벤트를 이벤트 처리기를 연결 하려면 추가의 인스턴스는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> 이벤트에 위임 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate.</source>
          <target state="translated">이벤트 처리기가 호출 이벤트가 발생할 때마다 제거 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.EndRequest">
          <source>Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">ASP.NET이 요청에 응답할 때 실행의 HTTP 파이프라인 체인에서 마지막 이벤트로 발생합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event is always raised when the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> 이벤트는 항상 될 때 발생 하는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Error">
          <source>Occurs when an unhandled exception is thrown.</source>
          <target state="translated">처리되지 않은 예외가 throw되는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The exception that raises the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event can be accessed by a call to the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> method.</source>
          <target state="translated">예외를 발생 시키는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> 이벤트에 대 한 호출에서 액세스할 수는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 ASP.NET에서 생성 되는 기본 오류 메시지를 표시 하지 않는 경우에 사용자 지정 오류 출력을 생성 하는 응용 프로그램은 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your Web application contains XML Web services, you cannot use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event for global exception handling of those services.</source>
          <target state="translated">XML 웹 서비스를 포함 하는 웹 응용 프로그램을 사용할 수 없습니다.는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> 이러한 서비스의 전역 예외 처리에 대 한 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> being called.</source>
          <target state="translated">XML 웹 서비스에서 발생 하기 전에 SOAP 오류를 변환 하는 모든 예외를 사용 하는 XML 웹 서비스에 대 한 HTTP 처리기는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.</source>
          <target state="translated">XML 웹 서비스 예외를 처리 하려면 사용자 지정 전역 예외 처리기에서 웹 서비스 예외를 처리 하는 SOAP 확장을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Events">
          <source>Gets the list of event handler delegates that process all application events.</source>
          <target state="translated">모든 응용 프로그램 이벤트를 처리하는 이벤트 처리기 대리자 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that contains the names of the event handler delegates.</source>
          <target state="translated">이벤트 처리기 대리자의 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>Gets the name of the default output-cache provider that is configured for a Web site.</source>
          <target state="translated">웹 사이트에 대해 구성된 기본 출력 캐시 공급자의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The name of the default provider.</source>
          <target state="translated">기본 공급자의 이름입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.</source>
          <target state="translated">이 메서드를 재정의 하 고 사용 하 여 웹 사이트에 대해 구성 된 모든 출력 캐시 공급자의 이름을 반환 수 있습니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.</source>
          <target state="translated">ASP.NET 명명된 된 공급자에 대 한 참조를 검색 하 고 사용 하 여 현재 실행 중인 요청에 대 한 출력 캐시 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.</source>
          <target state="translated">기본적으로 asp.net에서는 페이지 및 컨트롤을 렌더링 하는 모든 HTTP 응답을 메모리에 출력 캐시를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can change the default output-cache provider that is used for a Web application by specifying a different provider name for <ph id="ph1">`defaultProvider`</ph>.</source>
          <target state="translated">에 대 한 다른 공급자 이름을 지정 하 여 웹 응용 프로그램에 사용 되는 기본 출력 캐시 공급자를 변경할 수 있습니다 <ph id="ph1">`defaultProvider`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>In addition, you can select different output-cache providers for individual control and for individual requests.</source>
          <target state="translated">또한 개별 컨트롤에 대 한 개별 요청에 대해 되는 서로 다른 출력 캐시 공급자를 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new <ph id="ph1">`providerName`</ph> attribute in a page or control directive, as shown in the following example:</source>
          <target state="translated">새 사용 하 여 선언적으로 작업을 수행 하는 웹 사용자 컨트롤에 대 한 다른 출력 캐시 공급자를 선택 하는 가장 쉬운 방법은 <ph id="ph1">`providerName`</ph> 다음 예제와 같이 페이지 또는 제어 지시문 특성:</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.</source>
          <target state="translated">HTTP 요청에 대 한 다른 출력 캐시 공급자를 지정 하려면 특정 요청에 사용할 공급자를 프로그래밍 방식으로 지정 Global.asax 파일에이 메서드를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Caching Overview<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>ASP.NET 캐싱 개요<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The following example shows how to programmatically specify the cache provider named <ph id="ph1">`DiskCache`</ph> for any HTTP request that goes to the Advanced.aspx page.</source>
          <target state="translated">다음 예제에서는 프로그래밍 방식으로 명명 된 캐시 공급자를 지정 하는 방법을 보여 줍니다. <ph id="ph1">`DiskCache`</ph> Advanced.aspx 페이지로 이동 하는 모든 HTTP 요청에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph>을를는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을를이거나 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object that contains information about the current Web request.</source>
          <target state="translated">현재 웹 요청에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The custom string that specifies which cached response is used to respond to the current request.</source>
          <target state="translated">현재 요청에 응답하는 데 사용되는 캐시된 응답을 지정하는 사용자 지정 문자열입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>Provides an application-wide implementation of the <ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> 속성의 응용 프로그램 전반적인 구현을 제공합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>If the value of the <ph id="ph1">&lt;paramref name="custom" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>, the browser's <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="custom" /&gt;</ph> 매개 변수의 값이 <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>이면 브라우저의 <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>You can override <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> to add a new method for calculating custom vary-by values that are based on the current request.</source>
          <target state="translated">재정의할 수 <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> 현재 요청을 기반으로 하는 사용자 지정 다 by 값 계산에 대 한 새 메서드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The implementation has to call the base class for custom values that it does not recognize.</source>
          <target state="translated">구현이 인식 하지 않는 사용자 지정 값에 대 한 기본 클래스를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Versions of a Page Using Custom Strings<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 여러 버전의 페이지를 사용 하 여 사용자 지정 문자열 캐시<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Init">
          <source>Executes custom initialization code after all event handler modules have been added.</source>
          <target state="translated">모든 이벤트 처리기 모듈이 추가된 후 사용자 지정 초기화 코드를 실행합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Init">
          <source>In a derived class, you can override the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> method to add custom one-time initialization code.</source>
          <target state="translated">파생된 클래스에서 재정의할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> 메서드를 사용자 지정 초기화 코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Occurs just before ASP.NET performs any logging for the current request.</source>
          <target state="translated">ASP.NET에서 현재 요청에 대한 로깅을 수행하기 직전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event is raised even if an error occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> 이벤트는 오류가 발생 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>You can provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event to provide custom logging for the request.</source>
          <target state="translated">에 대 한 이벤트 처리기를 제공할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> 요청에 대 한 사용자 지정 로깅을 제공 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The following example demonstrates how to provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event.</source>
          <target state="translated">다음 예제에 대 한 이벤트 처리기를 제공 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The event handler also handles several other events.</source>
          <target state="translated">이벤트 처리기도 다른 여러 가지 이벤트를 처리합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> properties are used to determine what code to run.</source>
          <target state="translated">따라서는 <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> 속성은 실행할 코드를 확인 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>Occurs when the handler is selected to respond to the request.</source>
          <target state="translated">요청에 응답하기 위해 처리기를 선택할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is used by the ASP.NET infrastructure to determine the request handler for the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> 이벤트 현재 요청에 대 한 요청 처리기를 확인 하려면 ASP.NET 인프라에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Register HTTP Handlers<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 등록 HTTP 처리기<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Modules">
          <source>Gets the collection of modules for the current application.</source>
          <target state="translated">현재 응용 프로그램에 대한 모듈의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Modules">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph> that contains the names of the modules for the application.</source>
          <target state="translated">응용 프로그램의 모듈 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>The callback method.</source>
          <target state="translated">콜백 메서드입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>Specifies a callback to invoke when a request execution step is executed.</source>
          <target state="translated">요청 실행 단계가 실행될 때 호출할 콜백을 지정합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>This method provides extensibility to the ASP.NET pipeline to make it easy for developers to implement features in ambient context scenarios and build libraries that care about ASP.NET execution flow (for example, tracing, profiling, diagnostics, and transactions).</source>
          <target state="translated">이 메서드는 개발자가 쉽게 앰비언트 컨텍스트 시나리오에서 기능을 구현 하 고 ASP.NET 실행 흐름 (예를 들어 추적, 프로 파일링, 진단 및 트랜잭션)를 고려 하는 라이브러리를 빌드할 수 있도록 ASP.NET 파이프라인 확장성을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Occurs when the request state (for example, session state) that is associated with the current request has been obtained.</source>
          <target state="translated">현재 요청과 관련된 요청 상태(예: 세션 상태)를 가져온 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> 후에 이벤트가 발생는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</source>
          <target state="translated">구독 하는 기능에서 <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> 이벤트에 의해 처리 되는 모든 데이터에 액세스할 수는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">보안 모듈에서 사용자의 ID를 설정한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> 후에 이벤트가 발생는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</source>
          <target state="translated">구독 하는 기능에서 <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> 이벤트에 의해 처리 되는 모든 데이터에 액세스할 수는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Occurs when the user for the current request has been authorized.</source>
          <target state="translated">현재 요청의 사용자에게 권한이 부여된 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> 이벤트 신호를 ASP.NET 현재 요청에 권한이 부여 되었습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event ensures authentication and authorization of the request before processing the attached module or event handler.</source>
          <target state="translated">구독 하는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> 이벤트 인증 및 연결된 된 모듈 또는 이벤트 처리기를 처리 하기 전에 요청의 권한 부여를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>Occurs when ASP.NET has completed processing all the event handlers for the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event.</source>
          <target state="translated">ASP.NET에서 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> 이벤트에 대한 모든 이벤트 처리기의 처리를 완료한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>Occurs when ASP.NET has mapped the current request to the appropriate event handler.</source>
          <target state="translated">ASP.NET에서 현재 요청을 적절한 이벤트 처리기에 매핑한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.</source>
          <target state="translated">ASP.NET에서 모든 요청 이벤트 처리기의 실행을 완료하고 요청 상태 데이터가 저장된 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.</source>
          <target state="translated">ASP.NET 이벤트 처리기(예: 페이지 또는 XML Web services)가 실행을 완료하는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</source>
          <target state="translated">ASP.NET에서 현재 이벤트 처리기의 실행을 무시하고 캐싱 모듈에서 캐시 요청을 처리하도록 허용하는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</source>
          <target state="translated">ASP.NET에서 캐싱 모듈의 업데이트 및 캐시의 다음 요청을 처리하는 데 사용되는 응답의 저장을 완료하는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> 후에 이벤트가 발생는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> is raised, ASP.NET has completed processing code and the content of the cache is finalized.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> 는 발생 ASP.NET 처리 코드를 완료 하 고 캐시의 내용을 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).</source>
          <target state="translated">ASP.NET에서 페이지 또는 XML Web services 같은 이벤트 처리기의 실행을 시작하기 바로 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Occurs just before ASP.NET sends content to the client.</source>
          <target state="translated">ASP.NET에서 클라이언트로 내용을 보내기 바로 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> event may occur multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> 이벤트가 여러 번 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Do not use <ph id="ph1">`PreSendRequestContent`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">사용 하지 마십시오 <ph id="ph1">`PreSendRequestContent`</ph> 구현 하는 관리 되는 모듈 <ph id="ph2">`IHttpModule`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">이러한 속성을 설정 비동기 요청에 문제가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">응용 프로그램 요청 라우팅 (ARR)와 websocket 조합 w3wp 충돌을 일으킬 수 있는 액세스 위반 예외 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">예를 들어 iiscore! W3_CONTEXT_BASE::GetIsLastNotification + iiscore.dll에 68 (의 0xC0000005)에서 액세스 위반이 예외가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Occurs just before ASP.NET sends HTTP headers to the client.</source>
          <target state="translated">ASP.NET에서 클라이언트로 HTTP 헤더를 보내기 바로 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Do not use <ph id="ph1">`PreSendRequestHeaders`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">사용 하지 마십시오 <ph id="ph1">`PreSendRequestHeaders`</ph> 구현 하는 관리 되는 모듈 <ph id="ph2">`IHttpModule`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">이러한 속성을 설정 비동기 요청에 문제가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">응용 프로그램 요청 라우팅 (ARR)와 websocket 조합 w3wp 충돌을 일으킬 수 있는 액세스 위반 예외 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">예를 들어 iiscore! W3_CONTEXT_BASE::GetIsLastNotification + iiscore.dll에 68 (의 0xC0000005)에서 액세스 위반이 예외가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>The type of the module.</source>
          <target state="translated">모듈의 형식입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>Registers an application module.</source>
          <target state="translated">응용 프로그램 모듈을 등록합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>Occurs after ASP.NET finishes executing all request event handlers.</source>
          <target state="translated">ASP.NET에서 모든 요청 이벤트 처리기 실행을 완료한 후 발생합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>This event causes state modules to save the current state data.</source>
          <target state="translated">이 이벤트는 상태 모듈이 현재 상태 데이터를 저장할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> 이벤트가 발생 하 고 응용 프로그램에서 요청이 완료 되 asp 요청 상태를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>Gets the intrinsic request object for the current request.</source>
          <target state="translated">현재 요청에 대한 내장 요청 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">응용 프로그램이 처리하고 있는 <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Occurs when the managed objects that are associated with the request have been released.</source>
          <target state="translated">요청과 연결된 관리되는 개체를 해제한 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> ASP.NET 파이프라인에 대 한 처리기가 호출 되 고 이벤트는 모든 관리 되는 모듈 후 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>It enables modules to clean up resources after all managed modules and handlers have executed.</source>
          <target state="translated">관리 되는 모든 모듈 및 처리기 실행 하는 리소스를 정리 하는 모듈 수 있습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.</source>
          <target state="translated">명시적으로 요청 하는 동안 만든 관리 되는 리소스를 삭제 하기 위해 특정 시간을 필요한 경우이 이벤트를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).</source>
          <target state="translated">ASP.NET에서 인증 이벤트를 완료하여 이벤트 처리기(예: 페이지 또는 XML Web services)의 실행을 무시하고 캐싱 모듈이 캐시 요청을 처리하도록 하는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>Gets the intrinsic response object for the current request.</source>
          <target state="translated">현재 요청에 대한 내장 응답 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">응용 프로그램이 처리하고 있는 <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Server">
          <source>Gets the intrinsic server object for the current request.</source>
          <target state="translated">현재 요청에 대한 내장 서버 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Server">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">응용 프로그램이 처리하고 있는 <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>Gets the intrinsic session object that provides access to session data.</source>
          <target state="translated">세션 데이터에 대한 액세스를 제공하는 내장 세션 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object for the current session.</source>
          <target state="translated">현재 세션에 대한 <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Site">
          <source>Gets or sets a site interface for an <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> 구현을 위한 사이트 인터페이스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> object that allows a container to manage and communicate with its child components.</source>
          <target state="translated">컨테이너가 자식 구성 요소를 관리하고 통신할 수 있도록 하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> to call when the asynchronous method call is complete.</source>
          <target state="translated">비동기 메서드 호출이 완료될 때 호출할 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> 매개 변수가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이면 대리자가 호출되지 않습니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Any extra data that is required to process the request.</source>
          <target state="translated">요청을 처리하는 데 필요한 추가 데이터입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous call to the HTTP event handler.</source>
          <target state="translated">HTTP 이벤트 처리기에 대한 비동기 호출을 시작합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated">프로세스 상태에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated">프로세스 상태에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>Provides an asynchronous process <ph id="ph1">&lt;see langword="End" /&gt;</ph> method when the process finishes.</source>
          <target state="translated">처리가 완료될 때 비동기 프로세스 <ph id="ph1">&lt;see langword="End" /&gt;</ph> 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> method to raise any exceptions that are caught during the asynchronous process.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> 메서드를 비동기 프로세스 중 발생 하는 모든 예외를 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>Gets a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether another request can use the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object.</source>
          <target state="translated">다른 요청에서 <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 개체를 사용할 수 있는지 여부를 나타내는 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object is reusable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 개체를 다시 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>To explicitly set the <ph id="ph1">`IsReusable`</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph>, provide code that overrides the <ph id="ph4">`IsReusable`</ph> property accessor.</source>
          <target state="translated">명시적으로 설정 하는 <ph id="ph1">`IsReusable`</ph> 속성을 <ph id="ph2">`true`</ph> 또는 <ph id="ph3">`false`</ph>를 재정의 하는 코드는 <ph id="ph4">`IsReusable`</ph> 속성 접근자입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to the intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Enables processing of HTTP Web requests by a custom HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 인터페이스를 구현하는 사용자 지정 HTTP 처리기를 사용하여 HTTP 웹 요청을 처리할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Classes that inherit the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces are provided as a reference to an <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> object for the current HTTP request.</source>
          <target state="translated">상속 된 클래스는 <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> 인터페이스에 대 한 참조로 제공 되는 <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> 현재 HTTP 요청에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>The object provides access to the intrinsic <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, and <ph id="ph3">`Server`</ph> objects for the request.</source>
          <target state="translated">내장 함수에 대 한 액세스를 제공 하는 개체 <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, 및 <ph id="ph3">`Server`</ph> 요청에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>In all cases.</source>
          <target state="translated">모든 경우</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</source>
          <target state="translated">ASP.NET이 이벤트 처리기 실행을 완료하여 캐싱 모듈이 캐시의 다음 요청을 처리하는 데 사용할 응답을 저장하도록 하는 경우 발생합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 이벤트 사용<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>Gets the intrinsic user object for the current request.</source>
          <target state="translated">현재 요청에 대한 내장 사용자 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object that represents the current authenticated or anonymous user.</source>
          <target state="translated">현재 인증된 사용자 또는 익명 사용자를 나타내는 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>