<Type Name="HttpApplication" FullName="System.Web.HttpApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce3f7a3a63eab675b24796ada89aa6b08147094f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37586719" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpApplication : IDisposable, System.ComponentModel.IComponent, System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpApplication extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplication" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpApplication&#xA;Implements IComponent, IDisposable, IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplication : IDisposable, System::ComponentModel::IComponent, System::Web::IHttpAsyncHandler" />
  <TypeSignature Language="F#" Value="type HttpApplication = class&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IHttpAsyncHandler&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="663de-101">ASP.NET 응용 프로그램 내의 모든 응용 프로그램 개체에 공통되는 메서드, 속성 및 이벤트를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="663de-101">Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.</span>
      </span>
      <span data-ttu-id="663de-102">이 클래스는 Global.asax 파일에서 사용자가 정의한 응용 프로그램에 대한 기본 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="663de-102">This class is the base class for applications that are defined by the user in the Global.asax file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-103">인스턴스는 <xref:System.Web.HttpApplication> 클래스는 직접 사용자가 아닌 ASP.NET 인프라에서 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-103">Instances of the <xref:System.Web.HttpApplication> class are created in the ASP.NET infrastructure, not by the user directly.</span></span> <span data-ttu-id="663de-104">인스턴스 하나를 <xref:System.Web.HttpApplication> 클래스 수명 중에 많은 요청을 처리 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-104">One instance of the <xref:System.Web.HttpApplication> class is used to process many requests in its lifetime.</span></span> <span data-ttu-id="663de-105">그러나 한 번에 요청 하나만 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-105">However, it can process only one request at a time.</span></span> <span data-ttu-id="663de-106">따라서 요청 데이터를 저장할 멤버 변수를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-106">Thus, member variables can be used to store per-request data.</span></span>  
  
 <span data-ttu-id="663de-107">응용 프로그램을 구현 하는 사용자 지정 모듈에 의해 처리 될 수 있는 이벤트를 발생 시킵니다.는 <xref:System.Web.IHttpModule> 인터페이스 또는 Global.asax에 정의 된 이벤트 처리기 코드 파일.</span><span class="sxs-lookup"><span data-stu-id="663de-107">An application raises events that can be handled by custom modules that implement the <xref:System.Web.IHttpModule> interface or by event handler code that is defined in the Global.asax file.</span></span> <span data-ttu-id="663de-108">구현 하는 사용자 지정 모듈을 <xref:System.Web.IHttpModule> App_Code 폴더 또는 Bin 폴더에 DLL 인터페이스를 배치할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-108">Custom modules that implement the <xref:System.Web.IHttpModule> interface can be put in the App_Code folder or in a DLL in the Bin folder.</span></span>  
  
 <span data-ttu-id="663de-109"><xref:System.Web.HttpApplication> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-109"><xref:System.Web.HttpApplication> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-110">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-110">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663de-111">IIS 7.0 통합된 모드에서 실행 하는 경우 App_Code 폴더 또는 Bin 폴더에서 사용자 지정 모듈은 요청 파이프라인의 모든 요청에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-111">When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.</span></span> <span data-ttu-id="663de-112">Global.asax 파일에 이벤트 처리기 코드는 ASP.NET 처리기에 매핑되는 요청에만 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-112">Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.</span></span>  
  
 <span data-ttu-id="663de-113">응용 프로그램 이벤트는 다음과 같은 순서로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-113">The application events are raised in the following order:</span></span>  
  
1.  <xref:System.Web.HttpApplication.BeginRequest>  
  
2.  <xref:System.Web.HttpApplication.AuthenticateRequest>  
  
3.  <xref:System.Web.HttpApplication.PostAuthenticateRequest>  
  
4.  <xref:System.Web.HttpApplication.AuthorizeRequest>  
  
5.  <xref:System.Web.HttpApplication.PostAuthorizeRequest>  
  
6.  <xref:System.Web.HttpApplication.ResolveRequestCache>  
  
7.  <xref:System.Web.HttpApplication.PostResolveRequestCache>  
  
     <span data-ttu-id="663de-114">후 합니다 <xref:System.Web.HttpApplication.PostResolveRequestCache> 이벤트 전에 <xref:System.Web.HttpApplication.PostMapRequestHandler> 이벤트 (즉, 요청 URL에 해당 하는 페이지)는 이벤트 처리기가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="663de-114">After the <xref:System.Web.HttpApplication.PostResolveRequestCache> event and before the <xref:System.Web.HttpApplication.PostMapRequestHandler> event, an event handler (which is a page that corresponds to the request URL) is created.</span></span> <span data-ttu-id="663de-115">서버를 실행 중인 경우 IIS 7.0 통합된 모드와 최소.NET Framework 버전 3.0의 <xref:System.Web.HttpApplication.MapRequestHandler> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-115">When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <xref:System.Web.HttpApplication.MapRequestHandler> event is raised.</span></span> <span data-ttu-id="663de-116">서버 클래식 모드 또는 IIS의 이전 버전의 IIS 7.0을 실행 중일 때이 이벤트를 처리할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-116">When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.</span></span>  
  
8.  <xref:System.Web.HttpApplication.PostMapRequestHandler>  
  
9. <xref:System.Web.HttpApplication.AcquireRequestState>  
  
10. <xref:System.Web.HttpApplication.PostAcquireRequestState>  
  
11. <xref:System.Web.HttpApplication.PreRequestHandlerExecute>  
  
     <span data-ttu-id="663de-117">이벤트 처리기가 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-117">The event handler is executed.</span></span>  
  
12. <xref:System.Web.HttpApplication.PostRequestHandlerExecute>  
  
13. <xref:System.Web.HttpApplication.ReleaseRequestState>  
  
14. <xref:System.Web.HttpApplication.PostReleaseRequestState>  
  
     <span data-ttu-id="663de-118">이후에 <xref:System.Web.HttpApplication.PostReleaseRequestState> 이벤트가 발생 하면 기존 응답 필터는 모두 출력을 필터링 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-118">After the <xref:System.Web.HttpApplication.PostReleaseRequestState> event is raised, any existing response filters will filter the output.</span></span>  
  
15. <xref:System.Web.HttpApplication.UpdateRequestCache>  
  
16. <xref:System.Web.HttpApplication.PostUpdateRequestCache>  
  
17. <span data-ttu-id="663de-119"><xref:System.Web.HttpApplication.LogRequest>.</span><span class="sxs-lookup"><span data-stu-id="663de-119"><xref:System.Web.HttpApplication.LogRequest>.</span></span>  
  
     <span data-ttu-id="663de-120">이 이벤트는 및 IIS 7.0 통합 모드에서 지원 되며 최소.NET Framework 3.0</span><span class="sxs-lookup"><span data-stu-id="663de-120">This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0</span></span>  
  
18. <xref:System.Web.HttpApplication.PostLogRequest>  
  
     <span data-ttu-id="663de-121">이 이벤트는 지원 되는 IIS 7.0 통합 모드 이상 및.NET Framework 3.0</span><span class="sxs-lookup"><span data-stu-id="663de-121">This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0</span></span>  
  
19. <xref:System.Web.HttpApplication.EndRequest>  
  
   
  
## Examples  
 <span data-ttu-id="663de-122">다음 두 예제에 사용 하는 방법을 보여 줍니다는 <xref:System.Web.HttpApplication> 클래스 및 해당 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-122">The following two examples demonstrate how to use the <xref:System.Web.HttpApplication> class and its events.</span></span> <span data-ttu-id="663de-123">첫 번째 예제 사용자 지정 HTTP 모듈을 만들고 이벤트를 연결 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="663de-123">The first example demonstrates how to create a custom HTTP module and connect an event to it.</span></span> <span data-ttu-id="663de-124">두 번째 예제에서는 Web.config 파일을 수정 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-124">The second example demonstrates how to modify the Web.config file.</span></span>  
  
 <span data-ttu-id="663de-125">다음 예제에는 사용자 지정 HTTP 모듈을 만들고 연결 하는 방법을 보여 줍니다.는 <xref:System.Web.HttpApplication.AcquireRequestState> HTTP 모듈에는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-125">The following example demonstrates how to create a custom HTTP module and connect the <xref:System.Web.HttpApplication.AcquireRequestState> event to the HTTP module.</span></span> <span data-ttu-id="663de-126">HTTP 모듈 웹 응용 프로그램 리소스, 클라이언트 요청을 필터링 할 수 있으므로 각 요청을 가로챕니다.</span><span class="sxs-lookup"><span data-stu-id="663de-126">HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests.</span></span> <span data-ttu-id="663de-127">구독 하는 모든 HTTP 모듈을 <xref:System.Web.HttpApplication> 이벤트를 구현 해야 합니다는 <xref:System.Web.IHttpModule> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-127">Any HTTP module that subscribes to an <xref:System.Web.HttpApplication> event must implement the <xref:System.Web.IHttpModule> interface.</span></span>  
  
 [!code-csharp[System.Web.HttpApplication1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpApplication1/cs/source.cs#1)]
 [!code-vb[System.Web.HttpApplication1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpApplication1/vb/source.vb#1)]  
  
 <span data-ttu-id="663de-128">사용자 지정 HTTP 모듈에서 이벤트가 발생 하기 전에 HTTP 모듈에 대 한 ASP.NET에 알리기 위해 Web.config 파일에서 구성 설정을 수정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-128">Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module.</span></span> <span data-ttu-id="663de-129">다음 예제에서는 적절 한 구성 설정에는 `httpModules` Web.config 파일의 섹션입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-129">The following example shows the appropriate configuration setting in the `httpModules` section of the Web.config file.</span></span> <span data-ttu-id="663de-130">다음 설정에는 이전 버전의 IIS 및 IIS 7.0 클래식 모드로 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-130">The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.</span></span>  
  
```csharp  
<configuration>  
  <system.web>  
    <httpModules>  
      <add type="Samples.AspNet.CS.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </httpModules>  
  </system.web>  
</configuration>  
```  
  
```vb  
<configuration>  
  <system.web>  
    <httpModules>  
      <add type="Samples.AspNet.VB.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </httpModules>  
  </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="663de-131">IIS 7.0 통합 모드에 다음 설정이 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-131">The following setting applies to IIS 7.0 Integrated mode.</span></span>  
  
```csharp  
<configuration>  
  <system.webServer>  
    <modules>  
      <add type="Samples.AspNet.CS.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </modules>  
  </system.webServer>  
</configuration>  
```  
  
```vb  
<configuration>  
  <system.webServer>  
    <modules>  
      <add type="Samples.AspNet.VB.CustomHTTPModule"  
        name="CustomHttpModule" />  
      <modules>  
  </system.webServer>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpHandlerFactory" />
    <altmember cref="T:System.Web.IHttpHandler" />
    <altmember cref="T:System.Web.IHttpModule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpApplication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="663de-132">
            <see cref="T:System.Web.HttpApplication" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-132">Initializes a new instance of the <see cref="T:System.Web.HttpApplication" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler AcquireRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcquireRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AcquireRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcquireRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcquireRequestState;" />
      <MemberSignature Language="F#" Value="member this.AcquireRequestState : EventHandler " Usage="member this.AcquireRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-133">ASP.NET에서 현재 요청과 관련된 현재 상태(예: 세션 상태)를 가져오는 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-133">Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-134"><xref:System.Web.HttpApplication.AcquireRequestState> 이벤트는 이벤트 처리기가 만들어진 후 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-134">The <xref:System.Web.HttpApplication.AcquireRequestState> event is raised after the event handler has been created.</span></span>  
  
 <span data-ttu-id="663de-135">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-135">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663de-136">처리의 예는 <xref:System.Web.HttpApplication.AcquireRequestState> 이벤트에 참조를 <xref:System.Web.HttpApplication> 개요 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-136">For an example of handling the <xref:System.Web.HttpApplication.AcquireRequestState> event, see the <xref:System.Web.HttpApplication> overview topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAcquireRequestState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAcquireRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-137">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-137">Adds the specified <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAcquireRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAcquireRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAcquireRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAcquireRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-138">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.AcquireRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-138">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-139">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.AcquireRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-139">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-140">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-140">Adds the specified <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAcquireRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAcquireRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAcquireRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAcquireRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-141">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.AcquireRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-141">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-142">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.AcquireRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-142">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-143">비동기 <see cref="E:System.Web.HttpApplication.AcquireRequestState" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-143">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-144">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-144">Adds the specified <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAuthenticateRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-145">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-145">Adds the specified <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthenticateRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthenticateRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthenticateRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAuthenticateRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-146">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-146">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-147">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-147">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-148">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-148">Adds the specified <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthenticateRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthenticateRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthenticateRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAuthenticateRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-149">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-149">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-150">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-150">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-151">비동기 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-151">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-152">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-152">Adds the specified <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAuthorizeRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-153">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-153">Adds the specified <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthorizeRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthorizeRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthorizeRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAuthorizeRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-154">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-154">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-155">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-155">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-156">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-156">Adds the specified <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthorizeRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthorizeRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthorizeRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAuthorizeRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-157">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-157">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-158">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-158">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-159">비동기 <see cref="E:System.Web.HttpApplication.AcquireRequestState" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-159">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-160">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-160">Adds the specified <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnBeginRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-161">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.BeginRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.BeginRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-161">Adds the specified <see cref="E:System.Web.HttpApplication.BeginRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.BeginRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnBeginRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnBeginRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnBeginRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnBeginRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnBeginRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnBeginRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnBeginRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-162">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.BeginRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-162">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-163">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.BeginRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-163">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-164">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.BeginRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.BeginRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-164">Adds the specified <see cref="E:System.Web.HttpApplication.BeginRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.BeginRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnBeginRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnBeginRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnBeginRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnBeginRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnBeginRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnBeginRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnBeginRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-165">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.BeginRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-165">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-166">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.BeginRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-166">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-167">비동기 <see cref="E:System.Web.HttpApplication.BeginRequest" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-167">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-168">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.BeginRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.BeginRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-168">Adds the specified <see cref="E:System.Web.HttpApplication.BeginRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.BeginRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnEndRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-169">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.EndRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.EndRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-169">Adds the specified <see cref="E:System.Web.HttpApplication.EndRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.EndRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnEndRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnEndRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnEndRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnEndRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnEndRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnEndRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnEndRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-170">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.EndRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-170">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-171">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.EndRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-171">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-172">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.EndRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.EndRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-172">Adds the specified <see cref="E:System.Web.HttpApplication.EndRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.EndRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnEndRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnEndRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnEndRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnEndRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnEndRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnEndRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnEndRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-173">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.EndRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-173">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-174">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.EndRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-174">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-175">비동기 <see cref="E:System.Web.HttpApplication.EndRequest" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-175">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-176">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.EndRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.EndRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-176">Adds the specified <see cref="E:System.Web.HttpApplication.EndRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.EndRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnLogRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-177">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.LogRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.LogRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-177">Adds the specified <see cref="E:System.Web.HttpApplication.LogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.LogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-178"><xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-178"><xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-179">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-179">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnLogRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnLogRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnLogRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnLogRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-180">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.LogRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-180">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-181">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.LogRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-181">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-182">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.LogRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.LogRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-182">Adds the specified <see cref="E:System.Web.HttpApplication.LogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.LogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-183"><xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-183"><xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-184">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-184">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnLogRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnLogRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnLogRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnLogRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-185">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.LogRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-185">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-186">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.LogRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-186">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-187">비동기 <see cref="E:System.Web.HttpApplication.LogRequest" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-187">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-188">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.LogRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.LogRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-188">Adds the specified <see cref="E:System.Web.HttpApplication.LogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.LogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnMapRequestHandlerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-189">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-189">Adds the specified <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-190"><xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-190"><xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-191">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-191">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnMapRequestHandlerAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnMapRequestHandlerAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnMapRequestHandlerAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnMapRequestHandlerAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-192">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.MapRequestHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-192">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-193">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.MapRequestHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-193">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-194">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-194">Adds the specified <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-195"><xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-195"><xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-196">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-196">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnMapRequestHandlerAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnMapRequestHandlerAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnMapRequestHandlerAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnMapRequestHandlerAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-197">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.MapRequestHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-197">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-198">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.MapRequestHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-198">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-199">비동기 <see cref="E:System.Web.HttpApplication.MapRequestHandler" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-199">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-200">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-200">Adds the specified <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAcquireRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-201">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-201">Adds the specified <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAcquireRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAcquireRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAcquireRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAcquireRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-202">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-202">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-203">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-203">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-204">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-204">Adds the specified <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAcquireRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAcquireRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAcquireRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAcquireRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-205">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-205">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-206">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-206">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-207">비동기 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-207">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-208">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-208">Adds the specified <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAuthenticateRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-209">현재 요청에 대한 비동기 <see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-209">Adds the specified <see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthenticateRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthenticateRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthenticateRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAuthenticateRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-210">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-210">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-211">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-211">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-212">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-212">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthenticateRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthenticateRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthenticateRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAuthenticateRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-213">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-213">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-214">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-214">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-215">비동기 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-215">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-216">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-216">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAuthorizeRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-217">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-217">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthorizeRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthorizeRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthorizeRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAuthorizeRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-218">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-218">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-219">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-219">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-220">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-220">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthorizeRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthorizeRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthorizeRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAuthorizeRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-221">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-221">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-222">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-222">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-223">비동기 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-223">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-224">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-224">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostLogRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-225">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-225">Adds the specified <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-226"><xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-226"><xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-227">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-227">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostLogRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostLogRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostLogRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostLogRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-228">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostLogRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-228">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-229">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostLogRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-229">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-230">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-230">Adds the specified <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-231"><xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-231"><xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-232">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-232">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostLogRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostLogRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostLogRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostLogRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-233">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostLogRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-233">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-234">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostLogRequest" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-234">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-235">비동기 <see cref="E:System.Web.HttpApplication.PostLogRequest" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-235">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-236">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-236">Adds the specified <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostMapRequestHandlerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-237">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-237">Adds the specified <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostMapRequestHandlerAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostMapRequestHandlerAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostMapRequestHandlerAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostMapRequestHandlerAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-238">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-238">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-239">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-239">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-240">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-240">Adds the specified <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostMapRequestHandlerAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostMapRequestHandlerAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostMapRequestHandlerAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostMapRequestHandlerAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-241">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-241">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-242">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-242">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-243">비동기 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> 컬렉션에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-243">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-244">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-244">Adds the specified <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostReleaseRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-245">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-245">Adds the specified <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostReleaseRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostReleaseRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostReleaseRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostReleaseRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-246">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-246">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-247">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-247">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-248">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-248">Adds the specified <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostReleaseRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostReleaseRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostReleaseRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostReleaseRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-249">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-249">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-250">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-250">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-251">비동기 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-251">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-252">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-252">Adds the specified <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostRequestHandlerExecuteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-253">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-253">Adds the specified <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostRequestHandlerExecuteAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostRequestHandlerExecuteAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostRequestHandlerExecuteAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-254">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-254">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-255">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-255">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-256">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-256">Adds the specified <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostRequestHandlerExecuteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostRequestHandlerExecuteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostRequestHandlerExecuteAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-257">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-257">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-258">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-258">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-259">비동기 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-259">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-260">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-260">Adds the specified <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostResolveRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-261">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-261">Adds the specified <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostResolveRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostResolveRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostResolveRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostResolveRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-262">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-262">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-263">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-263">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-264">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-264">Adds the specified <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostResolveRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostResolveRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostResolveRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostResolveRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-265">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-265">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-266">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-266">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-267">비동기 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-267">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-268">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-268">Adds the specified <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostUpdateRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-269">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-269">Adds the specified <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostUpdateRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostUpdateRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostUpdateRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-270">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-270">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-271">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-271">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-272">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-272">Adds the specified <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostUpdateRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostUpdateRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostUpdateRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-273">이벤트의 비동기 처리를 시작하는 <see cref="T:System.Web.BeginEventHandler" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-273">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the event.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-274">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-274">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-275">비동기 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-275">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-276">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-276">Adds the specified <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPreRequestHandlerExecuteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-277">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-277">Adds the specified <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPreRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRequestHandlerExecuteAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRequestHandlerExecuteAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPreRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPreRequestHandlerExecuteAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-278">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-278">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-279">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-279">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-280">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-280">Adds the specified <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPreRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRequestHandlerExecuteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRequestHandlerExecuteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPreRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPreRequestHandlerExecuteAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-281">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-281">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-282">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-282">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-283">비동기 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> 컬렉션에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-283">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-284">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-284">Adds the specified <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnReleaseRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-285">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-285">Adds the specified <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnReleaseRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnReleaseRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnReleaseRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnReleaseRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-286">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-286">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-287">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-287">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-288">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-288">Adds the specified <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnReleaseRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnReleaseRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnReleaseRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnReleaseRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-289">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-289">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-290">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-290">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-291">비동기 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-291">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-292">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-292">Adds the specified <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnResolveRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-293">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> 이벤트 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-293">Adds the specified <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handler to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnResolveRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnResolveRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnResolveRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnResolveRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-294">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-294">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-295">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-295">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-296">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> 이벤트 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-296">Adds the specified <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handler to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnResolveRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnResolveRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnResolveRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnResolveRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-297">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-297">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-298">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-298">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-299">비동기 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-299">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-300">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> 이벤트 처리기를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-300">Adds the specified <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handler to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnUpdateRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="663de-301">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-301">Adds the specified <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnUpdateRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnUpdateRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnUpdateRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="663de-302">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-302">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="663de-303">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-303">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-304">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-304">Adds the specified <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnUpdateRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnUpdateRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnUpdateRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="663de-305">
            <see cref="T:System.Web.BeginEventHandler" />의 비동기 처리를 시작하는 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-305">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="663de-306">
            <see cref="T:System.Web.EndEventHandler" />의 비동기 처리를 끝내는 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-306">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="663de-307">비동기 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />에 추가할 관련 상태입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-307">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-308">현재 요청에 대한 비동기 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> 이벤트 처리기의 컬렉션에 지정된 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> 이벤트를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-308">Adds the specified <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.HttpApplication.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-309">응용 프로그램의 현재 상태를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-309">Gets the current state of an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-310">현재 요청에 대한 <see cref="T:System.Web.HttpApplicationState" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-310">The <see cref="T:System.Web.HttpApplicationState" /> for the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-311">응용 프로그램의 현재 상태는.NET Framework 개체와 여러 클라이언트에서 여러 웹 요청에 관련 된 스칼라 값을 저장 하는 데 사용할 수 있는 응용 프로그램 수준 개체의 키/값 사전으로 구성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-311">The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateRequest">
      <MemberSignature Language="C#" Value="public event EventHandler AuthenticateRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AuthenticateRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AuthenticateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthenticateRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AuthenticateRequest;" />
      <MemberSignature Language="F#" Value="member this.AuthenticateRequest : EventHandler " Usage="member this.AuthenticateRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-312">보안 모듈에서 사용자의 ID를 설정한 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-312">Occurs when a security module has established the identity of the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-313"><xref:System.Web.HttpApplication.AuthenticateRequest> 이벤트 구성 된 인증 메커니즘에서 현재 요청을 인증에 신호를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="663de-313">The <xref:System.Web.HttpApplication.AuthenticateRequest> event signals that the configured authentication mechanism has authenticated the current request.</span></span> <span data-ttu-id="663de-314">구독 하는 <xref:System.Web.HttpApplication.AuthenticateRequest> 이벤트 확인 요청은 연결된 된 모듈 또는 이벤트 처리기를 처리 하기 전에 인증 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-314">Subscribing to the <xref:System.Web.HttpApplication.AuthenticateRequest> event ensures that the request will be authenticated before processing the attached module or event handler.</span></span>  
  
 <span data-ttu-id="663de-315">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-315">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />
      </Docs>
    </Member>
    <Member MemberName="AuthorizeRequest">
      <MemberSignature Language="C#" Value="public event EventHandler AuthorizeRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AuthorizeRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AuthorizeRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AuthorizeRequest;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeRequest : EventHandler " Usage="member this.AuthorizeRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-316">보안 모듈에서 사용자 인증을 확인한 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-316">Occurs when a security module has verified user authorization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-317"><xref:System.Web.HttpApplication.AuthorizeRequest> 이벤트 신호 ASP.NET 현재 요청에 권한이 부여 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-317">The <xref:System.Web.HttpApplication.AuthorizeRequest> event signals that ASP.NET has authorized the current request.</span></span> <span data-ttu-id="663de-318">구독 하는 <xref:System.Web.HttpApplication.AuthorizeRequest> 이벤트 요청 인증 하며 연결된 된 모듈 또는 이벤트 처리기를 처리 하기 전에 권한이 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-318">Subscribing to the <xref:System.Web.HttpApplication.AuthorizeRequest> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.</span></span>  
  
 <span data-ttu-id="663de-319">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-319">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public event EventHandler BeginRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BeginRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.BeginRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BeginRequest;" />
      <MemberSignature Language="F#" Value="member this.BeginRequest : EventHandler " Usage="member this.BeginRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-320">ASP.NET이 요청에 응답할 때 HTTP 파이프라인 형태의 첫 번째 이벤트로 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-320">Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-321"><xref:System.Web.HttpApplication.BeginRequest> 이벤트에 제공된 된 새 요청 만들기 신호로 알립니다.</span><span class="sxs-lookup"><span data-stu-id="663de-321">The <xref:System.Web.HttpApplication.BeginRequest> event signals the creation of any given new request.</span></span> <span data-ttu-id="663de-322">이 이벤트는 항상 발생 며 항상 첫 번째 요청을 처리 하는 동안 발생할 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-322">This event is always raised and is always the first event to occur during the processing of a request.</span></span>  
  
 <span data-ttu-id="663de-323">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-323">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.EndRequest" />
      </Docs>
    </Member>
    <Member MemberName="CompleteRequest">
      <MemberSignature Language="C#" Value="public void CompleteRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.CompleteRequest" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteRequest();" />
      <MemberSignature Language="F#" Value="member this.CompleteRequest : unit -&gt; unit" Usage="httpApplication.CompleteRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="663de-324">ASP.NET이 실행의 HTTP 파이프라인 체인에 있는 모든 이벤트와 필터링을 무시하고 <see cref="E:System.Web.HttpApplication.EndRequest" /> 이벤트를 직접 실행하도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-324">Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.HttpApplication.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-325">현재 요청에 대한 HTTP 관련 정보를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-325">Gets HTTP-specific information about the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-326">현재 요청에 대한 <see cref="T:System.Web.HttpContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-326">The <see cref="T:System.Web.HttpContext" /> for the current request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="httpApplication.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="663de-327">
            <see cref="T:System.Web.HttpApplication" /> 인스턴스를 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-327">Disposes the <see cref="T:System.Web.HttpApplication" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-328"><xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, 및 <xref:System.Web.HttpApplication.Application%2A> 속성을 사용할 수 없는 때 사용할를 <xref:System.Web.HttpApplication.Dispose%2A> 메서드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-328">The <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, and <xref:System.Web.HttpApplication.Application%2A> properties are not available for use when the <xref:System.Web.HttpApplication.Dispose%2A> method executes.</span></span>  
  
 <span data-ttu-id="663de-329">합니다 <xref:System.Web.HttpApplication.Dispose%2A> 메서드 호출을 <xref:System.Web.IHttpModule.Dispose%2A> 등록 된 각 메서드 <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> 응용 프로그램 인스턴스를 발생 시킵니다를 <xref:System.Web.HttpApplication.Disposed> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-329">The <xref:System.Web.HttpApplication.Dispose%2A> method calls the <xref:System.Web.IHttpModule.Dispose%2A> method on each of the registered <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> in the application instance and raises the <xref:System.Web.HttpApplication.Disposed> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="663de-330">
            <para>재정의 하는 경우 <see cref="M:System.Web.HttpApplication.Dispose" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Web.HttpApplication.Dispose" /> 메서드에 등록 된 대리자가 이벤트를 받도록 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-330">
              <para>When overriding <see cref="M:System.Web.HttpApplication.Dispose" /> in a derived class, make sure to call the base class's <see cref="M:System.Web.HttpApplication.Dispose" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-331">응용 프로그램이 삭제되는 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-331">Occurs when the application is disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-332"><xref:System.Web.HttpApplication.Disposed> 대리자를 만드는 경우 이벤트를 처리하는 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-332">When you create a <xref:System.Web.HttpApplication.Disposed> delegate, you identify the method that handles the event.</span></span> <span data-ttu-id="663de-333">이벤트를 이벤트 처리기를 연결 하려면 인스턴스를 추가 합니다 <xref:System.Web.HttpApplication.Disposed> 이벤트에 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-333">To associate the event with your event handler, add an instance of the <xref:System.Web.HttpApplication.Disposed> delegate to the event.</span></span> <span data-ttu-id="663de-334">제거 하지 않으면 이벤트 처리기는 이벤트가 발생할 때마다에 호출 됩니다는 <xref:System.Web.HttpApplication.Disposed> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-334">The event handler is called whenever the event occurs, unless you remove the <xref:System.Web.HttpApplication.Disposed> delegate.</span></span>  
  
 <span data-ttu-id="663de-335">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-335">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public event EventHandler EndRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EndRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.EndRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EndRequest;" />
      <MemberSignature Language="F#" Value="member this.EndRequest : EventHandler " Usage="member this.EndRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-336">ASP.NET이 요청에 응답할 때 실행의 HTTP 파이프라인 체인에서 마지막 이벤트로 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-336">Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-337"><xref:System.Web.HttpApplication.EndRequest> 이벤트는 항상 때 발생 합니다 <xref:System.Web.HttpApplication.CompleteRequest%2A> 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-337">The <xref:System.Web.HttpApplication.EndRequest> event is always raised when the <xref:System.Web.HttpApplication.CompleteRequest%2A> method is called.</span></span>  
  
 <span data-ttu-id="663de-338">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-338">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.BeginRequest" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : EventHandler " Usage="member this.Error : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-339">처리되지 않은 예외가 throw되는 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-339">Occurs when an unhandled exception is thrown.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-340">예외를 발생 시키는 합니다 <xref:System.Web.HttpApplication.Error> 이벤트를 호출 하 여 액세스할 수는 <xref:System.Web.HttpServerUtility.GetLastError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="663de-340">The exception that raises the <xref:System.Web.HttpApplication.Error> event can be accessed by a call to the <xref:System.Web.HttpServerUtility.GetLastError%2A> method.</span></span> <span data-ttu-id="663de-341">호출 하 여 ASP.NET에서 생성 되는 기본 오류 메시지를 표시 하지 않을 경우 사용자 지정 오류 출력을 생성 하는 응용 프로그램을 <xref:System.Web.HttpServerUtility.ClearError%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="663de-341">If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <xref:System.Web.HttpServerUtility.ClearError%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="663de-342">XML Web services를 포함 하는 웹 응용 프로그램을 사용할 수 없습니다는 <xref:System.Web.HttpApplication.Error> 이러한 서비스의 전역 예외 처리에 대 한 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-342">If your Web application contains XML Web services, you cannot use the <xref:System.Web.HttpApplication.Error> event for global exception handling of those services.</span></span> <span data-ttu-id="663de-343">XML 웹 서비스에서 발생 하기 전에 SOAP 오류를 변환 하는 모든 예외를 사용 하는 XML Web services에 대 한 HTTP 처리기는 <xref:System.Web.HttpApplication.Error> 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-343">The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <xref:System.Web.HttpApplication.Error> being called.</span></span> <span data-ttu-id="663de-344">XML 웹 서비스 예외를 처리 하려면 사용자 지정 전역 예외 처리기에서 웹 서비스 예외를 처리 하도록 SOAP 확장을 빌드하십시오.</span><span class="sxs-lookup"><span data-stu-id="663de-344">To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.</span></span>  
  
 <span data-ttu-id="663de-345">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-345">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.HttpApplication.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-346">모든 응용 프로그램 이벤트를 처리하는 이벤트 처리기 대리자 목록을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-346">Gets the list of event handler delegates that process all application events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-347">이벤트 처리기 대리자의 이름을 포함하는 <see cref="T:System.ComponentModel.EventHandlerList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-347">An <see cref="T:System.ComponentModel.EventHandlerList" /> that contains the names of the event handler delegates.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputCacheProviderName">
      <MemberSignature Language="C#" Value="public virtual string GetOutputCacheProviderName (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetOutputCacheProviderName(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutputCacheProviderName (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetOutputCacheProviderName(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputCacheProviderName : System.Web.HttpContext -&gt; string&#xA;override this.GetOutputCacheProviderName : System.Web.HttpContext -&gt; string" Usage="httpApplication.GetOutputCacheProviderName context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="663de-348">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 <see cref="T:System.Web.HttpContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-348">An <see cref="T:System.Web.HttpContext" /> that provides references to intrinsic server objects that are used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-349">웹 사이트에 대해 구성된 기본 출력 캐시 공급자의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-349">Gets the name of the default output-cache provider that is configured for a Web site.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="663de-350">기본 공급자의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-350">The name of the default provider.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-351">이 메서드를 재정의 하 고 사용 하 여 웹 사이트에 대해 구성 된 모든 출력 캐시 공급자의 이름을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-351">You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.</span></span> <span data-ttu-id="663de-352">ASP.NET는 명명된 된 공급자에 대 한 참조를 검색 하 고 현재 실행 중인 요청에 대 한 출력 캐시 데이터를 저장 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-352">ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.</span></span>  
  
 <span data-ttu-id="663de-353">기본적으로 ASP.NET에서 페이지 및 컨트롤을 렌더링 하는 모든 HTTP 응답에는 메모리에 출력 캐시를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-353">By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.</span></span> <span data-ttu-id="663de-354">다른 공급자 이름을 지정 하 여 웹 응용 프로그램에 사용 되는 기본 출력 캐시 공급자를 변경할 수 있습니다 `defaultProvider`합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-354">You can change the default output-cache provider that is used for a Web application by specifying a different provider name for `defaultProvider`.</span></span>  
  
 <span data-ttu-id="663de-355">또한 개별 컨트롤을 개별 요청에 대 한 다양 한 출력 캐시 공급자를 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-355">In addition, you can select different output-cache providers for individual control and for individual requests.</span></span> <span data-ttu-id="663de-356">다른 웹 사용자 컨트롤에 대 한 다양 한 출력 캐시 공급자를 선택 하는 가장 쉬운 방법은 new를 사용 하 여 선언적으로 작업을 수행 하는 `providerName` 페이지 또는 제어 지시문을 다음 예제에서와 같이 특성:</span><span class="sxs-lookup"><span data-stu-id="663de-356">The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new `providerName` attribute in a page or control directive, as shown in the following example:</span></span>  
  
```  
<%@ OutputCache Duration="60" VaryByParam="None"   
    providerName="DiskCache" %>  
```  
  
 <span data-ttu-id="663de-357">HTTP 요청에 대 한 다양 한 출력 캐시 공급자를 지정 하려면 프로그래밍 방식으로 특정 요청에 사용할 공급자를 지정 하려면 Global.asax 파일에이 메서드를 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-357">To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.</span></span> <span data-ttu-id="663de-358">자세한 내용은 [ASP.NET 캐싱 개요](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-358">For more information, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663de-359">다음 예제에서는 프로그래밍 방식으로 명명 된 캐시 공급자를 지정 하는 방법을 보여 줍니다 `DiskCache` Advanced.aspx 페이지로 이동 하는 모든 HTTP 요청에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-359">The following example shows how to programmatically specify the cache provider named `DiskCache` for any HTTP request that goes to the Advanced.aspx page.</span></span>  

```csharp  
public override string GetOutputCacheProviderName(HttpContext context)  
{  
    if (context.Request.Path.EndsWith("Advanced.aspx"))  
        return "DiskCache";  
    else  
        return base.GetOutputCacheProviderName(context);  
}  
```  

```vb  
Public Overloads Overrides Sub GetOutputCacheProviderName(ByVal context _  
        As HttpContext) As String   
    If context.Request.Path.EndsWith("Advanced.aspx") Then   
        Return "DiskCache"   
    Else   
        Return MyBase.GetOutputCacheProviderName(context)   
    End If   
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <span data-ttu-id="663de-360">
            <paramref name="context" />을를는 <see langword="null" />을를이거나 빈 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-360">
              <paramref name="context" /> is <see langword="null" /> or is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVaryByCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetVaryByCustomString (System.Web.HttpContext context, string custom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetVaryByCustomString(class System.Web.HttpContext context, string custom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVaryByCustomString (context As HttpContext, custom As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetVaryByCustomString(System::Web::HttpContext ^ context, System::String ^ custom);" />
      <MemberSignature Language="F#" Value="abstract member GetVaryByCustomString : System.Web.HttpContext * string -&gt; string&#xA;override this.GetVaryByCustomString : System.Web.HttpContext * string -&gt; string" Usage="httpApplication.GetVaryByCustomString (context, custom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="custom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="663de-361">현재 웹 요청에 대한 정보가 들어 있는 <see cref="T:System.Web.HttpContext" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-361">An <see cref="T:System.Web.HttpContext" /> object that contains information about the current Web request.</span>
          </span>
        </param>
        <param name="custom">
          <span data-ttu-id="663de-362">현재 요청에 응답하는 데 사용되는 캐시된 응답을 지정하는 사용자 지정 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-362">The custom string that specifies which cached response is used to respond to the current request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-363">
            <see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /> 속성의 응용 프로그램 전반적인 구현을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-363">Provides an application-wide implementation of the <see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="663de-364">
            <paramref name="custom" /> 매개 변수의 값이 <see langword="&quot;browser&quot;" />이면 브라우저의 <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-364">If the value of the <paramref name="custom" /> parameter is <see langword="&quot;browser&quot;" />, the browser's <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-365">재정의할 수 있습니다 <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> 현재 요청을 기반으로 하는 사용자 지정 다 별 값 계산에 대 한 새 메서드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-365">You can override <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> to add a new method for calculating custom vary-by values that are based on the current request.</span></span> <span data-ttu-id="663de-366">구현에서 인식 하지 못하는 사용자 지정 값에 대 한 기본 클래스를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-366">The implementation has to call the base class for custom values that it does not recognize.</span></span> <span data-ttu-id="663de-367">자세한 내용은 참조 하세요. [방법: 여러 버전의 페이지를 사용 하 여 사용자 지정 문자열 캐시](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-367">For more information, see [How to: Cache Versions of a Page Using Custom Strings](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.Init" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpApplication.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="663de-368">모든 이벤트 처리기 모듈이 추가된 후 사용자 지정 초기화 코드를 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-368">Executes custom initialization code after all event handler modules have been added.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-369">파생된 클래스에서 재정의할 수 있습니다는 <xref:System.Web.HttpApplication.Init%2A> 사용자 지정 초기화 코드를 추가 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-369">In a derived class, you can override the <xref:System.Web.HttpApplication.Init%2A> method to add custom one-time initialization code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequest">
      <MemberSignature Language="C#" Value="public event EventHandler LogRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LogRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.LogRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LogRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LogRequest;" />
      <MemberSignature Language="F#" Value="member this.LogRequest : EventHandler " Usage="member this.LogRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-370">ASP.NET에서 현재 요청에 대한 로깅을 수행하기 직전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-370">Occurs just before ASP.NET performs any logging for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-371"><xref:System.Web.HttpApplication.LogRequest> 오류가 발생 하는 경우에 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-371">The <xref:System.Web.HttpApplication.LogRequest> event is raised even if an error occurs.</span></span> <span data-ttu-id="663de-372">에 대 한 이벤트 처리기를 제공할 수 있습니다는 <xref:System.Web.HttpApplication.LogRequest> 요청에 대 한 사용자 지정 로깅을 제공 하는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-372">You can provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event to provide custom logging for the request.</span></span>  
  
 <span data-ttu-id="663de-373">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-373">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="663de-374"><xref:System.Web.HttpApplication.LogRequest> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-374"><xref:System.Web.HttpApplication.LogRequest> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-375">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-375">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="663de-376">다음 예제에 대 한 이벤트 처리기를 제공 하는 방법에 설명 합니다 <xref:System.Web.HttpApplication.LogRequest> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-376">The following example demonstrates how to provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event.</span></span> <span data-ttu-id="663de-377">이벤트 처리기도 다른 여러 이벤트를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-377">The event handler also handles several other events.</span></span> <span data-ttu-id="663de-378">따라서 합니다 <xref:System.Web.HttpContext.CurrentNotification%2A> 고 <xref:System.Web.HttpContext.IsPostNotification%2A> 속성은 실행할 코드를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-378">Therefore, the <xref:System.Web.HttpContext.CurrentNotification%2A> and <xref:System.Web.HttpContext.IsPostNotification%2A> properties are used to determine what code to run.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostLogRequest" />
      </Docs>
    </Member>
    <Member MemberName="MapRequestHandler">
      <MemberSignature Language="C#" Value="public event EventHandler MapRequestHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MapRequestHandler" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.MapRequestHandler" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MapRequestHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MapRequestHandler;" />
      <MemberSignature Language="F#" Value="member this.MapRequestHandler : EventHandler " Usage="member this.MapRequestHandler : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-379">요청에 응답하기 위해 처리기를 선택할 때 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-379">Occurs when the handler is selected to respond to the request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-380"><xref:System.Web.HttpApplication.MapRequestHandler> 이벤트는 ASP.NET 인프라에서 현재 요청에 대 한 요청 처리기를 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-380">The <xref:System.Web.HttpApplication.MapRequestHandler> event is used by the ASP.NET infrastructure to determine the request handler for the current request.</span></span> <span data-ttu-id="663de-381">자세한 내용은 [방법: HTTP 처리기 등록](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-381">For more information, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span></span>  
  
 <span data-ttu-id="663de-382">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-382">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="663de-383"><xref:System.Web.HttpApplication.MapRequestHandler> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-383"><xref:System.Web.HttpApplication.MapRequestHandler> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-384">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-384">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostMapRequestHandler" />
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public System.Web.HttpModuleCollection Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpModuleCollection Modules" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As HttpModuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpModuleCollection ^ Modules { System::Web::HttpModuleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : System.Web.HttpModuleCollection" Usage="System.Web.HttpApplication.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpModuleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-385">현재 응용 프로그램에 대한 모듈의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-385">Gets the collection of modules for the current application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-386">응용 프로그램의 모듈 이름을 포함하는 <see cref="T:System.Web.HttpModuleCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-386">An <see cref="T:System.Web.HttpModuleCollection" /> that contains the names of the modules for the application.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteRequestStep">
      <MemberSignature Language="C#" Value="public void OnExecuteRequestStep (Action&lt;System.Web.HttpContextBase,Action&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnExecuteRequestStep(class System.Action`2&lt;class System.Web.HttpContextBase, class System.Action&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnExecuteRequestStep (callback As Action(Of HttpContextBase, Action))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnExecuteRequestStep(Action&lt;System::Web::HttpContextBase ^, Action ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.OnExecuteRequestStep : Action&lt;System.Web.HttpContextBase, Action&gt; -&gt; unit" Usage="httpApplication.OnExecuteRequestStep callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase,System.Action&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="663de-387">콜백 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-387">The callback method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-388">요청 실행 단계가 실행될 때 호출할 콜백을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-388">Specifies a callback to invoke when a request execution step is executed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="663de-389">이 메서드는 개발자가 쉽게 앰비언트 컨텍스트의 시나리오에서 기능을 구현 하 고 ASP.NET 실행 흐름을 고려 하는 라이브러리를 빌드할 수 있도록 ASP.NET 파이프라인에는 확장성을 제공 (예를 들어, 추적, 프로 파일링, 진단 및 트랜잭션)입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-389">This method provides extensibility to the ASP.NET pipeline to make it easy for developers to implement features in ambient context scenarios and build libraries that care about ASP.NET execution flow (for example, tracing, profiling, diagnostics, and transactions).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostAcquireRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler PostAcquireRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAcquireRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAcquireRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAcquireRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAcquireRequestState;" />
      <MemberSignature Language="F#" Value="member this.PostAcquireRequestState : EventHandler " Usage="member this.PostAcquireRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-390">현재 요청과 관련된 요청 상태(예: 세션 상태)를 가져온 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-390">Occurs when the request state (for example, session state) that is associated with the current request has been obtained.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-391"><xref:System.Web.HttpApplication.PostAcquireRequestState> 이벤트가 발생 한 후의 <xref:System.Web.HttpApplication.AcquireRequestState> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-391">The <xref:System.Web.HttpApplication.PostAcquireRequestState> event is raised after the <xref:System.Web.HttpApplication.AcquireRequestState> event has occurred.</span></span> <span data-ttu-id="663de-392">구독 하는 기능을 <xref:System.Web.HttpApplication.AcquireRequestState> 이벤트에 의해 처리 되는 모든 데이터에 액세스할 수는 <xref:System.Web.HttpApplication.PostAcquireRequestState>합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-392">Functionality that subscribes to the <xref:System.Web.HttpApplication.AcquireRequestState> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAcquireRequestState>.</span></span>  
  
 <span data-ttu-id="663de-393">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-393">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AcquireRequestState" />
      </Docs>
    </Member>
    <Member MemberName="PostAuthenticateRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostAuthenticateRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAuthenticateRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAuthenticateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAuthenticateRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAuthenticateRequest;" />
      <MemberSignature Language="F#" Value="member this.PostAuthenticateRequest : EventHandler " Usage="member this.PostAuthenticateRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-394">보안 모듈에서 사용자의 ID를 설정한 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-394">Occurs when a security module has established the identity of the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-395"><xref:System.Web.HttpApplication.PostAuthenticateRequest> 이벤트가 발생 한 후의 <xref:System.Web.HttpApplication.AuthenticateRequest> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-395">The <xref:System.Web.HttpApplication.PostAuthenticateRequest> event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event has occurred.</span></span> <span data-ttu-id="663de-396">구독 하는 기능을 <xref:System.Web.HttpApplication.PostAuthenticateRequest> 이벤트에 의해 처리 되는 모든 데이터에 액세스할 수는 <xref:System.Web.HttpApplication.PostAuthenticateRequest>합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-396">Functionality that subscribes to the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAuthenticateRequest>.</span></span>  
  
 <span data-ttu-id="663de-397">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-397">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AuthenticateRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostAuthorizeRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostAuthorizeRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAuthorizeRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAuthorizeRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAuthorizeRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAuthorizeRequest;" />
      <MemberSignature Language="F#" Value="member this.PostAuthorizeRequest : EventHandler " Usage="member this.PostAuthorizeRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-398">현재 요청의 사용자에게 권한이 부여된 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-398">Occurs when the user for the current request has been authorized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-399"><xref:System.Web.HttpApplication.PostAuthorizeRequest> 이벤트 신호 ASP.NET 현재 요청에 권한이 부여 됩니다.</span><span class="sxs-lookup"><span data-stu-id="663de-399">The <xref:System.Web.HttpApplication.PostAuthorizeRequest> event signals that ASP.NET has authorized the current request.</span></span> <span data-ttu-id="663de-400">구독 하는 <xref:System.Web.HttpApplication.PostAuthorizeRequest> 이벤트 인증 및 연결된 된 모듈 또는 이벤트 처리기를 처리 하기 전에 요청의 권한 부여를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-400">Subscribing to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> event ensures authentication and authorization of the request before processing the attached module or event handler.</span></span>  
  
 <span data-ttu-id="663de-401">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-401">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AuthorizeRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostLogRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostLogRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostLogRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostLogRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostLogRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostLogRequest;" />
      <MemberSignature Language="F#" Value="member this.PostLogRequest : EventHandler " Usage="member this.PostLogRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-402">ASP.NET에서 <see cref="E:System.Web.HttpApplication.LogRequest" /> 이벤트에 대한 모든 이벤트 처리기의 처리를 완료한 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-402">Occurs when ASP.NET has completed processing all the event handlers for the <see cref="E:System.Web.HttpApplication.LogRequest" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-403">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-403">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="663de-404"><xref:System.Web.HttpApplication.PostLogRequest> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-404"><xref:System.Web.HttpApplication.PostLogRequest> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="663de-405">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="663de-405">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.LogRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostMapRequestHandler">
      <MemberSignature Language="C#" Value="public event EventHandler PostMapRequestHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostMapRequestHandler" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostMapRequestHandler" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostMapRequestHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostMapRequestHandler;" />
      <MemberSignature Language="F#" Value="member this.PostMapRequestHandler : EventHandler " Usage="member this.PostMapRequestHandler : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-406">ASP.NET에서 현재 요청을 적절한 이벤트 처리기에 매핑한 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-406">Occurs when ASP.NET has mapped the current request to the appropriate event handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-407">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-407">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.MapRequestHandler" />
      </Docs>
    </Member>
    <Member MemberName="PostReleaseRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler PostReleaseRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostReleaseRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostReleaseRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostReleaseRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostReleaseRequestState;" />
      <MemberSignature Language="F#" Value="member this.PostReleaseRequestState : EventHandler " Usage="member this.PostReleaseRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-408">ASP.NET에서 모든 요청 이벤트 처리기의 실행을 완료하고 요청 상태 데이터가 저장된 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-408">Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-409">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-409">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ReleaseRequestState" />
      </Docs>
    </Member>
    <Member MemberName="PostRequestHandlerExecute">
      <MemberSignature Language="C#" Value="public event EventHandler PostRequestHandlerExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostRequestHandlerExecute" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostRequestHandlerExecute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostRequestHandlerExecute As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostRequestHandlerExecute;" />
      <MemberSignature Language="F#" Value="member this.PostRequestHandlerExecute : EventHandler " Usage="member this.PostRequestHandlerExecute : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-410">ASP.NET 이벤트 처리기(예: 페이지 또는 XML Web services)가 실행을 완료하는 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-410">Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-411">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-411">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />
      </Docs>
    </Member>
    <Member MemberName="PostResolveRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler PostResolveRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostResolveRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostResolveRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostResolveRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostResolveRequestCache;" />
      <MemberSignature Language="F#" Value="member this.PostResolveRequestCache : EventHandler " Usage="member this.PostResolveRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-412">ASP.NET에서 현재 이벤트 처리기의 실행을 무시하고 캐싱 모듈에서 캐시 요청을 처리하도록 허용하는 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-412">Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-413">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-413">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="PostUpdateRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler PostUpdateRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostUpdateRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostUpdateRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostUpdateRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostUpdateRequestCache;" />
      <MemberSignature Language="F#" Value="member this.PostUpdateRequestCache : EventHandler " Usage="member this.PostUpdateRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-414">ASP.NET에서 캐싱 모듈의 업데이트 및 캐시의 다음 요청을 처리하는 데 사용되는 응답의 저장을 완료하는 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-414">Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-415"><xref:System.Web.HttpApplication.PostUpdateRequestCache> 이벤트가 발생 한 후의 <xref:System.Web.HttpApplication.UpdateRequestCache> 이벤트가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-415">The <xref:System.Web.HttpApplication.PostUpdateRequestCache> event is raised after the <xref:System.Web.HttpApplication.UpdateRequestCache> event has occurred.</span></span> <span data-ttu-id="663de-416">경우는 <xref:System.Web.HttpApplication.PostUpdateRequestCache> 은 ASP.NET 처리 코드 완료 발생 하 고 캐시의 콘텐츠를 최종적으로 마무리 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-416">When the <xref:System.Web.HttpApplication.PostUpdateRequestCache> is raised, ASP.NET has completed processing code and the content of the cache is finalized.</span></span>  
  
 <span data-ttu-id="663de-417">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-417">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.UpdateRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="PreRequestHandlerExecute">
      <MemberSignature Language="C#" Value="public event EventHandler PreRequestHandlerExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRequestHandlerExecute" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreRequestHandlerExecute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRequestHandlerExecute As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRequestHandlerExecute;" />
      <MemberSignature Language="F#" Value="member this.PreRequestHandlerExecute : EventHandler " Usage="member this.PreRequestHandlerExecute : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-418">ASP.NET에서 페이지 또는 XML Web services 같은 이벤트 처리기의 실행을 시작하기 바로 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-418">Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-419">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-419">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />
      </Docs>
    </Member>
    <Member MemberName="PreSendRequestContent">
      <MemberSignature Language="C#" Value="public event EventHandler PreSendRequestContent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreSendRequestContent" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreSendRequestContent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreSendRequestContent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreSendRequestContent;" />
      <MemberSignature Language="F#" Value="member this.PreSendRequestContent : EventHandler " Usage="member this.PreSendRequestContent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-420">ASP.NET에서 클라이언트로 내용을 보내기 바로 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-420">Occurs just before ASP.NET sends content to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-421"><xref:System.Web.HttpApplication.PreSendRequestContent> 이벤트가 여러 번 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-421">The <xref:System.Web.HttpApplication.PreSendRequestContent> event may occur multiple times.</span></span>  
  
 <span data-ttu-id="663de-422">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-422">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
 > [!WARNING]
 > <span data-ttu-id="663de-423">사용 하지 마세요 `PreSendRequestContent` 구현 하는 관리 되는 모듈을 사용 하 여 `IHttpModule`입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-423">Do not use `PreSendRequestContent` with managed modules that implement `IHttpModule`.</span></span> <span data-ttu-id="663de-424">이러한 속성을 설정 하면 비동기 요청을 사용 하 여 문제가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-424">Setting these properties can cause issues with asynchronous requests.</span></span> <span data-ttu-id="663de-425">응용 프로그램 요청 라우팅 (ARR) 및 websocket의 조합을 w3wp 충돌을 일으킬 수 있는 액세스 위반 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-425">The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</span></span> <span data-ttu-id="663de-426">예를 들어 iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 iiscore.dll에서 액세스 위반 예외 (0xC0000005) 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-426">For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</span></span>
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreSendRequestHeaders" />
      </Docs>
    </Member>
    <Member MemberName="PreSendRequestHeaders">
      <MemberSignature Language="C#" Value="public event EventHandler PreSendRequestHeaders;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreSendRequestHeaders" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreSendRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreSendRequestHeaders As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreSendRequestHeaders;" />
      <MemberSignature Language="F#" Value="member this.PreSendRequestHeaders : EventHandler " Usage="member this.PreSendRequestHeaders : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-427">ASP.NET에서 클라이언트로 HTTP 헤더를 보내기 바로 전에 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-427">Occurs just before ASP.NET sends HTTP headers to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-428">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-428">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
 > [!WARNING]
 > <span data-ttu-id="663de-429">사용 하지 마세요 `PreSendRequestHeaders` 구현 하는 관리 되는 모듈을 사용 하 여 `IHttpModule`입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-429">Do not use `PreSendRequestHeaders` with managed modules that implement `IHttpModule`.</span></span> <span data-ttu-id="663de-430">이러한 속성을 설정 하면 비동기 요청을 사용 하 여 문제가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-430">Setting these properties can cause issues with asynchronous requests.</span></span> <span data-ttu-id="663de-431">응용 프로그램 요청 라우팅 (ARR) 및 websocket의 조합을 w3wp 충돌을 일으킬 수 있는 액세스 위반 예외가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-431">The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</span></span> <span data-ttu-id="663de-432">예를 들어 iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 iiscore.dll에서 액세스 위반 예외 (0xC0000005) 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-432">For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</span></span>
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreSendRequestContent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterModule">
      <MemberSignature Language="C#" Value="public static void RegisterModule (Type moduleType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterModule(class System.Type moduleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.RegisterModule(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterModule (moduleType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterModule(Type ^ moduleType);" />
      <MemberSignature Language="F#" Value="static member RegisterModule : Type -&gt; unit" Usage="System.Web.HttpApplication.RegisterModule moduleType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="moduleType">
          <span data-ttu-id="663de-433">모듈의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-433">The type of the module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-434">응용 프로그램 모듈을 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-434">Registers an application module.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler ReleaseRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReleaseRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.ReleaseRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReleaseRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReleaseRequestState;" />
      <MemberSignature Language="F#" Value="member this.ReleaseRequestState : EventHandler " Usage="member this.ReleaseRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-435">ASP.NET에서 모든 요청 이벤트 처리기 실행을 완료한 후 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-435">Occurs after ASP.NET finishes executing all request event handlers.</span>
          </span>
          <span data-ttu-id="663de-436">이 이벤트는 상태 모듈이 현재 상태 데이터를 저장할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-436">This event causes state modules to save the current state data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-437">경우는 <xref:System.Web.HttpApplication.ReleaseRequestState> 이벤트가 발생 하 고 응용 프로그램 요청이 완료 되 면 ASP.NET 요청 상태 저장 신호 알림.</span><span class="sxs-lookup"><span data-stu-id="663de-437">When the <xref:System.Web.HttpApplication.ReleaseRequestState> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.</span></span>  
  
 <span data-ttu-id="663de-438">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-438">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostReleaseRequestState" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Web.HttpRequest" Usage="System.Web.HttpApplication.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-439">현재 요청에 대한 내장 요청 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-439">Gets the intrinsic request object for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-440">응용 프로그램이 처리하고 있는 <see cref="T:System.Web.HttpRequest" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-440">The <see cref="T:System.Web.HttpRequest" /> object that the application is processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="663de-441">
            <see cref="T:System.Web.HttpRequest" /> 개체가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-441">The <see cref="T:System.Web.HttpRequest" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RequestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler RequestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RequestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.RequestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RequestCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RequestCompleted;" />
      <MemberSignature Language="F#" Value="member this.RequestCompleted : EventHandler " Usage="member this.RequestCompleted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-442">요청과 연결된 관리되는 개체를 해제한 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-442">Occurs when the managed objects that are associated with the request have been released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-443"><xref:System.Web.HttpApplication.RequestCompleted> 이벤트는 모든 관리 되는 모듈 후 호출 되 고 ASP.NET 파이프라인에서 처리기가 호출 되 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-443">The <xref:System.Web.HttpApplication.RequestCompleted> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.</span></span> <span data-ttu-id="663de-444">결국 관리 되는 모듈 및 처리기가 실행 되는 리소스를 정리 하는 모듈 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="663de-444">It enables modules to clean up resources after all managed modules and handlers have executed.</span></span> <span data-ttu-id="663de-445">특정 요청 중에 만든 관리 되는 리소스를 명시적으로 삭제 하는 데 시간이 필요한 경우이 이벤트를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-445">Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler ResolveRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResolveRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.ResolveRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResolveRequestCache;" />
      <MemberSignature Language="F#" Value="member this.ResolveRequestCache : EventHandler " Usage="member this.ResolveRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-446">ASP.NET에서 인증 이벤트를 완료하여 이벤트 처리기(예: 페이지 또는 XML Web services)의 실행을 무시하고 캐싱 모듈이 캐시 요청을 처리하도록 하는 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-446">Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-447">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-447">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Web.HttpResponse" Usage="System.Web.HttpApplication.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-448">현재 요청에 대한 내장 응답 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-448">Gets the intrinsic response object for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-449">응용 프로그램이 처리하고 있는 <see cref="T:System.Web.HttpResponse" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-449">The <see cref="T:System.Web.HttpResponse" /> object that the application is processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="663de-450">
            <see cref="T:System.Web.HttpResponse" /> 개체가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-450">The <see cref="T:System.Web.HttpResponse" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.HttpApplication.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-451">현재 요청에 대한 내장 서버 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-451">Gets the intrinsic server object for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-452">응용 프로그램이 처리하고 있는 <see cref="T:System.Web.HttpServerUtility" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-452">The <see cref="T:System.Web.HttpServerUtility" /> object that the application is processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.HttpApplication.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-453">세션 데이터에 대한 액세스를 제공하는 내장 세션 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-453">Gets the intrinsic session object that provides access to session data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-454">현재 세션에 대한 <see cref="T:System.Web.SessionState.HttpSessionState" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-454">The <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current session.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="663de-455">
            <see cref="T:System.Web.SessionState.HttpSessionState" /> 개체가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-455">The <see cref="T:System.Web.SessionState.HttpSessionState" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Web.HttpApplication.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-456">
            <see cref="T:System.ComponentModel.IComponent" /> 구현을 위한 사이트 인터페이스를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-456">Gets or sets a site interface for an <see cref="T:System.ComponentModel.IComponent" /> implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-457">컨테이너가 자식 구성 요소를 관리하고 통신할 수 있도록 하는 <see cref="T:System.ComponentModel.ISite" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-457">An <see cref="T:System.ComponentModel.ISite" /> object that allows a container to manage and communicate with its child components.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.BeginProcessRequest">
      <MemberSignature Language="C#" Value="IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.Web.IHttpAsyncHandler.BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function BeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult Implements IHttpAsyncHandler.BeginProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.Web.IHttpAsyncHandler.BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData) = System::Web::IHttpAsyncHandler::BeginProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="663de-458">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 <see cref="T:System.Web.HttpContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-458">An <see cref="T:System.Web.HttpContext" /> that provides references to intrinsic server objects that are used to service HTTP requests.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="663de-459">비동기 메서드 호출이 완료될 때 호출할 <see cref="T:System.AsyncCallback" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-459">The <see cref="T:System.AsyncCallback" /> to call when the asynchronous method call is complete.</span>
          </span>
          <span data-ttu-id="663de-460">
            <c>cb</c> 매개 변수가 <see langword="null" />이면 대리자가 호출되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-460">If the <c>cb</c> parameter is <see langword="null" />, the delegate is not called.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="663de-461">요청을 처리하는 데 필요한 추가 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-461">Any extra data that is required to process the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-462">HTTP 이벤트 처리기에 대한 비동기 호출을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-462">Initiates an asynchronous call to the HTTP event handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="663de-463">프로세스 상태에 대한 정보가 들어 있는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-463">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.EndProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpAsyncHandler.EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Sub EndProcessRequest (result As IAsyncResult) Implements IHttpAsyncHandler.EndProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult ^ result) = System::Web::IHttpAsyncHandler::EndProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="663de-464">프로세스 상태에 대한 정보가 들어 있는 <see cref="T:System.IAsyncResult" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-464">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-465">처리가 완료될 때 비동기 프로세스 <see langword="End" /> 메서드를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-465">Provides an asynchronous process <see langword="End" /> method when the process finishes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-466">사용할 수는 <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> 메서드를 비동기 프로세스 중 발생 하는 모든 예외를 발생 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="663de-466">You can use the <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> method to raise any exceptions that are caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReusable As Boolean Implements IHttpHandler.IsReusable" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.IHttpHandler.IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-467">다른 요청에서 <see cref="T:System.Web.IHttpHandler" /> 개체를 사용할 수 있는지 여부를 나타내는 <see langword="Boolean" /> 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-467">Gets a <see langword="Boolean" /> value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-468">
            <see cref="T:System.Web.IHttpHandler" /> 개체를 다시 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-468">
              <see langword="true" /> if the <see cref="T:System.Web.IHttpHandler" /> object is reusable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-469">명시적으로 설정 하는 `IsReusable` 속성을 `true` 또는 `false`, 재정의 하는 코드는 `IsReusable` 속성 접근자입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-469">To explicitly set the `IsReusable` property to `true` or `false`, provide code that overrides the `IsReusable` property accessor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ProcessRequest (context As HttpContext) Implements IHttpHandler.ProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpHandler.ProcessRequest(System::Web::HttpContext ^ context) = System::Web::IHttpHandler::ProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="663de-470">HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 <see cref="T:System.Web.HttpContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-470">An <see cref="T:System.Web.HttpContext" /> that provides references to the intrinsic server objects that are used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="663de-471">
            <see cref="T:System.Web.IHttpHandler" /> 인터페이스를 구현하는 사용자 지정 HTTP 처리기를 사용하여 HTTP 웹 요청을 처리할 수 있도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-471">Enables processing of HTTP Web requests by a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-472">상속 된 클래스는 <xref:System.Web.IHttpModule> 하 고 <xref:System.Web.IHttpHandler> 인터페이스에 대 한 참조로 제공 됩니다는 <xref:System.Web.HttpContext> 현재 HTTP 요청에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-472">Classes that inherit the <xref:System.Web.IHttpModule> and <xref:System.Web.IHttpHandler> interfaces are provided as a reference to an <xref:System.Web.HttpContext> object for the current HTTP request.</span></span> <span data-ttu-id="663de-473">내장 함수에 대 한 액세스를 제공 하는 개체 `Request`, `Response`, 및 `Server` 요청에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="663de-473">The object provides access to the intrinsic `Request`, `Response`, and `Server` objects for the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="663de-474">모든 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-474">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler UpdateRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler UpdateRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.UpdateRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ UpdateRequestCache;" />
      <MemberSignature Language="F#" Value="member this.UpdateRequestCache : EventHandler " Usage="member this.UpdateRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-475">ASP.NET이 이벤트 처리기 실행을 완료하여 캐싱 모듈이 캐시의 다음 요청을 처리하는 데 사용할 응답을 저장하도록 하는 경우 발생합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-475">Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="663de-476">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 하세요. [NIB: 이벤트 사용](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)합니다.</span><span class="sxs-lookup"><span data-stu-id="663de-476">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.HttpApplication.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="663de-477">현재 요청에 대한 내장 사용자 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-477">Gets the intrinsic user object for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="663de-478">현재 인증된 사용자 또는 익명 사용자를 나타내는 <see cref="T:System.Security.Principal.IPrincipal" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-478">The <see cref="T:System.Security.Principal.IPrincipal" /> object that represents the current authenticated or anonymous user.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="663de-479">
            <see cref="T:System.Security.Principal.IPrincipal" /> 개체가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="663de-479">The <see cref="T:System.Security.Principal.IPrincipal" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>