<Type Name="HttpUtility" FullName="System.Web.HttpUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="63ff4187332a3598f1e5dcbfcaa3b3fab885a563" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpUtility sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.HttpUtility</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3b703-101">웹 요청을 처리할 때 URL 인코딩 및 디코딩을 위한 메서드를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b703-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
      <span data-ttu-id="3b703-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b703-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-103"><xref:System.Web.HttpUtility> 클래스에서 내부적으로 사용 되는 <xref:System.Web.HttpServerUtility> 메서드와 속성이 내장 ASP.NET을 통해 노출 되는 클래스 <xref:System.Web.HttpContext.Server%2A> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-103">The <xref:System.Web.HttpUtility> class is used internally by the <xref:System.Web.HttpServerUtility> class, whose methods and properties are exposed through the intrinsic ASP.NET <xref:System.Web.HttpContext.Server%2A> object.</span></span> <span data-ttu-id="3b703-104">또한는 <xref:System.Web.HttpUtility> 인코딩 및 디코딩에서 액세스할 수 있는 유틸리티 메서드를 포함 하는 클래스는 <xref:System.Web.HttpContext.Server%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-104">Additionally, the <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods that are not accessible from the <xref:System.Web.HttpContext.Server%2A>.</span></span>  
  
 <span data-ttu-id="3b703-105">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-105">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b703-106">다음 코드 예제에서는 <xref:System.Web.HttpUtility.UrlEncode%2A>, <xref:System.Web.HttpUtility.UrlDecode%2A> 및 <xref:System.Web.HttpUtility.ParseQueryString%2A> 의 메서드는 <xref:System.Web.HttpUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-106">The following code example demonstrates the use of the <xref:System.Web.HttpUtility.UrlEncode%2A>, <xref:System.Web.HttpUtility.UrlDecode%2A> and <xref:System.Web.HttpUtility.ParseQueryString%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span>  
  
 [!code-aspx-csharp[HttpUtilityExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtilityExample/cs/httputilityexample.aspx#1)]
 [!code-aspx-vb[HttpUtilityExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtilityExample/vb/httputilityexample.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b703-107">
            <see cref="T:System.Web.HttpUtility" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-107">Initializes a new instance of the <see cref="T:System.Web.HttpUtility" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-108"><xref:System.Web.HttpUtility> 클래스 메서드를 노출 하 고 문자열 디코딩 기반의 Url, URL 토큰 및 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-108">The <xref:System.Web.HttpUtility> class exposes methods for encoding and decoding string based URLs, URL tokens, and paths.</span></span> <span data-ttu-id="3b703-109"><xref:System.Web.HttpUtility> 내부적으로 사용 되는 <xref:System.Web.HttpServerUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-109">The <xref:System.Web.HttpUtility> is used internally by the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlAttributeEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-110">적어도 문자열을 HTML 인코딩 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-110">Minimally converts a string into an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static string HtmlAttributeEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlAttributeEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlAttributeEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlAttributeEncode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="3b703-111">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-111">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-112">적어도 문자열 하나를 HTML로 인코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-112">Minimally converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-113">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-113">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-114"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 메서드 HTML 특성 값에 삽입할 수 있도록 적절 한 문자를 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-114">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method encodes characters appropriate for insertion into an HTML attribute value.</span></span>  
  
 <span data-ttu-id="3b703-115">문자열 결과 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 큰따옴표가 특성에 대해서만 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-115">The string result from the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method should be used only for double-quoted attributes.</span></span> <span data-ttu-id="3b703-116">사용 하는 경우 보안 문제가 발생할 수 있습니다는 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 작은따옴표로 묶인 특성으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-116">Security issues might arise when using the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method with single-quoted attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="public static void HtmlAttributeEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlAttributeEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlAttributeEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlAttributeEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="3b703-117">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-117">The string to encode</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="3b703-118">
            <see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-118">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-119">최소한 문자열을 HTML로 인코딩된 문자열로 변환하고 인코딩된 문자열을 <see cref="T:System.IO.TextWriter" /> 출력 스트림으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-119">Minimally converts a string into an HTML-encoded string and sends the encoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-120"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 메서드 변환만 따옴표 ("), 앰퍼샌드 (&), 왼쪽 꺾쇠 괄호 (<)를 해당 문자 엔터티로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-120">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method converts only quotation marks ("), ampersands (&), and left angle brackets (<) to equivalent character entities.</span></span> <span data-ttu-id="3b703-121">보다 훨씬 빠릅니다는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-121">It is considerably faster than the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span>  
  
 <span data-ttu-id="3b703-122">문자열 결과 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 큰따옴표가 특성에 대해서만 메서드를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-122">The string result from the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method should be used only for double-quoted attributes.</span></span> <span data-ttu-id="3b703-123">사용 하는 경우 보안 문제가 발생할 수 있습니다는 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> 작은따옴표로 묶인 특성으로 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-123">Security issues might arise when using the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method with single-quoted attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-124">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-124">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
          <span data-ttu-id="3b703-125">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-125">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="3b703-126">디코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-126">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-127">HTTP 전송을 위해 HTML로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-127">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-128">디코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-128">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-129">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-129">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-130">HTML 인코딩을 HTML에 해당 문자 엔터티로; 허용 하지 않는 문자를 변환 합니다. HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-130">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-131">예를 들어 텍스트에 문자를 블록에 포함 하는 경우 \< 및 >로 인코딩된 &lt; 및 &gt; HTTP 전송을 위해.</span><span class="sxs-lookup"><span data-stu-id="3b703-131">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="3b703-132">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-132">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b703-133">다음 코드 예제는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 및 <xref:System.Web.HttpUtility.HtmlDecode%2A> 의 메서드는 <xref:System.Web.HttpUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-133">The following code example demonstrates the <xref:System.Web.HttpUtility.HtmlEncode%2A> and <xref:System.Web.HttpUtility.HtmlDecode%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span> <span data-ttu-id="3b703-134">사용 하 여 입력된 문자열에 인코딩된는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-134">The input string is encoded using the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span> <span data-ttu-id="3b703-135">사용 하 여 얻은 인코딩된 문자열 다음 디코딩하는 <xref:System.Web.HttpUtility.HtmlDecode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-135">The encoded string obtained is then decoded using the <xref:System.Web.HttpUtility.HtmlDecode%2A> method.</span></span>  
  
 [!code-csharp[HttpUtility_HtmlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_HtmlDecode/CS/httputility_htmldecode.cs#1)]
 [!code-vb[HttpUtility_HtmlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_HtmlDecode/VB/httputility_htmldecode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="3b703-136">디코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-136">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="3b703-137">
            <see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-137">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-138">HTML 인코딩된 문자열을 디코딩된 문자열로 변환하여 디코딩된 문자열을 <see cref="T:System.IO.TextWriter" /> 출력 스트림에 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-138">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-139">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-139">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-140">HTML 인코딩을 HTML에 해당 문자 엔터티로; 허용 하지 않는 문자를 변환 합니다. HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-140">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-141">예를 들어 텍스트에 문자를 블록에 포함 하는 경우 \< 및 >로 인코딩된 &lt; 및 &gt; HTTP 전송을 위해.</span><span class="sxs-lookup"><span data-stu-id="3b703-141">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="3b703-142">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-142">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-143">문자열을 HTML 인코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-143">Converts a string into an HTML-encoded string.</span>
          </span>
          <span data-ttu-id="3b703-144">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-144">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3b703-145">개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-145">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-146">개체의 문자열 표현을 HTML로 인코딩된 문자열로 변환하고 인코딩된 문자열을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-146">Converts an object's string representation into an HTML-encoded string, and returns the encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-147">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-147">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-148">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-148">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="3b703-149">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-149">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-150">문자열을 HTML 인코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-150">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-151">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-151">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-152">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-153">HTML 인코딩을 HTML에 해당 문자 엔터티로; 허용 하지 않는 문자를 변환 합니다. HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-153">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-154">예를 들어 텍스트에 문자를 블록에 포함 하는 경우 \< 및 >로 인코딩된 &lt; 및 &gt; HTTP 전송을 위해.</span><span class="sxs-lookup"><span data-stu-id="3b703-154">For example, when embedded in a block of text, the characters \< and > are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="3b703-155">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-155">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b703-156">다음 코드 예제는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 및 <xref:System.Web.HttpUtility.HtmlDecode%2A> 의 메서드는 <xref:System.Web.HttpUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-156">The following code example demonstrates the <xref:System.Web.HttpUtility.HtmlEncode%2A> and <xref:System.Web.HttpUtility.HtmlDecode%2A> methods of the <xref:System.Web.HttpUtility> class.</span></span> <span data-ttu-id="3b703-157">사용 하 여 입력된 문자열에 인코딩된는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-157">The input string is encoded using the <xref:System.Web.HttpUtility.HtmlEncode%2A> method.</span></span> <span data-ttu-id="3b703-158">사용 하 여 얻은 인코딩된 문자열 다음 디코딩하는 <xref:System.Web.HttpUtility.HtmlDecode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-158">The encoded string obtained is then decoded using the <xref:System.Web.HttpUtility.HtmlDecode%2A> method.</span></span>  
  
 [!code-csharp[HttpUtility_HtmlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_HtmlDecode/CS/httputility_htmldecode.cs#1)]
 [!code-vb[HttpUtility_HtmlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_HtmlDecode/VB/httputility_htmldecode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="3b703-159">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-159">The string to encode</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="3b703-160">
            <see cref="T:System.IO.TextWriter" /> 출력 스트림입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-160">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-161">문자열을 HTML 인코딩된 문자열로 변환하고 출력 스트림 <see cref="T:System.IO.TextWriter" />로 출력을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-161">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-162">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-162">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-163">HTML 인코딩을 HTML에 해당 문자 엔터티로; 허용 하지 않는 문자를 변환 합니다. HTML 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-163">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-164">예를 들어 텍스트에 문자를 블록에 포함 하는 경우 \< 및 >로 인코딩된 &lt; 및 &gt; HTTP 전송을 위해.</span><span class="sxs-lookup"><span data-stu-id="3b703-164">For example, when embedded in a block of text, the characters \< and >, are encoded as &lt; and &gt; for HTTP transmission.</span></span>  
  
 <span data-ttu-id="3b703-165">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-165">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="JavaScriptStringEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-166">문자열을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-166">Encodes a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-167">이 메서드는 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-167">This method encodes strings.</span></span> <span data-ttu-id="3b703-168">예를 들어 작은따옴표와 큰따옴표는 요소로 포함 `\'` 및 `\"` 인코딩된 문자열에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-168">For instance, single quotation marks and double quotation marks are included as `\'` and `\"` in the encoded string.</span></span>  
  
 <span data-ttu-id="3b703-169">URL 인코딩은 되도록 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-169">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="3b703-170">물음표 (?), 앰퍼샌드 (&), 슬래시 (/) 및 공간 등의 문자 잘리거나 일부 브라우저 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-170">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="3b703-171">따라서 이러한 문자 인코딩해야 `a` 요소 브라우저 요청 문자열에 의해 다시 보낼 수 있도록 하는 쿼리 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-171">Therefore, these characters must be encoded in `a` elements or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="public static string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3b703-172">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-172">A string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-173">문자열을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-173">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-174">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-174">An encoded string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="public static string JavaScriptStringEncode (string value, bool addDoubleQuotes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string JavaScriptStringEncode(string value, bool addDoubleQuotes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.JavaScriptStringEncode(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function JavaScriptStringEncode (value As String, addDoubleQuotes As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ JavaScriptStringEncode(System::String ^ value, bool addDoubleQuotes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="addDoubleQuotes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3b703-175">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-175">A string to encode.</span>
          </span>
        </param>
        <param name="addDoubleQuotes">
          <span data-ttu-id="3b703-176">인코딩된 문자열을 큰따옴표로 묶을지 여부를 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-176">A value that indicates whether double quotation marks will be included around the encoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-177">문자열을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-177">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-178">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-178">An encoded string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseQueryString">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-179">쿼리 문자열을 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 구문 분석합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-179">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.ParseQueryString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseQueryString (query As String) As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(System::String ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="3b703-180">구문 분석할 쿼리 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-180">The query string to parse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-181">
            <see cref="T:System.Collections.Specialized.NameValueCollection" /> 인코딩을 사용하여 쿼리 문자열을 <see cref="P:System.Text.Encoding.UTF8" />으로 구문 분석합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-181">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" /> using <see cref="P:System.Text.Encoding.UTF8" /> encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-182">쿼리 매개 변수와 값이 포함된 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-182">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of query parameters and values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-183"><xref:System.Web.HttpUtility.ParseQueryString%2A> 메서드 <xref:System.Text.Encoding.UTF8%2A> 반환 된 쿼리 문자열을 구문 분석 하려면 형식 <xref:System.Collections.Specialized.NameValueCollection>, URL로 인코딩된 문자 디코딩 및 동일한 쿼리 문자열 매개 변수를 여러 번 각각 구분 하는 쉼표로 단일 항목으로 나열 됩니다 값입니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-183">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses <xref:System.Text.Encoding.UTF8%2A> format to parse the query string In the returned <xref:System.Collections.Specialized.NameValueCollection>, URL-encoded characters are decoded and multiple occurrences of the same query string parameter are listed as a single entry with a comma separating each value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3b703-184"><xref:System.Web.HttpUtility.ParseQueryString%2A> 메서드는 보안 문제가 발생할는 사용자 입력이 포함 될 수 있는 쿼리 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-184">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses query strings that might contain user input, which is a potential security threat.</span></span> <span data-ttu-id="3b703-185">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-185">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="3b703-186">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="3b703-186">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b703-187">다음 코드 예제에서는 <xref:System.Web.HttpUtility.ParseQueryString%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-187">The following code example demonstrates how to use the <xref:System.Web.HttpUtility.ParseQueryString%2A> method.</span></span> <span data-ttu-id="3b703-188">반환 된 단일 항목으로 쿼리 문자열 변수를 여러 번 통합은 <xref:System.Collections.Specialized.NameValueCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-188">Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
 [!code-aspx-csharp[HttpUtility_ParseQueryString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpUtility_ParseQueryString/cs/httputility_parsequerystring.aspx#1)]
 [!code-aspx-vb[HttpUtility_ParseQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpUtility_ParseQueryString/vb/httputility_parsequerystring.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b703-189">
            <paramref name="query" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-189">
              <paramref name="query" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ParseQueryString">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection ParseQueryString (string query, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.NameValueCollection ParseQueryString(string query, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.ParseQueryString(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::NameValueCollection ^ ParseQueryString(System::String ^ query, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="3b703-190">구문 분석할 쿼리 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-190">The query string to parse.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="3b703-191">사용할 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-191">The <see cref="T:System.Text.Encoding" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-192">지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" />을 사용하여 쿼리 문자열을 <see cref="T:System.Text.Encoding" />으로 구문 분석합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-192">Parses a query string into a <see cref="T:System.Collections.Specialized.NameValueCollection" /> using the specified <see cref="T:System.Text.Encoding" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-193">쿼리 매개 변수와 값이 포함된 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-193">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of query parameters and values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-194">반환 된 <xref:System.Collections.Specialized.NameValueCollection>, URL로 인코딩된 문자 디코딩 및 각 값을 구분 하는 쉼표로 단일 항목으로 동일한 쿼리 문자열 매개 변수를 여러 번 나열 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-194">In the returned <xref:System.Collections.Specialized.NameValueCollection>, URL-encoded characters are decoded and multiple occurrences of the same query string parameter are listed as a single entry with a comma separating each value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3b703-195"><xref:System.Web.HttpUtility.ParseQueryString%2A> 메서드는 보안 문제가 발생할는 사용자 입력이 포함 될 수 있는 쿼리 문자열을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-195">The <xref:System.Web.HttpUtility.ParseQueryString%2A> method uses query strings that might contain user input, which is a potential security threat.</span></span> <span data-ttu-id="3b703-196">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-196">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="3b703-197">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="3b703-197">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b703-198">
            <paramref name="query" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-198">
              <paramref name="query" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3b703-199">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-199">\- or -</span>
          </span>
          <span data-ttu-id="3b703-200">
            <paramref name="encoding" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-200">
              <paramref name="encoding" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-201">URL에서 전송을 위해 인코딩된 문자열로 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-201">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
          <span data-ttu-id="3b703-202">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-202">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3b703-203">디코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-203">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-204">URL에서 전송을 위해 인코딩된 문자열로 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-204">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-205">디코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-205">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-206">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-206">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-207">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-207">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-208">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-208">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-209">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-209">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (byte[] bytes, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(unsigned int8[] bytes, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (bytes As Byte(), e As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(cli::array &lt;System::Byte&gt; ^ bytes, System::Text::Encoding ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3b703-210">디코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-210">The array of bytes to decode.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3b703-211">디코딩 스키마를 지정하는 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-211">The <see cref="T:System.Text.Encoding" /> that specifies the decoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-212">지정된 디코딩 개체를 사용하여 URL로 인코딩된 바이트 배열을 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-212">Converts a URL-encoded byte array into a decoded string using the specified decoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-213">디코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-213">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-214">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-214">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-215">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-215">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-216">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-216">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-217">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-217">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string str, System.Text.Encoding e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string str, class System.Text.Encoding e) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (str As String, e As Encoding) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ str, System::Text::Encoding ^ e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public static string UrlDecode (string s, System.Text.Encoding e);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string s, class System.Text.Encoding e) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.String,System.Text.Encoding)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (s As String, e As Encoding) As String" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ s, System::Text::Encoding ^ e);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
        <Parameter Name="e" Type="System.Text.Encoding" Index="1" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="s">To be added.</param>
        <param name="e">
          <span data-ttu-id="3b703-218">디코딩 스키마를 지정하는 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-218">The <see cref="T:System.Text.Encoding" /> that specifies the decoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-219">지정된 인코딩 개체를 사용하여 URL로 인코딩된 문자열을 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-219">Converts a URL-encoded string into a decoded string, using the specified encoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-220">디코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-220">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-221">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-221">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-222">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-222">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-223">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-223">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-224">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-224">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (byte[] bytes, int offset, int count, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(unsigned int8[] bytes, int32 offset, int32 count, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecode(System.Byte[],System.Int32,System.Int32,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (bytes As Byte(), offset As Integer, count As Integer, e As Encoding) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count, System::Text::Encoding ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3b703-225">디코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-225">The array of bytes to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3b703-226">디코딩을 시작할 바이트의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-226">The position in the byte to begin decoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3b703-227">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-227">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3b703-228">디코딩 스키마를 지정하는 <see cref="T:System.Text.Encoding" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-228">The <see cref="T:System.Text.Encoding" /> object that specifies the decoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-229">지정된 인코딩 개체를 사용하여 URL로 인코딩된 바이트 배열을 배열의 지정된 위치에서 시작하여 지정된 바이트 수까지 계속되는 디코딩된 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-229">Converts a URL-encoded byte array into a decoded string using the specified encoding object, starting at the specified position in the array, and continuing for the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-230">디코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-230">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-231">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-231">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-232">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-232">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-233">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-233">For example, when embedded in a block of text to be transmitted in a URL the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-234">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-234">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b703-235">
            <paramref name="bytes" />가 <see langword="null" />이지만 <paramref name="count" />는 <see langword="0" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-235">
              <paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b703-236">
            <paramref name="offset" />이 <see langword="0" />보다 작거나 <paramref name="bytes" /> 배열의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-236">
              <paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="3b703-237">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-237">\- or -</span>
          </span>
          <span data-ttu-id="3b703-238">
            <paramref name="count" />가 <see langword="0" />보다 작거나 <paramref name="count" /> + <paramref name="offset" />이 <paramref name="bytes" /> 배열 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-238">
              <paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecodeToBytes">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-239">URL로 인코딩된 문자열 또는 바이트 배열을 디코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-239">Converts a URL-encoded string or byte array into a decoded array of bytes.</span>
          </span>
          <span data-ttu-id="3b703-240">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-240">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3b703-241">디코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-241">The array of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-242">URL로 인코딩된 바이트 배열을 디코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-242">Converts a URL-encoded array of bytes into a decoded array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-243">디코딩된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-243">A decoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-244">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-244">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-245">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-245">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-246">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-246">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-247">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-247">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3b703-248">디코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-248">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-249">URL로 인코딩된 문자열을 디코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-249">Converts a URL-encoded string into a decoded array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-250">디코딩된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-250">A decoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-251">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-251">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-252">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-252">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-253">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-253">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-254">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-254">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (string str, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(string str, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (str As String, e As Encoding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(System::String ^ str, System::Text::Encoding ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3b703-255">디코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-255">The string to decode.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3b703-256">디코딩 스키마를 지정하는 <see cref="T:System.Text.Encoding" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-256">The <see cref="T:System.Text.Encoding" /> object that specifies the decoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-257">지정된 디코딩 개체를 사용하여 URL로 인코딩된 문자열을 디코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-257">Converts a URL-encoded string into a decoded array of bytes using the specified decoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-258">디코딩된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-258">A decoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-259">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-259">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-260">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-260">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-261">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-261">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-262">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-262">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3b703-263">디코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-263">The array of bytes to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3b703-264">디코딩을 시작할 바이트 배열의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-264">The position in the byte array at which to begin decoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3b703-265">디코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-265">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-266">URL로 인코딩된 바이트 배열을, 배열의 지정된 위치에서 시작하여 지정된 바이트 수까지 계속되는 디코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-266">Converts a URL-encoded array of bytes into a decoded array of bytes, starting at the specified position in the array and continuing for the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-267">디코딩된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-267">A decoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-268">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-268">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-269">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-269">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-270">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-270">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-271">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-271">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b703-272">
            <paramref name="bytes" />가 <see langword="null" />이지만 <paramref name="count" />는 <see langword="0" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-272">
              <paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b703-273">
            <paramref name="offset" />이 <see langword="0" />보다 작거나 <paramref name="bytes" /> 배열의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-273">
              <paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="3b703-274">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-274">\- or -</span>
          </span>
          <span data-ttu-id="3b703-275">
            <paramref name="count" />가 <see langword="0" />보다 작거나 <paramref name="count" /> + <paramref name="offset" />이 <paramref name="bytes" /> 배열 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-275">
              <paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-276">URL 문자열을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-276">Encodes a URL string.</span>
          </span>
          <span data-ttu-id="3b703-277">이러한 메서드 오버로드는 쿼리 문자열 값을 포함하는 전체 URL을 인코딩하는 데 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-277">These method overloads can be used to encode the entire URL, including query-string values.</span>
          </span>
          <span data-ttu-id="3b703-278">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-278">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3b703-279">인코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-279">The array of bytes to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-280">바이트 배열을 인코딩된 URL 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-280">Converts a byte array into an encoded URL string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-281">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-281">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-282"><xref:System.Web.HttpUtility.UrlEncode%2A> 메서드 쿼리 문자열 값을 포함 하는 전체 URL을 인코딩하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-282">The <xref:System.Web.HttpUtility.UrlEncode%2A> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="3b703-283">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-283">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-284">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-284">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-285">예를 들어, 문자 \< 및 > 포함 된 URL에 전송 될 텍스트 블록에 인코딩되지 %3c 및 %3e로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-285">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-286">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-286">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3b703-287">인코딩할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-287">The text to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-288">URL 문자열을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-288">Encodes a URL string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-289">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-289">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-290"><xref:System.Web.HttpUtility.UrlEncode%28System.String%29> 메서드 쿼리 문자열 값을 포함 하는 전체 URL을 인코딩하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-290">The <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="3b703-291">공백 및 문장 부호 등의 문자 인코딩 없이 HTTP 스트림으로 전달 되는, 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-291">If characters such as blanks and punctuation are passed in an HTTP stream without encoding, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-292">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-292">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-293">예를 들어, 문자 \< 및 > 포함 된 URL에 전송 될 텍스트 블록에 인코딩되지 %3c 및 %3e로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-293">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-294">사용 하 여 URL을 인코딩할 수는 <xref:System.Web.HttpUtility.UrlEncode%2A> 메서드 또는 <xref:System.Web.HttpUtility.UrlPathEncode%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-294">You can encode a URL using with the <xref:System.Web.HttpUtility.UrlEncode%2A> method or the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="3b703-295">그러나 메서드는 다른 결과 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-295">However, the methods return different results.</span></span> <span data-ttu-id="3b703-296"><xref:System.Web.HttpUtility.UrlEncode%2A> 메서드는 더하기 문자 (+)를 각 공백 문자를 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-296">The <xref:System.Web.HttpUtility.UrlEncode%2A> method converts each space character to a plus character (+).</span></span> <span data-ttu-id="3b703-297"><xref:System.Web.HttpUtility.UrlPathEncode%2A> 메서드를 나타내는 16 진수 표기법으로 공간 각 공백 문자 "%20" 문자열로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-297">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method converts each space character into the string "%20", which represents a space in hexadecimal notation.</span></span> <span data-ttu-id="3b703-298">사용 하 여는 <xref:System.Web.HttpUtility.UrlPathEncode%2A> 플랫폼 이나 브라우저에 관계 없이 일관 된 디코딩된 URL을 유지 하기 위해 URL의 경로 부분을 인코딩하는 경우 메서드는 디코딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-298">Use the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method when you encode the path portion of a URL in order to guarantee a consistent decoded URL, regardless of which platform or browser performs the decoding.</span></span>  
  
 <span data-ttu-id="3b703-299"><xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 메서드는 기본적으로 인코딩을 u t F-8을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-299">The <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method uses UTF-8 encoding by default.</span></span> <span data-ttu-id="3b703-300">따라서 사용 하 여는 <xref:System.Web.HttpUtility.UrlEncode%2A> 메서드를 사용 하 여 같은 결과 제공는 <xref:System.Web.HttpUtility.UrlEncode%2A> 메서드와 지정 <xref:System.Text.Encoding.UTF8%2A> 두 번째 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-300">Therefore, using the <xref:System.Web.HttpUtility.UrlEncode%2A> method provides the same results as using the <xref:System.Web.HttpUtility.UrlEncode%2A> method and specifying <xref:System.Text.Encoding.UTF8%2A> as the second parameter.</span></span>  
  
 <span data-ttu-id="3b703-301"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 액세스 하는 편리한 방법는 <xref:System.Web.HttpUtility.UrlEncode%2A> ASP.NET 응용 프로그램에서 런타임 시 메서드.</span><span class="sxs-lookup"><span data-stu-id="3b703-301"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3b703-302">내부적으로 <xref:System.Web.HttpServerUtility.UrlEncode%2A> 사용 하 여는 <xref:System.Web.HttpUtility.UrlEncode%2A> 메서드 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-302">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses the <xref:System.Web.HttpUtility.UrlEncode%2A> method to encode strings.</span></span>  
  
 <span data-ttu-id="3b703-303">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-303">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3b703-304">인코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-304">The array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3b703-305">인코딩을 시작할 바이트 배열의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-305">The position in the byte array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3b703-306">인코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-306">The number of bytes to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-307">바이트 배열을 배열의 지정된 위치에서 시작되고 지정된 바이트 수까지 계속되는 URL 인코딩 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-307">Converts a byte array into a URL-encoded string, starting at the specified position in the array and continuing for the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-308">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-308">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-309"><xref:System.Web.HttpUtility.UrlEncode%28System.String%29> 메서드 쿼리 문자열 값을 포함 하는 전체 URL을 인코딩하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-309">The <xref:System.Web.HttpUtility.UrlEncode%28System.String%29> method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="3b703-310">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-310">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-311">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-311">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-312">예를 들어, 문자 \< 및 > 포함 된 URL에 전송 될 텍스트 블록에 인코딩되지 %3c 및 %3e로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-312">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-313">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-313">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string str, System.Text.Encoding e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string str, class System.Text.Encoding e) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (str As String, e As Encoding) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ str, System::Text::Encoding ^ e);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public static string UrlEncode (string s, System.Text.Encoding Enc);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string s, class System.Text.Encoding Enc) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncode(System.String,System.Text.Encoding)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (s As String, Enc As Encoding) As String" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ s, System::Text::Encoding ^ Enc);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
        <Parameter Name="e" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="Enc" Type="System.Text.Encoding" Index="1" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <param name="s">To be added.</param>
        <param name="e">To be added.</param>
        <param name="Enc">To be added.</param>
        <summary>
          <span data-ttu-id="3b703-314">지정된 인코딩 개체를 사용하여 URL 문자열을 인코딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-314">Encodes a URL string using the specified encoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-315">인코딩된 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-315">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-316">이 메서드는 쿼리 문자열 값을 포함 하는 전체 URL을 인코딩하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-316">This method can be used to encode the entire URL, including query-string values.</span></span> <span data-ttu-id="3b703-317">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-317">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-318">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-318">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-319">예를 들어, 문자 \< 및 > 포함 된 URL에 전송 될 텍스트 블록에 인코딩되지 %3c 및 %3e로 합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-319">For example, when the characters \< and > are embedded in a block of text to be transmitted in a URL, they are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-320">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-320">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecode(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncodeToBytes">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3b703-321">문자열 또는 바이트 배열을 인코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-321">Converts a string or a byte array into an encoded array of bytes.</span>
          </span>
          <span data-ttu-id="3b703-322">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <see cref="T:System.Net.WebUtility" /> 클래스를 사용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-322">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (bytes As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3b703-323">인코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-323">The array of bytes to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-324">배열 바이트를 URL로 인코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-324">Converts an array of bytes into a URL-encoded array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-325">인코딩된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-325">An encoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-326">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-326">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-327">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-327">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-328">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-328">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-329">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-329">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3b703-330">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-330">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-331">문자열을 URL로 인코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-331">Converts a string into a URL-encoded array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-332">인코딩된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-332">An encoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-333">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-333">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-334">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-334">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-335">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-335">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-336">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-336">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (string str, System.Text.Encoding e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(string str, class System.Text.Encoding e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (str As String, e As Encoding) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(System::String ^ str, System::Text::Encoding ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="e" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3b703-337">인코딩할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-337">The string to encode</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3b703-338">인코딩 체계를 지정하는 <see cref="T:System.Text.Encoding" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-338">The <see cref="T:System.Text.Encoding" /> that specifies the encoding scheme.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-339">지정된 인코딩 개체를 사용하여 문자열을 URL로 인코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-339">Converts a string into a URL-encoded array of bytes using the specified encoding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-340">인코딩된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-340">An encoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-341">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-341">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-342">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-342">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-343">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-343">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-344">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-344">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="3b703-345">인코딩할 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-345">The array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3b703-346">인코딩을 시작할 바이트 배열의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-346">The position in the byte array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3b703-347">인코딩할 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-347">The number of bytes to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-348">바이트 배열을, 배열의 지정된 위치에서 시작하여 지정된 바이트 수까지 계속되는 URL로 인코딩된 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-348">Converts an array of bytes into a URL-encoded array of bytes, starting at the specified position in the array and continuing for the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-349">인코딩된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-349">An encoded array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-350">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-350">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-351">URL 인코딩은 URL에 해당 문자 엔터티로; 허용 되지 않는 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-351">URL encoding converts characters that are not allowed in a URL into character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-352">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-352">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 <span data-ttu-id="3b703-353">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-353">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3b703-354">
            <paramref name="bytes" />가 <see langword="null" />이지만 <paramref name="count" />는 <see langword="0" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-354">
              <paramref name="bytes" /> is <see langword="null" />, but <paramref name="count" /> does not equal <see langword="0" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b703-355">
            <paramref name="offset" />이 <see langword="0" />보다 작거나 <paramref name="bytes" /> 배열의 길이보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-355">
              <paramref name="offset" /> is less than <see langword="0" /> or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="3b703-356">\- 또는 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-356">\- or -</span>
          </span>
          <span data-ttu-id="3b703-357">
            <paramref name="count" />가 <see langword="0" />보다 작거나 <paramref name="count" /> + <paramref name="offset" />이 <paramref name="bytes" /> 배열 길이보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-357">
              <paramref name="count" /> is less than <see langword="0" />, or <paramref name="count" /> + <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpUtility.UrlDecodeToBytes(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeUnicode">
      <MemberSignature Language="C#" Value="public static string UrlEncodeUnicode (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncodeUnicode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeUnicode (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncodeUnicode(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3b703-358">변환할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-358">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-359">문자열을 유니코드 문자열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-359">Converts a string into a Unicode string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-360">%<paramref name="UnicodeValue" /> 표기법으로 나타낸 유니코드 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-360">A Unicode string in %<paramref name="UnicodeValue" /> notation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-361">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-361">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-362">URL 인코딩은 해당 문자 엔터티로;에 대 한 URL에서 유효 하지 않은 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-362">URL encoding converts characters that are not valid in a URL to character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-363">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-363">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeUnicodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeUnicodeToBytes (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeUnicodeToBytes(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlEncodeUnicodeToBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeUnicodeToBytes (str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeUnicodeToBytes(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3b703-364">변환할 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-364">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b703-365">유니코드 문자열을 바이트 배열로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-365">Converts a Unicode string into an array of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-366">바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-366">A byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b703-367">공백 및 문장 부호와 같은 문자가 HTTP 스트림으로 전달 하는 경우 받는 쪽에서 잘못 해석 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-367">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="3b703-368">URL 인코딩은 해당 문자 엔터티로;에 대 한 URL에서 유효 하지 않은 문자 변환 URL 디코딩 인코딩을 반대로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-368">URL encoding converts characters that are not valid in a URL to character-entity equivalents; URL decoding reverses the encoding.</span></span> <span data-ttu-id="3b703-369">예를 들어 문자는 URL에 전송 될 텍스트 블록에 포함 된 경우 \< 및 > %3c 및 %3e로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="3b703-369">For example, when embedded in a block of text to be transmitted in a URL, the characters \< and > are encoded as %3c and %3e.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public static string UrlPathEncode (string str);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlPathEncode(string str) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlPathEncode(System.String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlPathEncode (str As String) As String" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlPathEncode(System::String ^ str);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public static string UrlPathEncode (string s);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlPathEncode(string s) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpUtility.UrlPathEncode(System.String)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlPathEncode (s As String) As String" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlPathEncode(System::String ^ s);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.HttpUtility</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="str">To be added.</param>
        <summary>
          <span data-ttu-id="3b703-370">사용하지 마세요. 브라우저 호환성을 위해서만 제공됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-370">Do not use; intended only for browser compatibility.</span>
          </span>
          <span data-ttu-id="3b703-371">
            <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />을 사용하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-371">Use <see cref="M:System.Web.HttpUtility.UrlEncode(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b703-372">인코딩된 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b703-372">The encoded text.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>