<Type Name="HttpParseException" FullName="System.Web.HttpParseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba8323b1bf107e6f8daae03912597f3e0ed37ca4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608527" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpParseException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpParseException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpParseException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpParseException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpParseException sealed : System::Web::HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>구분 분석 오류가 발생하는 경우에 throw되는 예외입니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpParseException> 클래스는 ASP.NET 출력 파서 예외 정보와 수 있도록 하는 HTTP 관련 예외 클래스입니다. throw 한 예외 처리에 대 한 자세한 내용은 참조 하십시오. [예외](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735)합니다.  
  
   
  
## Examples  
 다음 예제에서는 사용 하는 방법을 <xref:System.Web.HttpParseException> 페이지를 구문 분석 하는 동안 발생 한 오류를 사용자 지정할 수 있습니다. 이 예제에서는 사용자 지정 <xref:System.Web.UI.HtmlControls.HtmlSelect> 컨트롤이 정의 되어 있습니다. 사용자 지정 컨트롤의 자식 요소가 없는 경우 지정 된 형식의 아니라면 <xref:System.Web.HttpParseException> 예외가 재정의 된 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder.GetChildControlType%2A> 사용자 지정의 메서드 <xref:System.Web.UI.HtmlControls.HtmlSelectBuilder>합니다. 구문 분석 예외를 생성 하려면 리터럴 자식 요소를 변경 `MyCustomOption` 을 다른 문자열로 합니다.  
  
 [!code-aspx-csharp[HttpParseException#1](~/samples/snippets/csharp/VS_Snippets_CLR/HttpParseException/cs/source.aspx#1)]
 [!code-aspx-vb[HttpParseException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/HttpParseException/vb/source.aspx#1)]  
  
 [!code-csharp[HttpParseException#2](~/samples/snippets/csharp/VS_Snippets_CLR/HttpParseException/cs/source.cs#2)]
 [!code-vb[HttpParseException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/HttpParseException/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelect" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlSelectBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.HttpParseException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpParseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpParseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpParseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.HttpParseException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpParseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpParseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpParseException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">오류가 발생할 때 지정할 예외 메시지입니다.</param>
        <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Web.HttpParseException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 <xref:System.Web.HttpException.%23ctor%2A> 생성자입니다.  작동 하는 전체 코드 예제를 참조 하십시오.는 <xref:System.Web.HttpParseException> 개요 항목입니다.  
  
 [!code-csharp[HttpParseException#3](~/samples/snippets/csharp/VS_Snippets_CLR/HttpParseException/cs/source.cs#3)]
 [!code-vb[HttpParseException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/HttpParseException/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpParseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpParseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpParseException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">오류가 발생할 때 지정할 예외 메시지입니다.</param>
        <param name="innerException">현재 예외의 원인인 예외입니다. <c>innerException</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
        <summary>지정된 오류 메시지 및 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Web.HttpParseException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpParseException (string message, Exception innerException, string virtualPath, string sourceCode, int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, string virtualPath, string sourceCode, int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpParseException.#ctor(System.String,System.Exception,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception, virtualPath As String, sourceCode As String, line As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpParseException(System::String ^ message, Exception ^ innerException, System::String ^ virtualPath, System::String ^ sourceCode, int line);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="sourceCode" Type="System.String" />
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">오류가 발생할 때 지정할 예외 메시지입니다.</param>
        <param name="innerException">현재 예외의 원인인 예외입니다. <c>innerException</c>이 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
        <param name="virtualPath">예외의 가상 경로입니다.</param>
        <param name="sourceCode">예외가 발생할 때 컴파일 중이었던 소스 코드입니다.</param>
        <param name="line">예외가 발생한 줄 번호입니다.</param>
        <summary>컴파일 중인 소스 코드와 예외가 발생한 줄 번호에 대한 특정 정보를 사용하여 <see cref="T:System.Web.HttpParseException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpParseException.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오류가 발생할 때 구분 분석 중이었던 파일 이름을 가져옵니다.</summary>
        <value>오류가 발생할 때 구문 분석 중인 소스 파일의 실제 경로이거나, 그렇지 않고 실제 경로가 <see langword="null" />인 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpParseException.FileName%2A> 실제 경로 경우는 오류가 있는 소스 파일에 실제 경로 반환 하는 속성 `null`,이 경우에 반환 `null`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">throw되는 예외에 대해 serialize된 개체 데이터를 보유하는 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체입니다.</param>
        <param name="context">소스 또는 대상에 대한 컨텍스트 정보를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 예외에 대한 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 설정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpParseException.GetObjectData%2A> 메서드 집합을 <xref:System.Runtime.Serialization.SerializationInfo> serialization 대상인 모든 예외 개체 데이터가 들어 있는 개체입니다. 역직렬화 하는 동안 스트림을 통해 전송 된 SerializationInfo에서 예외가 재구성 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 파생을 정의 하는 방법을 보여 줍니다. 직렬화 가능한 <xref:System.Exception> 구현 하는 클래스는 <xref:System.Web.HttpParseException.GetObjectData%2A> 메서드를 두 개의 속성에 사소한 변경 하 고 다음 직렬화를 수행 하는 기본 클래스를 호출 합니다. 이 예제에서는 0으로 나누기 오류를 강제로 수행 하 고 파생 된 인스턴스를 만든 후 <xref:System.Exception>합니다. 코드 파일에 인스턴스를 serialize, 새 파일을 deserialize <xref:System.Exception>역할에서 예외를 throw 및 catch 하 고 예외 데이터를 표시 합니다.  
  
 [!code-cpp[System.Exception.GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CPP/getobjdata.cpp#1)]
 [!code-csharp[System.Exception.GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Exception.GetObjectData/CS/getobjdata.cs#1)]
 [!code-vb[System.Exception.GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Exception.GetObjectData/VB/getobjdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public int Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Line" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpParseException.Line" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Line { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오류가 발생할 때 구분 분석 중이었던 줄 번호를 가져옵니다.</summary>
        <value>오류가 발생할 때 구분 분석 중이었던 줄 번호입니다. 이 값은 0이 아닌 1부터 시작합니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParserErrors">
      <MemberSignature Language="C#" Value="public System.Web.ParserErrorCollection ParserErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ParserErrorCollection ParserErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpParseException.ParserErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParserErrors As ParserErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ParserErrorCollection ^ ParserErrors { System::Web::ParserErrorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ParserErrorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 예외에 대한 파서 오류를 가져옵니다.</summary>
        <value>현재 예외에 대한 파서 오류의 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpParseException.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>오류가 발생한 소스 파일의 가상 경로를 가져옵니다.</summary>
        <value>오류가 발생한 소스 파일의 가상 경로입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>