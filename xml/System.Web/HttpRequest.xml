<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpRequest.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac548982b0cd7a40f21c7ebc1535d74a9dc862f068e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48982b0cd7a40f21c7ebc1535d74a9dc862f068e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpRequest">
          <source>Enables ASP.NET to read the HTTP values sent by a client during a Web request.</source>
          <target state="translated">웹 요청 도중 ASP.NET이 클라이언트에서 보낸 HTTP 값을 읽을 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class are exposed through the <ph id="ph2">`Request`</ph> properties of the <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, and <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> classes.</source>
          <target state="translated">메서드 및 속성의는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스를 통해 노출 되는 <ph id="ph2">`Request`</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>To access data from the <ph id="ph1">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> collections, you can write <ph id="ph5">`Request["key"]`</ph>, as shown in the example for the <ph id="ph6">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> property.</source>
          <target state="translated">데이터에 액세스 하는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> 작성할 수 있습니다 컬렉션, <ph id="ph5">`Request["key"]`</ph>의 예제에 표시 된 것 처럼는 <ph id="ph6">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>Unicode support for <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class members requires IIS version 6.0 or later.</source>
          <target state="translated">유니코드 지원에 대 한 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스 멤버에는 IIS 버전 6.0 이상이 필요 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>The following examples access the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> instance for the current request by using the <ph id="ph2">&lt;xref:System.Web.UI.Page.Request%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> class.</source>
          <target state="translated">다음 예에서는 액세스는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 를 사용 하 여 현재 요청에 대 한 인스턴스는 <ph id="ph2">&lt;xref:System.Web.UI.Page.Request%2A&gt;</ph> 속성의는 <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>You can use simplified syntax for accessing data from the <ph id="ph1">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> collections.</source>
          <target state="translated">데이터에 액세스 하기 위한 간소화 된 구문을 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>You can write <ph id="ph1">`Request["key"]`</ph>.</source>
          <target state="translated">작성할 수 있습니다 <ph id="ph1">`Request["key"]`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>The first example shows how to retrieve a query string value when loading a page.</source>
          <target state="translated">첫 번째 예에는 페이지를 로드할 때 쿼리 문자열 값을 검색 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>The next example shows how to check if the request is authenticated and retrieve the raw URL.</source>
          <target state="translated">다음 예제에는 요청이 인증 되는 경우를 확인 하 고 원시 URL을 검색 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>A Visual Studio Web site project with source code is available to accompany this topic: <bpt id="p1">[</bpt>Download<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=191455)</ept>.</source>
          <target state="translated">소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: <bpt id="p1">[</bpt>다운로드<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=191455)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>This example uses the <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> class to write the values of several <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> class properties to a file.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> 클래스의 여러 값을 쓸 <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스 파일에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>For properties that are of type string, the values are HTML encoded as they are written to the file.</source>
          <target state="translated">문자열 형식의 속성에 대 한 값은 HTML 파일에 쓸 때로 인코딩됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</source>
          <target state="translated">컬렉션을 나타내는 속성을 반복 하 고 파일에 포함 된 각 키/값 쌍이 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>This example has a text box that accepts user input, which is a potential security threat.</source>
          <target state="translated">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</source>
          <target state="translated">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)">
          <source>The name of the file associated with the request.</source>
          <target state="translated">요청과 관련된 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)">
          <source>The information regarding the URL of the current request.</source>
          <target state="translated">현재 요청의 URL에 대한 정보입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)">
          <source>The entire query string sent with the request (everything after the <bpt id="p1">&lt;c&gt;</bpt>'?'<ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">요청과 함께 보내는 전체 쿼리 문자열입니다(<bpt id="p1">&lt;c&gt;</bpt>'?'<ept id="p1">&lt;/c&gt;</ept> 다음에 나오는 모든 내용).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)">
          <source>Initializes an <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> 개체를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)">
          <source>You do not need to create your own instance of the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">인스턴스를 직접 만들 필요가 없습니다는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class are exposed through the <ph id="ph2">`Request`</ph> property of the <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, and <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> classes.</source>
          <target state="translated">메서드 및 속성의는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스를 통해 노출 되는 <ph id="ph2">`Request`</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.Abort">
          <source>Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</source>
          <target state="translated">내부 TCP 연결을 강제로 종료하여 처리 중인 I/O가 실패하도록 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.Abort">
          <source>You might use this method in response to an attack by a malicious HTTP client.</source>
          <target state="translated">악성 HTTP 클라이언트에 의한 공격에 대한 응답에서 이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.Abort">
          <source>This method is thread-safe.</source>
          <target state="translated">이 메서드는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.Abort">
          <source>Any thread may call it at any time.</source>
          <target state="translated">모든 스레드가 언제 든 지 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.Abort">
          <source>This method can only be used in integrated mode.</source>
          <target state="translated">이 메서드 통합된 모드에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.Abort">
          <source>If you invoke it in classic mode, an exception is thrown.</source>
          <target state="translated">클래식 모드에서 호출 하는 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.Abort">
          <source>To determine the pipeline mode, use <ph id="ph1">&lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;</ph>.</source>
          <target state="translated">파이프라인 모드를 확인 하려면 사용 <ph id="ph1">&lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.AcceptTypes">
          <source>Gets a string array of client-supported MIME accept types.</source>
          <target state="translated">클라이언트에서 지원하는 MIME 허용 형식의 문자열 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AcceptTypes">
          <source>A string array of client-supported MIME accept types.</source>
          <target state="translated">클라이언트에서 지원하는 MIME 허용 형식의 문자열 배열입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AcceptTypes">
          <source>The following code example captures the multiple values returned by the <ph id="ph1">&lt;xref:System.Web.HttpRequest.AcceptTypes%2A&gt;</ph> property into an object variable and writes the number and name of each valueto a separate line of HTTP output.</source>
          <target state="translated">다음 코드 예제에서는 반환 하는 여러 값을 캡처하는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.AcceptTypes%2A&gt;</ph> 개체 변수에 속성 수와 각 valueto의 이름을 별도 HTTP 출력의 줄을 씁니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>Gets the anonymous identifier for the user, if present.</source>
          <target state="translated">사용자의 익명 ID를 가져옵니다(있는 경우).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>A string representing the current anonymous user identifier.</source>
          <target state="translated">현재 익명 사용자 ID를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a <ph id="ph2">`Session`</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> 속성에서 사용자를 추적 또는의 데이터를 저장 하지 않고 해당 사용자 프로필 속성 할당에 사용할 수 있는 인증 되지 않은 사용자에 게 수명이 긴 고유 식별자가 할당 한 <ph id="ph2">`Session`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> property is tracked using a cookie, but it can be set to use the URI when the <ph id="ph2">&lt;xref:System.Web.Configuration.SessionStateSection.Cookieless%2A&gt;</ph> attribute in the anonymous identification configuration section is set to either the <ph id="ph3">&lt;xref:System.Web.HttpCookieMode.UseUri&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpCookieMode.UseDeviceProfile&gt;</ph>, or <ph id="ph5">&lt;xref:System.Web.HttpCookieMode.AutoDetect&gt;</ph> value.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> 속성 쿠키를 사용 하 여 추적 이지만 URI를 사용 하도록 설정할 수 있습니다 때는 <ph id="ph2">&lt;xref:System.Web.Configuration.SessionStateSection.Cookieless%2A&gt;</ph> 익명 id 구성 섹션에는 특성으로 설정 되어는 <ph id="ph3">&lt;xref:System.Web.HttpCookieMode.UseUri&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpCookieMode.UseDeviceProfile&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Web.HttpCookieMode.AutoDetect&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</source>
          <target state="translated">더 이상 원할 경우 사용할 수 있는 익명 사용자가 인증 하는 경우에 예를 들어를 명시적으로 쿠키를 지워야 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</source>
          <target state="translated">익명 id는 필요한 인증 되지 않은 엔터티를 식별 하 고 인증이 필요한 경우 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>For more information, see <bpt id="p1">[</bpt>anonymousIdentification Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</ept></source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>anonymousIdentification 요소 (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> property by handling the <ph id="ph2">&lt;xref:System.Web.Security.AnonymousIdentificationModule.Creating&gt;</ph> event in the Global.asax file.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> 처리 하 여 속성의 <ph id="ph2">&lt;xref:System.Web.Security.AnonymousIdentificationModule.Creating&gt;</ph> Global.asax 파일에는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>This example has two parts:</source>
          <target state="translated">이 예제에는 두 부분에 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>A method in the Global.asax file that handles the <ph id="ph1">&lt;xref:System.Web.Security.AnonymousIdentificationModule.Creating&gt;</ph> event.</source>
          <target state="translated">처리 하는 Global.asax 파일에는 메서드는 <ph id="ph1">&lt;xref:System.Web.Security.AnonymousIdentificationModule.Creating&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>A Web Forms page.</source>
          <target state="translated">Web Forms 페이지입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>The first part of the code example shows how to set the <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> property by handling the <ph id="ph2">&lt;xref:System.Web.Security.AnonymousIdentificationModule.Creating&gt;</ph> event in the Global.asax file.</source>
          <target state="translated">코드 예제의 첫 번째 부분에서는 설정 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> 처리 하 여 속성의 <ph id="ph2">&lt;xref:System.Web.Security.AnonymousIdentificationModule.Creating&gt;</ph> Global.asax 파일에는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>The method that is named <ph id="ph1">`AnonymousIdentification_Creating`</ph> sets the <ph id="ph2">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> property when an anonymous ID is created.</source>
          <target state="translated">라는 메서드가 <ph id="ph1">`AnonymousIdentification_Creating`</ph> 설정의 <ph id="ph2">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> 익명 ID를 만들 때 속성입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AnonymousID">
          <source>The second part of the code example shows how to display the new <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> that is created by the <ph id="ph2">`AnonymousIdentification_Creating`</ph> event handler in the preceding example.</source>
          <target state="translated">코드 예제에서는 두 번째 부분에서는 새 표시 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> 에서 만들어진는 <ph id="ph2">`AnonymousIdentification_Creating`</ph> 앞의 예제에서 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>Gets the ASP.NET application's virtual application root path on the server.</source>
          <target state="translated">ASP.NET 응용 프로그램의 가상 응용 프로그램 루트 경로를 서버에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>The virtual path of the current application.</source>
          <target state="translated">현재 응용 프로그램의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</source>
          <target state="translated">이 속성을 사용 하 여 페이지 또는 루트 디렉터리에 있지 않은 웹 사용자 정의 컨트롤에서 응용 프로그램 루트를 기준으로 URL을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</source>
          <target state="translated">이렇게 하면 페이지 및 서로 다른 수준의 동일한 코드를 사용 하 여 응용 프로그램에서 고정 된 위치에서 리소스에 연결 하는 디렉터리 구조에 존재 하는 컨트롤을 공유 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Write%2A&gt;</ph> method to HTML-encode and then write the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt;</ph> property to a text file.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.IO.StreamWriter.Write%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 다음의 값을 기록는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt;</ph> 텍스트 파일에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>It assumes the existence of a <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> object named <ph id="ph2">`sw`</ph>.</source>
          <target state="translated">있다고 가정는 <ph id="ph1">&lt;xref:System.IO.StreamWriter&gt;</ph> 라는 개체 <ph id="ph2">`sw`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt;</ph> property to programmatically construct a path to a resource that is in a fixed location in the application.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt;</ph> 속성을 프로그래밍 방식으로 응용 프로그램에서 고정된 된 위치에 있는 리소스에 대 한 경로 구성 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>The page that references the resource does not have to be located in the same directory as the resource.</source>
          <target state="translated">해당 리소스를 참조 하는 페이지 리소스와 동일한 디렉터리에 있이 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ApplicationPath">
          <source>If you run this example in a Web application that is named WebSite1,  <ph id="ph1">`/WebSite1`</ph> will be displayed as the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt;</ph> property and <ph id="ph3">`/WebSite1/images/Image1.gif`</ph> will be displayed as the complete path of the image.</source>
          <target state="translated">WebSite1, 라고 하는 웹 응용 프로그램에서이 예제를 실행 하는 경우 <ph id="ph1">`/WebSite1`</ph> 의 값으로 표시 됩니다는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt;</ph> 속성 및 <ph id="ph3">`/WebSite1/images/Image1.gif`</ph> 이미지의 전체 경로으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath">
          <source>Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</source>
          <target state="translated">응용 프로그램 루트의 가상 경로를 가져온 후 응용 프로그램 루트를 물결표(~)로 표시하여 "~/page.aspx"와 같은 상대 경로로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath">
          <source>The virtual path of the application root for the current request.</source>
          <target state="translated">현재 요청에 대한 응용 프로그램 루트의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath">
          <source>Use this property to provide URL information that will stay the same even if the application changes location.</source>
          <target state="translated">이 속성을 사용 하 여 응용 프로그램 위치를 변경 하는 경우에 그대로 유지 됩니다 URL 정보를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath">
          <source>This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</source>
          <target state="translated">따라서 동일한 URL 매핑 코드를 테스트 환경에서 및 최종 배포 환경에서 사용할 또는 서로 다른 도메인에 웹 응용 프로그램의 복사본에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A&gt;</ph> property to set the URL of an <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Image&gt;</ph> control to an image in the same directory as the page.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A&gt;</ph> 의 URL을 설정 하려면 속성은 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Image&gt;</ph> 페이지와 같은 디렉터리에 있는 이미지를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath">
          <source>Run this page at different levels of a directory structure to see the resulting <ph id="ph1">&lt;xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A&gt;</ph> property values.</source>
          <target state="translated">서로 다른 수준의 결과 확인 하려면 디렉터리 구조에서이 페이지를 실행 <ph id="ph1">&lt;xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A&gt;</ph> property to programmatically set the path to a resource, based on the current path of the page.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A&gt;</ph> 페이지의 현재 경로에 따라 속성을 프로그래밍 방식으로 리소스에 경로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.BinaryRead(System.Int32)">
          <source>The number of bytes to read.</source>
          <target state="translated">읽을 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.BinaryRead(System.Int32)">
          <source>Performs a binary read of a specified number of bytes from the current input stream.</source>
          <target state="translated">현재 입력 스트림에서 지정된 바이트 수에 대한 이진 읽기를 수행합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.BinaryRead(System.Int32)">
          <source>A byte array.</source>
          <target state="translated">바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.BinaryRead(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.BinaryRead%2A&gt;</ph> method is provided for compatibility with ASP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.BinaryRead%2A&gt;</ph> 메서드 ASP와의 호환성을 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.BinaryRead(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.BinaryRead(System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.BinaryRead(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is greater than the number of bytes available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 사용 가능한 바이트의 수보다 큽니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Browser">
          <source>Gets or sets information about the requesting client's browser capabilities.</source>
          <target state="translated">요청 클라이언트의 브라우저 기능에 대한 정보를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Browser">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpBrowserCapabilities" /&gt;</ph> object listing the capabilities of the client's browser.</source>
          <target state="translated">클라이언트 브라우저의 기능을 나열하는 <ph id="ph1">&lt;see cref="T:System.Web.HttpBrowserCapabilities" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Browser">
          <source>The following code example sends a list of the browser's capabilities back to the client in an HTML page.</source>
          <target state="translated">다음 코드 예제에서는 HTML 페이지에 클라이언트 브라우저의 기능 목록을 보냅니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.ClientCertificate">
          <source>Gets the current request's client security certificate.</source>
          <target state="translated">현재 요청의 클라이언트 보안 인증서를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ClientCertificate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpClientCertificate" /&gt;</ph> object containing information about the client's security certificate settings.</source>
          <target state="translated">클라이언트의 보안 인증서 설정에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Web.HttpClientCertificate" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ClientCertificate">
          <source>The following code example sends the client's certificate settings back to the client in an HTML page.</source>
          <target state="translated">다음 코드 예제에서는 HTML 페이지에 클라이언트에 클라이언트의 인증서 설정 보냅니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.ContentEncoding">
          <source>Gets or sets the character set of the entity-body.</source>
          <target state="translated">엔터티 본문의 문자 집합을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentEncoding">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> object representing the client's character set.</source>
          <target state="translated">클라이언트의 문자 집합을 나타내는 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentEncoding">
          <source>Default content encoding can be specified in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> of a configuration file.</source>
          <target state="translated">에 기본 콘텐츠 인코딩을 지정할 수 있습니다는 <bpt id="p1">[</bpt>세계화 요소 (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> 구성 파일입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentEncoding">
          <source>If content encoding is also specified by the client, the default configuration settings are overridden.</source>
          <target state="translated">콘텐츠 인코딩을 지정 되어 클라이언트에서의 기본 구성 설정은 재정의 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentEncoding">
          <source>The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</source>
          <target state="translated">다음 코드 예제에서는 문자열 변수에 현재 HTTP 인코딩을에 대 한 설명을 나타내는 값을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.ContentLength">
          <source>Specifies the length, in bytes, of content sent by the client.</source>
          <target state="translated">클라이언트에서 보낸 콘텐츠의 길이를 바이트 단위로 지정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentLength">
          <source>The length, in bytes, of content sent by the client.</source>
          <target state="translated">클라이언트에서 보낸 콘텐츠의 길이(바이트 단위)입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentLength">
          <source>The following code example assigns the value representing the content length of the incoming request to an integer variable.</source>
          <target state="translated">다음 코드 예제에서는 정수 변수를 들어오는 요청의 콘텐츠 길이 나타내는 값을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.ContentType">
          <source>Gets or sets the MIME content type of the incoming request.</source>
          <target state="translated">들어오는 요청의 MIME 콘텐츠 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentType">
          <source>A string representing the MIME content type of the incoming request, for example, "text/html".</source>
          <target state="translated">들어오는 요청의 MIME 콘텐츠 형식을 나타내는 문자열(예: "text/html")입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentType">
          <source>Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</source>
          <target state="translated">일반적인 MIME 형식에는 추가로 "audio.wav", "image/gif" 및 "application/pdf"가 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentType">
          <source>The following code example assigns the value representing the content type of the incoming request to a string variable.</source>
          <target state="translated">다음 코드 예제에서는 문자열 변수를 들어오는 요청의 콘텐츠 형식을 나타내는 값을 할당 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ContentType">
          <source>The following example shows output that might be produced by this code.</source>
          <target state="translated">다음 예제에서는이 코드에 의해 생성 될 수는 출력을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Cookies">
          <source>Gets a collection of cookies sent by the client.</source>
          <target state="translated">클라이언트에서 보낸 쿠키 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Cookies">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpCookieCollection" /&gt;</ph> object representing the client's cookie variables.</source>
          <target state="translated">클라이언트의 쿠키 변수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.HttpCookieCollection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Cookies">
          <source>ASP.NET includes two intrinsic cookie collections.</source>
          <target state="translated">ASP.NET 두 내장 쿠키 컬렉션을 포함합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Cookies">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> contains cookies transmitted by the client to the server in the <ph id="ph3">`Cookie`</ph> header.</source>
          <target state="translated">통해 액세스할 수 있는 컬렉션은 <ph id="ph1">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph> 의 컬렉션 <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> 서버에 클라이언트에서 전송 되는 쿠키가 포함는 <ph id="ph3">`Cookie`</ph> 헤더입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Cookies">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> contains new cookies created on the server and transmitted to the client in the <ph id="ph3">`Set-Cookie`</ph> header.</source>
          <target state="translated">통해 액세스할 수 있는 컬렉션은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A&gt;</ph> 의 컬렉션 <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> 서버에 만든 및 클라이언트에 전송 된 새 쿠키를 포함는 <ph id="ph3">`Set-Cookie`</ph> 헤더입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Cookies">
          <source>After you add a cookie by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType&gt;</ph> collection, the cookie is immediately available in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType&gt;</ph> collection, even if the response has not been sent to the client.</source>
          <target state="translated">사용 하 여 쿠키를 추가한 후의 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType&gt;</ph> 컬렉션, 쿠키는에서 즉시 사용할 수는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType&gt;</ph> 응답 클라이언트에 전송 되지 않은 경우에 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Cookies">
          <source>The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</source>
          <target state="translated">다음 코드 예제에서는 클라이언트에서 보낸 모든 쿠키를 반복 하 고 HTTP 출력에는 이름, 만료 날짜, 보안 매개 변수 및 각 쿠키의 값을 보냅니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.CurrentExecutionFilePath">
          <source>Gets the virtual path of the current request.</source>
          <target state="translated">현재 요청의 가상 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.CurrentExecutionFilePath">
          <source>The virtual path of the current request.</source>
          <target state="translated">현재 요청의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.CurrentExecutionFilePath">
          <source><ph id="ph1">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> returns the file path to the currently executing page handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> 파일 경로 현재 실행 중인 페이지 처리기를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.CurrentExecutionFilePath">
          <source>For redirect scenarios using <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> methods this means that the <ph id="ph3">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> property returns the path to the page redirected to (child page).</source>
          <target state="translated">사용 하 여 리디렉션 시나리오에 대 한 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 즉 메서드는 <ph id="ph3">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> 속성의 경로 (자식 페이지) 리디렉션되는 페이지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.CurrentExecutionFilePath">
          <source>However, when the client is redirected to another page, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> property returns the path to the original page.</source>
          <target state="translated">그러나 클라이언트가 다른 페이지로 리디렉션 되었습니다는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> 속성의 경로 원본 페이지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.CurrentExecutionFilePath">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.CurrentExecutionFilePath">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension">
          <source>Gets the extension of the file name that is specified in the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /&gt;</ph> 속성에 지정된 파일 이름의 확장명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension">
          <source>The extension of the file name that is specified in the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /&gt;</ph> 속성에 지정된 파일 이름의 확장명입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.FilePath">
          <source>Gets the virtual path of the current request.</source>
          <target state="translated">현재 요청의 가상 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.FilePath">
          <source>The virtual path of the current request.</source>
          <target state="translated">현재 요청의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.FilePath">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> property does not include the <ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> trailer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> 속성이 포함 되지 않습니다는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> 트레일러 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.FilePath">
          <source>For example, for the URL <ph id="ph1">http://www.contoso.com/virdir/page.html/tail</ph>, the <ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> value is /virdir/page.html.</source>
          <target state="translated">URL에 대 한 예를 들어 <ph id="ph1">http://www.contoso.com/virdir/page.html/tail</ph>, <ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> 값은 /virdir/page.html 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.FilePath">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.FilePath">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Files">
          <source>Gets the collection of files uploaded by the client, in multipart MIME format.</source>
          <target state="translated">클라이언트에서 업로드한 파일 컬렉션을 multipart MIME 형식으로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Files">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpFileCollection" /&gt;</ph> object representing a collection of files uploaded by the client.</source>
          <target state="translated">클라이언트에서 업로드한 파일 컬렉션을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.HttpFileCollection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Files">
          <source>The items of the <ph id="ph1">&lt;see cref="T:System.Web.HttpFileCollection" /&gt;</ph> object are of type <ph id="ph2">&lt;see cref="T:System.Web.HttpPostedFile" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpFileCollection" /&gt;</ph> 개체의 항목은 <ph id="ph2">&lt;see cref="T:System.Web.HttpPostedFile" /&gt;</ph> 형식입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Files">
          <source>The file collection is populated only when the HTTP request <ph id="ph1">`Content-Type`</ph> value is "multipart/form-data".</source>
          <target state="translated">파일 컬렉션만 채워지는 HTTP 요청 하는 경우 <ph id="ph1">`Content-Type`</ph> 값은 "multipart/폼 데이터".</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Files">
          <source>The following code example displays the names of all files in the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Files%2A&gt;</ph> collection.</source>
          <target state="translated">다음 코드 예제에 있는 모든 파일의 이름을 표시는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.Files%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Filter">
          <source>Gets or sets the filter to use when reading the current input stream.</source>
          <target state="translated">현재 입력 스트림을 읽을 때 사용할 필터를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Filter">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to be used as the filter.</source>
          <target state="translated">필터로 사용되는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Filter">
          <source>The following code example creates two new classes, <ph id="ph1">`QQQ1`</ph> and <ph id="ph2">`QQQ2`</ph> that filter the <ph id="ph3">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 새 클래스를 만듭니다. <ph id="ph1">`QQQ1`</ph> 및 <ph id="ph2">`QQQ2`</ph> 해당 필터는 <ph id="ph3">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Filter">
          <source>Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</source>
          <target state="translated">응용 프로그램에서 모든 ASP.NET 웹 페이지에 대 한 모든 입력은 필터링 될 있도록 ASP.NET 응용 프로그램의 디렉터리에 Global.asax 파일에 클래스를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Filter">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> is invalid.</source>
          <target state="translated">지정한 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Form">
          <source>Gets a collection of form variables.</source>
          <target state="translated">폼 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Form">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> representing a collection of form variables.</source>
          <target state="translated">폼 변수의 컬렉션을 나타내는 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Form">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> property is populated when the HTTP request <ph id="ph2">`Content-Type`</ph> value is either "application/x-www-form-urlencoded" or "multipart/form-data".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> 속성은 HTTP 요청 하는 경우 <ph id="ph2">`Content-Type`</ph> 값은 "응용 프로그램/x-www-형식-urlencoded" 또는 "multipart/폼 데이터".</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Form">
          <source>The following example shows how to read the values in the form collection posted from a browser.</source>
          <target state="translated">다음 예제에는 브라우저에서 게시 되는 폼 컬렉션의 값을 읽는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Form">
          <source>Each name/value pair in the collection represents a control in the form and its value.</source>
          <target state="translated">각 이름/값 쌍 컬렉션에는 폼과 해당 값에 컨트롤을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
          <target state="translated">들어오는 HTTP 엔터티 본문을 읽는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
          <target state="translated">들어오는 HTTP 엔터티 본문을 읽는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>This method is identical to <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Files%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> properties.</source>
          <target state="translated">이 메서드는 동일 <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> ASP.NET에서 채우는 데 사용 되는 내부 저장소를 한 읽은 바이트를 복사 하는 점을 제외 하 고는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Files%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</source>
          <target state="translated">이 정보가 보존되기 때문에 ASP.NET Web Forms 페이지(.aspx 파일)와 같은 다운스트림 코드가 성공적으로 실행됩니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>This is not the case with the <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> method.</source>
          <target state="translated">이것은 <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> 메서드의 경우가 아닙니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>The request's entity body has already been loaded and parsed.</source>
          <target state="translated">요청의 엔터티 본문이 이미 로드되거나 구문 분석되었습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>Examples of properties that cause the entity body to be loaded and parsed include the following:</source>
          <target state="translated">엔터티 본문을 로드하고 구문 분석하도록 하는 속성의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Files" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Files" /&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.InputStream" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.InputStream" /&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>To avoid this exception, call the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /&gt;</ph> method first.</source>
          <target state="translated">이 예외가 발생하지 않도록 하려면 먼저 <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferedInputStream">
          <source>This exception is also thrown if the client disconnects while the entity body is being read.</source>
          <target state="translated">엔터티 본문을 읽는 동안 클라이언트 연결이 끊긴 경우 이 예외도 throw됩니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="T:System.Web.HttpRequest">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
          <target state="translated">들어오는 HTTP 엔터티 본문을 읽는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
          <target state="translated">들어오는 HTTP 엔터티 본문을 읽는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
          <target state="translated">들어오는 HTTP 엔터티 본문을 읽는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>This method provides an alternative to using the <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> property.</source>
          <target state="translated">이 메서드를 사용 하는 대신 제공는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> property waits until the whole request has been received before it returns a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> 속성을 반환 하기 전에 전체 요청을 받을 때까지 대기는 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object immediately.</source>
          <target state="translated">반면,는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> 메서드가 반환 되는 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 개체를 즉시 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>You can use the method to begin processing the entity body before the complete contents of the body have been received.</source>
          <target state="translated">본문의 전체 내용을 받기 전에 엔터티 본문을 처리를 시작 하는 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method.</source>
          <target state="translated">엔터티 본문 (하 고 만큼 많이 요청 하 고 수신한) 개체를 사용 하는 경우에 반환 됩니다와 같은 메서드를 호출 하 여 스트림을 읽어이 메서드에서 반환 되는 <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>You use parameters of the <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method to specify how much of the entity body to read.</source>
          <target state="translated">매개 변수를 사용 하는 <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> 메서드를 엔터티 본문을 읽었는지 영역을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> ASP.NET이 메서드에서 반환한 개체는 동기 및 비동기 읽기 메서드를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object implements both the <ph id="ph2">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 개체 모두를 구현 하는 <ph id="ph2">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</source>
          <target state="translated">비동기 메서드는 비동기적으로 사이는 비동기 읽기 루프 반복 마다 현재 스레드를 해제 하는 ASP.NET의 청크를 요청 엔터티를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</source>
          <target state="translated">이 메서드는 요청을 큰 파일을 업로드 하 고 시작 고 업로드가 완료 되기 전에 파일 내용에 액세스 하려는 경우 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>However, you should only use this method for scenarios where you want to take over all processing of the entity body.</source>
          <target state="translated">그러나만이 메서드를 사용 해야이 시나리오에 대 한 엔터티 본문의 모든 처리를 위임 하려면.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</source>
          <target state="translated">즉,.aspx 페이지를 사용 하는 실행 시간까지 엔터티 본문 이미 읽혔습니다 하기 때문에 프로그램.aspx 페이지에서이 메서드를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>The request's entity body has already been loaded and parsed.</source>
          <target state="translated">요청의 엔터티 본문이 이미 로드되거나 구문 분석되었습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>Examples of properties that cause the entity body to be loaded and parsed include the following:</source>
          <target state="translated">엔터티 본문을 로드하고 구문 분석하도록 하는 속성의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>To avoid this exception, call the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /&gt;</ph> method first.</source>
          <target state="translated">이 예외가 발생하지 않도록 하려면 먼저 <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream">
          <source>This exception is also thrown if the client disconnects while the entity body is being read.</source>
          <target state="translated">엔터티 본문을 읽는 동안 클라이언트 연결이 끊긴 경우 이 예외도 throw됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to disable the request-length limit; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청 길이 한계를 사용하지 않으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <ph id="ph2">&lt;see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /&gt;</ph> property.</source>
          <target state="translated">들어오는 HTTP 엔터티 본문을 읽고 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 속성에서 설정된 요청 길이 제한을 선택적으로 사용하지 않도록 설정하는 데 사용할 수 있는 <ph id="ph2">&lt;see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
          <target state="translated">들어오는 HTTP 엔터티 본문을 읽는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>For more information about this method, see the <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream&gt;</ph> overload.</source>
          <target state="translated">이 메서드에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>The request's entity body has already been loaded and parsed.</source>
          <target state="translated">요청의 엔터티 본문이 이미 로드되거나 구문 분석되었습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>Examples of properties that cause the entity body to be loaded and parsed include the following:</source>
          <target state="translated">엔터티 본문을 로드하고 구문 분석하도록 하는 속성의 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Files" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Files" /&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.InputStream" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.InputStream" /&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>To avoid this exception, call the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /&gt;</ph> method first.</source>
          <target state="translated">이 예외가 발생하지 않도록 하려면 먼저 <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)">
          <source>This exception is also thrown if the client disconnects while the entity body is being read.</source>
          <target state="translated">엔터티 본문을 읽는 동안 클라이언트 연결이 끊긴 경우 이 예외도 throw됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Headers">
          <source>Gets a collection of HTTP headers.</source>
          <target state="translated">HTTP 헤더의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Headers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> of headers.</source>
          <target state="translated">헤더의 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Headers">
          <source>For a listing of all possible headers, see <bpt id="p1">[</bpt>Request Header Fields<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73147)</ept> on the W3C Web site.</source>
          <target state="translated">모든 가능한 헤더의 해당 항목을 참조 하십시오. <bpt id="p1">[</bpt>요청 헤더 필드<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73147)</ept> W3C 웹 사이트에 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Headers">
          <source>The following code example displays the names and values of all headers in the HTTP request.</source>
          <target state="translated">다음 코드 예제에서는 HTTP 요청에 이름 및 모든 헤더의 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.HttpChannelBinding">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> object of the current <ph id="ph2">&lt;see cref="T:System.Web.HttpWorkerRequest" /&gt;</ph> instance.</source>
          <target state="translated">현재 <ph id="ph2">&lt;see cref="T:System.Web.HttpWorkerRequest" /&gt;</ph> 인스턴스의 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.HttpChannelBinding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> object of the current <ph id="ph2">&lt;see cref="T:System.Web.HttpWorkerRequest" /&gt;</ph> instance.</source>
          <target state="translated">현재 <ph id="ph2">&lt;see cref="T:System.Web.HttpWorkerRequest" /&gt;</ph> 인스턴스의 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.HttpChannelBinding">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpWorkerRequest" /&gt;</ph> object is not a <ph id="ph2">&lt;see langword="System.Web.Hosting.IIS7WorkerRequest" /&gt;</ph> object or a <ph id="ph3">&lt;see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /&gt;</ph> object.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpWorkerRequest" /&gt;</ph> 개체는 <ph id="ph2">&lt;see langword="System.Web.Hosting.IIS7WorkerRequest" /&gt;</ph> 개체 또는 <ph id="ph3">&lt;see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /&gt;</ph> 개체가 아닙니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.HttpMethod">
          <source>Gets the HTTP data transfer method (such as <ph id="ph1">&lt;see langword="GET" /&gt;</ph>, <ph id="ph2">&lt;see langword="POST" /&gt;</ph>, or <ph id="ph3">&lt;see langword="HEAD" /&gt;</ph>) used by the client.</source>
          <target state="translated">클라이언트에서 사용하는 HTTP 데이터 전송 메서드(예: <ph id="ph1">&lt;see langword="GET" /&gt;</ph>, <ph id="ph2">&lt;see langword="POST" /&gt;</ph> 또는 <ph id="ph3">&lt;see langword="HEAD" /&gt;</ph>)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.HttpMethod">
          <source>The HTTP data transfer method used by the client.</source>
          <target state="translated">클라이언트에서 사용되는 HTTP 데이터 전송 메서드입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.HttpMethod">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.HttpMethod%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.HttpMethod%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.HttpMethod">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.HttpMethod">
          <source>The following example shows output that is produced by this code.</source>
          <target state="translated">다음 예제에서는이 코드에 의해 생성 된 출력을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.InputStream">
          <source>Gets the contents of the incoming HTTP entity body.</source>
          <target state="translated">들어오는 HTTP 엔터티 본문의 콘텐츠를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.InputStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object representing the contents of the incoming HTTP content body.</source>
          <target state="translated">들어오는 HTTP 콘텐츠 본문의 콘텐츠를 나타내는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.InputStream">
          <source>The following code example copies the contents of an <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> into a string.</source>
          <target state="translated">다음 코드 예제에서는의 내용을 복사는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> 문자열로 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="T:System.Web.HttpRequest">
          <source>Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</source>
          <target state="translated">HTTP 요청 엔터티 본문을 메모리에 삽입하는 IIS 메서드에 대해 관리되는 래퍼를 제공합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A&gt;</ph> method overloads provide managed access to the IIS 7 <ph id="ph2">`IHttpRequest::InsertEntityBody`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A&gt;</ph> 메서드 오버 로드에 액세스할 수는 관리 되는 IIS 7 <ph id="ph2">`IHttpRequest::InsertEntityBody`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</source>
          <target state="translated">(클라이언트에서 게시 된 데이터)는 HTTP 요청 엔터티 본문을 메모리에 삽입 하는 IIS 메서드에 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>This is useful because IIS does not maintain a copy of the request entity after it has been read.</source>
          <target state="translated">읽은 후 IIS 요청 엔터티가의 복사본을 유지 되지 않기 때문에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A&gt;</ph> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A&gt;</ph> 메서드 HTTP 요청 엔터티 데이터의 복사본을 만들고 사용할 수 있도록 IIS에 대 한 사용자 지정 처리 기능을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A&gt;</ph> method overloads work only on IIS 7.0 or later, because the <ph id="ph2">`IHttpRequest::InsertEntityBody`</ph> method was added in IIS 7.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A&gt;</ph> 하므로 메서드 오버 로드만 IIS 7.0 이상에서 작업의 <ph id="ph2">`IHttpRequest::InsertEntityBody`</ph> 메서드는 IIS 7.0에서 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>Provides IIS with a copy of the HTTP request entity body.</source>
          <target state="translated">IIS에 HTTP 요청 엔터티 본문의 사본을 제공합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>IIS does not maintain a copy of the request after it has been read.</source>
          <target state="translated">읽은 후 IIS 요청의 복사본을 유지 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</source>
          <target state="translated">따라서 HTTP 요청에 대 한 처리기만 요청 엔터티가 읽어야 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType&gt;</ph> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType&gt;</ph> 메서드 오버 로드 ASP.NET에서 이전에 읽은 경우 IIS는 요청 엔터티 복사본으로 제공 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</source>
          <target state="translated">이 메서드 오버 로드는 ASP.NET 엔터티 요청을 읽고에 대 한 기존 요청 데이터를 다시 사용 하려는 경우 유용 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>The method was invoked on a version of IIS earlier than IIS 7.0.</source>
          <target state="translated">IIS 7.0 이전 버전의 IIS에서 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>For operating in a hosted environment.</source>
          <target state="translated">에 호스트 된 환경에서 작동 합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Web.AspNetHostingPermissionLevel.High" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Web.AspNetHostingPermissionLevel.High" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>An array that contains the request entity data.</source>
          <target state="translated">요청 엔터티 데이터가 포함된 배열입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based position in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the request entity data.</source>
          <target state="translated">요청 엔터티 데이터 저장을 시작할 <bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>의 위치(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to read into the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept> 배열로 읽어 들일 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</source>
          <target state="translated">IIS에 HTTP 요청 엔터티 본문의 사본 및 요청 엔터티 개체에 대한 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>IIS does not maintain a copy of the request after it has been read.</source>
          <target state="translated">읽은 후 IIS 요청의 복사본을 유지 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</source>
          <target state="translated">따라서 HTTP 요청에 대 한 처리기만 요청 엔터티가 읽어야 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType&gt;</ph> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType&gt;</ph> 메서드 오버 로드는 서로 다른 엔터티 본문을 메모리에 삽입 하는 등의 사용자 지정 처리를 수행 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>The method was invoked on a version of IIS earlier than IIS 7.0.</source>
          <target state="translated">IIS 7.0 이전 버전의 IIS에서 메서드가 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is a negative value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>가 음의 값입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>The number of items in <ph id="ph1">&lt;paramref name="count" /&gt;</ph> is larger than the available space in <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>, given the <ph id="ph3">&lt;paramref name="offset" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>의 항목 수는 값이 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>인 <ph id="ph3">&lt;paramref name="offset" /&gt;</ph>의 사용 가능한 공간보다 큽니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>for operating in a hosted environment.</source>
          <target state="translated">호스팅된 환경에서 작업하는 데 필요한 권한입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>.</source>
          <target state="translated">보안 동작: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Web.AspNetHostingPermissionLevel.High" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Web.AspNetHostingPermissionLevel.High" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.IsAuthenticated">
          <source>Gets a value indicating whether the request has been authenticated.</source>
          <target state="translated">요청이 인증되었는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsAuthenticated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request is authenticated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">요청이 인증되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsAuthenticated">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsAuthenticated%2A&gt;</ph> property to determine whether the current request has been authenticated.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsAuthenticated%2A&gt;</ph> 속성을 현재 요청이 인증 되었는지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsAuthenticated">
          <source>If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</source>
          <target state="translated">이 인증 되지 않은, 하는 경우 요청 입력할 수 있는 자격 증명은 웹 응용 프로그램에는 다른 페이지로 리디렉션됩니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsAuthenticated">
          <source>This is a common technique used in the default page for an application.</source>
          <target state="translated">이것이 응용 프로그램에 대 한 기본 페이지에 사용 되는 일반적인 기술입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.IsLocal">
          <source>Gets a value indicating whether the request is from the local computer.</source>
          <target state="translated">요청을 로컬 컴퓨터에서 보냈는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsLocal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the request is from the local computer; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">로컬 컴퓨터에서 보낸 요청이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsLocal">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsLocal%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.IsLocal%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`true`</ph> 은 요청을 보낸의 IP 주소 127.0.0.1 아니면 요청의 IP 주소는 서버의 IP 주소와 같습니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.IsSecureConnection">
          <source>Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</source>
          <target state="translated">HTTP 연결에서 보안 소켓, 즉 HTTPS를 사용하는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsSecureConnection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection is an SSL connection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">연결이 SSL 연결이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsSecureConnection">
          <source>The following code example determines whether the <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsSecureConnection%2A&gt;</ph> property is set to false.</source>
          <target state="translated">다음 코드 예제에서는 확인 여부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsSecureConnection%2A&gt;</ph> 속성이 false로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.IsSecureConnection">
          <source>If it is, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.SuppressContent%2A&gt;</ph> property is set to true to stop the response from being sent.</source>
          <target state="translated">인 경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.SuppressContent%2A&gt;</ph> 속성이을 보낼 응답을 중지 하려면 true로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Item(System.String)">
          <source>The name of the collection member to get.</source>
          <target state="translated">가져올 컬렉션 멤버의 이름입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Item(System.String)">
          <source>Gets the specified object from the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Cookies" /&gt;</ph>, or <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.ServerVariables" /&gt;</ph> collections.</source>
          <target state="translated">지정한 개체를 <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Cookies" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.ServerVariables" /&gt;</ph> 컬렉션에서 가져옵니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Item(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Cookies" /&gt;</ph>, or <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.ServerVariables" /&gt;</ph> collection member specified in the <ph id="ph5">&lt;paramref name="key" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 매개 변수에 지정된 <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Cookies" /&gt;</ph>, <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.ServerVariables" /&gt;</ph> 또는 <ph id="ph5">&lt;paramref name="key" /&gt;</ph> 컬렉션 멤버입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Item(System.String)">
          <source>If the specified <ph id="ph1">&lt;paramref name="key" /&gt;</ph> is not found, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="key" /&gt;</ph>가 없으면 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 반환됩니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.LogonUserIdentity">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> type for the current user.</source>
          <target state="translated">현재 사용자의 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.LogonUserIdentity">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> object for the current Microsoft Internet Information Services (IIS) authentication settings.</source>
          <target state="translated">현재 Microsoft IIS(인터넷 정보 서비스) 인증 설정의 <ph id="ph1">&lt;see cref="T:System.Security.Principal.WindowsIdentity" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.LogonUserIdentity">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A&gt;</ph> property exposes the properties and methods of the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object for the currently connected user to Microsoft Internet Information Services (IIS).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A&gt;</ph> 속성의 메서드와 속성을 노출 된 <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> Microsoft 인터넷 정보 서비스 (IIS)에 현재 연결 된 사용자에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.LogonUserIdentity">
          <source>The instance of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class that is exposed by <ph id="ph2">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A&gt;</ph> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 클래스에 의해 노출 되는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A&gt;</ph> IIS 요청 토큰을 추적 하 고 ASP.NET 내부에서 처리 되는 현재 HTTP 요청에 대 한이 토큰에 쉽게 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.LogonUserIdentity">
          <source>An instance of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</source>
          <target state="translated">인스턴스는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> 클래스는 자동으로 생성 되므로 해당 메서드 및 속성에 액세스 하기 위해 작성할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.LogonUserIdentity">
          <source>The following code example shows how to retrieve the <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A&gt;</ph> property for the current user and write out the values of each item in a text file.</source>
          <target state="translated">다음 코드 예제에서는 검색 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A&gt;</ph> 속성은 현재 사용자와 쓰기를 텍스트 파일의 각 항목의 값입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.LogonUserIdentity">
          <source>Place this code on the ASP.NET page referenced by the form's <ph id="ph1">`ACTION`</ph> attribute.</source>
          <target state="translated">이 코드를 추가 하 여 폼에서 참조 하는 ASP.NET 페이지에 <ph id="ph1">`ACTION`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.LogonUserIdentity">
          <source>The Web application is running in IIS 7 integrated mode and the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event has not yet been raised.</source>
          <target state="translated">웹 응용 프로그램은 IIS 7 통합 모드로 실행되고 있으며 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> 이벤트가 아직 발생하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapImageCoordinates(System.String)">
          <source>The name of the form image map.</source>
          <target state="translated">폼 이미지 맵의 이름입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapImageCoordinates(System.String)">
          <source>Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</source>
          <target state="translated">들어오는 이미지 필드 폼 매개 변수를 적절한 x 좌표와 y 좌표 값에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapImageCoordinates(System.String)">
          <source>A two-dimensional array of integers.</source>
          <target state="translated">정수의 2차원 배열입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="T:System.Web.HttpRequest">
          <source>Maps the virtual path in the requested URL to a physical path on the server for the current request.</source>
          <target state="translated">요청된 URL의 가상 경로를 현재 요청에 대한 서버의 실제 경로에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The virtual path (absolute or relative) for the current request.</source>
          <target state="translated">현재 요청의 가상 경로(절대 또는 상대)입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>Maps the specified virtual path to a physical path.</source>
          <target state="translated">지정된 가상 경로를 실제 경로에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The physical path on the server specified by <ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>에서 지정한 서버 상의 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> property potentially contains sensitive information about the hosting environment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> 속성 호스팅 환경에 대 한 중요 한 정보가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The return value should not be displayed to users.</source>
          <target state="translated">반환 값은 하지 사용자에 게 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> method to convert a virtual path to a fully qualified physical path on the server.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> 서버의 정규화 된 실제 경로에 가상 경로 변환 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>This example has two parts:</source>
          <target state="translated">이 예제에는 두 부분에 있습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>An .aspx page maps the path, reads the file, and displays results of the read operation.</source>
          <target state="translated">.Aspx 페이지 경로 매핑합니다 파일을 읽고 읽기 작업의 결과 표시 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>A class, <ph id="ph1">`UpperCaseFilterStream`</ph>, that changes all characters passed through it to uppercase.</source>
          <target state="translated">클래스, <ph id="ph1">`UpperCaseFilterStream`</ph>, 대문자로 통과 하는 모든 문자를 변경 하는 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> method.</source>
          <target state="translated">예의 첫 번째 부분에서는 가상 경로 사용 하 여 정규화 된 실제 경로를 변환 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>This physical path is then passed to a <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object, which obtains the contents of the file.</source>
          <target state="translated">이 실제 경로에 전달 되는 <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> 개체 파일의 내용을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> method is then called to display the content of the file on the page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> 페이지에 있는 파일의 내용을 표시 하려면 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> 속성은 모두 대문자로 페이지에 표시 되는 텍스트를 사용 하면 응답 스트림에 필터를 연결 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>The second part of the example shows a class that inherits from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> and converts all characters in a stream to uppercase.</source>
          <target state="translated">예제의 두 번째 부분에서 상속 되는 클래스를 보여 줍니다. <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 스트림에서 모든 문자를 대문자로 변환 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>Put this code in the <ph id="ph1">`App_Code`</ph> folder for your application.</source>
          <target state="translated">이 코드에 삽입 된 <ph id="ph1">`App_Code`</ph> 응용 프로그램에 대 한 폴더입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object is defined for the request.</source>
          <target state="translated">요청에 대해 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> 개체가 정의되지 않은 경우</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
          <source>The virtual path (absolute or relative) for the current request.</source>
          <target state="translated">현재 요청의 가상 경로(절대 또는 상대)입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
          <source>The virtual base directory path used for relative resolution.</source>
          <target state="translated">상대 주소 확인에 사용되는 가상 기본 디렉터리 경로입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate that <bpt id="p1">&lt;c&gt;</bpt>virtualPath<ept id="p1">&lt;/c&gt;</ept> may belong to another application; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>virtualPath<ept id="p1">&lt;/c&gt;</ept>가 다른 응용 프로그램에 해당될 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
          <source>Maps the specified virtual path to a physical path.</source>
          <target state="translated">지정된 가상 경로를 실제 경로에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
          <source>The physical path on the server.</source>
          <target state="translated">서버 상의 실제 경로입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> property potentially contains sensitive information about the hosting environment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> 속성 호스팅 환경에 대 한 중요 한 정보가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
          <source>The return value should not be displayed to users.</source>
          <target state="translated">반환 값은 하지 사용자에 게 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object is defined for the request.</source>
          <target state="translated">요청에 대해 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> 개체가 정의되지 않은 경우</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)">
          <source>The name of the image field.</source>
          <target state="translated">이미지 필드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)">
          <source>Maps an incoming image field form parameter into appropriate x and y coordinate values.</source>
          <target state="translated">들어오는 이미지 필드 폼 매개 변수를 적절한 x 좌표와 y 좌표 값에 매핑합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)">
          <source>The x and y coordinate values.</source>
          <target state="translated">X 좌표 및 Y 좌표 값입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Params">
          <source>Gets a combined collection of <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Cookies" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.ServerVariables" /&gt;</ph> items.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Cookies" /&gt;</ph> 및 <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.ServerVariables" /&gt;</ph> 항목의 조합 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Params">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Params">
          <source>Name-value pairs are added to the collection in the following order:</source>
          <target state="translated">이름-값 쌍은 다음 순서 대로 컬렉션에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Params">
          <source>Query-string parameters.</source>
          <target state="translated">쿼리 문자열 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Params">
          <source>Form fields.</source>
          <target state="translated">필드를 형성 합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Params">
          <source>Cookies.</source>
          <target state="translated">쿠키입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Params">
          <source>Server variables.</source>
          <target state="translated">서버 변수입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Params">
          <source>The following code example shows how to loop through the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Params%2A&gt;</ph> property for a page and how to display each key/value pair.</source>
          <target state="translated">다음 코드 예제에서는 반복 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.Params%2A&gt;</ph> 페이지 및 각 키/값 쌍을 표시 하는 방법에 대 한 속성.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Path">
          <source>Gets the virtual path of the current request.</source>
          <target state="translated">현재 요청의 가상 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Path">
          <source>The virtual path of the current request.</source>
          <target state="translated">현재 요청의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> is the concatenation of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> trailer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> 의 연결 된 <ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> 트레일러 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Path">
          <source>For example, for the URL <ph id="ph1">http://www.contoso.com/virdir/page.html/tail</ph>, the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> is /virdir/page.html/tail.</source>
          <target state="translated">URL에 대 한 예를 들어 <ph id="ph1">http://www.contoso.com/virdir/page.html/tail</ph>, <ph id="ph2">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> /virdir/page.html/tail 됩니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Path">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Path">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.PathInfo">
          <source>Gets the additional path information for a resource with a URL extension.</source>
          <target state="translated">URL 확장이 있는 리소스에 대한 추가 경로 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PathInfo">
          <source>The additional path information for a resource.</source>
          <target state="translated">리소스에 대한 추가 경로 정보입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PathInfo">
          <source>For the URL <ph id="ph1">Http://www.contoso.com/virdir/page.html/tail</ph>, the <ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> value is /tail.</source>
          <target state="translated">URL에 대 한 <ph id="ph1">Http://www.contoso.com/virdir/page.html/tail</ph>, <ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> 값은 /tail 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PathInfo">
          <source>The following code example determines whether the <ph id="ph1">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> property contains an empty string.</source>
          <target state="translated">다음 코드 예제에서는 확인 여부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> 속성 빈 문자열을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PathInfo">
          <source>If it does, the <ph id="ph1">&lt;xref:System.IO.StreamWriter.Write%2A&gt;</ph> method writes a string indicating this to a file.</source>
          <target state="translated">그렇지 않으면는 <ph id="ph1">&lt;xref:System.IO.StreamWriter.Write%2A&gt;</ph> 메서드는 파일에이 나타내는 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PathInfo">
          <source>If it does not, the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method HTML-encodes the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method writes the encoded value to the file.</source>
          <target state="translated">존재 하지 않는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 의 값을 HTML로 인코딩하고 메서드는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드 인코딩된 값이 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PathInfo">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.PhysicalApplicationPath">
          <source>Gets the physical file system path of the currently executing server application's root directory.</source>
          <target state="translated">현재 실행 중인 서버 응용 프로그램의 루트 디렉터리에 대한 실제 파일 시스템 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PhysicalApplicationPath">
          <source>The file system path of the current application's root directory.</source>
          <target state="translated">현재 응용 프로그램의 루트 디렉터리에 대한 파일 시스템 경로입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PhysicalApplicationPath">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.PhysicalApplicationPath%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.PhysicalApplicationPath%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PhysicalApplicationPath">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.PhysicalPath">
          <source>Gets the physical file system path corresponding to the requested URL.</source>
          <target state="translated">요청된 URL에 해당하는 실제 파일 시스템 경로를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PhysicalPath">
          <source>The file system path of the current request.</source>
          <target state="translated">현재 요청의 파일 시스템 경로입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PhysicalPath">
          <source>In redirect scenarios using <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Web.HttpRequest.PhysicalPath%2A&gt;</ph> property returns the path to the original page.</source>
          <target state="translated">사용 하 여 리디렉션 시나리오에서 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.PhysicalPath%2A&gt;</ph> 속성의 경로 원본 페이지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PhysicalPath">
          <source>To find the physical path of the currently executing page use the <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> method with the input argument set as the <ph id="ph2">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> property.</source>
          <target state="translated">현재 실행 중인 페이지 사용의 실제 경로 찾을 수는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> 으로 설정 된 입력 인수 메서드는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PhysicalPath">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.PhysicalPath%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.PhysicalPath%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.PhysicalPath">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.QueryString">
          <source>Gets the collection of HTTP query string variables.</source>
          <target state="translated">HTTP 쿼리 문자열 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.QueryString">
          <source>The query string variables sent by the client.</source>
          <target state="translated">클라이언트에서 보낸 쿼리 문자열 변수입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.QueryString">
          <source>Keys and values are URL-decoded.</source>
          <target state="translated">키와 값은 URL로 디코딩됩니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.QueryString">
          <source>The following code example shows two ways to get the value of a query string variable named "fullname".</source>
          <target state="translated">다음 코드 예제에서는 "fullname" 이라는 이름의 쿼리 문자열 변수의 값을 가져오는 두 가지 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.QueryString">
          <source>In each case, if the URL is <ph id="ph1">`http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`</ph>, then the value returned is "Fadi Fakhouri" because the <ph id="ph2">`%20`</ph> is URL-decoded into a space character.</source>
          <target state="translated">각각의 경우 URL이 <ph id="ph1">`http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`</ph>, 때문에 반환 되는 값은 "Fadi Fakhouri"는 <ph id="ph2">`%20`</ph> 는 공백 문자를 URL로 디코딩됩니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.QueryString">
          <source>If the URL doesn’t have a <ph id="ph1">`fullname`</ph> query string ID, the returned value would be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">URL에 없는 경우는 <ph id="ph1">`fullname`</ph> 문자열 ID를 쿼리, 반환 된 값이 없을 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.QueryString">
          <source>The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</source>
          <target state="translated">"Fullname" 쿼리 문자열;에 키에 대 한 첫 번째 코드 줄을 찾습니다. 두 번째 줄은 "fullname" 모든 HTTP 요청 컬렉션에서 키를 찾습니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.QueryString">
          <source>For more information about the second line, see <ph id="ph1">&lt;xref:System.Web.HttpRequest.Item%2A&gt;</ph>.</source>
          <target state="translated">두 번째 줄에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:System.Web.HttpRequest.Item%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.RawUrl">
          <source>Gets the raw URL of the current request.</source>
          <target state="translated">현재 요청의 원시 URL을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RawUrl">
          <source>The raw URL of the current request.</source>
          <target state="translated">현재 요청의 원시 URL입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RawUrl">
          <source>The raw URL is defined as the part of the URL following the domain information.</source>
          <target state="translated">원시 URL은 도메인 정보 다음에 URL의 일부분으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RawUrl">
          <source>In the URL string <ph id="ph1">http://www.contoso.com/articles/recent.aspx</ph>, the raw URL is /articles/recent.aspx.</source>
          <target state="translated">URL 문자열에 <ph id="ph1">http://www.contoso.com/articles/recent.aspx</ph>, 원시 URL은 /articles/recent.aspx 합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RawUrl">
          <source>The raw URL includes the query string, if present.</source>
          <target state="translated">있는 경우 원시 URL 쿼리 문자열을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RawUrl">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.RawUrl%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.RawUrl%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RawUrl">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</source>
          <target state="translated">요청 엔터티 본문을 읽었는지 여부와 읽은 경우 읽은 방법을 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>The value that indicates how the request entity body was read, or that it has not been read.</source>
          <target state="translated">요청 엔터티 주체를 읽어 들인 방법을 나타내거나 읽지 않았음을 나타내는 값입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</source>
          <target state="translated">이 메서드는 이미 읽은 엔터티 본문 및 호환 되지 않는 메서드를 사용 하 여 읽을 하려고 시도 하는 경우 throw 되는 예외를 방지 하기 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>Methods and properties that read the entity body include the following:</source>
          <target state="translated">엔터티 본문을 읽는 하는 메서드와 속성은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.Files%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.Files%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferedInputStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferedInputStream%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ReadEntityBodyMode">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> 메서드</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.RequestContext">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Web.Routing.RequestContext" /&gt;</ph> instance of the current request.</source>
          <target state="translated">현재 요청의 <ph id="ph1">&lt;see cref="T:System.Web.Routing.RequestContext" /&gt;</ph> 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RequestContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Routing.RequestContext" /&gt;</ph> instance of the current request.</source>
          <target state="translated">현재 요청의 <ph id="ph1">&lt;see cref="T:System.Web.Routing.RequestContext" /&gt;</ph> 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RequestContext">
          <source>For non-routed requests, the <ph id="ph1">&lt;see cref="T:System.Web.Routing.RequestContext" /&gt;</ph> object that is returned is empty.</source>
          <target state="translated">라우팅되지 않는 요청의 경우 반환되는 <ph id="ph1">&lt;see cref="T:System.Web.Routing.RequestContext" /&gt;</ph> 개체가 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RequestContext">
          <source>This property provides access to the <ph id="ph1">&lt;xref:System.Web.Routing.RouteData&gt;</ph> object for the current request.</source>
          <target state="translated">이 속성에 대 한 액세스를 제공는 <ph id="ph1">&lt;xref:System.Web.Routing.RouteData&gt;</ph> 현재 요청에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RequestContext">
          <source>For more information about ASP.NET routing, see.<bpt id="p1">[</bpt>ASP.NET Routing<ept id="p1">](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)</ept>.</source>
          <target state="translated">ASP.NET 라우팅에 대 한 자세한 내용은 다음을 참조 합니다. <bpt id="p1">[</bpt>ASP.NET 라우팅에서<ept id="p1">](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.RequestType">
          <source>Gets or sets the HTTP data transfer method (<ph id="ph1">&lt;see langword="GET" /&gt;</ph> or <ph id="ph2">&lt;see langword="POST" /&gt;</ph>) used by the client.</source>
          <target state="translated">클라이언트에서 사용하는 HTTP 데이터 전송 메서드(예: <ph id="ph1">&lt;see langword="GET" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="POST" /&gt;</ph>)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RequestType">
          <source>A string representing the HTTP invocation type sent by the client.</source>
          <target state="translated">클라이언트에서 보낸 HTTP 호출 형식을 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RequestType">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.RequestType%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.RequestType%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.RequestType">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)">
          <source>The physical drive path.</source>
          <target state="translated">실제 드라이브 경로입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)">
          <source>A Boolean value specifying whether an HTTP header should be saved to disk.</source>
          <target state="translated">HTTP 헤더를 디스크에 저장할지 여부를 지정하는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)">
          <source>Saves an HTTP request to disk.</source>
          <target state="translated">HTTP 요청을 디스크에 저장합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)">
          <source>Saving the request context to disk can be useful in debugging.</source>
          <target state="translated">요청 컨텍스트를 디스크에 저장 하는 디버깅에 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)">
          <source>The following code example calls the <ph id="ph1">&lt;xref:System.Web.HttpRequest.SaveAs%2A&gt;</ph> method when a page is loaded.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.SaveAs%2A&gt;</ph> 메서드 페이지가 로드 하는 경우.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)">
          <source>The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</source>
          <target state="translated">호출 된 요청이 ASP.NET 프로세스 id에 대 한 쓰기 권한이 있으며 요청에 포함 된 모든 헤더 정보 파일에 포함 되어 있는지 부여 된 디렉터리에 있는 텍스트 파일로 저장 하도록 지정 합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Web.Configuration.HttpRuntimeSection" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="true" /&gt;</ph> but <ph id="ph4">&lt;paramref name="filename" /&gt;</ph> is not an absolute path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Web.Configuration.HttpRuntimeSection" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되어 있지만 <ph id="ph4">&lt;paramref name="filename" /&gt;</ph>이 절대 경로가 아닌 경우</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.ServerVariables">
          <source>Gets a collection of Web server variables.</source>
          <target state="translated">웹 서버 변수의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ServerVariables">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> of server variables.</source>
          <target state="translated">서버 변수의 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ServerVariables">
          <source>For a list of server variables supported by IIS, see <bpt id="p1">[</bpt>IIS Server Variables<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=52471)</ept>.</source>
          <target state="translated">IIS에서 지 원하는 서버 변수 목록, 참조 <bpt id="p1">[</bpt>IIS 서버 변수<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=52471)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.ServerVariables">
          <source>The following code example displays the names and values of all named server variables.</source>
          <target state="translated">다음 코드 예제에서는 이름과 모든 명명 된 서버 변수 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> object that is tripped when a request times out.</source>
          <target state="translated">요청이 시간 초과될 때 발생하는 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>The cancellation token.</source>
          <target state="translated">취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>The timeout period can be specified in the Web.config file (see <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType&gt;</ph>) or programmatically (see <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Web.config 파일에 제한 시간을 지정할 수 있습니다 (참조 <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType&gt;</ph>) 또는 프로그래밍 방식으로 (참조 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>The timeout period is measured from the time the request comes in.</source>
          <target state="translated">제한 시간에 요청 하는 시간에서 측정 됩니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</source>
          <target state="translated">110 초의 기본 제한 시간을 적용 하는 경우 취소 토큰 요청 처리가 시작 된 후 110 초 보다 더 이전에 발생 됩니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>You can change the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType&gt;</ph> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</source>
          <target state="translated">변경할 수는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType&gt;</ph> 속성 값이이 토큰에 긴 아직 발생 하지 않은,으로 새로운 제한 시간 값을 적용 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</source>
          <target state="translated">요청 처리가 시작 된 후 110에서 125 초 사이의 잠시 토큰을 중단점이 됩니다, 그리고 즉 제한 시간 값은 110 초 토큰 15 두 번째 세분성만 제공 되는 현재 합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>The granularity may change in the future.</source>
          <target state="translated">세분성은 나중에 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>Even though this property is thread-safe, there are restrictions on its use.</source>
          <target state="translated">이 속성은 스레드로부터 안전한, 경우에 사용에 대 한 제한 사항이 있습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TimedOutToken">
          <source>This property is meaningless if WebSockets request processing has started.</source>
          <target state="translated">이 속성은 Websocket 요청 처리가 시작 된 경우에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.TlsTokenBindingInfo">
          <source>Gets the TLS token binding information.</source>
          <target state="translated">TLS 토큰 바인딩 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.TlsTokenBindingInfo">
          <source>The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</source>
          <target state="translated">이 속성을 사용하여 응용 프로그램은 들어오는 HTTP 요청에서 향상된 인증을 위해 토큰 정보를 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TlsTokenBindingInfo">
          <source>The binding token for the current connection.</source>
          <target state="translated">현재 연결에 대한 바인딩 토큰입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TlsTokenBindingInfo">
          <source>This property returns <ph id="ph1">`null`</ph> on non-windows10 platforms.</source>
          <target state="translated">이 속성은 반환 <ph id="ph1">`null`</ph> 및 windows10 아닌 플랫폼입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.TotalBytes">
          <source>Gets the number of bytes in the current input stream.</source>
          <target state="translated">현재 입력 스트림의 바이트 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TotalBytes">
          <source>The number of bytes in the input stream.</source>
          <target state="translated">입력 스트림의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.TotalBytes">
          <source>The following code example determines whether the <ph id="ph1">&lt;xref:System.Web.HttpRequest.TotalBytes%2A&gt;</ph> property value is greater than 1000 bytes and writes that information to a file.</source>
          <target state="translated">다음 코드 예제에서는 확인 여부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.TotalBytes%2A&gt;</ph> 속성 값 1000 바이트 보다 크면 하 고 해당 정보를 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Unvalidated">
          <source>Gets the HTTP request values without triggering request validation.</source>
          <target state="translated">요청 유효성 검사를 트리거하지 않고 HTTP 요청 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Unvalidated">
          <source>The HTTP request values that have not been checked using request validation.</source>
          <target state="translated">요청 유효성 검사를 사용하여 확인되지 않은 HTTP 요청 값입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Unvalidated">
          <source>Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</source>
          <target state="translated">HTML 태그 및 사이트 간 스크립팅 공격이 발생할를 나타낼 수 있는 스크립트에 대 한 유효성 검사를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Unvalidated">
          <source>By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <ph id="ph1">&lt;xref:System.Web.HttpRequestValidationException&gt;</ph> exception.</source>
          <target state="translated">기본적으로 모든 값 요청 유효성 검사를 사용 하 여 확인 되 고 ASP.NET에서 모든 값 태그 또는 스크립트가 들어 있으면는 <ph id="ph1">&lt;xref:System.Web.HttpRequestValidationException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Unvalidated">
          <source>Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</source>
          <target state="translated">요청에 태그가 포함 되어 있음을 예상 되는 경우이 메서드를 사용 하 여 (예를 들어 태그를 포함 하는 콘텐츠를 게시 하는 사용자 수) 요청의 원시 값을 가져오는 중이 고 합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Unvalidated">
          <source>If you use this property, you must manually check the data for potential cross-site scripting attacks.</source>
          <target state="translated">이 속성을 사용 하는 경우 잠재적인 교차 사이트 스크립팅 공격에 대 한 데이터를 수동으로 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.Url">
          <source>Gets information about the URL of the current request.</source>
          <target state="translated">현재 요청의 URL에 대한 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Url">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object that contains the URL of the current request.</source>
          <target state="translated">현재 요청의 URL이 포함된 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.Url">
          <source>The following code example assigns the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</source>
          <target state="translated">다음에 할당 하는 예제 코드는 <ph id="ph1">&lt;xref:System.Uri&gt;</ph> 개체 변수를 표시 합니다. 현재 요청 URL의 두 속성의 값을 HTTP 출력 개체는 개체입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.UrlReferrer">
          <source>Gets information about the URL of the client's previous request that linked to the current URL.</source>
          <target state="translated">현재 URL에 연결된 클라이언트의 이전 요청 URL에 대한 정보를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UrlReferrer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UrlReferrer">
          <source>The following code example displays the value of two properties of the URL that referred the client to the current application.</source>
          <target state="translated">다음 코드 예제에서는 현재 응용 프로그램에 클라이언트를 참조 하는 URL의 두 속성의 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.UrlReferrer">
          <source>The HTTP <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> request header is malformed and cannot be converted to a <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> object.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Referer" /&gt;</ph> 요청 헤더가 잘못되었으며 <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> 개체로 변환할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.UserAgent">
          <source>Gets the raw user agent string of the client browser.</source>
          <target state="translated">클라이언트 브라우저의 원시 사용자 에이전트 문자열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserAgent">
          <source>The raw user agent string of the client browser.</source>
          <target state="translated">클라이언트 브라우저의 원시 사용자 에이전트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserAgent">
          <source>The following code example assigns the type identification of the requesting browser to a string variable.</source>
          <target state="translated">다음 코드 예제에서는 문자열 변수를 요청 하는 브라우저의 형식 id를 할당합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.UserHostAddress">
          <source>Gets the IP host address of the remote client.</source>
          <target state="translated">원격 클라이언트의 IP 호스트 주소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserHostAddress">
          <source>The IP address of the remote client.</source>
          <target state="translated">원격 클라이언트의 IP 호스트 주소입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserHostAddress">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.UserHostAddress%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.UserHostAddress%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserHostAddress">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.UserHostName">
          <source>Gets the DNS name of the remote client.</source>
          <target state="translated">원격 클라이언트의 DNS 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserHostName">
          <source>The DNS name of the remote client.</source>
          <target state="translated">원격 클라이언트의 DNS 이름입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserHostName">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to HTML-encode the value of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.UserHostName%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> method to write the encoded value to the file.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> 을 HTML 인코딩하려면 메서드 값은 <ph id="ph2">&lt;xref:System.Web.HttpRequest.UserHostName%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> 메서드를 인코딩된 값을 파일에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserHostName">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Web.HttpRequest.UserLanguages">
          <source>Gets a sorted string array of client language preferences.</source>
          <target state="translated">클라이언트 언어 기본 설정의 정렬된 문자열 배열을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserLanguages">
          <source>A sorted string array of client language preferences, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if empty.</source>
          <target state="translated">클라이언트 언어 기본 설정의 정렬된 문자열 배열이거나 비어 있는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserLanguages">
          <source>The following code example captures the multiple values returned by the <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A&gt;</ph> property into a string array and writes each language name to a separate line of HTTP output.</source>
          <target state="translated">다음 코드 예제에서는 반환 하는 여러 값을 캡처하는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A&gt;</ph> 문자열 배열 및 HTTP 출력의 별도 줄에 각 언어 이름을 쓰기 속성입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserLanguages">
          <source>The language names are provided by the browser, and there is no definitive list of all possible codes.</source>
          <target state="translated">언어 이름 브라우저에서 제공 되며 가능한 모든 코드의 정의 된 목록이 없습니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpRequest.UserLanguages">
          <source>Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</source>
          <target state="translated">일반적으로 추가 구성 요소는 언어, 하이픈 및 문화권에 대 한 두 문자 코드에 대 한 두 문자 코드와 같은 "en-us" 미국 영어와 프랑스어 (캐나다)에 대 한 "fr-ca"입니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.ValidateInput">
          <source>Causes validation to occur for the collections accessed through the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Cookies" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph>, and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.Cookies" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 속성을 통해 액세스되는 컬렉션에 대해 유효성 검사가 수행되도록 합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.ValidateInput">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class uses input validation flags to track whether to perform validation on the request collections accessed through the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> 클래스 입력된 유효성 검사 플래그를 사용 하 여를 통해 액세스 되는 요청이 컬렉션에 유효성 검사를 수행할지 여부를 추적 하는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.ValidateInput">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.ValidateInput%2A&gt;</ph> method sets these flags so that when the get accessors for the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> property are invoked, input validation is performed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.ValidateInput%2A&gt;</ph> 메서드 이러한 플래그를 설정 하도록 때에 대 한 get 접근자는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> 속성 호출 되는, 입력된 유효성 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.ValidateInput">
          <source>Validation works by checking all input data against a hard-coded list of potentially dangerous data.</source>
          <target state="translated">유효성 검사는 하드 코드 된 잠재적으로 위험한 데이터 목록 기준으로 모든 입력된 데이터를 확인 하 여 작동 합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.ValidateInput">
          <source>If the validation feature is enabled by page directive or configuration, this method is called during the page's <ph id="ph1">`ProcessRequest`</ph> processing phase.</source>
          <target state="translated">Page 지시문 또는 구성을 통해 유효성 검사 기능을 사용 하면이 메서드는 페이지의 <ph id="ph1">`ProcessRequest`</ph> 처리 단계입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpRequest.ValidateInput">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.ValidateInput%2A&gt;</ph> method can be called by your code if the validation feature is not enabled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpRequest.ValidateInput%2A&gt;</ph> 유효성 검사 기능을 사용 하지 않는 경우 사용자 코드에서 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.HttpRequest.ValidateInput">
          <source>Potentially dangerous data was received from the client.</source>
          <target state="translated">클라이언트에서 위험할 수 있는 데이터가 수신된 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>