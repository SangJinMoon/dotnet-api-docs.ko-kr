<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd1c8e4da4805ae5190ac18adbfcbce2a519ed17" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375709" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="59529-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span>
      <span class="sxs-lookup">
        <span data-stu-id="59529-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-102">메서드 및 속성의는 <xref:System.Web.HttpRequest> 클래스를 통해 노출 되는 `Request` 의 속성은 <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, 및 <xref:System.Web.UI.UserControl> 클래스.</span><span class="sxs-lookup"><span data-stu-id="59529-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="59529-103">데이터에 액세스 하는 <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, 또는 <xref:System.Web.HttpRequest.ServerVariables%2A> 작성할 수 있습니다 컬렉션, `Request["key"]`의 예제에 표시 된 것 처럼는 <xref:System.Web.HttpRequest.QueryString%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="59529-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59529-104">유니코드 지원에 대 한 <xref:System.Web.HttpRequest> 클래스 멤버에는 IIS 버전 6.0 이상이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-105">다음 예에서는 액세스는 <xref:System.Web.HttpRequest> 를 사용 하 여 현재 요청에 대 한 인스턴스는 <xref:System.Web.UI.Page.Request%2A> 속성의는 <xref:System.Web.UI.Page> 클래스.</span><span class="sxs-lookup"><span data-stu-id="59529-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="59529-106">데이터에 액세스 하기 위한 간소화 된 구문을 사용할 수 있습니다는 <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, 또는 <xref:System.Web.HttpRequest.ServerVariables%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="59529-107">작성할 수 있습니다 `Request["key"]`합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-107">You can write `Request["key"]`.</span></span>  
  
 <span data-ttu-id="59529-108">첫 번째 예에는 페이지를 로드할 때 쿼리 문자열 값을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59529-108">The first example shows how to retrieve a query string value when loading a page.</span></span>  
  
```csharp  
public partial class AddToCart : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        string rawId = Request["ProductID"];  
        int productId;  
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  
        {  
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  
            {  
                usersShoppingCart.AddToCart(productId);  
            }  
        }  
        else  
        {  
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");  
        }  
        Response.Redirect("ShoppingCart.aspx");  
    }  
}  
```  
  
```vb  
Public Class AddToCart  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        Dim rawId = Request("ProductID")  
        Dim productId As Integer  
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  
            Using usersShoppingCart As New ShoppingCartActions()  
                usersShoppingCart.AddToCart(productId)  
            End Using  
  
        Else  
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")  
        End If  
        Response.Redirect("ShoppingCart.aspx")  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="59529-109">다음 예제에는 요청이 인증 되는 경우를 확인 하 고 원시 URL을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59529-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>  
  
```csharp  
public partial class RestrictedPage : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        if (!Request.IsAuthenticated)  
        {  
            var rawUrl = Request.RawUrl;  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));  
        }  
    }  
}  
```  
  
```vb  
Public Class RestrictedPage  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        If Not Request.IsAuthenticated Then  
            Dim rawUrl = Request.RawUrl  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))  
        End If  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="59529-110">소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: [다운로드](http://go.microsoft.com/fwlink/?LinkID=191455)합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkID=191455).</span></span>  
  
 <span data-ttu-id="59529-111">사용 하 여이 예제는 <xref:System.IO.StreamWriter> 클래스의 여러 값을 쓸 <xref:System.Web.HttpRequest> 클래스 파일에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="59529-112">문자열 형식의 속성에 대 한 값은 HTML 파일에 쓸 때로 인코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="59529-113">컬렉션을 나타내는 속성을 반복 하 고 파일에 포함 된 각 키/값 쌍이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="59529-114">이 예제에는 사용자 입력을 허용하는 텍스트 상자가 있으므로 보안상 위험할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="59529-115">기본적으로 ASP.NET 웹 페이지는 사용자 입력 내용에 스크립트 또는 HTML 요소가 포함되어 있지 않은지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="59529-116">자세한 내용은 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="59529-116">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequest : string * string * string -&gt; System.Web.HttpRequest" Usage="new System.Web.HttpRequest (filename, url, queryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="59529-117">The name of the file associated with the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-117">The name of the file associated with the request.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="59529-118">The information regarding the URL of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-118">The information regarding the URL of the current request.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="59529-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-121">인스턴스를 직접 만들 필요가 없습니다는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="59529-122">메서드 및 속성의는 <xref:System.Web.HttpRequest> 클래스를 통해 노출 되는 `Request` 속성은 <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, 및 <xref:System.Web.UI.UserControl> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59529-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span>
          </span>
          <span data-ttu-id="59529-124">You might use this method in response to an attack by a malicious HTTP client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-124">You might use this method in response to an attack by a malicious HTTP client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-125">이 메서드는 스레드로부터 안전 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-125">This method is thread-safe.</span></span> <span data-ttu-id="59529-126">모든 스레드가 언제 든 지 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-126">Any thread may call it at any time.</span></span>  
  
 <span data-ttu-id="59529-127">이 메서드 통합된 모드에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="59529-128">클래식 모드에서 호출 하는 경우 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="59529-129">파이프라인 모드를 확인 하려면 사용 <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-130">Gets a string array of client-supported MIME accept types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-130">Gets a string array of client-supported MIME accept types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-131">클라이언트에서 지원하는 MIME 허용 형식의 문자열 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-131">A string array of client-supported MIME accept types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-132">다음 코드 예제에서는 반환 하는 여러 값을 캡처하는 <xref:System.Web.HttpRequest.AcceptTypes%2A> 개체 변수에 속성 수와 각 valueto의 이름을 별도 HTTP 출력의 줄을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="59529-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each valueto a separate line of HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequest.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-133">Gets the anonymous identifier for the user, if present.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-133">Gets the anonymous identifier for the user, if present.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-134">현재 익명 사용자 ID를 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-134">A string representing the current anonymous user identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-135"><xref:System.Web.HttpRequest.AnonymousID%2A> 속성에서 사용자를 추적 또는의 데이터를 저장 하지 않고 해당 사용자 프로필 속성 할당에 사용할 수 있는 인증 되지 않은 사용자에 게 수명이 긴 고유 식별자가 할당 한 `Session` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="59529-136">기본적으로는 <xref:System.Web.HttpRequest.AnonymousID%2A> 속성 쿠키를 사용 하 여 추적 이지만 URI를 사용 하도록 설정할 수 있습니다 때는 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> 익명 id 구성 섹션에는 특성으로 설정 되어는 <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, 또는 <xref:System.Web.HttpCookieMode.AutoDetect> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="59529-137">더 이상 원할 경우 사용할 수 있는 익명 사용자가 인증 하는 경우에 예를 들어를 명시적으로 쿠키를 지워야 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>  
  
 <span data-ttu-id="59529-138">익명 id는 필요한 인증 되지 않은 엔터티를 식별 하 고 인증이 필요한 경우 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="59529-139">자세한 내용은 참조 [anonymousIdentification 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span><span class="sxs-lookup"><span data-stu-id="59529-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-140">사용 하는 방법을 보여 주는 다음 예제는 <xref:System.Web.HttpRequest.AnonymousID%2A> 처리 하 여 속성의 <xref:System.Web.Security.AnonymousIdentificationModule.Creating> Global.asax 파일에는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="59529-141">이 예제에는 두 부분에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-141">This example has two parts:</span></span>  
  
-   <span data-ttu-id="59529-142">처리 하는 Global.asax 파일에는 메서드는 <xref:System.Web.Security.AnonymousIdentificationModule.Creating> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>  
  
-   <span data-ttu-id="59529-143">Web Forms 페이지입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-143">A Web Forms page.</span></span>  
  
 <span data-ttu-id="59529-144">코드 예제의 첫 번째 부분에서는 설정 하는 방법을 보여 줍니다.는 <xref:System.Web.HttpRequest.AnonymousID%2A> 처리 하 여 속성의 <xref:System.Web.Security.AnonymousIdentificationModule.Creating> Global.asax 파일에는 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="59529-145">라는 메서드가 `AnonymousIdentification_Creating` 설정의 <xref:System.Web.HttpRequest.AnonymousID%2A> 익명 ID를 만들 때 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]  
  
 <span data-ttu-id="59529-146">코드 예제에서는 두 번째 부분에서는 새 표시 하는 방법을 보여 줍니다. <xref:System.Web.HttpRequest.AnonymousID%2A> 에서 만들어진는 `AnonymousIdentification_Creating` 앞의 예제에서 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequest.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-147">Gets the ASP.NET application's virtual application root path on the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-147">Gets the ASP.NET application's virtual application root path on the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-148">현재 응용 프로그램의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-148">The virtual path of the current application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-149">이 속성을 사용 하 여 페이지 또는 루트 디렉터리에 있지 않은 웹 사용자 정의 컨트롤에서 응용 프로그램 루트를 기준으로 URL을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-149">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="59529-150">이렇게 하면 페이지 및 서로 다른 수준의 동일한 코드를 사용 하 여 응용 프로그램에서 고정 된 위치에서 리소스에 연결 하는 디렉터리 구조에 존재 하는 컨트롤을 공유 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-150">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-151">다음 예제에서는 <xref:System.IO.StreamWriter.Write%2A> 을 HTML 인코딩하려면 메서드 다음의 값을 기록는 <xref:System.Web.HttpRequest.ApplicationPath%2A> 텍스트 파일에는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-151">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="59529-152">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-152">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="59529-153">있다고 가정는 <xref:System.IO.StreamWriter> 라는 개체 `sw`합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-153">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 <span data-ttu-id="59529-154">다음 예제에서는 <xref:System.Web.HttpRequest.ApplicationPath%2A> 속성을 프로그래밍 방식으로 응용 프로그램에서 고정된 된 위치에 있는 리소스에 대 한 경로 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-154">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="59529-155">해당 리소스를 참조 하는 페이지 리소스와 동일한 디렉터리에 있이 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-155">The page that references the resource does not have to be located in the same directory as the resource.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]  
  
 <span data-ttu-id="59529-156">WebSite1, 라고 하는 웹 응용 프로그램에서이 예제를 실행 하는 경우 `/WebSite1` 의 값으로 표시 됩니다는 <xref:System.Web.HttpRequest.ApplicationPath%2A> 속성 및 `/WebSite1/images/Image1.gif` 이미지의 전체 경로으로 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-156">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-157">Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-157">Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-158">현재 요청에 대한 응용 프로그램 루트의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-158">The virtual path of the application root for the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-159">이 속성을 사용 하 여 응용 프로그램 위치를 변경 하는 경우에 그대로 유지 됩니다 URL 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-159">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="59529-160">따라서 동일한 URL 매핑 코드를 테스트 환경에서 및 최종 배포 환경에서 사용할 또는 서로 다른 도메인에 웹 응용 프로그램의 복사본에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-160">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-161">다음 예제에서는 <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> 의 URL을 설정 하려면 속성은 <xref:System.Web.UI.WebControls.Image> 페이지와 같은 디렉터리에 있는 이미지를 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-161">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="59529-162">서로 다른 수준의 결과 확인 하려면 디렉터리 구조에서이 페이지를 실행 <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-162">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]  
  
 <span data-ttu-id="59529-163">다음 예제에서는 <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> 페이지의 현재 경로에 따라 속성을 프로그래밍 방식으로 리소스에 경로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-163">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="member this.BinaryRead : int -&gt; byte[]" Usage="httpRequest.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="59529-164">The number of bytes to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-164">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-165">Performs a binary read of a specified number of bytes from the current input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-165">Performs a binary read of a specified number of bytes from the current input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59529-166">A byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-166">A byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-167"><xref:System.Web.HttpRequest.BinaryRead%2A> 메서드 ASP와의 호환성을 위해 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-167">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="59529-168">
            <paramref name="count" /> is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-168">
              <paramref name="count" /> is 0.</span>
          </span>
          <span data-ttu-id="59529-169">\- or -  <paramref name="count" /> is greater than the number of bytes available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-169">\- or -  <paramref name="count" /> is greater than the number of bytes available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities with get, set" Usage="System.Web.HttpRequest.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-170">Gets or sets information about the requesting client's browser capabilities.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-170">Gets or sets information about the requesting client's browser capabilities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-171">클라이언트 브라우저의 기능을 나열하는 <see cref="T:System.Web.HttpBrowserCapabilities" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-171">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-172">다음 코드 예제에서는 HTML 페이지에 클라이언트 브라우저의 기능 목록을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="59529-172">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequest.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-173">Gets the current request's client security certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-173">Gets the current request's client security certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-174">클라이언트의 보안 인증서 설정에 대한 정보가 들어 있는 <see cref="T:System.Web.HttpClientCertificate" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-174">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-175">다음 코드 예제에서는 HTML 페이지에 클라이언트에 클라이언트의 인증서 설정 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="59529-175">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-176">Gets or sets the character set of the entity-body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-176">Gets or sets the character set of the entity-body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-177">클라이언트의 문자 집합을 나타내는 <see cref="T:System.Text.Encoding" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-177">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-178">에 기본 콘텐츠 인코딩을 지정할 수 있습니다는 [세계화 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) 구성 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-178">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) of a configuration file.</span></span> <span data-ttu-id="59529-179">콘텐츠 인코딩을 지정 되어 클라이언트에서의 기본 구성 설정은 재정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-179">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-180">다음 코드 예제에서는 문자열 변수에 현재 HTTP 인코딩을에 대 한 설명을 나타내는 값을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-180">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-181">Specifies the length, in bytes, of content sent by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-181">Specifies the length, in bytes, of content sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-182">클라이언트에서 보낸 콘텐츠의 길이(바이트 단위)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-182">The length, in bytes, of content sent by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-183">다음 코드 예제에서는 정수 변수를 들어오는 요청의 콘텐츠 길이 나타내는 값을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-183">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-184">Gets or sets the MIME content type of the incoming request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-184">Gets or sets the MIME content type of the incoming request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-185">들어오는 요청의 MIME 콘텐츠 형식을 나타내는 문자열(예: "text/html")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-185">A string representing the MIME content type of the incoming request, for example, "text/html".</span>
          </span>
          <span data-ttu-id="59529-186">일반적인 MIME 형식에는 추가로 "audio.wav", "image/gif" 및 "application/pdf"가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-186">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-187">다음 코드 예제에서는 문자열 변수를 들어오는 요청의 콘텐츠 형식을 나타내는 값을 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-187">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="59529-188">다음 예제에서는이 코드에 의해 생성 될 수는 출력을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59529-188">The following example shows output that might be produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-189">Gets a collection of cookies sent by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-189">Gets a collection of cookies sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-190">클라이언트의 쿠키 변수를 나타내는 <see cref="T:System.Web.HttpCookieCollection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-190">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-191">ASP.NET 두 내장 쿠키 컬렉션을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-191">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="59529-192">통해 액세스할 수 있는 컬렉션은 <xref:System.Web.HttpRequest.Cookies%2A> 의 컬렉션 <xref:System.Web.HttpRequest> 서버에 클라이언트에서 전송 되는 쿠키가 포함는 `Cookie` 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-192">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="59529-193">통해 액세스할 수 있는 컬렉션은 <xref:System.Web.HttpResponse.Cookies%2A> 의 컬렉션 <xref:System.Web.HttpResponse> 서버에 만든 및 클라이언트에 전송 된 새 쿠키를 포함는 `Set-Cookie` 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-193">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59529-194">사용 하 여 쿠키를 추가한 후의 <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> 컬렉션, 쿠키는에서 즉시 사용할 수는 <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> 응답 클라이언트에 전송 되지 않은 경우에 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-194">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-195">다음 코드 예제에서는 클라이언트에서 보낸 모든 쿠키를 반복 하 고 HTTP 출력에는 이름, 만료 날짜, 보안 매개 변수 및 각 쿠키의 값을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="59529-195">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-196">Gets the virtual path of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-196">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-197">현재 요청의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-197">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-198"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> 파일 경로 현재 실행 중인 페이지 처리기를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-198"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="59529-199">사용 하 여 리디렉션 시나리오에 대 한 <xref:System.Web.HttpServerUtility.Execute%2A> 및 <xref:System.Web.HttpServerUtility.Transfer%2A> 즉 메서드는 <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> 속성의 경로 (자식 페이지) 리디렉션되는 페이지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-199">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="59529-200">그러나 클라이언트가 다른 페이지로 리디렉션 되었습니다는 <xref:System.Web.HttpRequest.FilePath%2A> 속성의 경로 원본 페이지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-200">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-201">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-201">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-202">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-202">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-203">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-203">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-204">
            <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> 속성에 지정된 파일 이름의 확장명입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-204">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequest.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-205">Gets the virtual path of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-205">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-206">현재 요청의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-206">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-207"><xref:System.Web.HttpRequest.FilePath%2A> 속성이 포함 되지 않습니다는 <xref:System.Web.HttpRequest.PathInfo%2A> 트레일러 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-207">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="59529-208">URL에 대 한 예를 들어 http://www.contoso.com/virdir/page.html/tail, <xref:System.Web.HttpRequest.FilePath%2A> 값은 /virdir/page.html 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-208">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-209">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.FilePath%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-209">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-210">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-210">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollection" Usage="System.Web.HttpRequest.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-211">Gets the collection of files uploaded by the client, in multipart MIME format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-211">Gets the collection of files uploaded by the client, in multipart MIME format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-212">클라이언트에서 업로드한 파일 컬렉션을 나타내는 <see cref="T:System.Web.HttpFileCollection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-212">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span>
          </span>
          <span data-ttu-id="59529-213">
            <see cref="T:System.Web.HttpFileCollection" /> 개체의 항목은 <see cref="T:System.Web.HttpPostedFile" /> 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-213">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-214">파일 컬렉션만 채워지는 HTTP 요청 하는 경우 `Content-Type` 값은 "multipart/폼 데이터".</span><span class="sxs-lookup"><span data-stu-id="59529-214">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-215">다음 코드 예제에 있는 모든 파일의 이름을 표시는 <xref:System.Web.HttpRequest.Files%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-215">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequest.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-216">Gets or sets the filter to use when reading the current input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-216">Gets or sets the filter to use when reading the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-217">필터로 사용되는 <see cref="T:System.IO.Stream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-217">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-218">다음 코드 예제에서는 두 개의 새 클래스를 만듭니다. `QQQ1` 및 `QQQ2` 해당 필터는 <xref:System.Web.HttpRequest.InputStream%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-218">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="59529-219">응용 프로그램에서 모든 ASP.NET 웹 페이지에 대 한 모든 입력은 필터링 될 있도록 ASP.NET 응용 프로그램의 디렉터리에 Global.asax 파일에 클래스를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-219">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="59529-220">The specified <see cref="T:System.IO.Stream" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-220">The specified <see cref="T:System.IO.Stream" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-221">Gets a collection of form variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-221">Gets a collection of form variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-222">폼 변수의 컬렉션을 나타내는 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-222">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-223"><xref:System.Web.HttpRequest.Form%2A> 속성은 HTTP 요청 하는 경우 `Content-Type` 값은 "응용 프로그램/x-www-형식-urlencoded" 또는 "multipart/폼 데이터".</span><span class="sxs-lookup"><span data-stu-id="59529-223">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-224">다음 예제에는 브라우저에서 게시 되는 폼 컬렉션의 값을 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59529-224">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="59529-225">각 이름/값 쌍 컬렉션에는 폼과 해당 값에 컨트롤을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="59529-225">Each name/value pair in the collection represents a control in the form and its value.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59529-226">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-226">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59529-227">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-227">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-228">이 메서드는 동일 <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> ASP.NET에서 채우는 데 사용 되는 내부 저장소를 한 읽은 바이트를 복사 하는 점을 제외 하 고는 <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, 및 <xref:System.Web.HttpRequest.InputStream%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-228">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="59529-229">이 정보가 보존되기 때문에 ASP.NET Web Forms 페이지(.aspx 파일)와 같은 다운스트림 코드가 성공적으로 실행됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-229">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="59529-230">이것은 <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> 메서드의 경우가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="59529-230">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="59529-231">The request's entity body has already been loaded and parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-231">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="59529-232">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-232">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          </span>
          <span data-ttu-id="59529-233">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-233">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          </span>
          <span data-ttu-id="59529-234">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-234">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          </span>
          <span data-ttu-id="59529-235">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-235">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span>
          </span>
          <span data-ttu-id="59529-236">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-236">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          </span>
          <span data-ttu-id="59529-237">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-237">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59529-238">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-238">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59529-239">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-239">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59529-240">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-240">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-241">이 메서드를 사용 하는 대신 제공는 <xref:System.Web.HttpRequest.InputStream%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-241">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="59529-242"><xref:System.Web.HttpRequest.InputStream%2A> 속성을 반환 하기 전에 전체 요청을 받을 때까지 대기는 <xref:System.IO.Stream> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-242">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="59529-243">반면,는 <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> 메서드가 반환 되는 <xref:System.IO.Stream> 개체를 즉시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-243">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="59529-244">본문의 전체 내용을 받기 전에 엔터티 본문을 처리를 시작 하는 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-244">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>  
  
 <span data-ttu-id="59529-245">엔터티 본문 (하 고 만큼 많이 요청 하 고 수신한) 개체를 사용 하는 경우에 반환 됩니다와 같은 메서드를 호출 하 여 스트림을 읽어이 메서드에서 반환 되는 <xref:System.IO.Stream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="59529-245">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="59529-246">매개 변수를 사용 하는 <xref:System.IO.Stream.Read%2A> 메서드를 엔터티 본문을 읽었는지 영역을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-246">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>  
  
 <span data-ttu-id="59529-247"><xref:System.IO.Stream> ASP.NET이 메서드에서 반환한 개체는 동기 및 비동기 읽기 메서드를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-247">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="59529-248"><xref:System.IO.Stream> 개체 모두를 구현 하는 <xref:System.IO.Stream.BeginRead%2A> 및 <xref:System.IO.Stream.EndRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="59529-248">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="59529-249">비동기 메서드는 비동기적으로 사이는 비동기 읽기 루프 반복 마다 현재 스레드를 해제 하는 ASP.NET의 청크를 요청 엔터티를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-249">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>  
  
 <span data-ttu-id="59529-250">이 메서드는 요청을 큰 파일을 업로드 하 고 시작 고 업로드가 완료 되기 전에 파일 내용에 액세스 하려는 경우 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-250">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="59529-251">그러나만이 메서드를 사용 해야이 시나리오에 대 한 엔터티 본문의 모든 처리를 위임 하려면.</span><span class="sxs-lookup"><span data-stu-id="59529-251">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="59529-252">즉,.aspx 페이지를 사용 하는 실행 시간까지 엔터티 본문 이미 읽혔습니다 하기 때문에 프로그램.aspx 페이지에서이 메서드를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-252">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="59529-253">The request's entity body has already been loaded and parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-253">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="59529-254">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />  To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-254">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />  To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          </span>
          <span data-ttu-id="59529-255">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-255">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength">
          <span data-ttu-id="59529-256">
            <see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-256">
              <see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-257">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-257">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59529-258">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-258">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-259">이 메서드에 대 한 자세한 내용은 참조는 <xref:System.Web.HttpRequest.GetBufferlessInputStream> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-259">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="59529-260">The request's entity body has already been loaded and parsed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-260">The request's entity body has already been loaded and parsed.</span>
          </span>
          <span data-ttu-id="59529-261">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-261">Examples of properties that cause the entity body to be loaded and parsed include the following:  -   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span>
          </span>
          <span data-ttu-id="59529-262">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-262">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span>
          </span>
          <span data-ttu-id="59529-263">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-263">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span>
          </span>
          <span data-ttu-id="59529-264">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-264">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span>
          </span>
          <span data-ttu-id="59529-265">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-265">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span>
          </span>
          <span data-ttu-id="59529-266">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-266">This exception is also thrown if the client disconnects while the entity body is being read.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-267">Gets a collection of HTTP headers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-267">Gets a collection of HTTP headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-268">헤더의 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-268">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-269">모든 가능한 헤더의 해당 항목을 참조 하십시오. [요청 헤더 필드](http://go.microsoft.com/fwlink/?LinkId=73147) W3C 웹 사이트에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-269">For a listing of all possible headers, see [Request Header Fields](http://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-270">다음 코드 예제에서는 HTTP 요청에 이름 및 모든 헤더의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-270">The following code example displays the names and values of all headers in the HTTP request.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequest.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-271">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-271">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-272">현재 <see cref="T:System.Web.HttpWorkerRequest" /> 인스턴스의 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-272">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="59529-273">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-273">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-274">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-274">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-275">클라이언트에서 사용되는 HTTP 데이터 전송 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-275">The HTTP data transfer method used by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-276">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.HttpMethod%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-276">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-277">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-277">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 <span data-ttu-id="59529-278">다음 예제에서는이 코드에 의해 생성 된 출력을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59529-278">The following example shows output that is produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-279">Gets the contents of the incoming HTTP entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-279">Gets the contents of the incoming HTTP entity body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-280">들어오는 HTTP 콘텐츠 본문의 콘텐츠를 나타내는 <see cref="T:System.IO.Stream" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-280">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-281">다음 코드 예제에서는의 내용을 복사는 <xref:System.Web.HttpRequest.InputStream%2A> 문자열로 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-281">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>  
  
 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59529-282">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-282">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-283"><xref:System.Web.HttpRequest.InsertEntityBody%2A> 메서드 오버 로드에 액세스할 수는 관리 되는 IIS 7 `IHttpRequest::InsertEntityBody` 메서드.</span><span class="sxs-lookup"><span data-stu-id="59529-283">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="59529-284">(클라이언트에서 게시 된 데이터)는 HTTP 요청 엔터티 본문을 메모리에 삽입 하는 IIS 메서드에 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-284">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="59529-285">읽은 후 IIS 요청 엔터티가의 복사본을 유지 되지 않기 때문에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-285">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="59529-286"><xref:System.Web.HttpRequest.InsertEntityBody%2A> 메서드 HTTP 요청 엔터티 데이터의 복사본을 만들고 사용할 수 있도록 IIS에 대 한 사용자 지정 처리 기능을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-286">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="59529-287"><xref:System.Web.HttpRequest.InsertEntityBody%2A> 하므로 메서드 오버 로드만 IIS 7.0 이상에서 작업의 `IHttpRequest::InsertEntityBody` 메서드는 IIS 7.0에서 추가 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-287">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : unit -&gt; unit" Usage="httpRequest.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59529-288">Provides IIS with a copy of the HTTP request entity body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-288">Provides IIS with a copy of the HTTP request entity body.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-289">읽은 후 IIS 요청의 복사본을 유지 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-289">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="59529-290">따라서 HTTP 요청에 대 한 처리기만 요청 엔터티가 읽어야 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-290">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="59529-291"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> 메서드 오버 로드 ASP.NET에서 이전에 읽은 경우 IIS는 요청 엔터티 복사본으로 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-291">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="59529-292">이 메서드 오버 로드는 ASP.NET 엔터티 요청을 읽고에 대 한 기존 요청 데이터를 다시 사용 하려는 경우 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-292">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="59529-293">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-293">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          </span>
        </exception>
        <permission cref="T:System.Web.AspNetHostingPermission">
          <span data-ttu-id="59529-294">에 호스트 된 환경에서 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-294">For operating in a hosted environment.</span>
          </span>
          <span data-ttu-id="59529-295">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-295">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="59529-296">연결 된 열거형의 경우: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-296">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequest.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="59529-297">An array that contains the request entity data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-297">An array that contains the request entity data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="59529-298">The zero-based position in <c>buffer</c> at which to begin storing the request entity data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-298">The zero-based position in <c>buffer</c> at which to begin storing the request entity data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="59529-299">The number of bytes to read into the <c>buffer</c> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-299">The number of bytes to read into the <c>buffer</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-300">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-300">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-301">읽은 후 IIS 요청의 복사본을 유지 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-301">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="59529-302">따라서 HTTP 요청에 대 한 처리기만 요청 엔터티가 읽어야 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-302">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="59529-303"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> 메서드 오버 로드는 서로 다른 엔터티 본문을 메모리에 삽입 하는 등의 사용자 지정 처리를 수행 하려는 경우에 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-303">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="59529-304">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-304">The method was invoked on a version of IIS earlier than IIS 7.0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59529-305">
            <paramref name="buffer" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-305">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="59529-306">
            <paramref name="offset" /> is a negative value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-306">
              <paramref name="offset" /> is a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="59529-307">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-307">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span>
          </span>
        </exception>
        <permission cref="T:System.Web.AspNetHostingPermission">
          <span data-ttu-id="59529-308">에 호스트 된 환경에서 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-308">for operating in a hosted environment.</span>
          </span>
          <span data-ttu-id="59529-309">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-309">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="59529-310">연결 된 열거형의 경우: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-310">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-311">Gets a value indicating whether the request has been authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-311">Gets a value indicating whether the request has been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-312">요청이 인증되었으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-312">
              <see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-313">다음 코드 예제에서는 <xref:System.Web.HttpRequest.IsAuthenticated%2A> 속성을 현재 요청이 인증 되었는지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-313">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="59529-314">이 인증 되지 않은, 하는 경우 요청 입력할 수 있는 자격 증명은 웹 응용 프로그램에는 다른 페이지로 리디렉션됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-314">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="59529-315">이것이 응용 프로그램에 대 한 기본 페이지에 사용 되는 일반적인 기술입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-315">This is a common technique used in the default page for an application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-316">Gets a value indicating whether the request is from the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-316">Gets a value indicating whether the request is from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-317">로컬 컴퓨터에서 보낸 요청이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-317">
              <see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-318"><xref:System.Web.HttpRequest.IsLocal%2A> 속성에서 반환 `true` 은 요청을 보낸의 IP 주소 127.0.0.1 아니면 요청의 IP 주소는 서버의 IP 주소와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-318">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-319">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-319">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-320">연결이 SSL 연결이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-320">
              <see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-321">다음 코드 예제에서는 확인 여부는 <xref:System.Web.HttpRequest.IsSecureConnection%2A> 속성이 false로 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-321">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="59529-322">인 경우는 <xref:System.Web.HttpResponse.SuppressContent%2A> 속성이을 보낼 응답을 중지 하려면 true로 설정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-322">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequest.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="59529-323">The name of the collection member to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-323">The name of the collection member to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-324">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-324">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-325">
            <see cref="P:System.Web.HttpRequest.QueryString" /> 매개 변수에 지정된 <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.ServerVariables" /> 또는 <paramref name="key" /> 컬렉션 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-325">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span>
          </span>
          <span data-ttu-id="59529-326">지정된 <paramref name="key" />가 없으면 <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-326">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequest.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-327">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-327">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-328">현재 Microsoft IIS(인터넷 정보 서비스) 인증 설정의 <see cref="T:System.Security.Principal.WindowsIdentity" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-328">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-329"><xref:System.Web.HttpRequest.LogonUserIdentity%2A> 속성의 메서드와 속성을 노출 된 <xref:System.Security.Principal.WindowsIdentity> Microsoft 인터넷 정보 서비스 (IIS)에 현재 연결 된 사용자에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-329">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="59529-330">인스턴스는 <xref:System.Security.Principal.WindowsIdentity> 클래스에 의해 노출 되는 <xref:System.Web.HttpRequest.LogonUserIdentity%2A> IIS 요청 토큰을 추적 하 고 ASP.NET 내부에서 처리 되는 현재 HTTP 요청에 대 한이 토큰에 쉽게 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-330">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="59529-331">인스턴스는 <xref:System.Security.Principal.WindowsIdentity> 클래스는 자동으로 생성 되므로 해당 메서드 및 속성에 액세스 하기 위해 작성할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-331">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-332">다음 코드 예제에서는 검색 하는 방법을 보여 줍니다.는 <xref:System.Web.HttpRequest.LogonUserIdentity%2A> 속성은 현재 사용자와 쓰기를 텍스트 파일의 각 항목의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-332">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="59529-333">이 코드를 추가 하 여 폼에서 참조 하는 ASP.NET 페이지에 `ACTION` 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-333">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="59529-334">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-334">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequest.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="59529-335">The name of the form image map.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-335">The name of the form image map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-336">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-336">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59529-337">A two-dimensional array of integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-337">A two-dimensional array of integers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59529-338">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-338">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="59529-339">The virtual path (absolute or relative) for the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-339">The virtual path (absolute or relative) for the current request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-340">Maps the specified virtual path to a physical path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-340">Maps the specified virtual path to a physical path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59529-341">The physical path on the server specified by <paramref name="virtualPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-341">The physical path on the server specified by <paramref name="virtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="59529-342"><xref:System.Web.HttpRequest.MapPath%2A> 속성 호스팅 환경에 대 한 중요 한 정보가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-342">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="59529-343">반환 값은 하지 사용자에 게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-343">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-344">다음 코드 예제에서는 <xref:System.Web.HttpRequest.MapPath%2A> 서버의 정규화 된 실제 경로에 가상 경로 변환 하는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-344">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="59529-345">이 예제에는 두 부분에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-345">This example has two parts:</span></span>  
  
-   <span data-ttu-id="59529-346">.Aspx 페이지 경로 매핑합니다 파일을 읽고 읽기 작업의 결과 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-346">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>  
  
-   <span data-ttu-id="59529-347">클래스, `UpperCaseFilterStream`, 대문자로 통과 하는 모든 문자를 변경 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-347">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>  
  
 <span data-ttu-id="59529-348">예의 첫 번째 부분에서는 가상 경로 사용 하 여 정규화 된 실제 경로를 변환 하는 방법을 보여 줍니다.는 <xref:System.Web.HttpRequest.MapPath%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="59529-348">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="59529-349">이 실제 경로에 전달 되는 <xref:System.IO.StreamReader> 개체 파일의 내용을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59529-349">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="59529-350"><xref:System.Web.HttpResponse.Write%2A> 페이지에 있는 파일의 내용을 표시 하려면 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-350">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="59529-351"><xref:System.Web.HttpResponse.Filter%2A> 속성은 모두 대문자로 페이지에 표시 되는 텍스트를 사용 하면 응답 스트림에 필터를 연결 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-351">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 <span data-ttu-id="59529-352">예제의 두 번째 부분에서 상속 되는 클래스를 보여 줍니다. <xref:System.IO.Stream> 스트림에서 모든 문자를 대문자로 변환 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-352">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="59529-353">이 코드에 삽입 된 `App_Code` 응용 프로그램에 대 한 폴더입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-353">Put this code in the `App_Code` folder for your application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="59529-354">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-354">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string * string * bool -&gt; string" Usage="httpRequest.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="59529-355">The virtual path (absolute or relative) for the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-355">The virtual path (absolute or relative) for the current request.</span>
          </span>
        </param>
        <param name="baseVirtualDir">
          <span data-ttu-id="59529-356">The virtual base directory path used for relative resolution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-356">The virtual base directory path used for relative resolution.</span>
          </span>
        </param>
        <param name="allowCrossAppMapping">
          <span data-ttu-id="59529-357">
            <see langword="true" /> to indicate that <c>virtualPath</c> may belong to another application; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-357">
              <see langword="true" /> to indicate that <c>virtualPath</c> may belong to another application; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-358">Maps the specified virtual path to a physical path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-358">Maps the specified virtual path to a physical path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59529-359">The physical path on the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-359">The physical path on the server.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="59529-360"><xref:System.Web.HttpRequest.MapPath%2A> 속성 호스팅 환경에 대 한 중요 한 정보가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-360">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="59529-361">반환 값은 하지 사용자에 게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-361">The return value should not be displayed to users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="59529-362">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-362">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequest.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="59529-363">The name of the image field.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-363">The name of the image field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-364">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-364">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59529-365">The x and y coordinate values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-365">The x and y coordinate values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-366">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-366">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-367">
            <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-367">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-368">이름-값 쌍은 다음 순서 대로 컬렉션에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-368">Name-value pairs are added to the collection in the following order:</span></span>  
  
1.  <span data-ttu-id="59529-369">쿼리 문자열 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-369">Query-string parameters.</span></span>  
  
2.  <span data-ttu-id="59529-370">필드를 형성 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-370">Form fields.</span></span>  
  
3.  <span data-ttu-id="59529-371">쿠키입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-371">Cookies.</span></span>  
  
4.  <span data-ttu-id="59529-372">서버 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-372">Server variables.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-373">다음 코드 예제에서는 반복 하는 방법을 보여 줍니다.는 <xref:System.Web.HttpRequest.Params%2A> 페이지 및 각 키/값 쌍을 표시 하는 방법에 대 한 속성.</span><span class="sxs-lookup"><span data-stu-id="59529-373">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequest.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-374">Gets the virtual path of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-374">Gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-375">현재 요청의 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-375">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-376"><xref:System.Web.HttpRequest.Path%2A> 의 연결 된 <xref:System.Web.HttpRequest.FilePath%2A> 및 <xref:System.Web.HttpRequest.PathInfo%2A> 트레일러 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-376">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="59529-377">URL에 대 한 예를 들어 http://www.contoso.com/virdir/page.html/tail, <xref:System.Web.HttpRequest.Path%2A> /virdir/page.html/tail 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-377">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-378">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.Path%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-378">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-379">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-379">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequest.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-380">Gets the additional path information for a resource with a URL extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-380">Gets the additional path information for a resource with a URL extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-381">리소스에 대한 추가 경로 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-381">The additional path information for a resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-382">URL에 대 한 Http://www.contoso.com/virdir/page.html/tail, <xref:System.Web.HttpRequest.PathInfo%2A> 값은 /tail 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-382">For the URL Http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-383">다음 코드 예제에서는 확인 여부는 <xref:System.Web.HttpRequest.PathInfo%2A> 속성 빈 문자열을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-383">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="59529-384">그렇지 않으면는 <xref:System.IO.StreamWriter.Write%2A> 메서드는 파일에이 나타내는 문자열을 씁니다.</span><span class="sxs-lookup"><span data-stu-id="59529-384">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="59529-385">존재 하지 않는 경우는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 의 값을 HTML로 인코딩하고 메서드는 <xref:System.Web.HttpRequest.PathInfo%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드 인코딩된 값이 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-385">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="59529-386">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-386">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-387">Gets the physical file system path of the currently executing server application's root directory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-387">Gets the physical file system path of the currently executing server application's root directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-388">현재 응용 프로그램의 루트 디렉터리에 대한 파일 시스템 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-388">The file system path of the current application's root directory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-389">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-389">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-390">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-390">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequest.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-391">Gets the physical file system path corresponding to the requested URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-391">Gets the physical file system path corresponding to the requested URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-392">현재 요청의 파일 시스템 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-392">The file system path of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-393">사용 하 여 리디렉션 시나리오에서 <xref:System.Web.HttpServerUtility.Execute%2A> 및 <xref:System.Web.HttpServerUtility.Transfer%2A>, <xref:System.Web.HttpRequest.PhysicalPath%2A> 속성의 경로 원본 페이지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-393">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="59529-394">현재 실행 중인 페이지 사용의 실제 경로 찾을 수는 <xref:System.Web.HttpRequest.MapPath%2A> 으로 설정 된 입력 인수 메서드는 <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-394">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-395">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.PhysicalPath%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-395">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-396">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-396">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-397">Gets the collection of HTTP query string variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-397">Gets the collection of HTTP query string variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-398">클라이언트에서 보낸 쿼리 문자열 변수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-398">The query string variables sent by the client.</span>
          </span>
          <span data-ttu-id="59529-399">키와 값은 URL로 디코딩됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-399">Keys and values are URL-decoded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-400">다음 코드 예제에서는 "fullname" 이라는 이름의 쿼리 문자열 변수의 값을 가져오는 두 가지 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59529-400">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="59529-401">각각의 경우 URL이 `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, 때문에 반환 되는 값은 "Fadi Fakhouri"는 `%20` 는 공백 문자를 URL로 디코딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-401">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="59529-402">URL에 없는 경우는 `fullname` 문자열 ID를 쿼리, 반환 된 값이 없을 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-402">If the URL doesn’t have a `fullname` query string ID, the returned value would be `null`.</span></span>  
  
 <span data-ttu-id="59529-403">"Fullname" 쿼리 문자열;에 키에 대 한 첫 번째 코드 줄을 찾습니다. 두 번째 줄은 "fullname" 모든 HTTP 요청 컬렉션에서 키를 찾습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-403">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="59529-404">두 번째 줄에 대 한 자세한 내용은 참조 하십시오. <xref:System.Web.HttpRequest.Item%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-404">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>  
  
```csharp  
string fullname1 = Request.QueryString["fullname"];  
string fullname2 = Request["fullname"];  
  
```  
  
```vb  
Dim fullname1 As String = Request.QueryString("fullname")  
Dim fullname2 As String = Request("fullname")  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-405">Gets the raw URL of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-405">Gets the raw URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-406">현재 요청의 원시 URL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-406">The raw URL of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-407">원시 URL은 도메인 정보 다음에 URL의 일부분으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-407">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="59529-408">URL 문자열에 http://www.contoso.com/articles/recent.aspx, 원시 URL은 /articles/recent.aspx 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-408">In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="59529-409">있는 경우 원시 URL 쿼리 문자열을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-409">The raw URL includes the query string, if present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-410">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.RawUrl%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-410">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-411">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-411">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-412">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-412">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-413">요청 엔터티 주체를 읽어 들인 방법을 나타내거나 읽지 않았음을 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-413">The value that indicates how the request entity body was read, or that it has not been read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-414">이 메서드는 이미 읽은 엔터티 본문 및 호환 되지 않는 메서드를 사용 하 여 읽을 하려고 시도 하는 경우 throw 되는 예외를 방지 하기 위해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-414">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="59529-415">엔터티 본문을 읽는 하는 메서드와 속성은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-415">Methods and properties that read the entity body include the following:</span></span>  
  
-   <span data-ttu-id="59529-416"><xref:System.Web.HttpRequest.Form%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="59529-416">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>  
  
-   <span data-ttu-id="59529-417"><xref:System.Web.HttpRequest.Files%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="59529-417">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>  
  
-   <span data-ttu-id="59529-418"><xref:System.Web.HttpRequest.InputStream%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="59529-418">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>  
  
-   <span data-ttu-id="59529-419"><xref:System.Web.HttpRequest.GetBufferedInputStream%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="59529-419">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>  
  
-   <span data-ttu-id="59529-420"><xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> 메서드</span><span class="sxs-lookup"><span data-stu-id="59529-420">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequest.RequestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-421">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-421">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-422">현재 요청의 <see cref="T:System.Web.Routing.RequestContext" /> 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-422">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
          <span data-ttu-id="59529-423">라우팅되지 않는 요청의 경우 반환되는 <see cref="T:System.Web.Routing.RequestContext" /> 개체가 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-423">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-424">이 속성에 대 한 액세스를 제공는 <xref:System.Web.Routing.RouteData> 현재 요청에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-424">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="59529-425">ASP.NET 라우팅에 대 한 자세한 내용은 다음을 참조 합니다. [ASP.NET 라우팅에서](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-425">For more information about ASP.NET routing, see.[ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequest.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-426">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-426">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-427">클라이언트에서 보낸 HTTP 호출 형식을 나타내는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-427">A string representing the HTTP invocation type sent by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-428">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.RequestType%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-428">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-429">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-429">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string * bool -&gt; unit" Usage="httpRequest.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="59529-430">The physical drive path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-430">The physical drive path.</span>
          </span>
        </param>
        <param name="includeHeaders">
          <span data-ttu-id="59529-431">A Boolean value specifying whether an HTTP header should be saved to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-431">A Boolean value specifying whether an HTTP header should be saved to disk.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59529-432">Saves an HTTP request to disk.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-432">Saves an HTTP request to disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-433">요청 컨텍스트를 디스크에 저장 하는 디버깅에 유용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-433">Saving the request context to disk can be useful in debugging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-434">다음 코드 예제에서는 <xref:System.Web.HttpRequest.SaveAs%2A> 메서드 페이지가 로드 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="59529-434">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="59529-435">호출 된 요청이 ASP.NET 프로세스 id에 대 한 쓰기 권한이 있으며 요청에 포함 된 모든 헤더 정보 파일에 포함 되어 있는지 부여 된 디렉터리에 있는 텍스트 파일로 저장 하도록 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-435">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="59529-436">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-436">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-437">Gets a collection of Web server variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-437">Gets a collection of Web server variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-438">서버 변수의 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-438">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-439">IIS에서 지 원하는 서버 변수 목록, 참조 [IIS 서버 변수](http://go.microsoft.com/fwlink/?LinkId=52471)합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-439">For a list of server variables supported by IIS, see [IIS Server Variables](http://go.microsoft.com/fwlink/?LinkId=52471).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59529-440">다음 코드 예제에서는 이름과 모든 명명 된 서버 변수 값을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-440">The following code example displays the names and values of all named server variables.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequest.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-441">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-441">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-442">취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-442">The cancellation token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-443">Web.config 파일에 제한 시간을 지정할 수 있습니다 (참조 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) 또는 프로그래밍 방식으로 (참조 <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="59529-443">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="59529-444">제한 시간에 요청 하는 시간에서 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-444">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="59529-445">110 초의 기본 제한 시간을 적용 하는 경우 취소 토큰 요청 처리가 시작 된 후 110 초 보다 더 이전에 발생 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59529-445">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="59529-446">변경할 수는 <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> 속성 값이이 토큰에 긴 아직 발생 하지 않은,으로 새로운 제한 시간 값을 적용 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-446">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>  
  
 <span data-ttu-id="59529-447">요청 처리가 시작 된 후 110에서 125 초 사이의 잠시 토큰을 중단점이 됩니다, 그리고 즉 제한 시간 값은 110 초 토큰 15 두 번째 세분성만 제공 되는 현재 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-447">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="59529-448">세분성은 나중에 변경할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-448">The granularity may change in the future.</span></span>  
  
 <span data-ttu-id="59529-449">이 속성은 스레드로부터 안전한, 경우에 사용에 대 한 제한 사항이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-449">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="59529-450">자세한 내용은 <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="59529-450">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="59529-451">이 속성은 Websocket 요청 처리가 시작 된 경우에 의미가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-451">This property is meaningless if WebSockets request processing has started.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-452">Gets the TLS token binding information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-452">Gets the TLS token binding information.</span>
          </span>
          <span data-ttu-id="59529-453">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-453">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-454">현재 연결에 대한 바인딩 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-454">The binding token for the current connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-455">이 속성은 반환 `null` 및 windows10 아닌 플랫폼입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-455">This property returns `null` on non-windows10 platforms.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequest.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-456">Gets the number of bytes in the current input stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-456">Gets the number of bytes in the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-457">입력 스트림의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-457">The number of bytes in the input stream.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-458">다음 코드 예제에서는 확인 여부는 <xref:System.Web.HttpRequest.TotalBytes%2A> 속성 값 1000 바이트 보다 크면 하 고 해당 정보를 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-458">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValues" Usage="System.Web.HttpRequest.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-459">Gets the HTTP request values without triggering request validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-459">Gets the HTTP request values without triggering request validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-460">요청 유효성 검사를 사용하여 확인되지 않은 HTTP 요청 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-460">The HTTP request values that have not been checked using request validation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-461">HTML 태그 및 사이트 간 스크립팅 공격이 발생할를 나타낼 수 있는 스크립트에 대 한 유효성 검사를 요청 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-461">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="59529-462">기본적으로 모든 값 요청 유효성 검사를 사용 하 여 확인 되 고 ASP.NET에서 모든 값 태그 또는 스크립트가 들어 있으면는 <xref:System.Web.HttpRequestValidationException> 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-462">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="59529-463">요청에 태그가 포함 되어 있음을 예상 되는 경우이 메서드를 사용 하 여 (예를 들어 태그를 포함 하는 콘텐츠를 게시 하는 사용자 수) 요청의 원시 값을 가져오는 중이 고 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-463">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="59529-464">이 속성을 사용 하는 경우 잠재적인 교차 사이트 스크립팅 공격에 대 한 데이터를 수동으로 확인 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-464">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-465">Gets information about the URL of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-465">Gets information about the URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-466">현재 요청의 URL이 포함된 <see cref="T:System.Uri" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-466">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-467">다음에 할당 하는 예제 코드는 <xref:System.Uri> 개체 변수를 표시 합니다. 현재 요청 URL의 두 속성의 값을 HTTP 출력 개체는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-467">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-468">Gets information about the URL of the client's previous request that linked to the current URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-468">Gets information about the URL of the client's previous request that linked to the current URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-469">
            <see cref="T:System.Uri" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-469">A <see cref="T:System.Uri" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-470">다음 코드 예제에서는 현재 응용 프로그램에 클라이언트를 참조 하는 URL의 두 속성의 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-470">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="59529-471">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-471">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-472">Gets the raw user agent string of the client browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-472">Gets the raw user agent string of the client browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-473">클라이언트 브라우저의 원시 사용자 에이전트 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-473">The raw user agent string of the client browser.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-474">다음 코드 예제에서는 문자열 변수를 요청 하는 브라우저의 형식 id를 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-474">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-475">Gets the IP host address of the remote client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-475">Gets the IP host address of the remote client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-476">원격 클라이언트의 IP 호스트 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-476">The IP address of the remote client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-477">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.UserHostAddress%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-477">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-478">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-478">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-479">Gets the DNS name of the remote client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-479">Gets the DNS name of the remote client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-480">원격 클라이언트의 DNS 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-480">The DNS name of the remote client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-481">다음 코드 예제에서는 <xref:System.Web.HttpUtility.HtmlEncode%2A> 을 HTML 인코딩하려면 메서드 값은 <xref:System.Web.HttpRequest.UserHostName%2A> 속성 및 <xref:System.IO.TextWriter.WriteLine%2A> 메서드를 인코딩된 값을 파일에 기록 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-481">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="59529-482">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Web.HttpRequest> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-482">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59529-483">Gets a sorted string array of client language preferences.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-483">Gets a sorted string array of client language preferences.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59529-484">클라이언트 언어 기본 설정의 정렬된 문자열 배열이거나 비어 있는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-484">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="59529-485">다음 코드 예제에서는 반환 하는 여러 값을 캡처하는 <xref:System.Web.HttpRequest.UserLanguages%2A> 문자열 배열 및 HTTP 출력의 별도 줄에 각 언어 이름을 쓰기 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-485">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>  
  
 <span data-ttu-id="59529-486">언어 이름 브라우저에서 제공 되며 가능한 모든 코드의 정의 된 목록이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-486">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="59529-487">일반적으로 추가 구성 요소는 언어, 하이픈 및 문화권에 대 한 두 문자 코드에 대 한 두 문자 코드와 같은 "en-us" 미국 영어와 프랑스어 (캐나다)에 대 한 "fr-ca"입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-487">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : unit -&gt; unit" Usage="httpRequest.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59529-488">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-488">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59529-489"><xref:System.Web.HttpRequest> 클래스 입력된 유효성 검사 플래그를 사용 하 여를 통해 액세스 되는 요청이 컬렉션에 유효성 검사를 수행할지 여부를 추적 하는 <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, 및 <xref:System.Web.HttpRequest.QueryString%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-489">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="59529-490"><xref:System.Web.HttpRequest.ValidateInput%2A> 메서드 이러한 플래그를 설정 하도록 때에 대 한 get 접근자는 <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, 또는 <xref:System.Web.HttpRequest.QueryString%2A> 속성 호출 되는, 입력된 유효성 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-490">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="59529-491">유효성 검사는 하드 코드 된 잠재적으로 위험한 데이터 목록 기준으로 모든 입력된 데이터를 확인 하 여 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="59529-491">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 <span data-ttu-id="59529-492">Page 지시문 또는 구성을 통해 유효성 검사 기능을 사용 하면이 메서드는 페이지의 `ProcessRequest` 처리 단계입니다.</span><span class="sxs-lookup"><span data-stu-id="59529-492">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="59529-493"><xref:System.Web.HttpRequest.ValidateInput%2A> 유효성 검사 기능을 사용 하지 않는 경우 사용자 코드에서 메서드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59529-493">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException">
          <span data-ttu-id="59529-494">Potentially dangerous data was received from the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="59529-494">Potentially dangerous data was received from the client.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>