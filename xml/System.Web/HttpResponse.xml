<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpResponse.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe0768657bcf291225564a735695474ef67da01c6dca.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68657bcf291225564a735695474ef67da01c6dca</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Encapsulates HTTP-response information from an ASP.NET operation.</source>
          <target state="translated">ASP.NET 작업에서 받은 HTTP 응답 정보를 캡슐화합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are exposed through the <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, and <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> classes.</source>
          <target state="translated">메서드 및 속성의는 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 클래스를 통해 노출 되는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The following methods of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are supported only in post back scenarios and not in asynchronous post back scenarios:</source>
          <target state="translated">다음 메서드는 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 클래스 다시 게시 시나리오 에서만 지원 됩니다 및 비동기 post에 없는 시나리오를 백업 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>Partial-page updates are enabled when you use <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls to update selected regions of a page instead of updating the whole page with a post back.</source>
          <target state="translated">부분 페이지 업데이트를 사용 하는 경우 사용할 수 <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> 컨트롤을 다시 게시 된 전체 페이지를 업데이트 하는 대신 페이지의 선택한 영역을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>For more information, see <bpt id="p1">[</bpt>UpdatePanel Control Overview<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept> and <bpt id="p2">[</bpt>Partial-Page Rendering Overview<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>UpdatePanel 컨트롤 개요<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept> 및 <bpt id="p2">[</bpt>부분 페이지 렌더링 개요<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The following example draws three overlapping rectangles when the page is requested.</source>
          <target state="translated">다음 예제에서는 페이지가 요청 될 때 세 가지 겹치는 사각형을 그립니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The code begins by setting the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property to image/jpeg, so that the entire page will be rendered as a JPEG image.</source>
          <target state="translated">설정 하 여 시작 되는 코드는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> 속성을 image/jpeg를 전체 페이지는 JPEG 이미지로 렌더링 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The code then calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method to ensure that no extraneous content is sent with this response.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> 메서드를 잘못 사용 된 콘텐츠가이 응답과 함께 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>Next, the code sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property to true so that the page is completely processed before it is sent to the requesting client.</source>
          <target state="translated">그런 다음 코드에서는 설정는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> 속성을 true를 요청 하는 클라이언트에 전송 하기 전에 페이지 완전히 처리 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>Two objects used to draw the rectangles are then created: a <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">사각형을 그리는 데 사용 되는 두 개체는 다음으로 생성:는 <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.</source>
          <target state="translated">페이지에서 만든 변수 좌표와 가장 큰 사각형이 내부에 표시 되는 문자열과 사각형을 그리는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>When the three rectangles and the string that appears inside them are drawn, the <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> is saved to the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object that is associated with the <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property and its format is set to JPEG.</source>
          <target state="translated">세 개의 사각형이 및 그 안에 표시 되는 문자열을 그릴 때는 <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> 에 저장 되는 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 연결 된 개체에는 <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> 속성 및 형식을 JPEG로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> methods to release the resources used by the two drawing objects.</source>
          <target state="translated">코드를 호출 하 여는 <ph id="ph1">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> 메서드 두 그리기 개체에서 사용 하는 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>Lastly, the code calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method to send the buffered response to the requesting client.</source>
          <target state="translated">마지막으로, 코드에서 호출는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> 메서드를 요청 하는 클라이언트에 버퍼링 된 응답을 보냅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>In code, the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> object is referred to by the keyword <ph id="ph2">`Response`</ph>.</source>
          <target state="translated">코드에서의 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 키워드에 의해 개체 라고 <ph id="ph2">`Response`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>For example, <ph id="ph1">`Response.Clear()`</ph> refers to the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">예를 들어 <ph id="ph1">`Response.Clear()`</ph> 참조 하는 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> class has a property that is named <ph id="ph2">&lt;xref:System.Web.UI.Page.Response%2A&gt;</ph> that exposes the current instance of <ph id="ph3">&lt;xref:System.Web.HttpResponse&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> 클래스에 라는 속성이 <ph id="ph2">&lt;xref:System.Web.UI.Page.Response%2A&gt;</ph> 의 현재 인스턴스를 노출 하 <ph id="ph3">&lt;xref:System.Web.HttpResponse&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object that enables custom HTTP output.</source>
          <target state="translated">사용자 지정 HTTP 출력을 활성화하는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 .NET Framework 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are exposed through the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Response%2A&gt;</ph> object in ASP.NET.</source>
          <target state="translated">메서드 및 속성의는 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 클래스가 내장 함수를 통해 노출 됩니다 <ph id="ph2">&lt;xref:System.Web.HttpContext.Response%2A&gt;</ph> ASP.NET에는 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>A file, cache key, or <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> to add to the list of application dependencies.</source>
          <target state="translated">응용 프로그램 종속성 목록에 추가할 파일, 캐시 키 또는 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</source>
          <target state="translated">응답이 출력 캐시에 저장되어 있는 상태에서 지정된 종속성이 변경될 때 보다 편리하게 응답을 무효화할 수 있도록 캐시 종속성 집합을 응답에 연결합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph> method allows dependencies to be created between cached responses and a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph> 메서드를 사용 하면 캐시 된 응답이 사이 종속성 및 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>The following example demonstrates how to create a cache dependency by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph> method and a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 캐시 종속성을 사용 하 여 만드는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>The <ph id="ph1">&lt;paramref name="dependencies" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencies" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>This method was called too late in the cache processing pipeline, after the cached response was already created.</source>
          <target state="translated">이 메서드는 캐시된 응답이 이미 만들어진 후 캐시 처리 파이프라인에서 너무 늦게 호출되었습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Makes the validity of a cached response dependent on other items in the cache.</source>
          <target state="translated">캐시에 있는 다른 항목에 종속된 캐시된 응답의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that contains the keys of the items that the current cached response is dependent upon.</source>
          <target state="translated">현재 캐시된 응답이 종속된 항목의 키가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>Makes the validity of a cached response dependent on other items in the cache.</source>
          <target state="translated">캐시에 있는 다른 항목에 종속된 캐시된 응답의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>When the items referred to in the <ph id="ph1">`cacheKeys`</ph> parameter are removed from the cache, the cached response of the current item is not valid.</source>
          <target state="translated">참조 되는 항목이 고 <ph id="ph1">`cacheKeys`</ph> 캐시에서 제거 되 고 매개 변수, 현재 항목의 캐시 된 응답이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>The following example demonstrates how to use an ASP.NET page that is output cached.</source>
          <target state="translated">다음 예제에서는 ASP.NET 페이지 출력 캐시를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>The code for the page creates an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> object of keys that are associated with items that are stored in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> object.</source>
          <target state="translated">페이지에 대 한 코드를 만듭니다는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 에 저장 된 항목과 연결 된 키의 개체는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>Next, the code passes the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> as the parameter in a call to the <ph id="ph2">&lt;xref:System.Web.HttpResponse.AddCacheItemDependencies%2A&gt;</ph> method.</source>
          <target state="translated">그런 다음 코드는 전달 된 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 에 대 한 호출에서 매개 변수로 <ph id="ph2">&lt;xref:System.Web.HttpResponse.AddCacheItemDependencies%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>This makes the output cached response not valid, if any of the files specified in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> change.</source>
          <target state="translated">이렇게 하면 출력이 캐시 된 응답 유효 하지 않은 경우에 지정 된 파일 중 하나는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 변경 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])">
          <source>An array of item keys that the cached response is dependent upon.</source>
          <target state="translated">캐시된 응답이 종속된 항목 키의 배열입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])">
          <source>Makes the validity of a cached item dependent on another item in the cache.</source>
          <target state="translated">캐시에 있는 다른 항목에 종속된 캐시된 항목의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])">
          <source>When any of the <ph id="ph1">`cacheKey`</ph>s are removed from the cache, the cached response of the current item is invalid.</source>
          <target state="translated">같은 경우에 <ph id="ph1">`cacheKey`</ph>캐시에서 제거 되 고 s, 현재 항목의 캐시 된 응답이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>The key of the item that the cached response is dependent upon.</source>
          <target state="translated">캐시된 응답이 종속된 항목의 키입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>Makes the validity of a cached response dependent on another item in the cache.</source>
          <target state="translated">캐시에 있는 다른 항목에 종속된 캐시된 응답의 유효성을 검사합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>When the item corresponding to the <ph id="ph1">`cacheKey`</ph> parameter is removed from the cache, the cached response of the current item is invalid.</source>
          <target state="translated">경우에 해당 하는 항목은 <ph id="ph1">`cacheKey`</ph> 매개 변수는 캐시에서 제거, 현재 항목의 캐시 된 응답이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>The following example is an ASP.NET user control that is output cached.</source>
          <target state="translated">다음 예제는 캐시 된 출력 되는 ASP.NET 사용자 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>The code for the control calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheItemDependency%2A&gt;</ph> method with the key of an item stored in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> object passed as its parameter.</source>
          <target state="translated">컨트롤 호출에 대 한 코드는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheItemDependency%2A&gt;</ph> 에 저장 된 항목의 키가 있는 메서드는 <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> 매개 변수로 전달 된 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated.</source>
          <target state="translated">캐시에 항목이 없으면 출력 캐시에 저장 된 컨트롤의 응답 무효화 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>This means that on the subsequent request, a new version of the control's response will be added to the output cache.</source>
          <target state="translated">이 후속 요청에서 새 버전의 컨트롤의 응답에 추가할 출력 캐시를 의미 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>Next, the code checks whether an item associated with a <ph id="ph1">`bookData`</ph> key is stored in the <ph id="ph2">`Cache`</ph> object, and displays one of two lines of text dependent upon the result.</source>
          <target state="translated">다음으로 코드와 관련 된 항목이 있는지 여부를 확인 한 <ph id="ph1">`bookData`</ph> 키에 저장 되는 <ph id="ph2">`Cache`</ph> 개체를 두 줄의 고 결과에 따라 텍스트 중 하나를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>Then, the code sets the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> control, which is named <ph id="ph3">`dgBooks`</ph>, with a call to a custom <ph id="ph4">`DataHelper`</ph> class' shared <ph id="ph5">`GetBookData`</ph> method, and populates the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> with the <ph id="ph7">&lt;xref:System.Web.UI.Control.DataBind%2A&gt;</ph> method.</source>
          <target state="translated">그런 다음 코드에서는 설정는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> 이름으로 지정 된 컨트롤 <ph id="ph3">`dgBooks`</ph>, 사용자 지정을 호출 하 여 <ph id="ph4">`DataHelper`</ph> 클래스의 공유 <ph id="ph5">`GetBookData`</ph> 메서드를 채웁니다는 <ph id="ph6">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> 와 <ph id="ph7">&lt;xref:System.Web.UI.Control.DataBind%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Adds a group of file names to the collection of file names on which the current response is dependent.</source>
          <target state="translated">현재 응답이 종속된 파일 이름 컬렉션에 파일 이름 그룹을 추가합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>The collection of files to add.</source>
          <target state="translated">추가할 파일의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>Adds a group of file names to the collection of file names on which the current response is dependent.</source>
          <target state="translated">현재 응답이 종속된 파일 이름 컬렉션에 파일 이름 그룹을 추가합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>The following example is an ASP.NET page that is output cached.</source>
          <target state="translated">다음 예제에는 ASP.NET 페이지 출력 캐시 되는.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>The code for the page creates an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> of file paths, and then passes the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> as the parameter in a call to the <ph id="ph3">&lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt;</ph> method.</source>
          <target state="translated">페이지에 대 한 코드를 만듭니다는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 파일 경로 및 패스는 <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> 에 대 한 호출에서 매개 변수로 <ph id="ph3">&lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>This makes the output cached response invalid if any of the files specified in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> changes.</source>
          <target state="translated">이렇게 하면 캐시 된 응답이 잘못 된 경우 출력에 지정 된 파일 중 하나는 <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> 변경 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependencies(System.String[])">
          <source>An array of files to add.</source>
          <target state="translated">추가할 파일 배열입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependencies(System.String[])">
          <source>Adds an array of file names to the collection of file names on which the current response is dependent.</source>
          <target state="translated">현재 응답이 종속된 파일 이름 컬렉션에 파일 이름 배열을 추가합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.String[])">
          <source>The following example adds an array of file names to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt;</ph> file dependency list.</source>
          <target state="translated">다음 예제에서는 파일 이름 배열을 추가 <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt;</ph> 파일 종속성 목록입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.String[])">
          <source>If the files changes, the cached response is invalidated.</source>
          <target state="translated">파일이 변경 되 면 캐시 된 응답 무효화 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>The name of the file to add.</source>
          <target state="translated">추가할 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>Adds a single file name to the collection of file names on which the current response is dependent.</source>
          <target state="translated">현재 응답이 종속된 파일 이름 컬렉션에 하나의 파일 이름을 추가합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph> method to add a file dependency, you must also specify output caching programmatically or declaratively.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph> 파일 종속성을 추가 하는 메서드 출력 캐싱을 프로그래밍 방식으로 또는 선언적으로 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>For example, to specify output caching declaratively, use the  directive.</source>
          <target state="translated">예를 들어 출력 선언적으로 캐시를 지정 하려면 지시문을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Page Output with File Dependencies<ept id="p1">](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 파일 종속성을 사용 하 여 캐시 페이지 출력<ept id="p1">](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>The following example shows how to add a single file name to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph> file dependency list.</source>
          <target state="translated">다음 예제에 하나의 파일 이름을 추가 하는 방법의 <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph> 파일 종속성 목록입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>If the file changes, the cached response is invalidated.</source>
          <target state="translated">파일이 변경 되 면 캐시 된 응답 무효화 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source>The name of the HTTP header to add <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>값<ept id="p1">&lt;/c&gt;</ept>을 추가할 HTTP 헤더의 이름입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source>The string to add to the header.</source>
          <target state="translated">헤더에 추가할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source>Adds an HTTP header to the output stream.</source>
          <target state="translated">HTTP 헤더를 출력 스트림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source><ph id="ph1">&lt;see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /&gt;</ph>는 이전 버전 ASP와의 호환성을 위해 제공됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.AddHeader%2A&gt;</ph> is the same as <ph id="ph2">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> and is provided only for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.AddHeader%2A&gt;</ph> 동일 <ph id="ph2">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> 및 이전 버전 ASP와의 호환성을 위해서만 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph>.</source>
          <target state="translated">Asp.net을 사용 하 여 <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The callback method.</source>
          <target state="translated">콜백 메서드입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 이상 버전에서 지원됨]</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</source>
          <target state="translated">이 요청에 대해 응답 헤더를 보내기 직전에 ASP.NET 런타임이 호출할 콜백을 등록합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.ISubscriptionToken" /&gt;</ph> object that represents the subscription to the OnSendingHeaders pseudo-event.</source>
          <target state="translated">OnSendingHeaders 의사 이벤트에 구독을 나타내는 <ph id="ph1">&lt;see cref="T:System.Web.ISubscriptionToken" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The AddOnSendingHeaders method is not invoked if the native module flushes the response first.</source>
          <target state="translated">네이티브 모듈 응답을 먼저 플러시 경우 AddOnSendingHeaders 메서드가 호출 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.</source>
          <target state="translated">응용 프로그램별 구독 대신 요청별 구독 이라는 점에서 의사 (pseudo) 이벤트가 OnSendingHeaders IHttpModule 수준 파이프라인 이벤트에서 다릅니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The intent is that the callback may modify the response status code or may set a response cookie or header.</source>
          <target state="translated">콜백 응답 상태 코드를 수정할 수 있습니다 또는 응답 쿠키 또는 헤더를 설정할 수 있습니다는 것입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>Other usage notes and caveats:</source>
          <target state="translated">다른 사용 정보 및 주의 사항:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.</source>
          <target state="translated">이 메서드는 IIS 통합된 파이프라인 모드 파이프라인에서 실행 하는 경우에 하 고 현재 요청에 대 한 응답 헤더를 보낸 아직 하지 않은 경우에 유효 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.</source>
          <target state="translated">ASP.NET 런타임에서 콜백이 호출 되는 스레드에 대 한 정보를 보장 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.</source>
          <target state="translated">예를 들어 콜백을 호출할 수 있습니다 동기적으로 백그라운드 스레드에서 백그라운드 플러시가 수행 되 면.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source><ph id="ph1">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> is not guaranteed to be available in such a thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> 이러한 스레드에서 사용할 수 있도록 보장 됩니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The callback must not call any method that manipulates the response entity body or that results in a flush.</source>
          <target state="translated">콜백 응답 엔터티 본문을 조작 하는 응용 프로그램 또는 플러시에서 결과 모든 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>For example, the callback must not call <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>, as that method may manipulate the response entity body.</source>
          <target state="translated">콜백을 호출 해서는 안 예를 들어 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>와 마찬가지로 해당 메서드에 응답 엔터티 본문을 조작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The callback must contain only short-running synchronous code.</source>
          <target state="translated">콜백만 단기 실행 동기 코드를 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.</source>
          <target state="translated">비동기 작업을 호출 하거나이 작업에서 대기 하는 교착 상태가 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The callback must not throw an exception; otherwise behavior is undefined.</source>
          <target state="translated">콜백; 예외를 throw 해야 합니다. 그렇지 않으면 동작이 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpCookie" /&gt;</ph> to add to the output stream.</source>
          <target state="translated">출력 스트림에 추가할 <ph id="ph1">&lt;see cref="T:System.Web.HttpCookie" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>Adds an HTTP cookie to the intrinsic cookie collection.</source>
          <target state="translated">내장 쿠키 컬렉션에 HTTP 쿠키를 추가합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>The following example creates a new cookie named <ph id="ph1">`LastVisit`</ph>, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection.</source>
          <target state="translated">다음 예에서는 라는 새 쿠키를 만들고 <ph id="ph1">`LastVisit`</ph>, 쿠키의 값을 현재 날짜 및 시간으로 설정 하 고 해당 쿠키를 현재 쿠키 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>All cookies in the cookie collection are sent to the client in the <ph id="ph1">`Set-Cookie`</ph> header with the HTTP output stream.</source>
          <target state="translated">쿠키 컬렉션에서 모든 쿠키 형태로 클라이언트에 게 보내집니다는 <ph id="ph1">`Set-Cookie`</ph> 헤더는 http 출력 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>A cookie is appended after the HTTP headers have been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 쿠키를 추가하는 경우</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>The name of the HTTP header to add to the output stream.</source>
          <target state="translated">출력 스트림에 추가할 HTTP 헤더의 이름입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>The string to append to the header.</source>
          <target state="translated">헤더에 덧붙일 문자열입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>Adds an HTTP header to the output stream.</source>
          <target state="translated">HTTP 헤더를 출력 스트림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> method to send cache-specific headers and at the same time use the cache object model (<ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph>) to set cache policy, HTTP response headers that pertain to caching (<ph id="ph3">`Cache-Control`</ph>, <ph id="ph4">`Expires`</ph>, <ph id="ph5">`Last-Modified`</ph>, <ph id="ph6">`Pragma`</ph>, and <ph id="ph7">`Vary`</ph>) might be deleted when the cache object model is used.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> 캐시 관련 헤더를 동시에 캐시 개체 모델을 사용 하는 메서드 (<ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph>) 캐시 정책, 캐싱과 관련 된 HTTP 응답 헤더를 설정 하려면 (<ph id="ph3">`Cache-Control`</ph>, <ph id="ph4">`Expires`</ph>, <ph id="ph5">`Last-Modified`</ph>, <ph id="ph6">`Pragma`</ph>, 및 <ph id="ph7">`Vary`</ph>) 캐시 개체 모델을 사용할 때 삭제 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>This behavior enables ASP.NET to maintain the most restrictive settings.</source>
          <target state="translated">이 동작을 통해 가장 제한적인 설정 유지 하기 위해 ASP.NET 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>For example, consider a page that includes user controls.</source>
          <target state="translated">예를 들어, 사용자 정의 컨트롤을 포함 하는 페이지를 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>If those controls have conflicting cache policies, the most restrictive cache policy will be used.</source>
          <target state="translated">이러한 컨트롤 캐시 정책이 충돌 하는 가장 제한적인 캐시 정책이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>If one user control sets the header "<ph id="ph1">`Cache-Control: Public`</ph>" and another user control sets the more restrictive header "<ph id="ph2">`Cache-Control: Private`</ph>" via calls to <ph id="ph3">&lt;xref:System.Web.HttpCachePolicy.SetCacheability%2A&gt;</ph>, then the "<ph id="ph4">`Cache-Control: Private`</ph>" header will be sent with the response.</source>
          <target state="translated">한 사용자 정의 컨트롤의 헤더를 설정 하는 경우 "<ph id="ph1">`Cache-Control: Public`</ph>"및 더 제한적인 헤더를 설정 하는 다른 사용자 정의 컨트롤"<ph id="ph2">`Cache-Control: Private`</ph>" 호출을 통해 <ph id="ph3">&lt;xref:System.Web.HttpCachePolicy.SetCacheability%2A&gt;</ph>, 그런 다음 "<ph id="ph4">`Cache-Control: Private`</ph>" 헤더 응답과 함께 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>For a list of standard HTTP/1.1 headers, see section 14, "Header Field Definitions," in the <bpt id="p1">[</bpt>Hypertext Transfer Protocol -- HTTP/1.1<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=73147)</ept> specification on the World Wide Web Consortium (W3C) Web site.</source>
          <target state="translated">표준 HTTP/1.1 헤더 목록은 14, "헤더 필드 정의" 섹션을 참조는 <bpt id="p1">[</bpt>Hypertext Transfer Protocol-HTTP/1.1<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=73147)</ept> World Wide Web Consortium (W3C) 웹 사이트에 대 한 사양입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> method to add a custom header to the <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> object sent to the requesting client.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> 사용자 지정 헤더를 추가 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> 개체를 요청 하는 클라이언트에 전송 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>The header is appended after the HTTP headers have been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 헤더가 덧붙여진 경우</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>The text to add to the log file.</source>
          <target state="translated">로그 파일에 추가할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>Adds custom log information to the Internet Information Services (IIS) log file.</source>
          <target state="translated">사용자 지정 로그 정보를 IIS(인터넷 정보 서비스) 로그 파일에 추가합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>To allow for the specified string to be recorded in the log file, you first must enable the <bpt id="p1">**</bpt>URI Query<ept id="p1">**</ept> option of the <bpt id="p2">**</bpt>Extended Logging Properties<ept id="p2">**</ept> dialog box for the site that you want to log activity for in IIS.</source>
          <target state="translated">로그 파일에 기록 될 수는 지정 된 문자열을 허용 하려면 먼저 활성화 해야는 <bpt id="p1">**</bpt>URI 쿼리<ept id="p1">**</ept> 의 옵션은 <bpt id="p2">**</bpt>로깅 속성<ept id="p2">**</ept> iis에서에 대 한 활동을 기록 하려면 사이트에 대 한 대화 상자 .</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>To customize extended logging in IIS 6.0, follow these steps:</source>
          <target state="translated">IIS 6.0에서 확장 로깅을 사용자 지정 하려면 다음이 단계를 따르십시오.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
          <target state="translated">IIS 관리자에서 로컬 컴퓨터 노드를 확장, 웹 또는 FTP 사이트 폴더를 확장, 웹 또는 FTP 사이트를 마우스 오른쪽 단추로 클릭 한 다음 클릭 <bpt id="p1">**</bpt>속성<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>Click the <bpt id="p1">**</bpt>Web or FTP Site<ept id="p1">**</ept> tab, and then select the <bpt id="p2">**</bpt>Enable logging<ept id="p2">**</ept> check box (if it is not already selected).</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>웹 또는 FTP 사이트<ept id="p1">**</ept> 탭을 선택한 다음 선택에서 <bpt id="p2">**</bpt>로깅을 사용 하도록 설정<ept id="p2">**</ept> 확인란 (것 아직 선택 하지 않은) 하는 경우.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>In the <bpt id="p1">**</bpt>Active log format<ept id="p1">**</ept> box, click <bpt id="p2">**</bpt>W3C Extended Log File Format<ept id="p2">**</ept>.</source>
          <target state="translated">에 <bpt id="p1">**</bpt>활성 로그 형식<ept id="p1">**</ept> 상자 <bpt id="p2">**</bpt>W3C 확장 로그 파일 형식<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>Click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
          <target state="translated">클릭 <bpt id="p1">**</bpt>속성<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>Click the <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> tab, select the properties that you want to log, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="translated">클릭는 <bpt id="p1">**</bpt>고급<ept id="p1">**</ept> 탭에서 로그를 클릭 하 고 원하는 속성을 선택 <bpt id="p2">**</bpt>확인<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>The following example shows how to append a string to the log.</source>
          <target state="translated">다음 예제에서는 로그에 문자열을 추가 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>The virtual path to a resource.</source>
          <target state="translated">리소스에 대한 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>Adds a session ID to the virtual path if the session is using <ph id="ph1">&lt;see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /&gt;</ph> session state and returns the combined path.</source>
          <target state="translated">세션이 <ph id="ph1">&lt;see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /&gt;</ph> 세션 상태를 사용하고 있는 경우 가상 경로에 세션 ID를 추가한 다음 조합된 경로를 반환합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>If <ph id="ph1">&lt;see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /&gt;</ph> session state is not used, <ph id="ph2">&lt;see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /&gt;</ph> returns the original virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /&gt;</ph> 세션 상태가 사용되지 않을 경우 <ph id="ph2">&lt;see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /&gt;</ph>는 원본 가상 경로를 반환합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> with the session ID inserted.</source>
          <target state="translated">세션 ID가 삽입된 <ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph> is used only with cookieless sessions to construct absolute HREFs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph> 절대 Href를 생성 하려면 쿠키 없는 세션에만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>The following example declares a string variable named <ph id="ph1">`urlConverted`</ph>, and sets it to the result of an <ph id="ph2">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph> method call.</source>
          <target state="translated">다음 예제에서는 이라는 문자열 변수를 선언 <ph id="ph1">`urlConverted`</ph>의 결과로 설정 하 고는 <ph id="ph2">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>The code then passes the variable's value to a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.HyperLink&gt;</ph> control's <ph id="ph2">&lt;xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A&gt;</ph> property.</source>
          <target state="translated">그런 다음 변수 값에는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.HyperLink&gt;</ph> 컨트롤의 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>The callback object.</source>
          <target state="translated">콜백 개체입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>The response state.</source>
          <target state="translated">응답 상태입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>Sends the currently buffered response to the client.</source>
          <target state="translated">현재 버퍼링된 응답을 클라이언트에 보냅니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>The asynchronous result object.</source>
          <target state="translated">비동기 결과 개체입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>If the underlying <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously.</source>
          <target state="translated">경우 내부 <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> 개체가 비동기 플러시 작업을 지원 하 고이 메서드는 비동기 처리기 또는 비동기 모듈 이벤트에서 플러시 작업을 비동기적으로 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>Otherwise, the flush operation is performed synchronously.</source>
          <target state="translated">그렇지 않으면 플러시 작업을 동기적으로 수행 됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>Asynchronous flush is supported for IIS 6.0 and later.</source>
          <target state="translated">비동기 플러시는 IIS 6.0 이상 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>The response is already completed.</source>
          <target state="translated">응답을 이미 완료한 경우</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])">
          <source>The bytes to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 바이트입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])">
          <source>Writes a string of binary characters to the HTTP output stream.</source>
          <target state="translated">HTTP 출력 스트림에 이진 문자로 구성된 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])">
          <source>The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.</source>
          <target state="translated">다음 예제에서는 텍스트 파일을 버퍼로 읽어 및 버퍼 HTTP 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Buffer">
          <source>Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</source>
          <target state="translated">출력의 버퍼링 여부 및 전체 응답의 처리가 완료된 다음에 출력을 보내는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Buffer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the output to client is buffered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트에 대한 출력이 버퍼링되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Buffer">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Buffer%2A&gt;</ph> property has been deprecated in favor of the <ph id="ph2">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property and is provided only for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Buffer%2A&gt;</ph> 기준 속성은 사용 되지는 <ph id="ph2">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> 속성 및 이전 버전 ASP와의 호환성을 위해서만 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Buffer">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>.</source>
          <target state="translated">Asp.net을 사용 하 여 <ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.BufferOutput">
          <source>Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</source>
          <target state="translated">출력의 버퍼링 여부 및 전체 페이지의 처리가 완료된 다음에 출력을 보내는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.BufferOutput">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the output to client is buffered; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트에 대한 출력이 버퍼링되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.BufferOutput">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.BufferOutput">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property for the response to image/jpeg, calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method to remove other content that might be attached to the response, and then sets the <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property to true so that the entire page will be processed before any content is sent to the requesting client.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> 속성을 image/jpeg 응답에 대 한 호출에서 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> 한 다음 설정 하 여 응답에 추가 될 수 있는 기타 콘텐츠를 제거 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> 속성을 전체 페이지 수 있도록 true 콘텐츠를 요청 하는 클라이언트로 보내기 전에 처리 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.BufferOutput">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">전체 예제에 대 한 참조는 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Cache">
          <source>Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</source>
          <target state="translated">웹 페이지의 캐싱 정책(만료 시간, 개인 정보 설정 및 vary 절 등)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cache">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpCachePolicy" /&gt;</ph> object that contains information about the caching policy of the current response.</source>
          <target state="translated">현재 응답의 캐싱 정책에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Web.HttpCachePolicy" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cache">
          <source>The following example writes properties of the current cache policy to the HTTP output stream.</source>
          <target state="translated">다음 예제에서는 HTTP 출력 스트림에 현재 캐시 정책의 속성을 씁니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.CacheControl">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="Cache-Control" /&gt;</ph> HTTP header that matches one of the <ph id="ph2">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> enumeration values.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> 열거형 값 중 하나와 일치하는 <ph id="ph1">&lt;see langword="Cache-Control" /&gt;</ph> HTTP 헤더를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>A string representation of the <ph id="ph1">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> 열거형 값의 문자열 표현입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>The values for <ph id="ph1">`Private`</ph>, <ph id="ph2">`Public`</ph>, and <ph id="ph3">`No-Cache`</ph> are strings and must be enclosed in quotation marks (" ").</source>
          <target state="translated">에 대 한 값 <ph id="ph1">`Private`</ph>, <ph id="ph2">`Public`</ph>, 및 <ph id="ph3">`No-Cache`</ph> 문자열이 고 따옴표로 묶어야 합니다 ("").</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> property is set to a value that does not match one of the <ph id="ph2">&lt;xref:System.Web.HttpCacheability&gt;</ph> enumeration values, then an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> 속성이 일치 하지 않는 값으로 설정 되어는 <ph id="ph2">&lt;xref:System.Web.HttpCacheability&gt;</ph> 열거 값을 아니라면 <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> property is not set, the cacheability of the response is set to <ph id="ph2">&lt;xref:System.Web.HttpCacheability.NoCache&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> 속성이 설정 되지 않은로 설정 된 응답의 cacheability <ph id="ph2">&lt;xref:System.Web.HttpCacheability.NoCache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>The <ph id="ph1">`CacheControl`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph> properties have been deprecated.</source>
          <target state="translated"><ph id="ph1">`CacheControl`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph> 속성 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>Instead, the methods of the <ph id="ph1">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class are available through the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
          <target state="translated">대신,의 메서드는 <ph id="ph1">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> 통해 사용할 수 있는 클래스는 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> 인터넷 정보 서비스 (IIS)를 제어 하는 캐시 및 클라이언트 캐시 출력 합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.CacheControl">
          <source>The string value set does not match one of the <ph id="ph1">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> enumeration values.</source>
          <target state="translated">설정된 문자열 값이 <ph id="ph1">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> 열거형 값 중 하나와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Charset">
          <source>Gets or sets the HTTP character set of the output stream.</source>
          <target state="translated">출력 스트림의 HTTP 문자 집합을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Charset">
          <source>The HTTP character set of the output stream.</source>
          <target state="translated">출력 스트림의 HTTP 문자 집합입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Charset">
          <source>The <ph id="ph1">`Charset`</ph> property can be set to <ph id="ph2">`null`</ph> to suppress the HTTP <ph id="ph3">`Content-Type`</ph> header.</source>
          <target state="translated"><ph id="ph1">`Charset`</ph> 속성 설정할 수 있습니다 <ph id="ph2">`null`</ph> 를 HTTP를 표시 하지 않는 <ph id="ph3">`Content-Type`</ph> 헤더입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Charset">
          <source>The following example checks whether the character set of the output stream is Central European (ISO).</source>
          <target state="translated">다음 예제에서는 출력 스트림의 문자 집합 중앙 유럽어 (ISO) 인지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Charset">
          <source>The <ph id="ph1">&lt;see langword="Charset" /&gt;</ph> property was set after headers were sent.</source>
          <target state="translated">헤더를 보낸 후에 <ph id="ph1">&lt;see langword="Charset" /&gt;</ph> 속성을 설정한 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Clear">
          <source>Clears all content output from the buffer stream.</source>
          <target state="translated">버퍼 스트림에서 모든 콘텐츠 출력을 지웁니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method does not clear header information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> 메서드 헤더 정보를 삭제 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Clear">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property for the response to image/jpeg, calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method to remove other content that might be attached to the response, and then sets the <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property to true so that the complete page will be processed before any content is sent to the requesting client.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> 속성을 image/jpeg 응답에 대 한 호출에서 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> 한 다음 설정 하 여 응답에 추가 될 수 있는 기타 콘텐츠를 제거 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> 속성을 전체 페이지 수 있도록 true 콘텐츠를 요청 하는 클라이언트로 보내기 전에 처리 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Clear">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">전체 예제에 대 한 참조는 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ClearContent">
          <source>Clears all content output from the buffer stream.</source>
          <target state="translated">버퍼 스트림에서 모든 콘텐츠 출력을 지웁니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearContent%2A&gt;</ph> method does not clear header information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearContent%2A&gt;</ph> 메서드 헤더 정보를 삭제 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearContent">
          <source>The following example clears all content from the buffer stream.</source>
          <target state="translated">다음 예에서는 버퍼 스트림에서 모든 콘텐츠를 지웁니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>Clears all headers from the buffer stream.</source>
          <target state="translated">버퍼 스트림에서 모든 헤더를 지웁니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearHeaders%2A&gt;</ph> method to ensure that no headers are sent with the current response.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearHeaders%2A&gt;</ph> 메서드는 현재 응답과 함께 헤더가 전송 되 게 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file.</source>
          <target state="translated">이 기술은 ASP.NET 응답 JPEG 파일 같은 이미지를 생성 하는 경우에 특히 중요할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>In this example the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property is set to image/jpeg.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> 을 image/jpeg 속성이 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>Headers are cleared after the HTTP headers have been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 헤더가 지워진 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> object that is tripped when the client disconnects.</source>
          <target state="translated">클라이언트가 끊긴 경우, 작동한 <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>The cancellation token.</source>
          <target state="translated">취소 토큰입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>This API is thread-safe.</source>
          <target state="translated">이 API는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>However, there are some restrictions on how the cancellation token should be used.</source>
          <target state="translated">그러나 취소 토큰을 사용 해야 하는 방식에 몇 가지 제한 사항이 있습니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior.</source>
          <target state="translated">잘못 사용 하 고 경합 상태, 교착 상태 또는 기타 예기치 않은 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Keep in mind the following guidelines:</source>
          <target state="translated">다음 지침에 유의 하십시오.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request.</source>
          <target state="translated">ASP.NET 요청 끝날 때 취소 토큰의 삭제 하기 때문에 단일 요청 경계 밖에 서이 API를 호출 하지 않으면 확인 하십시오.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>There is no guarantee that the token will ever transition to a canceled state before it is disposed.</source>
          <target state="translated">삭제 되기 전에 토큰 취소 됨된 상태로 전환 되지 됩니다 하지 않을 수도가 있습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.</source>
          <target state="translated">예를 들어, 클라이언트 연결 끊김 필요 없이 요청이 완료 되 면 토큰 취소 먼저 필요 없이 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Do not wait on the <ph id="ph1">&lt;xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType&gt;</ph>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.</source>
          <target state="translated">기다리지는 <ph id="ph1">&lt;xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType&gt;</ph>, 비동기 알림의 목적이이 고 교착 상태가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType&gt;</ph> overloads which invoke the callback on the original <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object.</source>
          <target state="translated">호출 하지 마십시오는 <ph id="ph1">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType&gt;</ph> 원본에 대 한 콜백을 호출 오버 로드가 <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <ph id="ph2">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">사용 하지 않는 <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> 개체 또는 다른 스레드로부터 안전 하지 않은 ASP.NET 내장 함수 내에서 개체에 제공 된 콜백으로 <ph id="ph2">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>The callback may be running concurrently with other ASP.NET or application code.</source>
          <target state="translated">콜백 다른 ASP.NET와 동시에 실행 중일 수 있습니다 또는 응용 프로그램 코드입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Keep the callback methods short-running and non-blocking.</source>
          <target state="translated">단기 실행 콜백 메서드 및 비 블록 킹 유지 합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Make every effort to avoid throwing exceptions from within the callback methods.</source>
          <target state="translated">콜백 메서드 내에서 예외가 throw 되지 않도록 하기 위한 모든 작업을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode.</source>
          <target state="translated">통합된 모드에서이 속성은 인터넷 정보 서비스 (IIS) 7.5 적용할 수만 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>If you invoke it without the right IIS version or pipeline mode, a <ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">오른쪽 IIS 버전 또는 파이프라인 모드 없이 호출 하는 경우는 <ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>To determine the IIS version, use <ph id="ph1">&lt;xref:System.Web.HttpRuntime.IISVersion%2A&gt;</ph>.</source>
          <target state="translated">IIS 버전을 확인 하려면 사용 하 여 <ph id="ph1">&lt;xref:System.Web.HttpRuntime.IISVersion%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>To determine the pipeline mode, use <ph id="ph1">&lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;</ph>.</source>
          <target state="translated">파이프라인 모드를 확인 하려면 사용 <ph id="ph1">&lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Close">
          <source>Closes the socket connection to a client.</source>
          <target state="translated">클라이언트에 대한 소켓 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Close">
          <source>This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing.</source>
          <target state="translated">이 메서드는 갑작스러운 방식에서 클라이언트에 대 한 연결을 종료 하 고 일반 HTTP 요청 처리에 적합 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Close">
          <source>The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.</source>
          <target state="translated">메서드는 서버, 클라이언트 또는 중간에 삭제 하는 장소에 버퍼링 되는 데이터 응답을 일으킬 수 있는 클라이언트에 재설정 패킷을 보냅니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Close">
          <source>However, typically you should call <ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> instead if you want to jump ahead to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event and send a response to the client.</source>
          <target state="translated">그러나 일반적으로 호출 해야 <ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> 대신로 이동 하려는 경우는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> 이벤트 및 클라이언트에 대 한 응답을 송신 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>Gets or sets the HTTP character set of the output stream.</source>
          <target state="translated">출력 스트림의 HTTP 문자 집합을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> object that contains information about the character set of the current response.</source>
          <target state="translated">현재 응답의 문자 집합에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>Default <ph id="ph1">`ContentEncoding`</ph> can be specified in an ASP.NET configuration file in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> section.</source>
          <target state="translated">기본 <ph id="ph1">`ContentEncoding`</ph> 의 ASP.NET 구성 파일에 지정할 수는 <bpt id="p1">[</bpt>세계화 요소 (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> 섹션.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentEncoding%2A&gt;</ph> is specified by the client, the default configuration settings are overridden.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentEncoding%2A&gt;</ph> 클라이언트에 의해 지정 된 기본 구성 설정이 재정의 됩니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>The following example writes a human-readable description of the character set encoding to the output stream.</source>
          <target state="translated">다음 예제에는 문자 집합을 출력 스트림에 인코딩을에 대 한 이해 하기 쉬운 설명을 씁니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>Attempted to set <ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ContentEncoding" /&gt;</ph> to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ContentEncoding" /&gt;</ph>를 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정하려고 했습니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ContentType">
          <source>Gets or sets the HTTP MIME type of the output stream.</source>
          <target state="translated">출력 스트림의 HTTP MIME 형식을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentType">
          <source>The HTTP MIME type of the output stream.</source>
          <target state="translated">출력 스트림의 HTTP MIME 형식입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentType">
          <source>The default value is "<ph id="ph1">&lt;see langword="text/html" /&gt;</ph>".</source>
          <target state="translated">기본값은 "<ph id="ph1">&lt;see langword="text/html" /&gt;</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentType">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property for the response to image/jpeg, calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method to remove other content that might be attached to the response, and then sets the <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property to true so that the complete page will be processed before any content is sent to the requesting client.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> 속성을 image/jpeg 응답에 대 한 호출에서 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> 한 다음 설정 하 여 응답에 추가 될 수 있는 기타 콘텐츠를 제거 하는 메서드는 <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> 속성을 전체 페이지 수 있도록 true 콘텐츠를 요청 하는 클라이언트로 보내기 전에 처리 합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentType">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">전체 예제에 대 한 참조는 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ContentType">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ContentType" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ContentType" /&gt;</ph> 속성은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Cookies">
          <source>Gets the response cookie collection.</source>
          <target state="translated">응답 쿠키 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>The response cookie collection.</source>
          <target state="translated">응답 쿠키 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>ASP.NET includes two intrinsic cookie collections.</source>
          <target state="translated">ASP.NET 두 내장 쿠키 컬렉션을 포함합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> contains cookies transmitted by the client to the server in the <ph id="ph3">`Cookie`</ph> header.</source>
          <target state="translated">통해 액세스할 수 있는 컬렉션은 <ph id="ph1">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph> 의 컬렉션 <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> 서버에 클라이언트에서 전송 되는 쿠키가 포함는 <ph id="ph3">`Cookie`</ph> 헤더입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> contains new cookies created on the server and transmitted to the client in the <ph id="ph3">`Set-Cookie`</ph> header.</source>
          <target state="translated">통해 액세스할 수 있는 컬렉션은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A&gt;</ph> 의 컬렉션 <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> 서버에 만든 및 클라이언트에 전송 된 새 쿠키를 포함는 <ph id="ph3">`Set-Cookie`</ph> 헤더입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>After you add a cookie by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType&gt;</ph> collection, the cookie is immediately available in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType&gt;</ph> collection, even if the response has not been sent to the client.</source>
          <target state="translated">사용 하 여 쿠키를 추가한 후의 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType&gt;</ph> 컬렉션, 쿠키는에서 즉시 사용할 수는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType&gt;</ph> 응답 클라이언트에 전송 되지 않은 경우에 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>The following example creates a new cookie named <ph id="ph1">`LastVisit`</ph>, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection.</source>
          <target state="translated">다음 예에서는 라는 새 쿠키를 만들고 <ph id="ph1">`LastVisit`</ph>, 쿠키의 값을 현재 날짜 및 시간으로 설정 하 고 쿠키를 현재 쿠키 컬렉션에 추가 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>All cookies in the cookie collection are sent to the client in the <ph id="ph1">`Set-Cookie`</ph> header with the HTTP output stream.</source>
          <target state="translated">쿠키 컬렉션에서 모든 쿠키 형태로 클라이언트에 게 보내집니다는 <ph id="ph1">`Set-Cookie`</ph> 헤더는 http 출력 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.DisableKernelCache">
          <source>Disables kernel caching for the current response.</source>
          <target state="translated">현재 응답에 대해 커널 캐싱을 사용하지 않도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.DisableKernelCache">
          <source>If kernel caching is not supported, this method has no effect.</source>
          <target state="translated">커널 캐싱이 지원 되지 않는 경우이 메서드는 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.DisableUserCache">
          <source>Disables IIS user-mode caching for this response.</source>
          <target state="translated">이 응답에 대한 IIS 사용자 모드 캐싱을 사용하지 않도록 설정합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.DisableUserCache">
          <source>If IIS user-mode caching is not supported, this method returns without performing any action.</source>
          <target state="translated">IIS 사용자 모드 캐싱을 지원 되지 않는 경우이 메서드는 작업을 수행 하지 않고 반환 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.End">
          <source>Sends all currently buffered output to the client, stops execution of the page, and raises the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event.</source>
          <target state="translated">현재 버퍼링된 출력을 모두 클라이언트에 보내고 페이지 실행을 중지한 다음 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>This method is provided only for compatibility with ASP—that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET.</source>
          <target state="translated">이 메서드는 asp 호환성을 위해서만 제공 됩니다-즉, ASP.NET 이전의 COM 기반 웹 프로그래밍 기술와의 호환성에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>If you want to jump ahead to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event and send a response to the client, it is usually preferable to call <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> instead.</source>
          <target state="translated">로 이동 하려는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> 호출 하는 것이 좋습니다은 이벤트 및 클라이언트에 대 한 응답 보내기 <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> 대신 합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>To mimic the behavior of the <ph id="ph1">`End`</ph> method in ASP, this method tries to raise a <ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception.</source>
          <target state="translated">동작을 모방 하기 위해는 <ph id="ph1">`End`</ph> ASP에서 메서드를이 메서드가 발생 시 키 려는 <ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> 예외입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance.</source>
          <target state="translated">이 시도가 성공적이 사이트의 성능이 저하 되 하 호출 스레드가 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>In that case, no code after the call to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method is executed.</source>
          <target state="translated">호출한 후 코드가 없는 경우에는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> 메서드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method is not able to raise a <ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>, it instead flushes the response bytes to the client.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> 방법은 높일 수는 <ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>, 대신 클라이언트에 응답 바이트를 플러시합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>It does this synchronously, which can also be detrimental to your site's performance.</source>
          <target state="translated">이렇게 동기적으로 사이트의 성능이 저하 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>In either case (whether or not a <ph id="ph1">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception is successfully raised), the response pipeline jumps ahead to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event.</source>
          <target state="translated">두 경우 모두 (여부는 <ph id="ph1">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> 예외가 발생 했습니다.), 응답 파이프라인 앞으로 건너뜁니다 고 <ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method does not raise an exception, and code after the call to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method might be executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> 메서드에서 예외가 발생 하지 않으며 호출 후 코드는 <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> 메서드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>If your intention is to avoid execution of subsequent code, and if the performance penalty of <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> is acceptable, you can call <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> instead of <ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>.</source>
          <target state="translated">의도 후속 코드의 실행을 방지 하는 경우의 성능 저하 <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> 허용 호출할 수 있습니다 <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> 대신 <ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.End">
          <source>The call to <ph id="ph1">&lt;see cref="M:System.Web.HttpResponse.End" /&gt;</ph> has terminated the current request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.HttpResponse.End" /&gt;</ph>에 대한 호출이 현재 요청을 종료했습니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)">
          <source>The asynchronous result object.</source>
          <target state="translated">비동기 결과 개체입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)">
          <source>Completes an asynchronous flush operation.</source>
          <target state="translated">비동기 플러시 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)">
          <source>Asynchronous flush is not supported and the <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">비동기 플러시가 지원되지 않으며 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)">
          <source>Asynchronous flush is not supported and the <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter cannot be cast to a <bpt id="p1">&lt;c&gt;</bpt>FlushAsyncResult<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated">비동기 플러시가 지원되지 않으며 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수를 <bpt id="p1">&lt;c&gt;</bpt>FlushAsyncResult<ept id="p1">&lt;/c&gt;</ept> 개체로 캐스팅할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Expires">
          <source>Gets or sets the number of minutes before a page cached on a browser expires.</source>
          <target state="translated">브라우저에서 캐시되는 페이지가 만료되기까지의 시간(분)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Expires">
          <source>If the user returns to the same page before it expires, the cached version is displayed.</source>
          <target state="translated">사용자가 만료되기 전과 동일한 페이지로 돌아가면 캐시된 버전이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Expires">
          <source><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.Expires" /&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.Expires" /&gt;</ph>는 이전 버전 ASP와의 호환성을 위해 제공됩니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Expires">
          <source>The number of minutes before the page expires.</source>
          <target state="translated">페이지가 만료되기까지의 시간(분)입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Expires">
          <source>The <ph id="ph1">`Expires`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> properties have been deprecated in favor of the methods of the <ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class available through the <ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
          <target state="translated"><ph id="ph1">`Expires`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> 의 메서드를 위해 속성 사용이 중단 된는 <ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> 클래스를 통해 사용할 수는 <ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> 인터넷 정보 서비스 (IIS)를 제어 하는 캐시 출력 및 클라이언트를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ExpiresAbsolute">
          <source>Gets or sets the absolute date and time at which to remove cached information from the cache.</source>
          <target state="translated">캐시된 정보를 캐시에서 제거할 절대 날짜 및 시간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ExpiresAbsolute">
          <source><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /&gt;</ph>는 이전 버전 ASP와의 호환성을 위해 제공됩니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ExpiresAbsolute">
          <source>The date and time at which the page expires.</source>
          <target state="translated">페이지가 만료되는 날짜 및 시간입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ExpiresAbsolute">
          <source>The <ph id="ph1">`ExpiresAbsolute`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> properties have been deprecated in favor of the methods of the <ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class available through the <ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
          <target state="translated"><ph id="ph1">`ExpiresAbsolute`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> 의 메서드를 위해 속성 사용이 중단 된는 <ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> 클래스를 통해 사용할 수는 <ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> 인터넷 정보 서비스 (IIS)를 제어 하는 캐시 출력 및 클라이언트를 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Filter">
          <source>Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</source>
          <target state="translated">전송 전에 HTTP 엔터티 본문을 수정하는 데 사용되는 래핑 필터 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that acts as the output filter.</source>
          <target state="translated">출력 필터 역할을 하는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>When you create a <ph id="ph1">`Stream`</ph> object and set the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> property to the <ph id="ph3">`Stream`</ph> object, all HTTP output sent by <ph id="ph4">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> passes through the filter.</source>
          <target state="translated">만들 때는 <ph id="ph1">`Stream`</ph> 개체 및 설정의 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> 속성을는 <ph id="ph3">`Stream`</ph> 개체, 모든 HTTP 출력에서 보낸 <ph id="ph4">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> 필터를 통과 합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>The following example is an ASP.NET page that sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> property to a new instance of the <ph id="ph2">`UpperCaseFilter`</ph> class, a custom <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> class that converts all text that passes through it to uppercase.</source>
          <target state="translated">다음 예제는 설정 하는 ASP.NET 페이지는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> 속성의 새 인스턴스를는 <ph id="ph2">`UpperCaseFilter`</ph> 클래스를 사용자 지정 <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> 클래스 모든 텍스트를 대문자로 통과 하는 변환입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>The information about the request is saved to a text file, and then the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> property is set.</source>
          <target state="translated">요청에 대 한 정보는 텍스트 파일에 저장 한 다음은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>After the response filter is in place, the code calls the <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> method to get the absolute path to a text file named <ph id="ph2">`TestFile.txt`</ph> that serves as the source for the content of the response.</source>
          <target state="translated">코드를 호출 하는 응답 필터 준비에서 되 면는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> 메서드 라는 텍스트 파일의 절대 경로를 <ph id="ph2">`TestFile.txt`</ph> 응답의 내용에 대 한 소스로 사용 하는 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>The code then creates a new <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object to read the text file from beginning to end, and then calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> method to display the content of the file on the page.</source>
          <target state="translated">코드는 다음 새 만듭니다 <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> 개체를 사용 하 고 호출에서 텍스트 파일을 읽을 수는 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> 메서드 페이지에 있는 파일의 콘텐츠를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Filter">
          <source>Filtering is not allowed with the entity.</source>
          <target state="translated">해당 엔터티에 필터링을 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Flush">
          <source>Sends all currently buffered output to the client.</source>
          <target state="translated">현재 버퍼링된 모든 출력을 클라이언트에 보냅니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>Forces all currently buffered output to be sent to the client.</source>
          <target state="translated">모든 현재 버퍼링 된 출력을 클라이언트에 전송 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method can be called multiple times during request processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> 메서드 요청을 처리 하는 동안 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method to save a <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property and converts the image to the JPEG format.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> 저장 하는 메서드는 <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> 개체는 <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> 속성 및 변환에는 이미지를 JPEG 형식입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>The code then calls the <ph id="ph1">`Dispose`</ph> method on the <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> object and a <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> object, releasing the resources that they were using.</source>
          <target state="translated">호출의 <ph id="ph1">`Dispose`</ph> 에서 메서드는 <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> 개체 및 <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> 개체를 사용 하 던 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method to send the content of the response to the requesting client.</source>
          <target state="translated">그런 다음 호출 하는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> 메서드를 요청 하는 클라이언트에 대 한 응답의 내용을 보냅니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">전체 예제에 대 한 참조는 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Flush">
          <source>The cache is flushed after the response has been sent.</source>
          <target state="translated">응답을 보낸 다음에 캐시가 플러시된 경우</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.FlushAsync">
          <source>Asynchronously sends all currently buffered output to the client.</source>
          <target state="translated">현재 버퍼링된 모든 출력을 클라이언트에 비동기로 보냅니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.FlushAsync">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation.</source>
          <target state="translated">비동기 작업을 나타내는 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> object that represents the encoding for the current header output stream.</source>
          <target state="translated">현재 헤더 출력 스트림의 인코딩을 나타내는 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> that contains information about the character set for the current header.</source>
          <target state="translated">현재 헤더의 문자 집합에 대한 정보가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property gives you the ability to disable or change the <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> object on a response header by using the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>, <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, <ph id="ph5">&lt;xref:System.Text.UTF7Encoding&gt;</ph>, or <ph id="ph6">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> 속성 사용 하지 않도록 설정 하거나 변경 하는 기능을 제공 된 <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> 개체를 사용 하 여 응답 헤더에는 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>, <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, <ph id="ph5">&lt;xref:System.Text.UTF7Encoding&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.Text.UTF8Encoding&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The default encoding value is the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> class.</source>
          <target state="translated">기본 인코딩 값은 고 <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>By changing the type of the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header.</source>
          <target state="translated">유형을 변경 하 여는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> 속성을 늘릴 수 있습니다 잠재적으로 특정 악의적인 공격 또는 응답 헤더를 통해 전송 원인 중요 한 데이터의 위험 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>Header injection attacks can be avoided, in part, by leaving the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property of a response to the default setting.</source>
          <target state="translated">헤더 주입 공격 방지할 수 있습니다, 부분적으로 그대로 유지 되므로 <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> 기본 설정에 대 한 응답의 속성입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>An attack against a vulnerable application could echo back entrusted data as part of a response header.</source>
          <target state="translated">취약 한 응용 프로그램에 대 한 공격 다시 데이터를 받으면 제공 받은 응답 헤더의 일부로 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> 연속 헤더에 줄 또는 응답 스트림에 보내기 전에 헤더 데이터를 검사할지 헤더가 신뢰할 수 없는 데이터의 결과에 따라 생성 된, 경우에 요구 사항으로 인해 사용 불가능 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The encoding value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">인코딩 값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The encoding value is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.Unicode" /&gt;</ph>.</source>
          <target state="translated">인코딩 값이 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.Unicode" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The headers have already been sent.</source>
          <target state="translated">헤더가 이미 전송된 경우</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Headers">
          <source>Gets the collection of response headers.</source>
          <target state="translated">응답 헤더의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Headers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> of response headers.</source>
          <target state="translated">응답 헤더의 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Headers">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph> property is only supported with the <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> integrated pipeline mode and at least the .NET Framework 3.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph> 속성 에서만 지원 됩니다는 <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> 통합된 파이프라인 모드 이상 및.NET Framework 3.0.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Headers">
          <source>When you try to access the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph> property and either of these two conditions is not met, a <ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">액세스 하려고 하면는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph> 속성과 같은 두 가지 조건 중 하나가 충족 되지 않으면는 <ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Headers">
          <source>The operation requires the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
          <target state="translated">작업을 수행하려면 통합 파이프라인 모드의 <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> 및 .NET Framework 버전 3.0 이상이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeadersWritten">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 이상 버전에서 지원됨]</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeadersWritten">
          <source>Gets a value indicating whether the response headers have been written.</source>
          <target state="translated">응답 헤더를 썼는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeadersWritten">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the response headers have been written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">응답 헤더를 썼으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>Gets a value indicating whether the client is still connected to the server.</source>
          <target state="translated">클라이언트가 아직 서버에 연결되어 있는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client is currently connected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">클라이언트가 현재 연결되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> when the following conditions are true:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> 속성에서 반환 <ph id="ph2">`false`</ph> 다음 조건에 해당할 경우:</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>The connection to the client was terminated.</source>
          <target state="translated">클라이언트에 대 한 연결이 종료 되었습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>This can occur if the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Close%2A&gt;</ph> method was invoked, or if the client stopped execution of the Web page or browsed to another page.</source>
          <target state="translated">이 경우 발생할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Close%2A&gt;</ph> 메서드가 호출 된 클라이언트 웹 페이지의 실행을 중지 하거나 다른 페이지를 검색할 경우 또는 합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object that is handling the request is <ph id="ph2">`null`</ph> or the <ph id="ph3">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType&gt;</ph> method returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> 요청을 처리 하는 개체는 <ph id="ph2">`null`</ph> 또는 <ph id="ph3">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType&gt;</ph> 메서드 반환 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>If a custom <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object handles the request, then the <ph id="ph2">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType&gt;</ph> method might be set based on custom criteria.</source>
          <target state="translated">사용자 지정 하는 경우 <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> 요청을 처리 하는 개체는 다음 <ph id="ph2">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType&gt;</ph> 사용자 지정 기준에 따라 메서드를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>For example, the custom worker request might force a time-out after a period of time.</source>
          <target state="translated">예를 들어 사용자 지정 작업자 요청 시간이 지나면 시간 초과 강제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property to check whether the client that is requesting the page remains connected to the server.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> 클라이언트 페이지를 요청 하는 서버에 연결 된 상태로 남아 있는지를 확인할 속성입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> is true, the code calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method, and the client will view another page.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> 가 true 이면 코드 호출은 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드와 클라이언트에는 다른 페이지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> is false, then the code calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method and all page processing is terminated.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> 가 false 이면 코드에서 호출 된 <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> 메서드 및 모든 페이지 처리가 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.IsRequestBeingRedirected">
          <source>Gets a Boolean value indicating whether the client is being transferred to a new location.</source>
          <target state="translated">클라이언트가 새 위치로 이동되는지를 나타내는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsRequestBeingRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the location response header is different than the current location; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">위치 응답 헤더 값이 현재 위치와 다르면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsRequestBeingRedirected">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A&gt;</ph> property with the <ph id="ph2">&lt;xref:System.Web.HttpResponse.RedirectLocation%2A&gt;</ph> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP <ph id="ph3">`Location`</ph> header is different than the current URI and what the new intended URI that is being transferred to will be.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A&gt;</ph> 속성을는 <ph id="ph2">&lt;xref:System.Web.HttpResponse.RedirectLocation%2A&gt;</ph> 테스트 하 고 확인 여부를 절대 URI 않는 속성이 http에서 클라이언트에 전송 <ph id="ph3">`Location`</ph> 헤더는 현재 URI와 어떻게 달라 되는 새 의도 한 URI 로 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Output">
          <source>Enables output of text to the outgoing HTTP response stream.</source>
          <target state="translated">나가는 HTTP 응답 스트림에 대한 텍스트 출력을 활성화합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Output">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object that enables custom output to the client.</source>
          <target state="translated">클라이언트에 대한 사용자 지정 출력을 활성화하는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Output">
          <source>The following example is an ASP.NET page that contains a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control that has its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox.TextMode%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBoxMode.MultiLine&gt;</ph>.</source>
          <target state="translated">다음 예제는 ASP.NET 페이지를 포함 하는 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> 된 컨트롤을 해당 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox.TextMode%2A&gt;</ph> 속성이로 설정 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBoxMode.MultiLine&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Output">
          <source>The page's code takes the text that a user enters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox.TextMode%2A&gt;</ph>, uses the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> method to HTML encode it, and the <ph id="ph3">&lt;xref:System.Web.HttpResponse.Output%2A&gt;</ph> property to display the encoded string to the page.</source>
          <target state="translated">페이지의 코드에서 사용자가 입력 하는 텍스트를 가져와 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox.TextMode%2A&gt;</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> 메서드를 HTML로 인코딩하고, 및 <ph id="ph3">&lt;xref:System.Web.HttpResponse.Output%2A&gt;</ph> 페이지로 인코딩된 문자열을 표시 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.OutputStream">
          <source>Enables binary output to the outgoing HTTP content body.</source>
          <target state="translated">나가는 HTTP 콘텐츠 본문에 대한 이진 출력을 활성화합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>An IO <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> representing the raw contents of the outgoing HTTP content body.</source>
          <target state="translated">나가는 HTTP 콘텐츠 본문의 원시 콘텐츠를 나타내는 IO <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>Starting with the .NET Framework version 2.0, when you use the <ph id="ph1">&lt;xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method of the IO stream returned by the <ph id="ph2">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property, the following exceptions might be thrown:</source>
          <target state="translated">사용 하는 경우.NET Framework 버전 2.0 부터는 <ph id="ph1">&lt;xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 반환한 IO 스트림의 메서드는 <ph id="ph2">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> 속성을 다음과 같은 예외가 throw 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, if the <ph id="ph2">`offset`</ph> or <ph id="ph3">`count`</ph> parameter is negative or if the <ph id="ph4">`buffer`</ph> parameter's length minus the <ph id="ph5">`offset`</ph> parameter is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>하는 경우는 <ph id="ph2">`offset`</ph> 또는 <ph id="ph3">`count`</ph> 매개 변수는 음수 또는 경우에는 <ph id="ph4">`buffer`</ph> 매개 변수의 길이에서 <ph id="ph5">`offset`</ph> 매개 변수는 0 보다 작거나 같음.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source><ph id="ph1">&lt;xref:System.ArgumentNullException&gt;</ph>, if the <ph id="ph2">`buffer`</ph> parameter is <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentNullException&gt;</ph>를 하는 경우는 <ph id="ph2">`buffer`</ph> 매개 변수는 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Drawing.Image.Save%2A&gt;</ph> method to save a <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property, and converts the image to the JPEG format.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Drawing.Image.Save%2A&gt;</ph> 저장 하는 메서드는 <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> 개체를 <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> 속성을 되 고 이미지를 JPEG 형식으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>The code then calls the Dispose method on the <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> object and a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object, releasing the resources that they were using.</source>
          <target state="translated">코드에서 Dispose 메서드를 호출의 <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> 개체 및 <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> 개체를 사용 하 던 리소스를 해제 합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>Finally, the code calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method to send the content of the response to the requesting client.</source>
          <target state="translated">마지막으로 호출 하 여는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> 메서드를 요청 하는 클라이언트에 대 한 응답의 내용을 보냅니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">전체 예제에 대 한 참조는 <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.OutputStream">
          <source><ph id="ph1">&lt;paramref name="OutputStream" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="OutputStream" /&gt;</ph>를 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The string to add to the <ph id="ph1">&lt;see langword="PICS-Label" /&gt;</ph> header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="PICS-Label" /&gt;</ph> 헤더에 추가할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>Appends a HTTP <ph id="ph1">&lt;see langword="PICS-Label" /&gt;</ph> header to the output stream.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="PICS-Label" /&gt;</ph> 헤더를 출력 스트림에 추가합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling.</source>
          <target state="translated">인터넷 콘텐츠 선택 (PICS)에 대 한 플랫폼에는 콘텐츠 레이블을 지정 하기 위한 World Wide Web Consortium (W3C) 표준입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>PICS is essentially a language for creating a ratings system.</source>
          <target state="translated">PICS은 기본적으로 등급 시스템을 만들기 위한 언어입니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>Any value can be a PICS label; ASP.NET does not validate the label.</source>
          <target state="translated">모든 값일 수 PICS 레이블로 지정 합니다. ASP.NET 레이블을 확인 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The maximum length of the string is 255 characters.</source>
          <target state="translated">문자열의 최대 길이 255 자입니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>For more information about PICS standards and syntax, see the <bpt id="p1">[</bpt>World Wide Web Consortium<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37125)</ept> Web site.</source>
          <target state="translated">PICS 표준 및 구문에 대 한 자세한 내용은 참조는 <bpt id="p1">[</bpt>World Wide Web 컨소시엄<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37125)</ept> 웹 사이트입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The following example is an ASP.NET page that displays an image.</source>
          <target state="translated">다음 예제는 이미지를 표시 하는 ASP.NET 페이지.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The page code calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Pics%2A&gt;</ph> method to set the HTTP <ph id="ph2">`PICS-Label`</ph> header for the response.</source>
          <target state="translated">페이지의 코드 호출은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Pics%2A&gt;</ph> HTTP 설정 하는 방법은 <ph id="ph2">`PICS-Label`</ph> 응답 헤더입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The string that is passed as the parameter to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Pics%2A&gt;</ph> method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.</source>
          <target state="translated">에 대 한 매개 변수로 전달 되는 문자열은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Pics%2A&gt;</ph> 메서드 인터넷 콘텐츠 등급 연결 (ICRA) 웹 사이트에서 생성 된 등급 레이블을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Promotes a promised object.</source>
          <target state="translated">약속된 개체의 수준을 올립니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>The URL of the push request.</source>
          <target state="translated">푸시 요청의 URL입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>It should be the virtual path of the relative resource that the server wants to push to the client.</source>
          <target state="translated">서버가 클라이언트에 푸시하려고 하는 상대 리소스의 가상 경로여야 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>This API is to support applications sending push promises to HTTP 2.0 clients.</source>
          <target state="translated">이 API는 HTTP 2.0 클라이언트에 푸시 약속을 보내는 응용 프로그램을 지원합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>You can find more details regarding to Http2 server push at <bpt id="p1">[</bpt>HTTP/2 Specification Section 8.2: Server Push<ept id="p1">](https://http2.github.io/http2-spec/#PushResources)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>HTTP/2 사양 섹션 8.2: 서버 푸시<ept id="p1">](https://http2.github.io/http2-spec/#PushResources)</ept>에서 Http2 서버 푸시와 관련된 자세한 내용을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</source>
          <target state="translated">PushPromise 명확 하지 않은 이며 응용 프로그램에 의존 하는 논리가 없어야 합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>Its only purpose is performance advantage in some cases.</source>
          <target state="translated">유일한 경우에 따라 성능상의 이점이 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</source>
          <target state="translated">푸시 요청을 완전히 무시 하는 많은 조건을 (프로토콜 및 구현) 있습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>The expectation is based on fire-and-forget.</source>
          <target state="translated">예상 실행 하 고 잊어를 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The URL of the push request.</source>
          <target state="translated">푸시 요청의 URL입니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>It should be the virtual path of the relative resource that the server wants to push to the client.</source>
          <target state="translated">서버가 클라이언트에 푸시하려고 하는 상대 리소스의 가상 경로여야 합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Http request method that would be used by the push request.</source>
          <target state="translated">푸시 요청에 의해 사용되는 http 요청 메서드입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Http request header that would be used by the push request.</source>
          <target state="translated">푸시 요청에 사용되는 http 요청 헤더입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This API is to support applications sending push promises to HTTP 2.0 clients.</source>
          <target state="translated">이 API는 HTTP 2.0 클라이언트에 푸시 약속을 보내는 응용 프로그램을 지원합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>You can find more details regarding to Http2 server push at <bpt id="p1">[</bpt>HTTP/2 Specification Section 8.2: Server Push<ept id="p1">](https://http2.github.io/http2-spec/#PushResources)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>HTTP/2 사양 섹션 8.2: 서버 푸시<ept id="p1">](https://http2.github.io/http2-spec/#PushResources)</ept>에서 Http2 서버 푸시와 관련된 자세한 내용을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</source>
          <target state="translated">PushPromise 명확 하지 않은 이며 응용 프로그램에 의존 하는 논리가 없어야 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Its only purpose is performance advantage in some cases.</source>
          <target state="translated">유일한 경우에 따라 성능상의 이점이 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</source>
          <target state="translated">푸시 요청을 완전히 무시 하는 많은 조건을 (프로토콜 및 구현) 있습니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The expectation is based on fire-and-forget.</source>
          <target state="translated">예상 실행 하 고 잊어를 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Redirects a client to a new URL.</source>
          <target state="translated">클라이언트를 새 URL로 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>The target location.</source>
          <target state="translated">대상 위치입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>This may be an application-relative virtual path.</source>
          <target state="translated">이것은 응용 프로그램 관련 가상 경로일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>Redirects a request to a new URL and specifies the new URL.</source>
          <target state="translated">요청을 새 URL로 리디렉션하고 새 URL을 지정합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>Calling <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> is equivalent to calling <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> with the second parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 호출과 같습니다 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 호출 <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> throw 하는 <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> 완료 되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>This exception has a detrimental effect on Web application performance.</source>
          <target state="translated">이 예외는 웹 응용 프로그램 성능에 나쁜 영향입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>Therefore, we recommend that instead of this overload you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> overload and pass <ph id="ph2">`false`</ph> for the <ph id="ph3">`endResponse`</ph> parameter, and then call the <ph id="ph4">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method.</source>
          <target state="translated">이 오버 로드를 대신 사용 하는 권장 따라서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> 오버 로드 하 고 전달 <ph id="ph2">`false`</ph> 에 대 한는 <ph id="ph3">`endResponse`</ph> 매개 변수를 호출 합니다는 <ph id="ph4">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> 메서드를 참조하세요.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data.</source>
          <target state="translated">모바일 페이지, 응용 프로그램 쿠키 없는 세션을 사용 하거나 쿠키 없는 세션을 요구 하는 모바일 장치에서 요청을 받을 수 하는 경우 새 세션을 만들고 세션 데이터가 손실 될 발생할 수 있습니다 물결표 (~)를 사용 하 여 경로에 있습니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>To set a property on a mobile control with a path such as "~/path", resolve the path using <ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph> "~/path" before assigning it to the property.</source>
          <target state="translated">와 같은 경로 사용 하 여 모바일 컨트롤의 속성을 설정 하려면 "~ / 경로"를 사용 하 여 경로 해결 <ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph> "~ / 경로" 속성에 할당 하기 전에.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET 302 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>An alternative way to transfer control to another page is the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">다른 페이지에 컨트롤을 전송 하는 다른 방법으로 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method is typically more efficient because it does not cause a round trip to the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 방법은 일반적으로 더 효율적 때문에 클라이언트에 대 한 왕복을 수행 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Redirect Users to Another Page<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 다른 페이지로 리디렉션<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>The following example forces an unconditional redirection to another Web site.</source>
          <target state="translated">다음 예제에서는 다른 웹 사이트로 무조건 리디렉션을 강제로 수행합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>A redirection is attempted after the HTTP headers have been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 후 리디렉션이 시도되는 경우</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>The location of the target.</source>
          <target state="translated">대상 위치입니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>Indicates whether execution of the current page should terminate.</source>
          <target state="translated">현재 페이지 실행을 종료해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>Redirects a client to a new URL.</source>
          <target state="translated">클라이언트를 새 URL로 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>Specifies the new URL and whether execution of the current page should terminate.</source>
          <target state="translated">새 URL을 지정하고 현재 페이지 실행을 종료해야 하는지를 지정합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>An absolute URL (for example, <ph id="ph1">http://www.contoso.com/default.aspx)</ph> or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.</source>
          <target state="translated">절대 URL (예를 들어 <ph id="ph1">http://www.contoso.com/default.aspx)</ph> 또는 대상 위치에 대 한 상대 URL (예: Default.aspx)를 지정할 수 있지만 일부 브라우저에는 상대 URL을 거부할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>When you use this method in a page handler to terminate a request for one page and start a new request for another page, set <ph id="ph1">`endResponse`</ph> to <ph id="ph2">`false`</ph> and then call the <ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드를 사용할 때이 페이지 처리기에서 한 페이지와 다른 페이지에 대 한 새 요청을 시작할 설정에 대 한 요청을 종료 하 <ph id="ph1">`endResponse`</ph> 를 <ph id="ph2">`false`</ph> 다음 호출에서 <ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>If you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`endResponse`</ph> parameter, this method calls the <ph id="ph3">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method for the original request, which throws a <ph id="ph4">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception when it completes.</source>
          <target state="translated">지정 하는 경우 <ph id="ph1">`true`</ph> 에 대 한는 <ph id="ph2">`endResponse`</ph> 매개 변수를이 메서드를 호출는 <ph id="ph3">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> throw 하는 원래 요청에 대 한 메서드는 <ph id="ph4">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> 작업이 완료 될 때 예외입니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>This exception has a detrimental effect on Web application performance, which is why passing <ph id="ph1">`false`</ph> for the <ph id="ph2">`endResponse`</ph> parameter is recommended.</source>
          <target state="translated">이 예외는 전달 중인 웹 응용 프로그램 성능에 부정적 <ph id="ph1">`false`</ph> 에 대 한는 <ph id="ph2">`endResponse`</ph> 매개 변수를 사용 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> 메서드를 참조하세요.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data.</source>
          <target state="translated">모바일 페이지에 대 한 경우 응용 프로그램 쿠키 없는 세션을 사용 하거나 쿠키 없는 세션을 요구 하는 모바일 장치에서 요청을 받을 수 물결표 (~)를 사용 하 여 경로에 새 세션을 만든 세션 데이터가 손실 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>To set a property on a mobile control with a path such as "~/path", resolve the path using <ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph> "~/path" before assigning it to the property.</source>
          <target state="translated">와 같은 경로 사용 하 여 모바일 컨트롤의 속성을 설정 하려면 "~ / 경로"를 사용 하 여 경로 해결 <ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph> "~ / 경로" 속성에 할당 하기 전에.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET 302 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>An alternative way to transfer control to another page is the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">다른 페이지에 컨트롤을 전송 하는 다른 방법으로 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method is typically more efficient because it does not cause a round trip to the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 방법은 일반적으로 더 효율적 때문에 클라이언트에 대 한 왕복을 수행 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Redirect Users to Another Page<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 사용자 다른 페이지로 리디렉션<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property to check whether the client that is requesting the page remains connected to the server.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> 클라이언트 페이지를 요청 하는 서버에 연결 된 상태로 남아 있는지를 확인할 속성입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> is true, the code calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method, and the client will view another page.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> 가 true 이면 코드 호출은 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드와 클라이언트에는 다른 페이지가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> is false, then the code calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method and all page processing is terminated.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> 가 false 이면 코드에서 호출 된 <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> 메서드 및 모든 페이지 처리가 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> contains a newline character.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph>에 줄 바꿈 문자가 포함되어 있는 경우</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>A redirection is attempted after the HTTP headers have been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 후 리디렉션이 시도되는 경우</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>The page request is the result of a callback.</source>
          <target state="translated">페이지 요청이 콜백의 결과인 경우</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.RedirectLocation">
          <source>Gets or sets the value of the HTTP <ph id="ph1">&lt;see langword="Location" /&gt;</ph> header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Location" /&gt;</ph> 헤더의 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.RedirectLocation">
          <source>The absolute URI that is transmitted to the client in the HTTP <ph id="ph1">&lt;see langword="Location" /&gt;</ph> header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Location" /&gt;</ph> 헤더에서 클라이언트로 전송되는 절대 URI입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.RedirectLocation">
          <source>The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.</source>
          <target state="translated">다음 예제에서는 HTTP 301 응답 코드를 사용 하 여 영구 리디렉션을 코딩할 경우 리디렉션 URL을 지정 하려면이 속성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.RedirectLocation">
          <source>The HTTP headers have already been written.</source>
          <target state="translated">HTTP 헤더가 이미 기록되었습니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Performs a permanent redirection from a requested URL to a specified URL.</source>
          <target state="translated">요청한 URL에서 지정한 URL로의 영구 리디렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>The location to redirect the request to.</source>
          <target state="translated">요청을 리디렉션할 위치입니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>Performs a permanent redirection from the requested URL to the specified URL.</source>
          <target state="translated">요청한 URL에서 지정한 URL로의 영구 리디렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph> 응답에서 301 HTTP 상태 코드를 제공 하 고 요청을 리디렉션할 URL을 포함 하는 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>A 301 HTTP status code is a standard code in an HTTP response.</source>
          <target state="translated">301 HTTP 상태 코드는 HTTP 응답에 표준 코드.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>It indicates that a permanent redirection exists, and it provides the redirection location.</source>
          <target state="translated">영구 리디렉션을 있으며 리디렉션 위치를 제공 하는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph> method overload terminates the response.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph> 메서드 오버 로드는 응답을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> includes a newline character (<bpt id="p1">&lt;c&gt;</bpt>\n<ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph>에 줄 바꿈 문자(<bpt id="p1">&lt;c&gt;</bpt>\n<ept id="p1">&lt;/c&gt;</ept>)가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>The location to redirect the request to.</source>
          <target state="translated">요청을 리디렉션할 위치입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to terminate the response; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">응답을 종료하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</source>
          <target state="translated">요청한 URL에서 지정한 URL로의 영구 리디렉션을 수행하고, 응답을 완료하는 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> 응답에서 301 HTTP 상태 코드를 제공 하 고 요청을 리디렉션할 URL을 포함 하는 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed.</source>
          <target state="translated">이 메서드 오버 로드는 또한 종료 리디렉션을 수행 된 후 응답을 완료 여부를 지정 하는 옵션을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>A 301 HTTP status code is a standard code in an HTTP response.</source>
          <target state="translated">301 HTTP 상태 코드는 HTTP 응답에 표준 코드.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>It indicates that a permanent redirection exists, and it provides the redirection location.</source>
          <target state="translated">영구 리디렉션을 있으며 리디렉션 위치를 제공 하는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> includes a newline character (<bpt id="p1">&lt;c&gt;</bpt>\n<ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph>에 줄 바꿈 문자(<bpt id="p1">&lt;c&gt;</bpt>\n<ept id="p1">&lt;/c&gt;</ept>)가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Redirects a request to a new URL by using route parameter values, a route name, or both.</source>
          <target state="translated">경로 매개 변수 값, 경로 이름 또는 둘 다 사용하여 새 URL로 요청을 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>The route parameter values.</source>
          <target state="translated">경로 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>Redirects a request to a new URL by using route parameter values.</source>
          <target state="translated">경로 매개 변수 값을 사용하여 새 URL로 요청을 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">이 메서드는 전달 된 개체를 변환 <ph id="ph1">`routeValues`</ph> 에 <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is then called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL을 확인 하려면 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET 302 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>The following example shows how to call this method to redirect to a route that has parameters that are named <ph id="ph1">`productid`</ph> and <ph id="ph2">`category`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 매개 변수가 있는 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`productid`</ph> 및 <ph id="ph2">`category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>The name of the route.</source>
          <target state="translated">경로의 이름입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>Redirects a request to a new URL by using a route name.</source>
          <target state="translated">경로 이름을 사용하여 새 URL로 요청을 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>This method converts the route name that is passed in <ph id="ph1">`routeName`</ph> to a URL by using the <ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드는 전달 된 경로 이름을 변환 <ph id="ph1">`routeName`</ph> 를 사용 하 여 URL에는 <ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET 302 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Products`</ph>.</source>
          <target state="translated">다음 예에서는 라는 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`Products`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>The route parameter values.</source>
          <target state="translated">경로 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>Redirects a request to a new URL by using route parameter values.</source>
          <target state="translated">경로 매개 변수 값을 사용하여 새 URL로 요청을 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method to determine the URL.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL을 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET 302 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>The following example shows how to call this method to redirect to a route that has parameters that are named <ph id="ph1">`productid`</ph> and <ph id="ph2">`category`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 매개 변수가 있는 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`productid`</ph> 및 <ph id="ph2">`category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>The name of the route.</source>
          <target state="translated">경로의 이름입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>The route parameter values.</source>
          <target state="translated">경로 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>Redirects a request to a new URL by using route parameter values and a route name.</source>
          <target state="translated">경로 매개 변수 값, 및 경로 이름을 사용하여 새 URL로 요청을 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">이 메서드는 전달 된 개체를 변환 <ph id="ph1">`routeValues`</ph> 에 <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is then called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL을 확인 하려면 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET 302 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Product`</ph> and that has parameters that are named <ph id="ph2">`productid`</ph> and <ph id="ph3">`category`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`Product`</ph> 명명 된 매개 변수가 있는 <ph id="ph2">`productid`</ph> 및 <ph id="ph3">`category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The name of the route.</source>
          <target state="translated">경로의 이름입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The route parameter values.</source>
          <target state="translated">경로 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>Redirects a request to a new URL by using route parameter values and a route name.</source>
          <target state="translated">경로 매개 변수 값, 및 경로 이름을 사용하여 새 URL로 요청을 리디렉션합니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> 메서드는 URL을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET 302 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Product`</ph> and that has parameters that are named <ph id="ph2">`productid`</ph> and <ph id="ph3">`category`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`Product`</ph> 명명 된 매개 변수가 있는 <ph id="ph2">`productid`</ph> 및 <ph id="ph3">`category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values, a route name, or both.</source>
          <target state="translated">경로 매개 변수 값, 경로 이름 또는 둘 다 사용하여 요청한 URL에서 새 URL로의 영구 리디렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>The route parameter values.</source>
          <target state="translated">경로 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</source>
          <target state="translated">경로 매개 변수 값을 사용하여 요청한 URL에서 새 URL로의 영구 리디렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">이 메서드는 전달 된 개체를 변환 <ph id="ph1">`routeValues`</ph> 에 <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is then called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL을 확인 하려면 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET 301 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>The following example shows how to call this method to redirect to a route that has parameters that are named <ph id="ph1">`productid`</ph> and <ph id="ph2">`category`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 매개 변수가 있는 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`productid`</ph> 및 <ph id="ph2">`category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>The name of the route.</source>
          <target state="translated">경로의 이름입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using a route name.</source>
          <target state="translated">경로 이름을 사용하여 요청한 URL에서 새 URL로의 영구 리디렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>This method converts the route name that is passed in <ph id="ph1">`routeName`</ph> to a URL by using the <ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">이 메서드는 전달 된 경로 이름을 변환 <ph id="ph1">`routeName`</ph> 를 사용 하 여 URL에는 <ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET 301 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Products`</ph>.</source>
          <target state="translated">다음 예에서는 라는 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`Products`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>The route parameter values.</source>
          <target state="translated">경로 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</source>
          <target state="translated">경로 매개 변수 값을 사용하여 요청한 URL에서 새 URL로의 영구 리디렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method to determine the URL.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL을 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET 301 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>The following example shows how to call this method to redirect to a route that has parameters that are named <ph id="ph1">`productid`</ph> and <ph id="ph2">`category`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 매개 변수가 있는 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`productid`</ph> 및 <ph id="ph2">`category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>The name of the route.</source>
          <target state="translated">경로의 이름입니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>The route parameter values.</source>
          <target state="translated">경로 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</source>
          <target state="translated">새 URL에 해당하는 경로 매개 변수 값 및 경로 이름을 사용하여 요청한 URL에서 새 URL로의 영구 리디렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%2A&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%2A&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">이 메서드는 전달 된 개체를 변환 <ph id="ph1">`routeValues`</ph> 에 <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> 사용 하 여 개체는 <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is then called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL을 확인 하려면 메서드가 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET 301 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Product`</ph> and that has parameters that are named <ph id="ph2">`productid`</ph> and <ph id="ph3">`category`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`Product`</ph> 명명 된 매개 변수가 있는 <ph id="ph2">`productid`</ph> 및 <ph id="ph3">`category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The name of the route.</source>
          <target state="translated">경로의 이름입니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The route parameter values.</source>
          <target state="translated">경로 매개 변수 값입니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</source>
          <target state="translated">경로 매개 변수 값 및 경로 이름을 사용하여 요청한 URL에서 새 URL로의 영구 리디렉션을 수행합니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">이 메서드는 코딩 편의 위해 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">호출 하는 것과 같습니다는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> 로 설정 하는 두 번째 매개 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method to determine the URL.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL을 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET 301 HTTP 상태 코드를 반환 하 여 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Product`</ph> and that has parameters that are named <ph id="ph2">`productid`</ph> and <ph id="ph3">`category`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 경로를 리디렉션하려면이 메서드를 호출 하는 방법을 보여 줍니다 <ph id="ph1">`Product`</ph> 명명 된 매개 변수가 있는 <ph id="ph2">`productid`</ph> 및 <ph id="ph3">`category`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">경로가 지정한 경로 매개 변수에 해당하지 않습니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 리디렉션하려는 경우</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Removes cached items from the output cache by using the default output-cache provider.</source>
          <target state="translated">기본 출력 캐시 제공자를 사용하여 출력 캐시에서 캐시된 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>The virtual absolute path to the items that are removed from the cache.</source>
          <target state="translated">캐시에서 제거되는 항목에 대한 가상 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>Removes from the cache all cached items that are associated with the default output-cache provider.</source>
          <target state="translated">기본 출력 캐시 공급자와 관련된 모든 캐시된 항목을 캐시에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>This method is static.</source>
          <target state="translated">이 메서드는 정적입니다.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>Call this method to remove output-cache items that are associated with the default output-cache provider.</source>
          <target state="translated">기본 출력 캐시 공급자와 연결 된 출력 캐시 항목을 제거 하려면이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A&gt;</ph> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A&gt;</ph> 메서드를 웹 사이트 구성 파일에 지정 된 사용자 지정 출력 캐시 공급자와 관련 된 출력 캐시 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not an absolute virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 절대 가상 경로가 아닌 경우</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>The virtual absolute path of the items that are removed from the cache.</source>
          <target state="translated">캐시에서 제거되는 항목의 가상 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>The provider that is used to remove the output-cache artifacts that are associated with the specified path.</source>
          <target state="translated">지정한 경로와 관련된 출력 캐시 아티팩트를 제거하는 데 사용되는 제공자입니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</source>
          <target state="translated">지정한 출력 캐시 공급자를 사용하여 지정된 경로와 관련된 모든 출력 캐시 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.</source>
          <target state="translated">웹 사이트 구성 파일에 지정 된 사용자 지정 출력 캐시 공급자와 관련 된 출력 캐시 항목을 제거 하려면이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>To remove output-cache items that are associated with the default output-cache provider, call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29&gt;</ph> method overload.</source>
          <target state="translated">기본 출력 캐시 공급자와 관련 된 출력 캐시 항목을 제거 하려면 호출 된 <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 null인 경우</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an invalid path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>은(는) 잘못된 경로입니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>The cookie in the collection to be updated.</source>
          <target state="translated">컬렉션에서 업데이트할 쿠키입니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>Because the <bpt id="p1">&lt;b&gt;</bpt>HttpResponse.SetCookie<ept id="p1">&lt;/b&gt;</ept> method is intended for internal use only, you should not call it in your code.</source>
          <target state="translated"><bpt id="p1">&lt;b&gt;</bpt>HttpResponse.SetCookie<ept id="p1">&lt;/b&gt;</ept> 메서드가 내부적으로만 사용되기 때문에 코드에서 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>Instead, you can call the <bpt id="p1">&lt;b&gt;</bpt>HttpResponse.Cookies.Set<ept id="p1">&lt;/b&gt;</ept> method, as the following example shows.</source>
          <target state="translated">대신, 다음 예제와 같이 <bpt id="p1">&lt;b&gt;</bpt>HttpResponse.Cookies.Set<ept id="p1">&lt;/b&gt;</ept> 메서드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>Updates an existing cookie in the cookie collection.</source>
          <target state="translated">쿠키 컬렉션에서 기존 쿠키를 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>The following example updates the value of an existing cookie.</source>
          <target state="translated">다음 예에서는 기존 쿠키의 값을 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>Attempted to set the cookie after the HTTP headers were sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 쿠키를 설정하려고 시도한 경우</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Status">
          <source>Sets the <ph id="ph1">&lt;see langword="Status" /&gt;</ph> line that is returned to the client.</source>
          <target state="translated">클라이언트에 반환되는 <ph id="ph1">&lt;see langword="Status" /&gt;</ph> 줄을 설정합니다.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Status">
          <source>Setting the status code causes a string describing the status of the HTTP output to be returned to the client.</source>
          <target state="translated">상태 코드를 설정하면 HTTP 출력 상태를 설명하는 문자열이 클라이언트에 반환됩니다.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Status">
          <source>The default value is 200 (OK).</source>
          <target state="translated">기본값은 200(OK)입니다.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Status">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Status%2A&gt;</ph> has been deprecated in favor of <ph id="ph2">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph> and is provided only for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Status%2A&gt;</ph> 사용 되지 않습니다 기준 <ph id="ph2">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph> 및 이전 버전 ASP와의 호환성을 위해서만 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Status">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph> instead.</source>
          <target state="translated">Asp.net을 사용 하 여 <ph id="ph1">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph> 대신 합니다.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Status">
          <source>Status is set to an invalid status code.</source>
          <target state="translated">상태가 잘못된 상태 코드로 설정된 경우</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusCode">
          <source>Gets or sets the HTTP status code of the output returned to the client.</source>
          <target state="translated">클라이언트에 반환되는 출력의 HTTP 상태 코드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>An Integer representing the status of the HTTP output returned to the client.</source>
          <target state="translated">클라이언트에 반환되는 HTTP 출력의 상태를 나타내는 정수입니다.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>The default value is 200 (OK).</source>
          <target state="translated">기본값은 200(OK)입니다.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>For a listing of valid status codes, see <bpt id="p1">[</bpt>Http Status Codes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>.</source>
          <target state="translated">유효한 상태 코드의 해당 항목을 참조 하십시오. <bpt id="p1">[</bpt>Http 상태 코드<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>The following example checks the status code of the output stream.</source>
          <target state="translated">다음 예제에서는 출력 스트림의 상태 코드를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>If the status code is not equal to 200, additional code is executed.</source>
          <target state="translated">상태 코드가 200 없는 경우에 추가 코드가 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusCode">
          <source><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.StatusCode" /&gt;</ph> is set after the HTTP headers have been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 <ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.StatusCode" /&gt;</ph>가 설정된 경우</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>Gets or sets the HTTP status string of the output returned to the client.</source>
          <target state="translated">클라이언트에 반환되는 출력의 HTTP 상태 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>A string that describes the status of the HTTP output returned to the client.</source>
          <target state="translated">클라이언트에 반환되는 HTTP 출력의 상태를 설명하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>The default value is "OK".</source>
          <target state="translated">기본값은 "OK"입니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>For a listing of valid status codes, see <bpt id="p1">[</bpt>Http Status Codes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>.</source>
          <target state="translated">유효한 상태 코드의 해당 항목을 참조 하십시오. <bpt id="p1">[</bpt>Http 상태 코드<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>The following example checks the status string of the output stream.</source>
          <target state="translated">다음 예제에서는 출력 스트림의 상태 문자열을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>If the status is not equal to "OK", additional code is executed.</source>
          <target state="translated">상태 이면 "ok" 추가 코드가 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusDescription">
          <source><ph id="ph1">&lt;paramref name="StatusDescription" /&gt;</ph> is set after the HTTP headers have been sent.</source>
          <target state="translated">HTTP 헤더를 보낸 다음에 <ph id="ph1">&lt;paramref name="StatusDescription" /&gt;</ph>가 설정된 경우</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>The selected value has a length greater than 512.</source>
          <target state="translated">선택한 값의 길이가 512보다 큰 경우</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>Gets or sets a value qualifying the status code of the response.</source>
          <target state="translated">응답의 상태 코드를 정규화하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>An integer value that represents the <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> sub status code.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> 하위 상태 코드를 나타내는 정수 값입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> property is only supported with the integrated pipeline mode in <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> 속성은 통합된 파이프라인 모드 에서만 지원 <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> 이상 및.NET Framework 버전 3.0.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> property, the status is logged on <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> if failed-request tracing is configured.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> 속성, 상태 로깅됩니다 <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> 실패 한 요청 추적을 구성 하는 경우.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>Independent of whether tracing is configured, the code is never sent as part of the final response to the request.</source>
          <target state="translated">추적 구성 되어 있는지 여부와 무관 코드 요청에 최종 응답의 일부로 전송 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>For more information, see <bpt id="p1">[</bpt>Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0<ept id="p1">](http://www.iis.net/default.aspx?tabid=2&amp;subtabid=25&amp;i=969&amp;p=1)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>문제 해결 실패 요청을 사용 하 여 실패 한 요청 추적 IIS 7.0에서<ept id="p1">](http://www.iis.net/default.aspx?tabid=2&amp;subtabid=25&amp;i=969&amp;p=1)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> property in an event handler for the <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> instance of the <ph id="ph3">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> 속성에 대 한 이벤트 처리기에는 <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> 의 인스턴스는 <ph id="ph3">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module.</source>
          <target state="translated">웹 응용 프로그램의 App_Code 폴더에 코드 파일을 저장 하 고 Web.config 파일을 모듈 등록을 구성 합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Creating and Registering a Custom HTTP Module<ept id="p1">](http://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연습: 만들기 및 사용자 지정 HTTP 모듈을 등록<ept id="p1">](http://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>The operation requires the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
          <target state="translated">작업을 수행하려면 통합 파이프라인 모드의 <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> 및 .NET Framework 버전 3.0 이상이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>The status code is set after all HTTP headers have been sent.</source>
          <target state="translated">모든 HTTP 헤더를 보낸 다음에 상태 코드가 설정된 경우</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SupportsAsyncFlush">
          <source>Gets a value that indicates whether the connection supports asynchronous flush operations.</source>
          <target state="translated">연결이 비동기 플러시 작업을 지원하는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SupportsAsyncFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection supports asynchronous flush operations; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">연결에서 비동기 플러시 작업을 지원하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SupportsAsyncFlush">
          <source>This property returns the value of the <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 속성의 값을 반환 된 <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SuppressContent">
          <source>Gets or sets a value indicating whether to send HTTP content to the client.</source>
          <target state="translated">HTTP 콘텐츠를 클라이언트에 보낼지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressContent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to suppress output; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">출력하지 않으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressContent">
          <source>The following example checks whether the <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsSecureConnection%2A&gt;</ph> property is set to false.</source>
          <target state="translated">다음 예제에서는 검사 여부는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsSecureConnection%2A&gt;</ph> 속성이 false로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressContent">
          <source>If it is, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.SuppressContent%2A&gt;</ph> property is set to true to stop the response from being sent.</source>
          <target state="translated">인 경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.SuppressContent%2A&gt;</ph> 속성이을 보낼 응답을 중지 하려면 true로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 이상 버전에서 지원됨]</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>Gets or sets a value indicating whether to suppress the default <bpt id="p1">&lt;c&gt;</bpt>Cache Control: private<ept id="p1">&lt;/c&gt;</ept> header for the current HTTP response.</source>
          <target state="translated">현재 HTTP 응답에 대한 기본 <bpt id="p1">&lt;c&gt;</bpt>Cache Control: private<ept id="p1">&lt;/c&gt;</ept> 헤더를 표시하지 않을 것인지 표시하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to suppress the default <bpt id="p1">&lt;c&gt;</bpt>Cache Control: private<ept id="p1">&lt;/c&gt;</ept> header for the current HTTP response; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 기본값을 표시 하지 않으려면 <bpt id="p1">&lt;c&gt;</bpt>캐시 제어: 개인<ept id="p1">&lt;/c&gt;</ept> ; 현재 HTTP 응답에 대 한 헤더, <ph id="ph2">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>By default, ASP.NET sends a <ph id="ph1">`Cache-Control: private`</ph> response header unless an explicit cache policy has been specified for this response.</source>
          <target state="translated">기본적으로 ASP.NET 보냅니다는 <ph id="ph1">`Cache-Control: private`</ph> 응답 헤더가이 응답에 대 한 명시적 캐시 정책을 지정 하지 않은 경우.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>This property allows suppressing this default response header on a per-request basis.</source>
          <target state="translated">이 속성-요청 별로이 기본 응답 헤더를 무시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>The header can still be suppressed for the entire application by setting <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A&gt;</ph> in <bpt id="p1">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> or <bpt id="p2">[</bpt>outputCache Element for caching (ASP.NET Settings Schema)<ept id="p2">](http://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee)</ept>.</source>
          <target state="translated">헤더 여전히 보류 될 수 있습니다는 전체 응용 프로그램에 대 한 설정 하 여 <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A&gt;</ph> 에 <bpt id="p1">[</bpt>) (httpRuntime Element (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> 또는 <bpt id="p2">[</bpt>outputCache 요소 (ASP.NET 설정 스키마)캐싱에<ept id="p2">](http://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee)</ept>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>Use caution when suppressing the default <ph id="ph1">`Cache-Control: private`</ph> header, as proxies and other intermediaries may treat responses without this header as cacheable by default.</source>
          <target state="translated">기본값을 표시 하지 않을 때 주의 해야 <ph id="ph1">`Cache-Control: private`</ph> 프록시로 헤더 및 다른 매개 지점 취급할 수 있습니다이 헤더 없이 응답을 캐시할 수 있도록 기본적으로 합니다.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>This treatment can lead to the inadvertent caching of sensitive information.</source>
          <target state="translated">중요 한 정보의 부주의 한 캐싱을이 처리 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>See <bpt id="p1">[</bpt>RFC 2616, Sec. 13.4<ept id="p1">](http://tools.ietf.org/html/rfc2616)</ept> for more information.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>RFC 2616, 초 13.4<ept id="p1">](http://tools.ietf.org/html/rfc2616)</ept> 자세한 정보에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source>Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</source>
          <target state="translated">로그인 페이지에 대한 폼 인증 리디렉션이 억제되어야 하는지를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if forms authentication redirection should be suppressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">폼 인증 리디렉션을 억제해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source>By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page.</source>
          <target state="translated">기본적으로 폼 인증 변환 HTTP 401 상태 코드 302 로그인 페이지에 리디렉션해야 합니다.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source>This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request.</source>
          <target state="translated">이 특정 인증이 성공 하면 하지만 권한 부여 오류 클래스, 못하거나 경우 현재 요청 된 AJAX 또는 웹 서비스 요청에 적절 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source>This property provides a way to suppress the redirect behavior and send the original status code to the client.</source>
          <target state="translated">이 속성은 이동 동작을 표시 하지 않는 원래 상태 코드를 클라이언트로 전송할 하는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Writes the specified file directly to an HTTP response output stream without buffering it in memory.</source>
          <target state="translated">지정된 파일을 메모리에 버퍼링하지 않고 HTTP 응답 출력 스트림에 직접 씁니다.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String)">
          <source>The name of the file to write to the HTTP output.</source>
          <target state="translated">HTTP 출력에 쓸 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String)">
          <source>Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</source>
          <target state="translated">지정된 파일을 메모리에 버퍼링하지 않고 HTTP 응답 출력 스트림에 직접 씁니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The name of the file to write to the HTTP output.</source>
          <target state="translated">HTTP 출력에 쓸 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The position in the file to begin to write to the HTTP output.</source>
          <target state="translated">HTTP 출력에 쓸 파일의 시작 위치입니다.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The number of bytes to be transmitted.</source>
          <target state="translated">전송할 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</source>
          <target state="translated">지정된 파일 부분을 메모리에 버퍼링하지 않고 HTTP 응답 출력 스트림에 직접 씁니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>If you specify 0 as the <ph id="ph1">`offset`</ph> parameter and -1 as the <ph id="ph2">`length`</ph> parameter, the whole file is sent.</source>
          <target state="translated">0을 지정 하는 경우는 <ph id="ph1">`offset`</ph> 매개 변수 및-1로의 <ph id="ph2">`length`</ph> 매개 변수를 전체 파일이 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 매개 변수가 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="length" /&gt;</ph> parameter is less than -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> 매개 변수가 -1보다 작습니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="length" /&gt;</ph> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> 매개 변수가 파일의 바이트 수에서 오프셋을 뺀 값보다 큰 바이트 수를 지정한 경우</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The out-of-process worker request is not supported.</source>
          <target state="translated">Out of Process 작업자 요청이 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The response is not using an <ph id="ph1">&lt;see cref="T:System.Web.HttpWriter" /&gt;</ph> object.</source>
          <target state="translated">응답에서 <ph id="ph1">&lt;see cref="T:System.Web.HttpWriter" /&gt;</ph> 개체를 사용하지 않는 경우</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than the file size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 매개 변수가 0보다 작거나 파일 크기보다 큽니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="length" /&gt;</ph> parameter is less than -1 or greater than the value of the <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameter plus the file size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> 매개 변수가 -1보다 작거나 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> 매개 변수에 파일 크기를 더한 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source>Gets or sets a value that specifies whether <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> custom errors are disabled.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> 사용자 지정 오류가 비활성화되는지 여부를 지정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to disable IIS custom errors; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">IIS 사용자 지정 오류가 비활성화되는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property is used only when your application is hosted in IIS 7.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> 속성은 응용 프로그램이 IIS 7.0에서 호스팅되는 경우에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source>When running in Classic mode in IIS 7.0 the <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property default value is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">IIS 7.0에서 클래식 모드에서 실행 하는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> 속성 기본값은 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source>When running in Integrated mode, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property default value is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">통합된 모드에서 실행 하는 경우는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> 속성 기본값은 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Writes information to an HTTP response output stream.</source>
          <target state="translated">HTTP 응답 출력 스트림에 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char)">
          <source>The character to write to the HTTP output stream.</source>
          <target state="translated">HTTP 출력 스트림에 쓸 문자입니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char)">
          <source>Writes a character to an HTTP response output stream.</source>
          <target state="translated">HTTP 응답 출력 스트림에 문자를 씁니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.Char)">
          <source>The following example creates a series of constants that are written to an ASP.NET page using the Write method.</source>
          <target state="translated">다음 예제에서는 일련의 Write 메서드를 사용 하 여 ASP.NET 페이지에 기록 되는 상수를 만듭니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.Char)">
          <source>The code calls this version of the Write method to write individual character constants to the page.</source>
          <target state="translated">코드는이 버전의 개별 문자 상수는 페이지에 쓰려고 쓰기 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to write to the HTTP output stream.</source>
          <target state="translated">HTTP 출력 스트림에 쓸 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Object)">
          <source>Writes an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to an HTTP response stream.</source>
          <target state="translated">HTTP 응답 스트림에 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>를 씁니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>The string to write to the HTTP output stream.</source>
          <target state="translated">HTTP 출력 스트림에 쓸 문자열입니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>Writes a string to an HTTP response output stream.</source>
          <target state="translated">HTTP 응답 출력 스트림에 문자열을 씁니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client.</source>
          <target state="translated">HTML 페이지를 동적으로 생성 된 클라이언트에서 수신 될 때 또는 클라이언트에 다시 전송 되는 경우 웹 클라이언트에서 받은 입력 유효성이 검사 되지 않은 경우 보안 위험이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source.</source>
          <target state="translated">입력 웹 사이트에 전송 되 고 나중에 다시 쓰여진 클라이언트에에서 포함 된 악의적인 스크립트가 신뢰할 수 있는 소스에서 시작 된 것 처럼 보일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>This security risk is referred to as a cross-site scripting attack.</source>
          <target state="translated">이러한 보안 위험을 사이트 간 스크립팅 공격이 라고 합니다.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>You should always validate data that is received from a client when it will be transmitted from your site to client browsers.</source>
          <target state="translated">클라이언트 브라우저에 사이트에서 전송 될 때 클라이언트에서 받은 데이터를 항상 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> to prevent malicious script from executing.</source>
          <target state="translated">또한 작성 하는 HTML로 입력으로 수신 된 모든 데이터, 때마다 인코딩해야와 같은 기술을 사용 하 여 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> 악성 스크립트를 실행 하지 못하도록 합니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>This technique is useful for data that was not validated when it was received.</source>
          <target state="translated">이 방법은 수신 될 때 확인 되지 않은 데이터에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.</source>
          <target state="translated">인코딩하거나 데이터를 필터링 하는 경우에 문자 필터를 식별 하 고 (예: 영숫자가 아닌 문자 시퀀스) 및에 포함 된 악성 스크립트를 포함할 수 있는 바이트 시퀀스에 속하지 않는 제거할 수 있도록 웹 페이지에 대 한 집합을 지정 해야 해당 합니다.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>For more information about cross-site scripting attacks, see article Q252985, "How to Prevent Cross-Site Scripting Security Issues" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37115)</ept> Web site.</source>
          <target state="translated">사이트 간 스크립팅 공격에 대 한 자세한 내용은 문서 Q252985, 어떻게 되지 않도록 사이트 간 스크립팅 보안 "문제"를 참조는 <bpt id="p1">[</bpt>Microsoft 기술 자료<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37115)</ept> 웹 사이트입니다.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>The following example echoes the client's name back to the client's browser.</source>
          <target state="translated">다음 예제에는 클라이언트의 브라우저를 다시 클라이언트의 이름을 표시합니다.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> method strips any malicious script and invalid characters that may have been submitted in the <ph id="ph2">`UserName`</ph> input field.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> 방법을 제거 모든 악성 스크립트 및에서 전송 된 잘못 된 문자는 <ph id="ph2">`UserName`</ph> 입력된 필드입니다.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write.</source>
          <target state="translated">쓸 문자 배열입니다.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The position in the character array where writing starts.</source>
          <target state="translated">쓰기 시작할 문자 배열의 위치입니다.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write, beginning at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>인덱스<ept id="p1">&lt;/c&gt;</ept>에서 시작하여 쓸 문자 수입니다.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes an array of characters to an HTTP response output stream.</source>
          <target state="translated">HTTP 응답 출력 스트림에 문자 배열을 씁니다.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following example creates a series of constants that are written to an ASP.NET page using the Write method.</source>
          <target state="translated">다음 예제에서는 일련의 Write 메서드를 사용 하 여 ASP.NET 페이지에 기록 되는 상수를 만듭니다.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The code calls this version of the Write method to write individual character constants to the page.</source>
          <target state="translated">코드는이 버전의 개별 문자 상수는 페이지에 쓰려고 쓰기 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Writes the specified file directly to an HTTP response output stream.</source>
          <target state="translated">HTTP 응답 출력 스트림에 지정된 파일을 직접 씁니다.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>The name of the file to write to the HTTP output.</source>
          <target state="translated">HTTP 출력에 쓸 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>Writes the contents of the specified file directly to an HTTP response output stream as a file block.</source>
          <target state="translated">지정된 파일의 내용을 HTTP 응답 출력 스트림에 파일 블록으로 직접 씁니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
          <target state="translated">큰 파일에이 메서드를 사용 하는 경우 메서드를 호출 하면 예외가 throw 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
          <target state="translated">이 방법을 사용할 수 있는 파일의 크기는 웹 서버의 하드웨어 구성에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
          <target state="translated">자세한 내용은 812406, 문서 "PRB:: Response.WriteFile 수 정도 큰 파일 다운로드"를 참조는 <bpt id="p1">[</bpt>Microsoft 기술 자료<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> 웹 사이트입니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>The following example writes all the contents of a text file named <ph id="ph1">`Login.txt`</ph> (which might contain literal HTML text and input controls) directly to the output stream.</source>
          <target state="translated">다음 예에서는 라는 텍스트 파일의 모든 내용을 씁니다 <ph id="ph1">`Login.txt`</ph> (리터럴 HTML 텍스트 및 입력 컨트롤이 포함 될 수 있습니다는) 출력 스트림에 직접 합니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>The name of the file to write into a memory block.</source>
          <target state="translated">메모리 블록에 쓸 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>Indicates whether the file will be written into a memory block.</source>
          <target state="translated">해당 파일을 메모리 블록에 쓸지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</source>
          <target state="translated">지정된 파일의 내용을 HTTP 응답 출력 스트림에 메모리 블록으로 직접 씁니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
          <target state="translated">큰 파일에이 메서드를 사용 하는 경우 메서드를 호출 하면 예외가 throw 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
          <target state="translated">이 방법을 사용할 수 있는 파일의 크기는 웹 서버의 하드웨어 구성에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
          <target state="translated">자세한 내용은 812406, 문서 "PRB:: Response.WriteFile 수 정도 큰 파일 다운로드"를 참조는 <bpt id="p1">[</bpt>Microsoft 기술 자료<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> 웹 사이트입니다.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>The following example writes a file to memory.</source>
          <target state="translated">다음 예제에서는 메모리에 파일을 씁니다.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The file handle of the file to write to the HTTP output stream.</source>
          <target state="translated">HTTP 출력 스트림에 쓸 파일의 파일 핸들입니다.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The byte position in the file where writing will start.</source>
          <target state="translated">쓰기가 시작될 파일의 바이트 위치입니다.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The number of bytes to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>Writes the specified file directly to an HTTP response output stream.</source>
          <target state="translated">HTTP 응답 출력 스트림에 지정된 파일을 직접 씁니다.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
          <target state="translated">큰 파일에이 메서드를 사용 하는 경우 메서드를 호출 하면 예외가 throw 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
          <target state="translated">이 방법을 사용할 수 있는 파일의 크기는 웹 서버의 하드웨어 구성에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
          <target state="translated">자세한 내용은 812406, 문서 "PRB:: Response.WriteFile 수 정도 큰 파일 다운로드"를 참조는 <bpt id="p1">[</bpt>Microsoft 기술 자료<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> 웹 사이트입니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The following example writes all the contents of a text file named <ph id="ph1">`Login.txt`</ph> (which might contain literal HTML text and input controls) directly to the output stream.</source>
          <target state="translated">다음 예에서는 라는 텍스트 파일의 모든 내용을 씁니다 <ph id="ph1">`Login.txt`</ph> (리터럴 HTML 텍스트 및 입력 컨트롤이 포함 될 수 있습니다는) 출력 스트림에 직접 합니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="fileHandler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileHandler" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the file size minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph>가 파일 크기에서 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The name of the file to write to the HTTP output stream.</source>
          <target state="translated">HTTP 출력 스트림에 쓸 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The byte position in the file where writing will start.</source>
          <target state="translated">쓰기가 시작될 파일의 바이트 위치입니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The number of bytes to write to the output stream.</source>
          <target state="translated">출력 스트림에 쓸 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>Writes the specified file directly to an HTTP response output stream.</source>
          <target state="translated">HTTP 응답 출력 스트림에 지정된 파일을 직접 씁니다.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
          <target state="translated">큰 파일에이 메서드를 사용 하는 경우 메서드를 호출 하면 예외가 throw 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
          <target state="translated">이 방법을 사용할 수 있는 파일의 크기는 웹 서버의 하드웨어 구성에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
          <target state="translated">자세한 내용은 812406, 문서 "PRB:: Response.WriteFile 수 정도 큰 파일 다운로드"를 참조는 <bpt id="p1">[</bpt>Microsoft 기술 자료<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> 웹 사이트입니다.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The following example writes all the contents of a text file named <ph id="ph1">`Login.txt`</ph> (which might contain literal text and HTML input controls) directly to the output stream.</source>
          <target state="translated">다음 예에서는 라는 텍스트 파일의 모든 내용을 씁니다 <ph id="ph1">`Login.txt`</ph> (입력 컨트롤 리터럴 텍스트와 HTML 포함 하는) 출력 스트림에 직접 합니다.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the file size minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph>가 파일 크기에서 <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>을 뺀 값보다 큰 경우</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>The method, user control, or object to substitute.</source>
          <target state="translated">대체할 메서드, 사용자 정의 컨트롤 또는 개체입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</source>
          <target state="translated">응답 대체 블록을 응답에 삽입할 수 있도록 하여 출력 캐시 응답의 지정된 응답 영역을 동적으로 생성할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> method for post-cache substitution in your output-cached pages.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> 캐시 후 출력 캐시 된 페이지에는 대체 방법입니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>By passing a <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> object to a callback method with a prescribed <ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph> signature, you can replace output cached content at any given location in the page cache.</source>
          <target state="translated">전달 하 여 한 <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> 콜백 메서드에 지정 된 개체 <ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph> 서명, 캐시 된 출력을 바꿀 수 있습니다 페이지 캐시에서 지정 된 모든 위치에서 콘텐츠입니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>To initiate the replacement, call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> method, passing it the callback method, which must be thread safe and can be either of the following:</source>
          <target state="translated">교체를 시작 하려면 호출 된 <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> 스레드로부터 안전 해야 하며 다음 중 하나가 될 수 하는 콜백 메서드를 전달 하는 메서드:</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>A static method on the container page or user control.</source>
          <target state="translated">컨테이너 페이지 또는 사용자 정의 컨트롤에 정적 메서드.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>A static or instance method on another arbitrary object.</source>
          <target state="translated">정적 또는 인스턴스 임의의 다른 개체에서 메서드.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>On the first request to the page, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph> delegate to produce the output.</source>
          <target state="translated">페이지에 대 한 첫 번째 요청에서는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> 호출은 <ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph> 대리자는 출력을 생성 합니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests.</source>
          <target state="translated">그런 다음 이후 요청에서 호출할 대리자를 보존 하 여 응답에는 대체 버퍼를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.</source>
          <target state="translated">마지막으로, 클라이언트 쪽 캐시 가능성을 공개 서버 전용으로 클라이언트에서 캐시 되지 여 앞으로 요청 페이지 다시 호출 하는 대리자를 보장 저하 됩니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level.</source>
          <target state="translated">캐시 후 대체 사용자 제어 수준 출력 캐싱을 적용 되는 캐시 된 사용자 정의 컨트롤에 대 한 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>This is also known as fragment caching.</source>
          <target state="translated">이 조각 캐싱을 라고도 합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>For more information, see <bpt id="p1">[</bpt>Caching Portions of an ASP.NET Page<ept id="p1">](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ASP.NET 페이지의 부분 캐싱을<ept id="p1">](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>The target of the <ph id="ph1">&lt;paramref name="callback" /&gt;</ph> parameter is of type <ph id="ph2">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> 매개 변수의 대상이 <ph id="ph2">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> 형식인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>