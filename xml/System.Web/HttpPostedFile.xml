<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpPostedFile.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50e6339d4f17a51e73e895f0a60bee71bbef6ac47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e6339d4f17a51e73e895f0a60bee71bbef6ac47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpPostedFile">
          <source>Provides access to individual files that have been uploaded by a client.</source>
          <target state="translated">클라이언트에서 업로드한 개별 파일에 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpFileCollection&gt;</ph> class provides access to all the files that are uploaded from a client as a file collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpFileCollection&gt;</ph> 클래스 파일 컬렉션으로 클라이언트에서 업로드 되는 모든 파일에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpPostedFile&gt;</ph> class provides properties and methods to get information about an individual file and to read and save the file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpPostedFile&gt;</ph> 클래스 속성 및 개별 파일에 대 한 정보를 읽고 파일을 저장 하는 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlControls.HtmlInputFile&gt;</ph> control can be used to select and upload files from a client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.HtmlControls.HtmlInputFile&gt;</ph> 선택 하 고 클라이언트에서 파일 업로드 컨트롤을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>Files are uploaded in MIME multipart/form-data format.</source>
          <target state="translated">MIME 다중 파트/폼 데이터 형식으로 파일 업로드 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>By default, all requests, including form fields and uploaded files, larger than 256 KB are buffered to disk, rather than held in server memory.</source>
          <target state="translated">기본적으로 256KB 보다 큰 파일 업로드 및 양식 필드를 포함 하 여 모든 요청은 디스크에 버퍼링 하지 않고 서버 메모리에 보관 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>You can specify the maximum allowable request size by accessing the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A&gt;</ph> property or by setting the <ph id="ph2">`maxRequestLength`</ph> attribute of the <bpt id="p1">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> element within the Machine.config or Web.config file.</source>
          <target state="translated">에 액세스 하 여 허용 되는 최대 요청 크기를 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A&gt;</ph> 속성 또는 설정 하 여는 <ph id="ph2">`maxRequestLength`</ph> 특성에는 <bpt id="p1">[</bpt>) (httpRuntime Element (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> Machine.config 내의 요소 또는 Web.config 파일입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>The default is 4 MB.</source>
          <target state="translated">기본값은 4MB입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>The amount of data that is buffered in server memory for a request, which includes file uploads, can be specified by accessing the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A&gt;</ph> property or by setting the <ph id="ph2">`requestLengthDiskThreshold`</ph> attribute of the <bpt id="p1">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> element within the Machine.config or Web.config file.</source>
          <target state="translated">에 액세스 하 여 파일 업로드를 포함 하는 요청에 대 한 서버 메모리에 버퍼링 되는 데이터의 양을 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A&gt;</ph> 속성을 설정 하 여 또는 <ph id="ph2">`requestLengthDiskThreshold`</ph> 특성의는 <bpt id="p1">[</bpt>) (httpRuntime Element (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> Machine.config 또는 Web.config 파일 내에서 요소입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>By adjusting the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A&gt;</ph> properties, you can fine tune the performance of your server.</source>
          <target state="translated">조정 하 여는 <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A&gt;</ph> 속성, 서버의 성능을 미세 조정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>Additionally, you should consider setting the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A&gt;</ph> to prevent denial of service attacks caused by users posting large files to the server.</source>
          <target state="translated">또한 설정 해야는 <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A&gt;</ph> 큰 파일 서버에 게시 하는 사용자로 인 한 서비스 공격의 거부 방지 하도록 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>Server resources that are allocated to buffer the uploaded file will be destroyed when the request ends.</source>
          <target state="translated">업로드 된 파일을 버퍼링 하는 데 할당 되는 서버 리소스는 요청이 끝날 때 제거 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpPostedFile">
          <source>To save a durable copy of the file, use the <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.SaveAs%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 파일의 영구 복사본을 저장 하려면는 <ph id="ph1">&lt;xref:System.Web.HttpPostedFile.SaveAs%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Web.HttpPostedFile.ContentLength">
          <source>Gets the size of an uploaded file, in bytes.</source>
          <target state="translated">업로드된 파일의 크기(바이트)를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpPostedFile.ContentLength">
          <source>The file length, in bytes.</source>
          <target state="translated">파일 길이(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Web.HttpPostedFile.ContentType">
          <source>Gets the MIME content type of a file sent by a client.</source>
          <target state="translated">클라이언트에서 보낸 파일의 MIME 콘텐츠 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpPostedFile.ContentType">
          <source>The MIME content type of the uploaded file.</source>
          <target state="translated">업로드된 파일의 MIME 콘텐츠 형식입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpPostedFile.ContentType">
          <source>The following code example shows how to loop through all the files in the uploaded file collection and take action when the MIME type of a file is <ph id="ph1">`US-ASCII`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 업로드 한 파일 컬렉션에 있는 모든 파일 반복 MIME 형식이 파일의 경우 작업을 수행 하는 방법을 보여 줍니다. <ph id="ph1">`US-ASCII`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Web.HttpPostedFile.FileName">
          <source>Gets the fully qualified name of the file on the client.</source>
          <target state="translated">클라이언트에 있는 파일의 정규화된 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpPostedFile.FileName">
          <source>The name of the client's file, including the directory path.</source>
          <target state="translated">디렉터리 경로를 포함한 클라이언트 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpPostedFile.FileName">
          <source>The following code example demonstrates how to assign the name of an uploaded file (the first file in the file collection) to a string variable.</source>
          <target state="translated">다음 코드 예제에서는 문자열 변수에 업로드 된 파일 (파일 컬렉션의 첫 번째 파일)의 이름을 지정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Web.HttpPostedFile.InputStream">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that points to an uploaded file to prepare for reading the contents of the file.</source>
          <target state="translated">업로드된 파일의 콘텐츠를 읽기 위해 해당 파일을 가리키는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpPostedFile.InputStream">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> pointing to a file.</source>
          <target state="translated">파일을 가리키는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpPostedFile.InputStream">
          <source>The following code example shows how to read the contents of the first file in the client's file collection into a byte array, and then copy the byte array to a string.</source>
          <target state="translated">다음 코드 예제를 바이트 배열로 클라이언트의 파일 컬렉션의 첫 번째 파일의 내용을 읽고 이동한 다음 문자열로 바이트 배열에 복사 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.HttpPostedFile.SaveAs(System.String)">
          <source>The name of the saved file.</source>
          <target state="translated">저장된 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.HttpPostedFile.SaveAs(System.String)">
          <source>Saves the contents of an uploaded file.</source>
          <target state="translated">업로드된 파일의 콘텐츠를 저장합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpPostedFile.SaveAs(System.String)">
          <source>The maximum size allowed for a request, which includes uploaded files, is 4 MB, by default.</source>
          <target state="translated">업로드 된 파일을 포함 하는 요청에 대해 허용 되는 최대 크기는 4MB를 기본적으로 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpPostedFile.SaveAs(System.String)">
          <source>Maximum request size can be specified in the Machine.config or Web.config file in the <ph id="ph1">`maxRequestLength`</ph> attribute of the <bpt id="p1">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> element.</source>
          <target state="translated">Machine.config 또는 Web.config 파일에서 최대 요청 크기를 지정할 수는 <ph id="ph1">`maxRequestLength`</ph> 특성에는 <bpt id="p1">[</bpt>) (httpRuntime Element (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> 요소입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpPostedFile.SaveAs(System.String)">
          <source>The maximum request size for a specific page can be specified using the <bpt id="p1">[</bpt>location Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)</ept> element in a Web.config file.</source>
          <target state="translated">사용 하 여 특정 페이지에 대 한 최대 요청 크기를 지정할 수 있습니다는 <bpt id="p1">[</bpt>위치 요소 (ASP.NET 설정 스키마)<ept id="p1">](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)</ept> Web.config 파일의 요소입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpPostedFile.SaveAs(System.String)">
          <source>The following code example demonstrates how to save all the files that are uploaded by the client to the C:\TempFiles folder on the Web server's local disk.</source>
          <target state="translated">다음 코드 예제에서는 클라이언트 웹 서버의 로컬 디스크에 C:\TempFiles 폴더에 업로드 된 모든 파일을 저장 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.HttpPostedFile.SaveAs(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.Web.Configuration.HttpRuntimeSection" /&gt;</ph> object is set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>, but <ph id="ph4">&lt;paramref name="filename" /&gt;</ph> is not an absolute path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /&gt;</ph> 개체의 <ph id="ph2">&lt;see cref="T:System.Web.Configuration.HttpRuntimeSection" /&gt;</ph> 속성이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>로 설정되지만 <ph id="ph4">&lt;paramref name="filename" /&gt;</ph>이 절대 경로가 아닌 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>