<Type Name="HttpPostedFile" FullName="System.Web.HttpPostedFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e6339d4f17a51e73e895f0a60bee71bbef6ac47" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpPostedFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpPostedFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpPostedFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpPostedFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostedFile sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d2cd1-101">클라이언트에서 업로드한 개별 파일에 액세스할 수 있도록 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d2cd1-101">Provides access to individual files that have been uploaded by a client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2cd1-102"><xref:System.Web.HttpFileCollection> 클래스 파일 컬렉션으로 클라이언트에서 업로드 되는 모든 파일에 대 한 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-102">The <xref:System.Web.HttpFileCollection> class provides access to all the files that are uploaded from a client as a file collection.</span></span> <span data-ttu-id="d2cd1-103"><xref:System.Web.HttpPostedFile> 클래스 속성 및 개별 파일에 대 한 정보를 읽고 파일을 저장 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-103">The <xref:System.Web.HttpPostedFile> class provides properties and methods to get information about an individual file and to read and save the file.</span></span>  
  
 <span data-ttu-id="d2cd1-104"><xref:System.Web.UI.HtmlControls.HtmlInputFile> 선택 하 고 클라이언트에서 파일 업로드 컨트롤을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-104">The <xref:System.Web.UI.HtmlControls.HtmlInputFile> control can be used to select and upload files from a client.</span></span>  
  
 <span data-ttu-id="d2cd1-105">MIME 다중 파트/폼 데이터 형식으로 파일 업로드 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-105">Files are uploaded in MIME multipart/form-data format.</span></span> <span data-ttu-id="d2cd1-106">기본적으로 256KB 보다 큰 파일 업로드 및 양식 필드를 포함 하 여 모든 요청은 디스크에 버퍼링 하지 않고 서버 메모리에 보관 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-106">By default, all requests, including form fields and uploaded files, larger than 256 KB are buffered to disk, rather than held in server memory.</span></span>  
  
 <span data-ttu-id="d2cd1-107">에 액세스 하 여 허용 되는 최대 요청 크기를 지정할 수 있습니다는 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 속성 또는 설정 하 여는 `maxRequestLength` 특성에는 [) (httpRuntime Element (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) Machine.config 내의 요소 또는 Web.config 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-107">You can specify the maximum allowable request size by accessing the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> property or by setting the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element within the Machine.config or Web.config file.</span></span> <span data-ttu-id="d2cd1-108">기본값은 4MB입니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-108">The default is 4 MB.</span></span>  
  
 <span data-ttu-id="d2cd1-109">에 액세스 하 여 파일 업로드를 포함 하는 요청에 대 한 서버 메모리에 버퍼링 되는 데이터의 양을 지정할 수 있습니다는 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> 속성을 설정 하 여 또는 `requestLengthDiskThreshold` 특성의는 [) (httpRuntime Element (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) Machine.config 또는 Web.config 파일 내에서 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-109">The amount of data that is buffered in server memory for a request, which includes file uploads, can be specified by accessing the <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> property or by setting the `requestLengthDiskThreshold` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element within the Machine.config or Web.config file.</span></span>  
  
 <span data-ttu-id="d2cd1-110">조정 하 여는 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 및 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> 속성, 서버의 성능을 미세 조정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-110">By adjusting the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> and <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> properties, you can fine tune the performance of your server.</span></span> <span data-ttu-id="d2cd1-111">또한 설정 해야는 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 큰 파일 서버에 게시 하는 사용자로 인 한 서비스 공격의 거부 방지 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-111">Additionally, you should consider setting the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> to prevent denial of service attacks caused by users posting large files to the server.</span></span>  
  
 <span data-ttu-id="d2cd1-112">업로드 된 파일을 버퍼링 하는 데 할당 되는 서버 리소스는 요청이 끝날 때 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-112">Server resources that are allocated to buffer the uploaded file will be destroyed when the request ends.</span></span> <span data-ttu-id="d2cd1-113">사용 하 여 파일의 영구 복사본을 저장 하려면는 <xref:System.Web.HttpPostedFile.SaveAs%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-113">To save a durable copy of the file, use the <xref:System.Web.HttpPostedFile.SaveAs%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />
    <altmember cref="T:System.Web.HttpFileCollection" />
  </Docs>
  <Members>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2cd1-114">업로드된 파일의 크기(바이트)를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-114">Gets the size of an uploaded file, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2cd1-115">파일 길이(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-115">The file length, in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2cd1-116">클라이언트에서 보낸 파일의 MIME 콘텐츠 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-116">Gets the MIME content type of a file sent by a client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2cd1-117">업로드된 파일의 MIME 콘텐츠 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-117">The MIME content type of the uploaded file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2cd1-118">다음 코드 예제에서는 업로드 한 파일 컬렉션에 있는 모든 파일 반복 MIME 형식이 파일의 경우 작업을 수행 하는 방법을 보여 줍니다. `US-ASCII`합니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-118">The following code example shows how to loop through all the files in the uploaded file collection and take action when the MIME type of a file is `US-ASCII`.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.FileName" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2cd1-119">클라이언트에 있는 파일의 정규화된 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-119">Gets the fully qualified name of the file on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2cd1-120">디렉터리 경로를 포함한 클라이언트 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-120">The name of the client's file, including the directory path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2cd1-121">다음 코드 예제에서는 문자열 변수에 업로드 된 파일 (파일 컬렉션의 첫 번째 파일)의 이름을 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-121">The following code example demonstrates how to assign the name of an uploaded file (the first file in the file collection) to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d2cd1-122">업로드된 파일의 콘텐츠를 읽기 위해 해당 파일을 가리키는 <see cref="T:System.IO.Stream" /> 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-122">Gets a <see cref="T:System.IO.Stream" /> object that points to an uploaded file to prepare for reading the contents of the file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d2cd1-123">파일을 가리키는 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-123">A <see cref="T:System.IO.Stream" /> pointing to a file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d2cd1-124">다음 코드 예제를 바이트 배열로 클라이언트의 파일 컬렉션의 첫 번째 파일의 내용을 읽고 이동한 다음 문자열로 바이트 배열에 복사 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-124">The following code example shows how to read the contents of the first file in the client's file collection into a byte array, and then copy the byte array to a string.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpPostedFile.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="d2cd1-125">저장된 파일의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-125">The name of the saved file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d2cd1-126">업로드된 파일의 콘텐츠를 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-126">Saves the contents of an uploaded file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d2cd1-127">업로드 된 파일을 포함 하는 요청에 대해 허용 되는 최대 크기는 4MB를 기본적으로 됩니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-127">The maximum size allowed for a request, which includes uploaded files, is 4 MB, by default.</span></span> <span data-ttu-id="d2cd1-128">Machine.config 또는 Web.config 파일에서 최대 요청 크기를 지정할 수는 `maxRequestLength` 특성에는 [) (httpRuntime Element (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-128">Maximum request size can be specified in the Machine.config or Web.config file in the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element.</span></span> <span data-ttu-id="d2cd1-129">사용 하 여 특정 페이지에 대 한 최대 요청 크기를 지정할 수 있습니다는 [위치 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) Web.config 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-129">The maximum request size for a specific page can be specified using the [location Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) element in a Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d2cd1-130">다음 코드 예제에서는 클라이언트 웹 서버의 로컬 디스크에 C:\TempFiles 폴더에 업로드 된 모든 파일을 저장 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="d2cd1-130">The following code example demonstrates how to save all the files that are uploaded by the client to the C:\TempFiles folder on the Web server's local disk.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="d2cd1-131">
            <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> 개체의 <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> 속성이 <see langword="true" />로 설정되지만 <paramref name="filename" />이 절대 경로가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="d2cd1-131">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> object is set to <see langword="true" />, but <paramref name="filename" /> is not an absolute path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>