<Type Name="HttpApplicationStateBase" FullName="System.Web.HttpApplicationStateBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8cc296e129701b6299d4b5530e29218ba63110fe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574805" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpApplicationStateBase : System.Collections.Specialized.NameObjectCollectionBase, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpApplicationStateBase extends System.Collections.Specialized.NameObjectCollectionBase implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplicationStateBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpApplicationStateBase&#xA;Inherits NameObjectCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplicationStateBase abstract : System::Collections::Specialized::NameObjectCollectionBase, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HttpApplicationStateBase = class&#xA;    inherit NameObjectCollectionBase&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5ae82-101">ASP.NET 응용 프로그램 내의 여러 세션 및 요청에서 정보를 공유할 수 있도록 지원하는 클래스의 기본 클래스로 사용됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ae82-101">Serves as the base class for classes that enable information to be shared across multiple sessions and requests within an ASP.NET application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae82-102"><xref:System.Web.HttpApplicationStateBase> 클래스는 추상 클래스와 동일한 멤버를 포함 하는 <xref:System.Web.HttpApplicationState> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5ae82-102">The <xref:System.Web.HttpApplicationStateBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpApplicationState> class.</span></span> <span data-ttu-id="5ae82-103"><xref:System.Web.HttpApplicationStateBase> 클래스를 사용 하면 파생된는 클래스를 만들는 <xref:System.Web.HttpApplicationState> 클래스 같지만 ASP.NET 파이프라인 외부에서 작동 하 고 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5ae82-103">The <xref:System.Web.HttpApplicationStateBase> class lets you create derived classes that are like the <xref:System.Web.HttpApplicationState> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="5ae82-104">단위 테스트를 수행할 때 일반적으로 파생된 클래스를 사용 하 여 테스트 중인 시나리오를 충족 하는 사용자 지정 된 동작으로 멤버를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ae82-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="5ae82-105"><xref:System.Web.HttpApplicationStateWrapper> 클래스는 <xref:System.Web.HttpApplicationStateBase> 클래스에서 파생됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ae82-105">The <xref:System.Web.HttpApplicationStateWrapper> class derives from the <xref:System.Web.HttpApplicationStateBase> class.</span></span> <span data-ttu-id="5ae82-106"><xref:System.Web.HttpApplicationStateWrapper> 클래스에 대 한 래퍼로 사용은 <xref:System.Web.HttpApplicationState> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5ae82-106">The <xref:System.Web.HttpApplicationStateWrapper> class serves as a wrapper for the <xref:System.Web.HttpApplicationState> class.</span></span> <span data-ttu-id="5ae82-107">런타임 시 일반적으로의 인스턴스를 사용는 <xref:System.Web.HttpApplicationStateWrapper> 클래스의 멤버를 호출 하는 <xref:System.Web.HttpApplicationState> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5ae82-107">At run time, you typically use an instance of the <xref:System.Web.HttpApplicationStateWrapper> class to call members of the <xref:System.Web.HttpApplicationState> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpApplicationStateBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpApplicationStateBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-108">상속된 클래스 인스턴스에 사용할 수 있도록 클래스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-108">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="5ae82-109">이 생성자는 상속된 클래스에서만 호출될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-109">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="httpApplicationStateBase.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5ae82-110">컬렉션에 추가할 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-110">The name of the object to add to the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ae82-111">개체 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-111">The value of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-112">파생 클래스에서 재정의된 경우 새 개체를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-112">When overridden in a derived class, adds a new object to the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-113">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-113">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public virtual string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Web.HttpApplicationStateBase.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-114">파생 클래스에서 재정의된 경우 컬렉션의 개체에 대한 선택키를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-114">When overridden in a derived class, gets the access keys for the objects in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ae82-115">상태 개체 키의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-115">An array of state object keys.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-116">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-116">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="httpApplicationStateBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-117">파생된 클래스에서 재정의된 경우 컬렉션에서 모든 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-117">When overridden in a derived class, removes all objects from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-118">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-118">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Contents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Contents As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Contents { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.HttpApplicationStateBase" Usage="System.Web.HttpApplicationStateBase.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-119">파생 클래스에서 재정의하는 경우 <see cref="T:System.Web.HttpApplicationStateBase" /> 개체에 대한 참조를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-119">When overridden in a derived class, gets a reference to the <see cref="T:System.Web.HttpApplicationStateBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ae82-120">
            <see cref="T:System.Web.HttpApplicationState" /> 개체에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-120">A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae82-121">이 속성은 이전 버전 ASP와의 호환성을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5ae82-121">This property provides compatibility with earlier versions of ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-122">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-122">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="httpApplicationStateBase.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="5ae82-123">컬렉션에서 복사한 요소의 대상인 1차원 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-123">The one-dimensional array that is the destination for the elements that are copied from the collection.</span>
          </span>
          <span data-ttu-id="5ae82-124">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-124">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5ae82-125">
            <c>배열</c>에서 복사가 시작되는 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-125">The zero-based index in <c>array</c> at which to begin copying.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-126">파생 클래스에서 재정의된 경우 배열의 지정된 인덱스에서 시작하여 배열에 컬렉션의 요소를 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-126">When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-127">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-127">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.HttpApplicationStateBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-128">파생 클래스에서 재정의된 경우 이 컬렉션의 개체 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-128">When overridden in a derived class, gets the number of objects in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ae82-129">컬렉션의 개체 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-129">The number of objects in the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-130">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-130">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-131">파생 클래스에서 재정의되면 이름 또는 인덱스별로 상태 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-131">When overridden in a derived class, gets a state object by name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual object Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Get(int index);" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; obj&#xA;override this.Get : int -&gt; obj" Usage="httpApplicationStateBase.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5ae82-132">가져올 응용 프로그램 상태 개체의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-132">The index of the application state object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-133">파생 클래스에서 재정의된 경우 인덱스를 기준으로 상태 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-133">When overridden in a derived class, gets a state object by index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ae82-134">
            <paramref name="index" />으로 참조된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-134">The object referenced by <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-135">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-135">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual object Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; obj&#xA;override this.Get : string -&gt; obj" Usage="httpApplicationStateBase.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5ae82-136">가져올 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-136">The name of the object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-137">파생 클래스에서 재정의된 경우 이름을 기준으로 상태 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-137">When overridden in a derived class, gets a state object by name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ae82-138">
            <paramref name="name" />으로 참조된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-138">The object referenced by <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-139">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-139">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="httpApplicationStateBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-140">파생 클래스에서 재정의된 경우 컬렉션을 반복하는 데 사용할 수 있는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-140">When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ae82-141">컬렉션을 반복하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-141">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-142">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-142">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : int -&gt; string&#xA;override this.GetKey : int -&gt; string" Usage="httpApplicationStateBase.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5ae82-143">가져올 응용 프로그램 상태 개체의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-143">The index of the application state object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-144">파생 클래스에서 재정의된 경우 인덱스별로 상태 개체 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-144">When overridden in a derived class, gets the name of a state object by index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ae82-145">응용 프로그램 상태 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-145">The name of the application state object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-146">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-146">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.HttpApplicationStateBase.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-147">파생 클래스에서 재정의된 경우 컬렉션에 대한 액세스가 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-147">When overridden in a derived class, gets a value that indicates whether access to the collection is thread-safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ae82-148">액세스가 동기화되어 스레드로부터 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-148">
              <see langword="true" /> if access is synchronized (thread-safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-149">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-149">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-150">파생 클래스에서 재정의되면 이름 또는 인덱스별로 <see cref="T:System.Web.HttpApplicationState" /> 컬렉션에서 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-150">When overridden in a derived class, gets an object in an <see cref="T:System.Web.HttpApplicationState" /> collection by name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Web.HttpApplicationStateBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5ae82-151">컬렉션에 있는 개체의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-151">The index of the object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-152">파생 클래스에서 재정의된 경우 인덱스를 기준으로 상태 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-152">When overridden in a derived class, gets a state object by index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ae82-153">
            <paramref name="index" />으로 참조된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-153">The object referenced by <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-154">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-154">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.HttpApplicationStateBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5ae82-155">컬렉션에 있는 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-155">The name of the object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-156">파생 클래스에서 재정의된 경우 이름을 기준으로 상태 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-156">When overridden in a derived class, gets a state object by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ae82-157">
            <paramref name="name" />으로 참조된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-157">The object referenced by <paramref name="name" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-158">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-158">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public virtual void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lock();" />
      <MemberSignature Language="F#" Value="abstract member Lock : unit -&gt; unit&#xA;override this.Lock : unit -&gt; unit" Usage="httpApplicationStateBase.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-159">파생 클래스에서 재정의된 경우 동기화된 액세스를 사용할 수 있도록 컬렉션의 개체에 대한 액세스를 잠급니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-159">When overridden in a derived class, locks access to objects in the collection in order to enable synchronized access.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-160">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-160">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="httpApplicationStateBase.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5ae82-161">컬렉션에서 제거할 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-161">The name of the object to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-162">파생 클래스에서 재정의된 경우 컬렉션에서 명명된 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-162">When overridden in a derived class, removes the named object from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-163">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-163">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit&#xA;override this.RemoveAll : unit -&gt; unit" Usage="httpApplicationStateBase.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-164">파생된 클래스에서 재정의된 경우 컬렉션에서 모든 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-164">When overridden in a derived class, removes all objects from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-165">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-165">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="httpApplicationStateBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="5ae82-166">제거할 항목의 컬렉션 내 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-166">The position in the collection of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-167">파생 클래스에서 재정의된 경우 인덱스로 지정된 상태 개체를 컬렉션에서 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-167">When overridden in a derived class, removes a state object specified by index from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-168">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-168">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Set(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Set (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj -&gt; unit&#xA;override this.Set : string * obj -&gt; unit" Usage="httpApplicationStateBase.Set (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="5ae82-169">업데이트할 개체의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-169">The name of the object to update.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5ae82-170">개체의 업데이트된 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-170">The updated value of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ae82-171">파생 클래스에서 재정의된 경우 컬렉션에 있는 개체의 값을 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-171">When overridden in a derived class, updates the value of an object in the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-172">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-172">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpStaticObjectsCollectionBase StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollectionBase StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StaticObjects As HttpStaticObjectsCollectionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpStaticObjectsCollectionBase ^ StaticObjects { System::Web::HttpStaticObjectsCollectionBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollectionBase" Usage="System.Web.HttpApplicationStateBase.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollectionBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-173">파생 클래스에서 재정의되면 ASP.NET 응용 프로그램에서 범위가 "응용 프로그램"으로 설정된 <see langword="object" /> 요소에 의해 선언된 개체를 모두 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-173">When overridden in a derived class, gets all objects that are declared by an <see langword="object" /> element where the scope is set to "Application" in the ASP.NET application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ae82-174">응용 프로그램에 있는 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-174">A collection of objects in the application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae82-175">응용 프로그램 개체는 다음과 같은 구문 사용 하 여 요소 안의 Global.asax 파일에 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5ae82-175">Application objects are defined in the Global.asax file inside an element with syntax like the following:</span></span>  
  
 `<object runat="server" scope="Application">Object information</object>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-176">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-176">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.HttpApplicationStateBase.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-177">파생 클래스에서 재정의된 경우 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-177">When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ae82-178">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-178">An object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-179">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-179">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public virtual void UnLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.UnLock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnLock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnLock();" />
      <MemberSignature Language="F#" Value="abstract member UnLock : unit -&gt; unit&#xA;override this.UnLock : unit -&gt; unit" Usage="httpApplicationStateBase.UnLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ae82-180">파생 클래스에서 재정의된 경우 동기화된 액세스를 사용할 수 있도록 컬렉션의 개체에 대한 액세스를 잠금 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-180">When overridden in a derived class, unlocks access to objects in the collection to enable synchronized access.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="5ae82-181">항상</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ae82-181">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>