<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IHttpHandler.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac598b2f8e81292b161daf8dee4c4562f466a977207.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98b2f8e81292b161daf8dee4c4562f466a977207</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.IHttpHandler">
          <source>Defines the contract that ASP.NET implements to synchronously process HTTP Web requests using custom HTTP handlers.</source>
          <target state="translated">ASP.NET 구현에서 사용자 지정 HTTP 처리기를 사용하여 동시에 HTTP 웹 요청을 처리하는 규약을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.IHttpHandler">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any Common Language Specification (CLS) compliant language.</source>
          <target state="translated">특정, 미리 정의 된 유형의 모든 공용 언어 사양 (CLS) 호환 언어에서 HTTP 요청을 처리 하는 사용자 지정 HTTP 처리기를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.IHttpHandler">
          <source>Executable code defined in the <ph id="ph1">`HttpHandler`</ph> classes, rather than conventional ASP or ASP.NET Web pages, responds to these specific requests.</source>
          <target state="translated">에 정의 된 실행 코드는 <ph id="ph1">`HttpHandler`</ph> 이러한 특정 요청에 응답을 기본 ASP 또는 ASP.NET 웹 페이지 보다는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.IHttpHandler">
          <source>HTTP handlers give you a means of interacting with the low-level request and response services of the IIS Web server and provide functionality much like ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">HTTP 처리기 저수준 요청 및 응답 서비스는 IIS 웹 서버와 상호 작용 하는 방법을 제공 하 고 간단한 프로그래밍 모델을 사용 하면서 ISAPI 확장 비슷한는 많은 기능을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.IHttpHandler">
          <source>If your handler will access session state values, it must implement the <ph id="ph1">&lt;xref:System.Web.SessionState.IRequiresSessionState&gt;</ph> interface (a marker interface with no methods).</source>
          <target state="translated">처리기에 세션 상태 값을 액세스 하는 경우 구현 해야 합니다는 <ph id="ph1">&lt;xref:System.Web.SessionState.IRequiresSessionState&gt;</ph> 인터페이스 (메서드가 없는 표식 인터페이스).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Web.IHttpHandler.IsReusable">
          <source>Gets a value indicating whether another request can use the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> instance.</source>
          <target state="translated">다른 요청에서 <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 인스턴스를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.IHttpHandler.IsReusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> instance is reusable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 인스턴스를 다시 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.IHttpHandler.IsReusable">
          <source>You explicitly set the <ph id="ph1">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph> by code you provide that overrides the <ph id="ph4">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> property accessor (getter).</source>
          <target state="translated">명시적으로 설정 된 <ph id="ph1">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 또는 <ph id="ph3">`false`</ph> 코드로 제공한를 재정의 하는 <ph id="ph4">&lt;xref:System.Web.IHttpHandler.IsReusable%2A&gt;</ph> 속성 접근자 (getter).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.IHttpHandler.IsReusable">
          <source>The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx.</source>
          <target state="translated">다음 코드 예제는 4 개 줄의 텍스트 handler.aspx 라는 페이지에 대 한 클라이언트 요청에 대 한 응답으로 HTTP 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.IHttpHandler.IsReusable">
          <source>All requests for handler.aspx are serviced by the <ph id="ph1">`MyHttpHandler`</ph> class in the namespace <ph id="ph2">`HandlerExample`</ph> contained in the assembly HandlerTest.dll.</source>
          <target state="translated">Handler.aspx에 대 한 모든 요청에서 처리는 <ph id="ph1">`MyHttpHandler`</ph> 네임 스페이스의 클래스 <ph id="ph2">`HandlerExample`</ph> HandlerTest.dll 어셈블리에 포함 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object that provides references to the intrinsic server objects (for example, <ph id="ph2">&lt;see langword="Request" /&gt;</ph>, <ph id="ph3">&lt;see langword="Response" /&gt;</ph>, <ph id="ph4">&lt;see langword="Session" /&gt;</ph>, and <ph id="ph5">&lt;see langword="Server" /&gt;</ph>) used to service HTTP requests.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="Request" /&gt;</ph>, <ph id="ph3">&lt;see langword="Response" /&gt;</ph>, <ph id="ph4">&lt;see langword="Session" /&gt;</ph>, <ph id="ph5">&lt;see langword="Server" /&gt;</ph> 등과 같이 HTTP 요청을 처리하는 데 사용되는 내장 서버 개체에 대한 참조를 제공하는 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>Enables processing of HTTP Web requests by a custom <ph id="ph1">&lt;see langword="HttpHandler" /&gt;</ph> that implements the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 인터페이스를 구현하는 사용자 지정 <ph id="ph1">&lt;see langword="HttpHandler" /&gt;</ph>를 사용하여 HTTP 웹 요청을 처리할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>Place your custom <ph id="ph1">`HttpHandler`</ph> code in the <ph id="ph2">&lt;xref:System.Web.IHttpHandler.ProcessRequest%2A&gt;</ph> virtual method, as shown in the following example.</source>
          <target state="translated">사용자 지정 배치 <ph id="ph1">`HttpHandler`</ph> 의 코드는 <ph id="ph2">&lt;xref:System.Web.IHttpHandler.ProcessRequest%2A&gt;</ph> 가상 메서드를 다음 예제에서와 같이 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx.</source>
          <target state="translated">다음 코드 예제는 4 개 줄의 텍스트 handler.aspx 라는 페이지에 대 한 클라이언트 요청에 대 한 응답으로 HTTP 출력 스트림에 씁니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)">
          <source>All requests for handler.aspx are serviced by the <ph id="ph1">`MyHttpHandler`</ph> class in the namespace <ph id="ph2">`HandlerExample`</ph> contained in the assembly HandlerTest.dll.</source>
          <target state="translated">Handler.aspx에 대 한 모든 요청에서 처리는 <ph id="ph1">`MyHttpHandler`</ph> 네임 스페이스의 클래스 <ph id="ph2">`HandlerExample`</ph> HandlerTest.dll 어셈블리에 포함 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>