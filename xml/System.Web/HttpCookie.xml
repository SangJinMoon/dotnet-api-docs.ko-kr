<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0f84732aaf9f6964e3f3fb0da75cd5d0940abc7" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31043594" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookie" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookie sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80e4a-101">개별 HTTP 쿠키를 만들고 조작할 수 있는 형식이 안전한 방법을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80e4a-101">Provides a type-safe way to create and manipulate individual HTTP cookies.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e4a-102"><xref:System.Web.HttpCookie> 클래스 가져오고 개별 쿠키의 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-102">The <xref:System.Web.HttpCookie> class gets and sets properties of individual cookies.</span></span> <span data-ttu-id="80e4a-103"><xref:System.Web.HttpCookieCollection> 클래스 저장, 검색 및 여러 쿠키를 관리 하는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-103">The <xref:System.Web.HttpCookieCollection> class provides methods to store, retrieve, and manage multiple cookies.</span></span>  
  
 <span data-ttu-id="80e4a-104">ASP.NET 두 내장 쿠키 컬렉션을 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-104">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="80e4a-105">통해 액세스할 수 있는 컬렉션은 <xref:System.Web.HttpRequest.Cookies%2A> 의 컬렉션은 <xref:System.Web.HttpRequest> 개체에는 서버에 클라이언트에서 전송 되는 쿠키가 포함 되어는 `Cookie` 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-105">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of the <xref:System.Web.HttpRequest> object contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="80e4a-106">통해 액세스할 수 있는 컬렉션의 <xref:System.Web.HttpResponse.Cookies%2A> 의 컬렉션은 <xref:System.Web.HttpResponse> 서버에 만든 및 클라이언트에 전송 된 새 쿠키를 포함 하는 개체는 `Set-Cookie` HTTP 응답 헤더입니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-106">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of the <xref:System.Web.HttpResponse> object contains new cookies created on the server and transmitted to the client in the `Set-Cookie` HTTP response header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80e4a-107">다음 코드 예제에서는 명명 된 쿠키를 검사 하는 방법을 보여 줍니다 `DateCookieExample` 에 <xref:System.Web.HttpRequest> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-107">The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object.</span></span> <span data-ttu-id="80e4a-108">쿠키가 발견 되지 않으면 생성 되며에 추가 된 <xref:System.Web.HttpResponse> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-108">If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object.</span></span> <span data-ttu-id="80e4a-109">쿠키는 10 분 후에 만료 되도록 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-109">The cookie is set to expire in 10 minutes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-110">
            <see cref="T:System.Web.HttpCookie" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-110">Initializes a new instance of the <see cref="T:System.Web.HttpCookie" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="80e4a-111">새 쿠키 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-111">The name of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80e4a-112">새 쿠키를 만들고 이름을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-112">Creates and names a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80e4a-113">다음 코드 예제를 만들고 새 쿠키 이름을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-113">The following code example creates and names a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name, System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="80e4a-114">새 쿠키 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-114">The name of the new cookie.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="80e4a-115">새 쿠키 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-115">The value of the new cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80e4a-116">새 쿠키를 만들어 이름을 지정하고 값을 할당합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-116">Creates, names, and assigns a value to a new cookie.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80e4a-117">다음 코드 예제를 만들어 이름을 하 고 새 쿠키의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-117">The following code example creates, names, and sets the value of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-118">쿠키를 연결할 도메인을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-118">Gets or sets the domain to associate the cookie with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-119">쿠키를 연결할 도메인의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-119">The name of the domain to associate the cookie with.</span>
          </span>
          <span data-ttu-id="80e4a-120">기본값은 현재 도메인입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-120">The default value is the current domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e4a-121">설정의 `Domain` 특성 전송 하도록 해당 도메인에서 리소스를 요청 하는 클라이언트에 쿠키를 제한 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-121">Setting the `Domain` attribute limits transmission of the cookie to clients requesting a resource from that domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80e4a-122">다음 코드 예제에서는 쿠키의 도메인을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-122">The following code example sets the cookie's domain.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Domain Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Expires { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-123">쿠키의 만료 날짜 및 시간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-123">Gets or sets the expiration date and time for the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-124">클라이언트에서 쿠키가 만료되는 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-124">The time of day (on the client) at which the cookie expires.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80e4a-125">다음 코드 예제에서는 현재 시간에서 10 분으로 쿠키의 만료 시간을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-125">The following code example sets the expiration time of the cookie to 10 minutes from the current time.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Expires Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-126">쿠키에 하위 키가 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-126">Gets a value indicating whether a cookie has subkeys.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-127">쿠키에 하위 키가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-127">
              <see langword="true" /> if the cookie has subkeys, otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80e4a-128">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80e4a-129">다음 코드 예제에서는 여러 값에 대 한 쿠키 컬렉션의 각 멤버를 검사합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-129">The following code example examines each member of a cookie collection for multiple values.</span></span> <span data-ttu-id="80e4a-130">쿠키의 경우 <xref:System.Web.HttpCookie.HasKeys%2A> 속성은 `true`를 나타내는 여러 값이 있으면,이 예제에서는 하나의 문자열 배열 및 다른 문자열 배열에 해당 값으로 값 이름을 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-130">If a cookie's <xref:System.Web.HttpCookie.HasKeys%2A> property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array.</span></span> <span data-ttu-id="80e4a-131">쿠키에 대 한 여러 값을 만드는 방법의 예제를 보려면 <xref:System.Web.HttpCookie.Values%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-131">For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-132">클라이언트측 스크립트를 사용하여 쿠키에 액세스할 수 있는지 여부를 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-132">Gets or sets a value that specifies whether a cookie is accessible by client-side script.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-133">쿠키에 <see langword="true" /> 특성이 있어 클라이언트측 스크립트를 통해 쿠키에 액세스할 수 없으면 <see langword="HttpOnly" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-133">
              <see langword="true" /> if the cookie has the <see langword="HttpOnly" /> attribute and cannot be accessed through a client-side script; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80e4a-134">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-134">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e4a-135">Microsoft Internet Explorer 버전 6 서비스 팩 1 이상 쿠키 속성을 지원 <xref:System.Web.HttpCookie.HttpOnly%2A>, 쿠키 도난 교차 사이트 스크립팅 위협을 줄이는 데 사용할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-135">Microsoft Internet Explorer version 6 Service Pack 1 and later supports a cookie property, <xref:System.Web.HttpCookie.HttpOnly%2A>, that can help mitigate cross-site scripting threats that result in stolen cookies.</span></span> <span data-ttu-id="80e4a-136">쿠키 도난된 ASP.NET 세션 ID 또는 폼 인증 티켓, 등 사이트에 사용자를 식별 하는 중요 한 정보를 포함할 수 있습니다 및 사용자 알아내는 또는 중요 한 정보를 얻기 위해 공격자에 의해 재생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-136">Stolen cookies can contain sensitive information identifying the user to the site, such as the ASP.NET session ID or forms authentication ticket, and can be replayed by the attacker in order to masquerade as the user or obtain sensitive information.</span></span> <span data-ttu-id="80e4a-137">경우는 `HttpOnly` 규격 브라우저에서 쿠키를 받으면, 클라이언트 쪽 스크립트에 액세스할 수 없는 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-137">When an `HttpOnly` cookie is received by a compliant browser, it is inaccessible to client-side script.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="80e4a-138">설정의 <xref:System.Web.HttpCookie.HttpOnly%2A> 속성을 `true` 때도 액세스할 수 있는 경우 공격자가 네트워크 채널에 쿠키를 직접 액세스 하지 못하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-138">Setting the <xref:System.Web.HttpCookie.HttpOnly%2A> property to `true` does not prevent an attacker with access to the network channel from accessing the cookie directly.</span></span> <span data-ttu-id="80e4a-139">Secure Sockets Layer (SSL)를 사용 하 여이 방지할 수 있도록 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-139">Consider using Secure Sockets Layer (SSL) to help protect against this.</span></span> <span data-ttu-id="80e4a-140">워크스테이션 보안은 악의적인 사용자 수를 사용 하 여 열려 있는 브라우저 창이 나 영구 쿠키를 포함 하는 컴퓨터 사용자의 id 가진 웹 사이트에 대 한 액세스 권한을 얻을도 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-140">Workstation security is also important, as a malicious user could use an open browser window or a computer containing persistent cookies to obtain access to a Web site with a legitimate user's identity.</span></span>  
  
 <span data-ttu-id="80e4a-141">이 속성의 활용 방법 완화 및 가능한 공격에 대 한 자세한 내용은 참조 하십시오. [완화 하는 방법을 교차 사이트 스크립팅 쿠키와 함께 HTTP 전용](http://go.microsoft.com/fwlink/?LinkId=41580)합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-141">For more information on possible attacks and how this property can help mitigate them, see [Mitigating Cross-site Scripting With HTTP-only Cookies](http://go.microsoft.com/fwlink/?LinkId=41580).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80e4a-142">다음 코드 예제에서는 작성 하는 방법을 보여 줍니다.는 `HttpOnly` 쿠키 ECMAScript 통해 클라이언트에서 액세스할 수 없다는 것을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-142">The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.</span></span>  
  
 [!code-aspx-csharp[HttpOnlyCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-aspx-vb[HttpOnlyCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="80e4a-143">쿠키 값의 키(인덱스)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-143">The key (index) of the cookie value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80e4a-144">
            <see cref="P:System.Web.HttpCookie.Values" /> 속성에 대한 바로 가기를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-144">Gets a shortcut to the <see cref="P:System.Web.HttpCookie.Values" /> property.</span>
          </span>
          <span data-ttu-id="80e4a-145">이 속성은 이전 버전의 ASP(Active Server Pages)와의 호환성을 위해 제공됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-145">This property is provided for compatibility with previous versions of Active Server Pages (ASP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-146">쿠키 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-146">The cookie value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-147">쿠키의 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-147">Gets or sets the name of a cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-148">생성자에서 별도로 지정하지 않는 경우 기본값은 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-148">The default value is a null reference (<see langword="Nothing" /> in Visual Basic) unless the constructor specifies otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80e4a-149">다음 코드 예제에서는 클라이언트에서 쿠키 컬렉션을 받고는 `Cookie` 머리글과 특정 이름 가진 쿠키를 찾기 위해 컬렉션을 반복 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-149">The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Name Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-150">현재 쿠키와 함께 전송할 가상 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-150">Gets or sets the virtual path to transmit with the current cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-151">해당 쿠키와 함께 전송할 가상 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-151">The virtual path to transmit with the cookie.</span>
          </span>
          <span data-ttu-id="80e4a-152">기본값은 서버 루트인 <see langword="/" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-152">The default is <see langword="/" />, which is the server root.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e4a-153"><xref:System.Web.HttpCookie.Path%2A> 속성 확장은 <xref:System.Web.HttpCookie.Domain%2A> 속성을 완전히 쿠키가 적용 되는 특정 URL에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-153">The <xref:System.Web.HttpCookie.Path%2A> property extends the <xref:System.Web.HttpCookie.Domain%2A> property to completely describe the specific URL to which the cookie applies.</span></span> <span data-ttu-id="80e4a-154">예를 들어 URL http:/ www.microsoft.com/asp 도메인은 www.microsoft.com 및 경로 /asp 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-154">For example, in the URL http:/www.microsoft.com/asp, the domain is www.microsoft.com and the path is /asp.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80e4a-155">다음 코드 예제에서는 <xref:System.Web.HttpCookie.Path%2A> 새 쿠키의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-155">The following code example sets the <xref:System.Web.HttpCookie.Path%2A> property of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Path Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="SameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode SameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode SameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.SameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property SameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode SameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-156">쿠키의 SameSite 특성에 대한 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-156">Gets or sets the value for the SameSite attribute of the cookie.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-157">쿠키의 적용 모드를 나타내는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-157">One of the enumeration values that represents the enforcement mode of the cookie.</span>
          </span>
          <span data-ttu-id="80e4a-158">응용 프로그램의 대상이 .NET Framework 버전 4.7.2 이상인 경우에는 기본값이 <see cref="F:System.Web.SameSiteMode.Lax" />이고, 그렇지 않으면 기본값이 <see cref="F:System.Web.SameSiteMode.None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-158">If the application targets the .NET Framework 4.7.2 or later versions, the default value is <see cref="F:System.Web.SameSiteMode.Lax" />; otherwise, the default value is <see cref="F:System.Web.SameSiteMode.None" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberSignature Language="VB.NET" Value="Public Property Secure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Secure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-159">SSL(Secure Sockets Layer)을 사용하여 쿠키를 전송할지, 즉 HTTPS로만 쿠키를 전송할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-159">Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-160">SSL 연결(HTTPS)을 통해 쿠키를 전송하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-160">
              <see langword="true" /> to transmit the cookie over an SSL connection (HTTPS); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80e4a-161">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e4a-162">전체 응용 프로그램에 대 한 SSL을 사용 하 여 쿠키를 전송으로 설정 하려면 응용 프로그램의 구성 파일, 응용 프로그램의 루트 디렉터리에 있는 Web.config에에서 사용 하도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-162">To set the transmission of cookies using SSL for an entire application, enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="80e4a-163">자세한 내용은 참조 [없기 요소 (ASP.NET 설정 스키마)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f)합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-163">For more information, see [httpCookies Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span></span> <span data-ttu-id="80e4a-164">값이 사용 하 여 프로그래밍 방식으로 설정 된 <xref:System.Web.HttpCookie.Secure%2A> 속성 Web.config 파일에서 설정 값을 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-164">Values set programmatically using the <xref:System.Web.HttpCookie.Secure%2A> property override values set in the Web.config file.</span></span>  
  
 <span data-ttu-id="80e4a-165">중요 한 정보를 처리할 때 SSL 암호화 된 HTTPS 프로토콜을 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-165">When dealing with sensitive information, it is strongly recommended that you use HTTPS protocol with SSL encryption.</span></span> <span data-ttu-id="80e4a-166">SSL 방지 변경할 데이터 (데이터 무결성), 사용자의 id (기밀)를 보호 하며 데이터가 예상된 된 클라이언트 (인증)에서 발생 하는 사용 하 여 특정 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-166">SSL protects against data being altered (data integrity), protects a user's identity (confidentiality), and assures that data originates from the expected client (authentication).</span></span> <span data-ttu-id="80e4a-167">암호화의 이점에 자세한 내용은 참조 [암호화 서비스](~/docs/standard/security/cryptographic-services.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-167">For more information on the benefits of encryption, see [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="80e4a-168">인터넷 정보 서비스 (IIS) 웹 서버에서 SSL을 구성 하는 방법에 대 한 자세한 내용은 참조 [웹 서버 또는 웹 사이트에 대 한 SSL 구성](http://go.microsoft.com/fwlink/?LinkId=38553)합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-168">For more information about configuring SSL on an Internet Information Services (IIS) Web server, see [Configuring SSL on a Web Server or a Web Site](http://go.microsoft.com/fwlink/?LinkId=38553).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80e4a-169">다음 코드 예제에서는 쿠키 SSL을 사용 하 여 전송으로 설정 된 경우 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-169">The following code example takes action if the cookie is set to transmit using SSL.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Secure Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberSignature Language="VB.NET" Value="Public Property Shareable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shareable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-170">쿠키가 출력 캐시에 포함될 수 있는지 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-170">Determines whether the cookie is allowed to participate in output caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-171">아웃바운드 쿠키가 하나 이상 포함된 주어진 <see cref="T:System.Web.HttpResponse" />에 대해 출력 캐시가 표시되지 않도록 지정하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-171">
              <see langword="true" /> to specify that output caching will not be suppressed for a give <see cref="T:System.Web.HttpResponse" /> containing one or more outbound cookies; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80e4a-172">경우는 주어진 <xref:System.Web.HttpResponse> 와 하나 이상의 아웃 바운드 쿠키가 들어 <xref:System.Web.HttpCookie.Shareable%2A> 로 설정 되어 `false` (기본값), 출력 캐싱 응답에 대 한 보류 됩니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-172">If a given <xref:System.Web.HttpResponse> contains one or more outbound cookies with <xref:System.Web.HttpCookie.Shareable%2A> is set to `false` (the default value), output caching will be suppressed for the response.</span></span> <span data-ttu-id="80e4a-173">이 응답에 캐시 되 고 여러 클라이언트에 전송 되 고 잠재적으로 중요 한 정보를 포함 하는 쿠키를 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-173">This prevents cookies that contain potentially sensitive information from being cached in the response and sent to multiple clients.</span></span>  <span data-ttu-id="80e4a-174">쿠키 캐시를 포함 하는 응답을 허용 하려면 일반적으로 사용 하는 등 응답에 대 한 캐싱을 구성는 `OutputCache` 지시문 또는 MVC의 [OutputCache] 특성을 할 모든 아웃 바운드 쿠키 설정 <xref:System.Web.HttpCookie.Shareable%2A> 로 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-174">To allow a response containing cookies to be cached, configure caching normally for the response, such as using the `OutputCache` directive or MVC's [OutputCache] attribute, and set all outbound cookies to have <xref:System.Web.HttpCookie.Shareable%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out System.Web.HttpCookie result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Web.HttpCookie&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.TryParse(System.String,System.Web.HttpCookie@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As HttpCookie) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] System::Web::HttpCookie ^ % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="result" Type="System.Web.HttpCookie&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="80e4a-175">쿠키의 문자열 표현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-175">The string representation of a cookie.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="80e4a-176">변환에 성공한 경우 <paramref name="input" />에 포함된 쿠키에 해당하는 <see cref="T:System.Web.HttpCookie" /> 값을 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-176">If the conversion succeeded, contains the <see cref="T:System.Web.HttpCookie" /> value equivalent to the cookie contained in <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="80e4a-177">변환에 실패한 경우에는 <paramref name="result" />가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-177">If the conversion failed, <paramref name="result" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="80e4a-178">
            <paramref name="input" /> 매개 변수가 <see langword="null" /> 또는 비어 있거나 <paramref name="input" />에서 쿠키 이름을 확인할 수 없는 경우 변환에 실패합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-178">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or empty or if a cookie name can't be determined from <paramref name="input" />.</span>
          </span>
          <span data-ttu-id="80e4a-179">이 매개 변수의 값을 메서드로 덮어씁니다. 매개 변수는 참조로 전달되고 메서드가 입력되면 null로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-179">This parameter's value is overwritten by the method; the parameter is passed by reference and set to null as soon as the method is entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80e4a-180">쿠키에 대한 지정된 문자열 표현을 해당 <see cref="T:System.Web.HttpCookie" /> 요소로 변환하고, 변환에 성공했는지를 나타내는 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-180">Converts the specified string representation of a cookie into its <see cref="T:System.Web.HttpCookie" /> equivalent and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80e4a-181">
            <see langword="true" />가 성공적으로 변환되었으면 <paramref name="input" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-181">
              <see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-182">개별 쿠키 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-182">Gets or sets an individual cookie value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-183">쿠키의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-183">The value of the cookie.</span>
          </span>
          <span data-ttu-id="80e4a-184">기본값은 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-184">The default value is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80e4a-185">다음 코드 예제에서는 "abc123"를 기존 쿠키의 값을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-185">The following code example sets the value of an existing cookie to "abc123".</span></span>  
  
 [!code-csharp[Classic HttpCookie.Value Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Values { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80e4a-186">쿠키 개체 하나에 들어 있는 키/값 쌍의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-186">Gets a collection of key/value pairs that are contained within a single cookie object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80e4a-187">쿠키 값의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80e4a-187">A collection of cookie values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80e4a-188">다음 코드 예제에서는 새 쿠키를 만들고 여러 값을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-188">The following code example creates a new cookie and adds several values to it.</span></span> <span data-ttu-id="80e4a-189">쿠키를 두 개에서 여러 값을 추출 하는 방법의 예제를 보려면 <xref:System.Web.HttpCookie.HasKeys%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="80e4a-189">For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Values Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
  </Members>
</Type>