<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpServerUtility.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5af79683dbebba2bc232c66a7a70dd0748a5935a9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af79683dbebba2bc232c66a7a70dd0748a5935a9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Provides helper methods for processing Web requests.</source>
          <target state="translated">웹 요청을 처리하기 위한 도우미 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class are exposed through the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Server%2A&gt;</ph> object provided by ASP.NET.</source>
          <target state="translated">메서드 및 속성의는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 클래스가 내장 함수를 통해 노출 됩니다 <ph id="ph2">&lt;xref:System.Web.HttpContext.Server%2A&gt;</ph> ASP.NET에서 제공 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>A Visual Studio Web site project with source code is available to accompany this topic: <bpt id="p1">[</bpt>Download<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=192870)</ept>.</source>
          <target state="translated">소스 코드를 Visual Studio 웹 사이트 프로젝트는이 항목에 수반: <bpt id="p1">[</bpt>다운로드<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=192870)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> 메서드를 사용 하면 모든 사용자가 제공한 문자열 실행 스크립트 또는 HTML 요소 대신 브라우저에서 정적 텍스트로 렌더링을 입력 하 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> method encodes URLs so that they are correctly transmitted in the HTTP stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> 메서드 HTTP 스트림에 올바르게 전송 되도록 Url을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.ClearError">
          <source>Clears the previous exception.</source>
          <target state="translated">이전 예외를 지웁니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.ClearError">
          <source>The following example clears the last exception that was thrown.</source>
          <target state="translated">다음 예제에서는 throw 된 마지막 예외를 지웁니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Creates a server instance of a COM object.</source>
          <target state="translated">COM 개체의 서버 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>The class or type of object to create an instance of.</source>
          <target state="translated">인스턴스를 만들 개체의 클래스 또는 형식입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</source>
          <target state="translated">개체의 ProgID(프로그램 식별자)로 식별되는 COM 개체의 서버 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>The new object.</source>
          <target state="translated">새 개체입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>The following example creates an object by using the object's ProgID.</source>
          <target state="translated">다음 예제에서는 개체의 ProgID를 사용 하 여 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>An instance of the object could not be created.</source>
          <target state="translated">개체의 인스턴스를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the object to create.</source>
          <target state="translated">만들 개체를 나타내는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.Type)">
          <source>Creates a server instance of a COM object identified by the object's type.</source>
          <target state="translated">개체의 형식으로 식별되는 COM 개체의 서버 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.Type)">
          <source>The new object.</source>
          <target state="translated">새 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>The class identifier of the object to create an instance of.</source>
          <target state="translated">인스턴스를 만들 개체의 클래스 식별자입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>Creates a server instance of a COM object identified by the object's class identifier (CLSID).</source>
          <target state="translated">개체의 CLSID(클래스 식별자)로 식별되는 COM 개체의 서버 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>The new object.</source>
          <target state="translated">새 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A&gt;</ph> method to create a server instance of a COM object.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A&gt;</ph> 메서드는 COM 개체의 서버 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>An instance of the object could not be created.</source>
          <target state="translated">개체의 인스턴스를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Executes the handler for a specified resource in the context of the current request and returns execution to the page that invoked it.</source>
          <target state="translated">현재 요청의 컨텍스트에서 지정된 리소스에 대한 처리기를 실행하고 요청을 호출한 페이지로 실행 제어를 반환합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The URL path to execute.</source>
          <target state="translated">실행할 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">현재 요청의 컨텍스트에서 지정된 가상 경로에 대한 처리기를 실행합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original page after execution of the new page is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드 새 페이지의 실행이 완료 된 후 원래 페이지의 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 무조건 메서드를 다른 처리기 실행을 이동 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET에서 현재 사용자가 제공한 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET으로 표시 하는 처리기를 직접 호출 원래 리소스 처리기가 호출 되기 전에 ASP.NET 권한 부여 및 인증 논리가 실행는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드 및 새 인증 및 권한 부여 논리를 실행 하지 않습니다 리소스입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">응용 프로그램의 보안 정책에 따라 클라이언트가 리소스에 액세스할 수 있는 적절 한 권한의 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 가지도록 수는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 브라우저에서 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">이 페이지는 시스템에 들어오는 새 요청 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">사용자에 게 사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> 메서드는 응용 프로그램 호출 하기 전에 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The following example displays the .aspx page "Updateinfo.aspx" in the current directory.</source>
          <target state="translated">다음 예제에서는 현재 디렉터리에서.aspx 페이지 ""를 표시합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>Program execution returns to the starting page after the Updateinfo.aspx page is displayed.</source>
          <target state="translated">프로그램 실행 Updateinfo.aspx 페이지가 표시 된 후 시작 페이지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 처리기를 실행하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 가상 경로가 아닙니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>The URL path to execute.</source>
          <target state="translated">실행할 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지우려면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated">현재 요청의 컨텍스트에서 지정된 가상 경로에 대한 처리기를 실행하고 <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지울지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>The following example shows how to execute the .aspx page <ph id="ph1">`Updateinfo.aspx`</ph> in the current request and preserve the <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> collections.</source>
          <target state="translated">다음 예제에서는.aspx 페이지를 실행 하는 방법을 보여 줍니다. <ph id="ph1">`Updateinfo.aspx`</ph> preserve 고 현재 요청에서는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>Program execution returns to the starting page after <ph id="ph1">`Updateinfo.aspx`</ph> is displayed.</source>
          <target state="translated">프로그램 실행 후 시작 페이지로 돌아가면 <ph id="ph1">`Updateinfo.aspx`</ph> 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 처리기를 실행하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 가상 경로가 아닙니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The URL path to execute.</source>
          <target state="translated">실행할 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to capture the output.</source>
          <target state="translated">출력을 캡처할 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">현재 요청의 컨텍스트에서 지정된 가상 경로에 대한 처리기를 실행합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> captures output from the executed handler.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>는 실행된 처리기에서 출력을 캡처합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original request after execution of the virtual path specified is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드 지정 된 가상 경로 실행이 완료 된 후 원래 요청의 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 무조건 메서드를 다른 처리기 실행을 이동 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET에서 현재 사용자가 제공한 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET으로 표시 하는 처리기를 직접 호출 원래 리소스 처리기가 호출 되기 전에 ASP.NET 권한 부여 및 인증 논리가 실행는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드 및 새 인증 및 권한 부여 논리를 실행 하지 않습니다 리소스입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">응용 프로그램의 보안 정책에 따라 클라이언트가 리소스에 액세스할 수 있는 적절 한 권한의 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 가지도록 수는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 브라우저에서 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">이 페이지는 시스템에 들어오는 새 요청 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">사용자에 게 사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> 메서드는 응용 프로그램 호출 하기 전에 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The following example executes the <ph id="ph1">`Login.aspx`</ph> page on the server in the current directory and receives the output from the page through the <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> object <ph id="ph3">`writer`</ph>.</source>
          <target state="translated">다음 예제에서는 실행 된 <ph id="ph1">`Login.aspx`</ph> 현재 디렉터리에 서버에서 페이지를 통해 페이지에서 출력을 받는 <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> 개체 <ph id="ph3">`writer`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>It writes the HTML stream received from <ph id="ph1">`writer`</ph> to the HTTP output stream.</source>
          <target state="translated">받은 HTML 스트림에 기록 <ph id="ph1">`writer`</ph> http 출력 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 처리기를 실행하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 가상 경로가 아닙니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The URL path to execute.</source>
          <target state="translated">실행할 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to capture the output.</source>
          <target state="translated">출력을 캡처할 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지우려면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">현재 요청의 컨텍스트에서 지정된 가상 경로에 대한 처리기를 실행합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> captures output from the page and a Boolean parameter specifies whether to clear the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>는 페이지에서 출력을 캡처하며 부울 매개 변수는 <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지울지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original request after execution of the specified virtual path is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드 지정된 된 가상 경로 실행이 완료 된 후 원래 요청의 실행을 계속 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 무조건 메서드를 다른 처리기 실행을 이동 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET에서 현재 사용자가 제공한 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET으로 표시 하는 처리기를 직접 호출 원래 리소스 처리기가 호출 되기 전에 ASP.NET 권한 부여 및 인증 논리가 실행는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드 및 새 인증 및 권한 부여 논리를 실행 하지 않습니다 리소스입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">응용 프로그램의 보안 정책에 따라 클라이언트가 리소스에 액세스할 수 있는 적절 한 권한의 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 가지도록 수는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 브라우저에서 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">이 페이지는 시스템에 들어오는 새 요청 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">사용자에 게 사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> 메서드는 응용 프로그램 호출 하기 전에 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The following example executes the <ph id="ph1">`Login.aspx`</ph> page on the server in the current directory and receives the output from the page through the <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> object <ph id="ph3">`writer`</ph>.</source>
          <target state="translated">다음 예제에서는 실행 된 <ph id="ph1">`Login.aspx`</ph> 현재 디렉터리에 서버에서 페이지를 통해 페이지에서 출력을 받는 <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> 개체 <ph id="ph3">`writer`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>It writes the HTML stream received from <ph id="ph1">`writer`</ph> to the HTTP output stream.</source>
          <target state="translated">받은 HTML 스트림에 기록 <ph id="ph1">`writer`</ph> http 출력 스트림에 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> collections are preserved.</source>
          <target state="translated">콘텐츠는 <ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> 컬렉션 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>가 Null 참조(Visual Basic에서는 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>)인 경우</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ends with a period (.).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>는 마침표(.)로 끝납니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 또는 -</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 지정된 처리기를 실행하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 가상 경로가 아닙니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>The HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> to transfer the current request to.</source>
          <target state="translated">현재 요청을 전송할 <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>를 구현하는 HTTP 처리기입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to capture the output.</source>
          <target state="translated">출력을 캡처할 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지우려면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">현재 요청의 컨텍스트에서 지정된 가상 경로에 대한 처리기를 실행합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> captures output from the executed handler and a Boolean parameter specifies whether to clear the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>는 실행된 처리기에서 출력을 캡처하며 부울 매개 변수는 <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지울지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</source>
          <target state="translated">공용 언어 사양 (CLS)와 호환 되는 모든 언어에 있는 HTTP 요청의 특정, 미리 정의 된 형식을 처리 하려면 사용자 지정 HTTP 처리기를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</source>
          <target state="translated">기본 ASP (클래식 ASP) 페이지 또는 ASP.NET 페이지 대신 HTTP 처리기 클래스에 정의 된 실행 코드에서 이러한 특정 요청에 응답 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">HTTP 처리기 저수준 요청 및 응답 인터넷 정보 서비스 (IIS)를 실행 하는 웹 서버 서비스와 상호 작용할 수와 다르지만 유사한 기능을 제공 하면서 ISAPI 확장과 더 간단한 프로그래밍 모델을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET에서 현재 사용자에서 제공 하는 리소스를 볼 권한이 있는지 확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET으로 표시 되는 처리기를 직접 호출 원래 리소스 처리기가 호출 되기 전에 ASP.NET 권한 부여 및 인증 논리가 실행는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드 및에 대 한 인증 및 권한 부여 논리를 다시 실행 하지 않습니다는 새 리소스입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">응용 프로그램에 대 한 보안 정책상 클라이언트가 리소스에 액세스할 수 있는 적절 한 권한을 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 가지도록 수는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 브라우저는 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</source>
          <target state="translated">이 페이지는 시스템에 들어오는 새 요청 이기 때문에 IIS와 ASP.NET 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">사용자에 게 사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> 메서드는 응용 프로그램 호출 하기 전에 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="handler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph>에 지정된 처리기를 실행하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="handler" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.GetLastError">
          <source>Returns the previous exception.</source>
          <target state="translated">이전 예외를 반환합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.GetLastError">
          <source>The previous exception that was thrown.</source>
          <target state="translated">이전에 throw된 예외입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.GetLastError">
          <source>The following example prints a description of the application's last error to the HTTP output stream.</source>
          <target state="translated">다음 예제에서는 HTTP 출력 스트림에 응용 프로그램의 마지막 오류에 대 한 설명을 인쇄합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.GetLastError">
          <source>It prints "No Errors" if no errors have been encountered.</source>
          <target state="translated">"No" 오류 "인쇄 하는 경우 오류가 발생 했습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Decodes a string that has been encoded to eliminate invalid HTML characters.</source>
          <target state="translated">잘못된 HTML 문자를 제거하기 위해 인코딩된 문자열을 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> class.</source>
          <target state="translated">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>The HTML string to decode.</source>
          <target state="translated">디코딩할 HTML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>Decodes an HTML-encoded string and returns the decoded string.</source>
          <target state="translated">HTML로 인코딩된 문자열을 디코딩하여 디코딩된 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>The decoded text.</source>
          <target state="translated">디코딩된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
          <target state="translated">HTML 인코딩 텍스트 브라우저에 올바르게 표시 하 고 HTML로 브라우저에서 해석 되지이 있는지 확인 하 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
          <target state="translated">예를 들어, 보다 작음 기호를 포함 하는 텍스트 문자열 (<ph id="ph1">\&lt;</ph>) 이상 기호 (&gt;), 보다 브라우저 열거나 닫는 대괄호를 HTML 태그의 이러한 문자를 해석 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
          <target state="translated">문자는 HTML로 인코딩하지를 문자열로 변환 됩니다 <ph id="ph1">`&amp;lt;`</ph> 및 <ph id="ph2">`&amp;gt;`</ph>, 보다 작다 이상 보다 작음 기호 올바르게 표시 하도록 브라우저에 이르게 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> decodes text that has been transmitted to the server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> 서버에 전송 된 텍스트를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated">이 메서드는 쉽게 액세스할 수는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> to decode strings.</source>
          <target state="translated">이 방법을 사용 하 여 내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 디코딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
          <target state="translated">ASP.NET 웹 페이지에 대 한 코드 숨김 파일에 액세스의 인스턴스는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 통해 클래스는 <ph id="ph2">`Server`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">코드 숨김 파일에 없는 클래스에서 사용 하 여 <ph id="ph1">`HttpContext.Current.Server`</ph> 의 인스턴스에 액세스 하는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
          <target state="translated">웹 응용 프로그램 외부에서 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 값을 인코딩 또는 디코딩하려면 클래스입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>The following example contains the function <ph id="ph1">`LoadDecodedFile`</ph>, which decodes the data from a file and copies it into one string.</source>
          <target state="translated">다음 예제에 함수가 <ph id="ph1">`LoadDecodedFile`</ph>, 파일에서 데이터를 디코딩하는 및 한 개의 문자열로 복사 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>The HTML string to decode.</source>
          <target state="translated">디코딩할 HTML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream that contains the decoded string.</source>
          <target state="translated">디코딩된 문자열을 포함하는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>Decodes an HTML-encoded string and sends the resulting output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">HTML로 인코딩된 문자열을 디코딩하고 그 결과 출력을 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림에 보냅니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
          <target state="translated">HTML 인코딩 텍스트 브라우저에 올바르게 표시 하 고 HTML로 브라우저에서 해석 되지이 있는지 확인 하 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
          <target state="translated">예를 들어, 보다 작음 기호를 포함 하는 텍스트 문자열 (<ph id="ph1">\&lt;</ph>) 이상 기호 (&gt;), 보다 브라우저 열거나 닫는 대괄호를 HTML 태그의 이러한 문자를 해석 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
          <target state="translated">문자는 HTML로 인코딩하지를 문자열로 변환 됩니다 <ph id="ph1">`&amp;lt;`</ph> 및 <ph id="ph2">`&amp;gt;`</ph>, 보다 작다 이상 보다 작음 기호 올바르게 표시 하도록 브라우저에 이르게 됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> decodes text that has been transmitted to the server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> 서버에 전송 된 텍스트를 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> 액세스 하는 편리한 방법는 <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> to decode strings.</source>
          <target state="translated">내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 디코딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>The following example decodes a string that has been HTML-encoded for transmission over HTTP.</source>
          <target state="translated">다음 예제에서는 HTTP를 통한 전송을 위해 HTML로 인코딩된 상태인에 문자열을 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>It decodes the supplied string named <ph id="ph1">`EncodedString`</ph> which contains the text "This is a <ph id="ph2">&amp;lt;</ph>Test String<ph id="ph3">&amp;gt;</ph>.", and copies it into the string named <ph id="ph4">`DecodedString`</ph> as "This is a <ph id="ph5">\&lt;</ph>Test String&gt;.".</source>
          <target state="translated">이름이 제공된 된 문자열을 디코딩합니다 <ph id="ph1">`EncodedString`</ph> 텍스트를 포함 하 "이것이 <ph id="ph2">&amp;lt;</ph>테스트 문자열<ph id="ph3">&amp;gt;</ph>.", 하 고 명명 된 문자열에 복사 <ph id="ph4">`DecodedString`</ph> 으로 "이것이 <ph id="ph5">\&lt;</ph>테스트 문자열 &gt;."입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Encodes a string to be displayed in a browser.</source>
          <target state="translated">브라우저에 표시되는 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> class.</source>
          <target state="translated">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The text string to encode.</source>
          <target state="translated">인코딩할 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>HTML-encodes a string and returns the encoded string.</source>
          <target state="translated">문자열을 HTML로 인코딩하고 인코딩된 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The HTML-encoded text.</source>
          <target state="translated">HTML로 인코딩된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
          <target state="translated">HTML 인코딩 텍스트 브라우저에 올바르게 표시 하 고 HTML로 브라우저에서 해석 되지이 있는지 확인 하 합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
          <target state="translated">예를 들어, 보다 작음 기호를 포함 하는 텍스트 문자열 (<ph id="ph1">\&lt;</ph>) 이상 기호 (&gt;), 보다 브라우저 열거나 닫는 대괄호를 HTML 태그의 이러한 문자를 해석 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
          <target state="translated">문자는 HTML로 인코딩하지를 문자열로 변환 됩니다 <ph id="ph1">`&amp;lt;`</ph> 및 <ph id="ph2">`&amp;gt;`</ph>, 보다 작다 이상 보다 작음 기호 올바르게 표시 하도록 브라우저에 이르게 됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated">이 메서드는 쉽게 액세스할 수는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">이 방법을 사용 하 여 내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
          <target state="translated">ASP.NET 웹 페이지에 대 한 코드 숨김 파일에 액세스의 인스턴스는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 통해 클래스는 <ph id="ph2">`Server`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">코드 숨김 파일에 없는 클래스에서 사용 하 여 <ph id="ph1">`HttpContext.Current.Server`</ph> 의 인스턴스에 액세스 하는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
          <target state="translated">웹 응용 프로그램 외부에서 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 값을 인코딩 또는 디코딩하려면 클래스입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The following example shows how to HTML-encode a value that potentially codes unsafe code.</source>
          <target state="translated">다음 예제에서는 방법을 값 HTML로 인코딩하는 잠재적으로 코드 안전 하지 않은 코드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The code resides in the code-behind file for a web page.</source>
          <target state="translated">코드는 웹 페이지에 대 한 코드 숨김 파일에 상주합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode.</source>
          <target state="translated">인코딩할 값 예를 단순화 하 고 HTML 인코딩할 수 값의 형식을 표시에이 예에서 하드 코딩 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>Typically, you would HTML-encode a value that you received from the user or the request.</source>
          <target state="translated">일반적으로 HTML 인코딩 사용자 또는 요청에서 수신 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source><ph id="ph1">`Result`</ph> refers to a <ph id="ph2">`Literal`</ph> control.</source>
          <target state="translated"><ph id="ph1">`Result`</ph> 참조 하는 <ph id="ph2">`Literal`</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.</source>
          <target state="translated">표시 점을 제외 하 고 다음 예제는 이전 예제와 비슷한 방법을을 HTML 인코딩하려면 클래스 내에서 값에에서 없는 코드 숨김 파일입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The string to encode.</source>
          <target state="translated">인코딩할 문자열입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream that contains the encoded string.</source>
          <target state="translated">인코딩된 문자열을 포함하는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>HTML-encodes a string and sends the resulting output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">문자열을 HTML로 인코딩하고 그 결과 출력을 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림에 보냅니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML.</source>
          <target state="translated">HTML로 인코딩하면 텍스트에서 HTML로 해석 되지 브라우저에 올바르게 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as an opening or closing bracket of an HTML tag.</source>
          <target state="translated">예를 들어, 보다 작음 기호를 포함 하는 텍스트 문자열 (<ph id="ph1">\&lt;</ph>) 이상 기호 (&gt;), 보다 브라우저 열거나 닫는 대괄호를 HTML 태그의 이러한 문자를 해석 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The HTML encoding of these two characters is <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, respectively, which causes the browser to display the less than sign and greater than sign correctly.</source>
          <target state="translated">이 두 문자의 HTML 인코딩은 <ph id="ph1">`&amp;lt;`</ph> 및 <ph id="ph2">`&amp;gt;`</ph>각각 기호 보다 크고 보다 작음 기호 올바르게 표시 하도록 브라우저에 이르게 됩니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> 액세스 하는 편리한 방법는 <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The following example encodes a string for transmission by HTTP.</source>
          <target state="translated">다음 예제에서는 HTTP로 전송할에 대 한 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>It encodes the string named <ph id="ph1">`TestString`</ph>, which contains the text "This is a <ph id="ph2">\&lt;</ph>Test String&gt;.", and copies it into the string named <ph id="ph3">`EncodedString`</ph> as "This is a <ph id="ph4">&amp;lt;</ph>Test String<ph id="ph5">&amp;gt;</ph>.".</source>
          <target state="translated">라는 문자열을 인코딩합니다 <ph id="ph1">`TestString`</ph>, 텍스트를 포함 하 "이것이 <ph id="ph2">\&lt;</ph>테스트 문자열 &gt;.", 하 고 명명 된 문자열에 복사 <ph id="ph3">`EncodedString`</ph> 으로 "이것이 <ph id="ph4">&amp;lt;</ph>테스트 문자열<ph id="ph5">&amp;gt;</ph>."입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.MachineName">
          <source>Gets the server's computer name.</source>
          <target state="translated">서버의 컴퓨터 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.MachineName">
          <source>The name of the local computer.</source>
          <target state="translated">로컬 컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.MachineName">
          <source>The following example stores the server's computer name as a string variable.</source>
          <target state="translated">다음 예제에서는 문자열 변수로 서버의 컴퓨터 이름을 저장합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.MachineName">
          <source>The computer name cannot be found.</source>
          <target state="translated">컴퓨터 이름을 찾을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The virtual path in the Web application.</source>
          <target state="translated">웹 응용 프로그램의 가상 경로입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>Returns the physical file path that corresponds to the specified virtual path.</source>
          <target state="translated">지정된 가상 경로에 해당하는 실제 파일 경로를 반환합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The physical file path on the Web server that corresponds to <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>에 해당하는 웹 서버의 실제 파일 경로입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>If <ph id="ph1">`path`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph> method returns the full physical path of the directory that contains the current request for the path.</source>
          <target state="translated">경우 <ph id="ph1">`path`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph> 메서드는 경로 대 한 현재 요청을 포함 하는 디렉터리의 전체 실제 경로 반환 합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The relative path does not need to specify an existing file or folder for this method to return a value.</source>
          <target state="translated">상대 경로 기존 파일 또는 폴더에 대 한 값을 반환 하려면이 메서드를 지정할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>However, you cannot specify a path outside of the Web application.</source>
          <target state="translated">그러나 웹 응용 프로그램 외부의 경로 지정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph> method potentially contains sensitive information about the hosting environment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph> 호스팅 환경에 대 한 중요 한 정보를 잠재적으로 포함 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The return value should not be displayed to users.</source>
          <target state="translated">반환 값은 하지 사용자에 게 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>A Web application that resides at <ph id="ph1">`C:\ExampleSites\TestMapPath`</ph> would return the following results:</source>
          <target state="translated">에 상주 하는 웹 응용 프로그램 <ph id="ph1">`C:\ExampleSites\TestMapPath`</ph> 다음 결과 반환 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>Request from</source>
          <target state="translated">요청</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>Returned value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>RootLevelPage.aspx</source>
          <target state="translated">RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath</source>
          <target state="translated">C:\ExampleSites\TestMapPath</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>RootLevelPage.aspx</source>
          <target state="translated">RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>"/DownOneLevel/DownLevelPage.aspx"</source>
          <target state="translated">"/DownOneLevel/DownLevelPage.aspx"</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</source>
          <target state="translated">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>RootLevelPage.aspx</source>
          <target state="translated">RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>"/NotRealFolder"</source>
          <target state="translated">"/NotRealFolder"</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath\NotRealFolder</source>
          <target state="translated">C:\ExampleSites\TestMapPath\NotRealFolder</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>RootLevelPage.aspx</source>
          <target state="translated">RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>"../OutsideApplication"</source>
          <target state="translated">"../OutsideApplication"</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>/DownOneLevel/DownLevelPage.aspx</source>
          <target state="translated">/DownOneLevel/DownLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath\DownOneLevel</source>
          <target state="translated">C:\ExampleSites\TestMapPath\DownOneLevel</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>/DownOneLevel/DownLevelPage.aspx</source>
          <target state="translated">/DownOneLevel/DownLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>"../RootLevelPage.aspx"</source>
          <target state="translated">"../RootLevelPage.aspx"</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath\RootLevelPage.aspx</source>
          <target state="translated">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The following example shows how to retrieve the physical file of a relative virtual path.</source>
          <target state="translated">다음 예제에서는 상대 가상 경로 대 한 실제 파일을 검색 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The code resides in the code-behind file for a web page and utilizes the default <ph id="ph1">`Server`</ph> object.</source>
          <target state="translated">코드 웹 페이지에 대 한 코드 숨김 파일에 상주 하며 기본 <ph id="ph1">`Server`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.</source>
          <target state="translated">다음 예제에서는 코드 숨김 파일에 없는 클래스 내에서 실제 경로 검색 하는 방법을 보여 줍니다 점을 제외 하 고 이전 예제와 비슷합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a physical path, but a virtual path was expected.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>은 실제 경로이지만 가상 경로가 필요합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>Gets and sets the request time-out value in seconds.</source>
          <target state="translated">요청 제한 시간 값(초)을 가져와서 설정합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The time-out value setting for requests.</source>
          <target state="translated">요청에 대한 제한 시간 값 설정입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> property can be set in the Web.config file by setting the <ph id="ph2">`executionTimeout`</ph> attribute of the  element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> 속성을 설정 하 여 Web.config 파일에서 설정할 수 있습니다는 <ph id="ph2">`executionTimeout`</ph> 요소의 특성입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>Setting the time-out programmatically with the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> property takes precedence over the Web.config setting.</source>
          <target state="translated">프로그래밍 방식으로 제한 시간 설정에서 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> 속성이 Web.config 설정 보다 우선 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>If you set the <ph id="ph1">`debug`</ph> attribute of the  element to <ph id="ph2">`true`</ph> in the Web.config file, the value of <ph id="ph3">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> will be ignored.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">`debug`</ph> 요소의 특성 <ph id="ph2">`true`</ph> Web.config 파일의 값에 <ph id="ph3">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The following example sets the request time-out period to 60 seconds.</source>
          <target state="translated">다음 예제에서는 60 초로 요청 제한 시간을 설정합니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The time-out period is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or otherwise could not be set.</source>
          <target state="translated">제한 시간이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이거나 설정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Terminates execution of the current page and starts execution of a new page for the current request.</source>
          <target state="translated">현재 페이지의 실행을 종료하고 현재 요청에 대한 새 페이지의 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">서버에서 실행할 새 페이지의 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</source>
          <target state="translated">현재 요청에 대해 현재 페이지의 실행을 종료하고 해당 페이지의 지정된 URL 경로를 사용하여 새 페이지의 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>The page transferred to should be another .aspx page.</source>
          <target state="translated">전송 페이지에는 다른.aspx 페이지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>For instance, a transfer to an .asp or .asmx page is not valid.</source>
          <target state="translated">예를 들어.asp 또는.asmx 페이지로 전송 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method preserves the <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드 전처리는 <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>, which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 호출 <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>, throw 하는 <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> 완료 되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET에서 현재 사용자가 제공한 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET으로 표시 하는 처리기를 직접 호출 원래 리소스 처리기가 호출 되기 전에 ASP.NET 권한 부여 및 인증 논리가 실행는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드 및 새 인증 및 권한 부여 논리를 실행 하지 않습니다 리소스입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">응용 프로그램의 보안 정책에 따라 클라이언트가 리소스에 액세스할 수 있는 적절 한 권한의 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 가지도록 수는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드는 브라우저에서 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">이 페이지는 시스템에 들어오는 새 요청 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">사용자에 게 사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> 메서드는 응용 프로그램 호출 하기 전에 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">서버에서 실행할 새 페이지의 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지우려면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</source>
          <target state="translated">현재 페이지의 실행을 종료하고 해당 페이지의 지정된 URL 경로를 사용하여 새 페이지의 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>Specifies whether to clear the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지울 것인지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The page transferred to should be another .aspx page.</source>
          <target state="translated">전송 페이지에는 다른.aspx 페이지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>For instance, a transfer to an .asp or .asmx page is not valid.</source>
          <target state="translated">예를 들어.asp 또는.asmx 페이지로 전송 올바르지 않습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>, which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 호출 <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>, throw 하는 <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> 완료 되는 예외입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>If you set the <ph id="ph1">`preserveForm`</ph> parameter to <ph id="ph2">`true`</ph>, the target page will be able to access the view state of the previous page by using the <ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph> property.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">`preserveForm`</ph> 매개 변수를 <ph id="ph2">`true`</ph>, 대상 페이지를 사용 하 여 이전 페이지의 보기 상태에 액세스할 수는 <ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>For security purposes, you should keep the <ph id="ph1">`enableViewStateMac`</ph> attribute set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">보안을 위해 유지 해야는 <ph id="ph1">`enableViewStateMac`</ph> 특성이로 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET에서 현재 사용자가 제공한 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET으로 표시 하는 처리기를 직접 호출 원래 리소스 처리기가 호출 되기 전에 ASP.NET 권한 부여 및 인증 논리가 실행는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드 및 새 인증 및 권한 부여 논리를 실행 하지 않습니다 리소스입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">응용 프로그램의 보안 정책에 따라 클라이언트가 리소스에 액세스할 수 있는 적절 한 권한의 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 가지도록 수는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드는 브라우저에서 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">이 페이지는 시스템에 들어오는 새 요청 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">사용자에 게 사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> 메서드는 응용 프로그램 호출 하기 전에 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The following example executes a new page in the same directory as the current page.</source>
          <target state="translated">다음 예에서는 현재 페이지와 같은 디렉터리에 새 페이지를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The current page request is a callback.</source>
          <target state="translated">현재 페이지 요청은 콜백입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>The HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> to transfer the current request to.</source>
          <target state="translated">현재 요청을 전송할 <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>를 구현하는 HTTP 처리기입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지우려면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface and specifies whether to clear the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated">현재 페이지의 실행을 종료하고 <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> 인터페이스를 구현하고 <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지울지 여부를 지정하는 사용자 지정 HTTP 처리기를 사용하여 새 요청의 실행을 시작합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</source>
          <target state="translated">공용 언어 사양 (CLS)와 호환 되는 모든 언어에 있는 HTTP 요청의 특정, 미리 정의 된 형식을 처리 하려면 사용자 지정 HTTP 처리기를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</source>
          <target state="translated">기본 ASP (클래식 ASP) 페이지 또는 ASP.NET 페이지 대신 HTTP 처리기 클래스에 정의 된 실행 코드에서 이러한 특정 요청에 응답 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">HTTP 처리기 저수준 요청 및 응답 인터넷 정보 서비스 (IIS)를 실행 하는 웹 서버 서비스와 상호 작용할 수와 다르지만 유사한 기능을 제공 하면서 ISAPI 확장과 더 간단한 프로그래밍 모델을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>If you set the <ph id="ph1">`preserveForm`</ph> parameter to <ph id="ph2">`true`</ph>, the target page will be able to access the view state of the previous page by using the <ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph> property.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">`preserveForm`</ph> 매개 변수를 <ph id="ph2">`true`</ph>, 대상 페이지를 사용 하 여 이전 페이지의 보기 상태에 액세스할 수는 <ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>For security purposes, you should keep the <ph id="ph1">`enableViewStateMac`</ph> attribute set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">보안을 위해 유지 해야는 <ph id="ph1">`enableViewStateMac`</ph> 특성이로 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET에서 현재 사용자가 제공한 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method, and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET으로 표시 하는 처리기를 직접 호출 원래 리소스 처리기가 호출 되기 전에 ASP.NET 권한 부여 및 인증 논리가 실행는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드와 새에 대 한 인증 및 권한 부여 논리를 다시 실행 하지 않습니다 리소스입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">응용 프로그램에 대 한 보안 정책상 클라이언트가 리소스에 액세스할 수 있는 적절 한 권한을 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 가지도록 수는 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드 대신는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 메서드는 브라우저에서 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</source>
          <target state="translated">이 페이지는 시스템에 들어오는 새 요청 이기 때문에 IIS와 ASP.NET 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">사용자에 게 사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다는 <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> 메서드는 응용 프로그램 호출 하기 전에 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>The current page request is a callback.</source>
          <target state="translated">현재 페이지 요청은 콜백입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Performs an asynchronous execution of the specified URL.</source>
          <target state="translated">지정된 URL의 비동기 실행을 수행합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> was introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>For summary information about the .NET Framework, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">.NET Framework에 대 한 요약 정보를 참조 하십시오. <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">서버에서 실행할 새 페이지의 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>Performs an asynchronous execution of the specified URL.</source>
          <target state="translated">지정된 URL의 비동기 실행을 수행합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>This method overload calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> overload with the <ph id="ph2">`preserveForm`</ph> parameter set to <ph id="ph3">`false`</ph>, the <ph id="ph4">`method`</ph> parameter set to <ph id="ph5">`null`</ph>, the <ph id="ph6">`headers`</ph> parameter set to <ph id="ph7">`null`</ph>, and the <ph id="ph8">`preserveUser`</ph> parameter set to <ph id="ph9">`true`</ph>.</source>
          <target state="translated">이 메서드 오버 로드는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> 오버 로드는 <ph id="ph2">`preserveForm`</ph> 매개 변수 설정 <ph id="ph3">`false`</ph>, <ph id="ph4">`method`</ph> 매개 변수 설정 <ph id="ph5">`null`</ph>, <ph id="ph6">`headers`</ph> 매개 변수 설정 <ph id="ph7">`null`</ph>, 및 <ph id="ph8">`preserveUser`</ph> 매개 변수 설정 <ph id="ph9">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph> overload.</source>
          <target state="translated">자세한 내용은의 "주의" 섹션을 참조 하십시오. <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
          <target state="translated">요청에 <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>의 통합 파이프라인 모드가 필요한 경우</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The server is not available to handle the request.</source>
          <target state="translated">요청 처리에 서버를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">서버에서 실행할 새 페이지의 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지우려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>Performs an asynchronous execution of the specified URL and preserves query string parameters.</source>
          <target state="translated">지정된 URL의 비동기 실행을 수행하고 쿼리 문자열 매개 변수를 유지합니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>This overload calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> overload with the <ph id="ph2">`preserveForm`</ph> parameter set to the value passed in, the <ph id="ph3">`method`</ph> parameter set to <ph id="ph4">`null`</ph>, the <ph id="ph5">`headers`</ph> parameter set to <ph id="ph6">`null`</ph>, and the <ph id="ph7">`preserveUser`</ph> parameter set to <ph id="ph8">`true`</ph>.</source>
          <target state="translated">이 오버 로드는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> 오버 로드는 <ph id="ph2">`preserveForm`</ph> , 전달 된 값으로 설정 하는 매개 변수는 <ph id="ph3">`method`</ph> 매개 변수 설정 <ph id="ph4">`null`</ph>, <ph id="ph5">`headers`</ph> 매개 변수 설정 <ph id="ph6">`null`</ph>, 및 <ph id="ph7">`preserveUser`</ph> 매개 변수 집합 <ph id="ph8">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>.</source>
          <target state="translated">자세한 내용은 "주의" 섹션을 참조 하십시오. <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
          <target state="translated">요청에 <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>의 통합 파이프라인 모드가 필요한 경우</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The server is not available to handle the request.</source>
          <target state="translated">요청 처리에 서버를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">서버에서 실행할 새 페이지의 URL 경로입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지우려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The HTTP method to use in the execution of the new request.</source>
          <target state="translated">새 요청을 실행하는 데 사용할 HTTP 메서드입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> of request headers for the new request.</source>
          <target state="translated">새 요청에 대한 요청 헤더의 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</source>
          <target state="translated">지정된 HTTP 메서드와 헤더를 사용하여 지정된 URL의 비동기 실행을 수행합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This method is used when running with the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</source>
          <target state="translated">통합된 파이프라인 모드에서 실행 될 때이 메서드는 <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> 요청을 처리 한 리소스 종류에서 올바른 요청 컨텍스트를 사용 하 여 대상 요청을 실행 하는 동안 다른 전송 될 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> method to transfer a request for an ASPX page to a request for an XML page.</source>
          <target state="translated">예를 들어, 사용할 수는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> XML 페이지에 대 한 요청에 ASPX 페이지에 대 한 요청을 전송 하는 메서드.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> method performs an asynchronous child execution of the specified URL with the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> 메서드 같은 조건으로 지정된 된 URL의 비동기 하위 실행을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the <ph id="ph1">`path`</ph> parameter specifies a query string, it will be used as the new query string.</source>
          <target state="translated">경우는 <ph id="ph1">`path`</ph> 쿼리 문자열을 지정 하는 매개 변수, 새 쿼리 문자열로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If no query string is included, the query string of the request will be re-used.</source>
          <target state="translated">포함 된 쿼리 문자열이 없는 경우에 요청의 쿼리 문자열 다시 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the <ph id="ph1">`method`</ph> parameter is specified, it will be used.</source>
          <target state="translated">경우는 <ph id="ph1">`method`</ph> 매개 변수가 지정 된, 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If it is <ph id="ph1">`null`</ph>, the HTTP method of the original request will be used.</source>
          <target state="translated">이 경우 <ph id="ph1">`null`</ph>, 원래 요청의 HTTP 메서드가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the <ph id="ph1">`preserveForm`</ph> parameter is <ph id="ph2">`true`</ph>, the current entity body of the request will be available to the target request.</source>
          <target state="translated">경우는 <ph id="ph1">`preserveForm`</ph> 매개 변수는 <ph id="ph2">`true`</ph>, 현재 엔터티 본문 요청의 대상 요청 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This allows form posts and uploads to be transferred.</source>
          <target state="translated">따라서 폼 게시 하 고 업로드를 전송할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the user identity is currently set on the original request, the identity will be transferred to the new request.</source>
          <target state="translated">현재 사용자 id 원래 요청에서 설정 하는 경우 id는 새 요청에 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This allows authenticated requests to re-use the result of the authentication for the new request.</source>
          <target state="translated">따라서 새 요청에 대 한 인증 결과 다시 사용 하도록 인증 된 요청 수 있습니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If you do not want the user to be transferred, set the user to <ph id="ph1">`null`</ph> on the original request before transferring.</source>
          <target state="translated">사용자를 전송 하지 않으려면로 사용자 설정 <ph id="ph1">`null`</ph> 전송 하기 전에 원래 요청에서 합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the <ph id="ph1">`headers`</ph> parameter is specified, the new request will execute with the specified headers.</source>
          <target state="translated">경우는 <ph id="ph1">`headers`</ph> 매개 변수가 지정 되 면 새 요청이 지정 된 헤더와 함께 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</source>
          <target state="translated">원래 요청이 수신 위치를 지정 하는 특수 헤더를 추가 또는 요청 헤더 및 쿠키 새 요청에 대 한 수정에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29&gt;</ph> method overload with the <ph id="ph2">`preserveUser`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29&gt;</ph> 메서드 오버 로드와는 <ph id="ph2">`preserveUser`</ph> 매개 변수 설정 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The request requires <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> running in integrated mode.</source>
          <target state="translated">요청에 통합 모드로 실행되는 <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>이 필요한 경우</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The server is not available to handle the request.</source>
          <target state="translated">요청 처리에 서버를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The path.</source>
          <target state="translated">경로입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 유지하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> 컬렉션을 지우려면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The HTTP method to use in the new request.</source>
          <target state="translated">새 요청에서 사용할 HTTP 메서드입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> object that contains request headers for the new request.</source>
          <target state="translated">새 요청의 요청 헤더를 포함하는 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the user identity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용자 ID를 보존하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The other method overloads of this method call this overload with this parameter set to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">이 메서드의 다른 메서드 오버로드는 이 매개 변수가 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정된 이 오버로드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</source>
          <target state="translated">지정된 HTTP 메서드, 헤더 및 경로를 사용하여 지정된 URL의 비동기 실행을 수행하며 폼 값과 사용자 ID를 선택적으로 유지합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>.</source>
          <target state="translated">자세한 내용은 "주의" 섹션을 참조 하십시오. <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
          <target state="translated">요청에 <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>의 통합 파이프라인 모드가 필요한 경우</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The server is not available to handle the request.</source>
          <target state="translated">요청 처리에 서버를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Decodes a string that was encoded for HTTP transmission and then sent to the server in a URL.</source>
          <target state="translated">URL에서 HTTP 전송을 위해 인코딩된 후 서버로 전송된 문자열을 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> class.</source>
          <target state="translated">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The text string to decode.</source>
          <target state="translated">디코딩할 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>URL-decodes a string and returns the decoded string.</source>
          <target state="translated">문자열을 URL로 디코딩하고 디코딩된 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The decoded text.</source>
          <target state="translated">디코딩된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL 인코딩은 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 확인 합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">질문 등의 문자 표시 (?), 앰퍼샌드 (&amp;), 슬래시 (/) 표시 하 고 공백이 잘립니다 되거나 일부 브라우저 수 있습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">이러한 문자를 인코딩해야 합니다 결과적으로, <ph id="ph1">`&lt;a&gt;`</ph> 태그 또는 쿼리 문자열로 브라우저 요청 문자열에 의해 다시 보낼 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated">이 메서드는 쉽게 액세스할 수는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> to decode strings.</source>
          <target state="translated">이 방법을 사용 하 여 내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 디코딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
          <target state="translated">ASP.NET 웹 페이지에 대 한 코드 숨김 파일에 액세스의 인스턴스는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 통해 클래스는 <ph id="ph2">`Server`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">코드 숨김 파일에 없는 클래스에서 사용 하 여 <ph id="ph1">`HttpContext.Current.Server`</ph> 의 인스턴스에 액세스 하는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
          <target state="translated">웹 응용 프로그램 외부에서 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 값을 인코딩 또는 디코딩하려면 클래스입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The following example shows how to URL-decode a value that is retrieved from the query string.</source>
          <target state="translated">방법에 대해 URL 디코딩을 값 검색 된 쿼리 문자열에서 다음 예제와 합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The code resides in the code-behind file for a web page.</source>
          <target state="translated">코드는 웹 페이지에 대 한 코드 숨김 파일에 상주합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source><ph id="ph1">`ReturnPage`</ph> refers to a <ph id="ph2">`HyperLink`</ph> control.</source>
          <target state="translated"><ph id="ph1">`ReturnPage`</ph> 참조 하는 <ph id="ph2">`HyperLink`</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.</source>
          <target state="translated">표시 점을 제외 하 고 다음 예제는 이전 예제와 비슷한 방법에 대해 URL 디코딩을 클래스 내에서 값에에서 없는 코드 숨김 파일입니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>The HTML string to decode.</source>
          <target state="translated">디코딩할 HTML 문자열입니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream that contains the decoded string.</source>
          <target state="translated">디코딩된 문자열을 포함하는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>Decodes an HTML string received in a URL and sends the resulting output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">URL에서 받은 HTML 문자열을 디코딩하고 그 결과 출력을 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림에 보냅니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL 인코딩은 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 확인 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">질문 등의 문자 표시 (?), 앰퍼샌드 (&amp;), 슬래시 (/) 표시 하 고 공백이 잘립니다 되거나 일부 브라우저 수 있습니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">이러한 문자를 인코딩해야 합니다 결과적으로, <ph id="ph1">`&lt;a&gt;`</ph> 태그 또는 쿼리 문자열로 브라우저 요청 문자열에 의해 다시 보낼 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> 액세스 하는 편리한 방법는 <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> to decode strings.</source>
          <target state="translated">내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 디코딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>The following example decodes the string named <ph id="ph1">`EncodedString`</ph> (received in a URL) into the string named <ph id="ph2">`DecodedString`</ph>.</source>
          <target state="translated">다음 예제에서는 명명 된 문자열을 디코딩합니다 <ph id="ph1">`EncodedString`</ph> (URL에서 받은) 이라는 문자열로 <ph id="ph2">`DecodedString`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Encodes a string for reliable HTTP transmission from the Web server to a client through the URL.</source>
          <target state="translated">URL을 통해 웹 서버에서 클라이언트로 신뢰할 수 있는 HTTP 전송을 하기 위해 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> 액세스 하는 편리한 방법는 <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The text to URL-encode.</source>
          <target state="translated">URL로 인코딩할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>URL-encodes a string and returns the encoded string.</source>
          <target state="translated">문자열을 URL로 인코딩하고 인코딩된 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The URL-encoded text.</source>
          <target state="translated">URL로 인코딩된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL 인코딩은 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 확인 합니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">질문 등의 문자 표시 (?), 앰퍼샌드 (&amp;), 슬래시 (/) 표시 하 고 공백이 잘립니다 되거나 일부 브라우저 수 있습니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">이러한 문자를 인코딩해야 합니다 결과적으로, <ph id="ph1">`&lt;a&gt;`</ph> 태그 또는 쿼리 문자열로 브라우저 요청 문자열에 의해 다시 보낼 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated">이 메서드는 쉽게 액세스할 수는 <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">이 방법을 사용 하 여 내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
          <target state="translated">ASP.NET 웹 페이지에 대 한 코드 숨김 파일에 액세스의 인스턴스는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 통해 클래스는 <ph id="ph2">`Server`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">코드 숨김 파일에 없는 클래스에서 사용 하 여 <ph id="ph1">`HttpContext.Current.Server`</ph> 의 인스턴스에 액세스 하는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
          <target state="translated">웹 응용 프로그램 외부에서 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 값을 인코딩 또는 디코딩하려면 클래스입니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The following example shows how to URL-encode a value that is used as a query string value of a hyperlink.</source>
          <target state="translated">다음 예와 방법을 URL로 인코드할 값으로 사용 되는 하이퍼링크의 쿼리 문자열 값입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The code resides in the code-behind file for a web page.</source>
          <target state="translated">코드는 웹 페이지에 대 한 코드 숨김 파일에 상주합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode.</source>
          <target state="translated">인코딩할 값 예를 단순화 하 고 URL로 인코딩할 수 값의 형식을 표시에이 예에서 하드 코딩 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>Typically, you would URL-encode a value that you received from the user or the request.</source>
          <target state="translated">일반적으로 URL로 인코드할 사용자 또는 요청에서 수신 하는 값입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source><ph id="ph1">`NextPage`</ph> refers to a <ph id="ph2">`HyperLink`</ph> control.</source>
          <target state="translated"><ph id="ph1">`NextPage`</ph> 참조 하는 <ph id="ph2">`HyperLink`</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.</source>
          <target state="translated">표시 점을 제외 하 고 다음 예제는 이전 예제와 비슷한 방법을 URL로 인코드할 클래스 내에서 값에에서 없는 코드 숨김 파일입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>The text string to encode.</source>
          <target state="translated">인코딩할 텍스트 문자열입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream that contains the encoded string.</source>
          <target state="translated">인코딩된 문자열을 포함하는 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>URL-encodes a string and sends the resulting output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">문자열을 URL로 인코딩하고 그 결과 출력을 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 출력 스트림에 보냅니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL 인코딩은 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 확인 합니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">질문 등의 문자 표시 (?), 앰퍼샌드 (&amp;), 슬래시 (/) 표시 하 고 공백이 잘립니다 되거나 일부 브라우저 수 있습니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">이러한 문자를 인코딩해야 합니다 결과적으로, <ph id="ph1">`&lt;a&gt;`</ph> 태그 또는 쿼리 문자열로 브라우저 요청 문자열에 의해 다시 보낼 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> 액세스 하는 편리한 방법는 <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> ASP.NET 응용 프로그램에서 런타임 시 메서드.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">내부적으로 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> 사용 하 여 <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>The following example encodes a string for transmission by HTTP.</source>
          <target state="translated">다음 예제에서는 HTTP로 전송할에 대 한 문자열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>It encodes the string named <ph id="ph1">`TestString`</ph>, which contains the text "This is a <ph id="ph2">\&lt;</ph>Test String&gt;.", and copies it into the string named <ph id="ph3">`EncodedString`</ph> as "This+is+a+%3cTest+String%3e.".</source>
          <target state="translated">이라는 문자열을 인코딩합니다 <ph id="ph1">`TestString`</ph>, 텍스트를 포함 하 "이것이 <ph id="ph2">\&lt;</ph>테스트 문자열 &gt;.", 이라는 문자열에 복사 <ph id="ph3">`EncodedString`</ph> 으로 "이 +은 + a + %3cTest + 문자열 %3e."입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
          <source>The text to URL-encode.</source>
          <target state="translated">URL로 인코딩할 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
          <source>Do not use; intended only for browser compatibility.</source>
          <target state="translated">사용하지 마세요. 브라우저 호환성을 위해서만 제공됩니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
          <source>Use <ph id="ph1">&lt;see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" /&gt;</ph>을 사용하십시오.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
          <source>The URL encoded text.</source>
          <target state="translated">URL로 인코딩된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The URL string token to decode.</source>
          <target state="translated">디코딩할 URL 문자열 토큰입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>Decodes a URL string token to its equivalent byte array using base 64 digits.</source>
          <target state="translated">Base 64 숫자를 사용하여 URL 문자열 토큰을 해당하는 바이트 배열로 디코딩합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The byte array containing the decoded URL string token.</source>
          <target state="translated">디코딩한 URL 문자열 토큰을 포함하는 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> 메서드는 이진 데이터 base 64 숫자를 인코딩하는 URL 문자열 토큰을 해당 하는 바이트 배열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method to decode tokens transmitted on the URL and encoded by using the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> 토큰을 디코딩하 메서드 URL에 전송 되 고 사용 하 여 인코딩된는 <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method will return an empty byte array if the <ph id="ph2">`input`</ph> parameter has a length of less than one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> 메서드는 빈 바이트 배열을 반환 하는 경우는 <ph id="ph2">`input`</ph> 매개 변수 길이가 1 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The value of the <ph id="ph1">&lt;paramref name="input" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 매개 변수의 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The byte array to encode.</source>
          <target state="translated">인코딩할 바이트 배열입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</source>
          <target state="translated">Base 64 숫자를 사용하여 URL에서 전송하기에 적합한 동등한 문자열 표현으로 바이트 배열을 인코딩합니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The string containing the encoded token if the byte array <bpt id="p1">*</bpt>length<ept id="p1">*</ept> is greater than one; otherwise, an empty string ("").</source>
          <target state="translated">바이트 배열 <bpt id="p1">*</bpt>길이<ept id="p1">*</ept>가 1보다 큰 경우 인코딩된 토큰이 포함된 문자열이고, 그렇지 않으면 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph> method converts a byte array into an equivalent string representation encoded with base 64 digits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph> 메서드는 바이트 배열을 base 64 숫자를 사용 하 여 인코딩한 해당 문자열 표현으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The resulting string token can be transmitted on the URL.</source>
          <target state="translated">URL에는 결과 문자열 토큰을 전송할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph> will return an empty string if the <ph id="ph2">`input`</ph> parameter has a length of less than one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph> 경우 빈 문자열을 반환 합니다는 <ph id="ph2">`input`</ph> 매개 변수 길이가 1 보다 작습니다.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The value of the <ph id="ph1">&lt;paramref name="input" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 매개 변수의 값이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>