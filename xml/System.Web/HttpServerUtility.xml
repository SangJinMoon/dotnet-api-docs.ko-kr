<Type Name="HttpServerUtility" FullName="System.Web.HttpServerUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80eb5a3f30a3ad4a39f49dca9820cd97cfa81308" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37529051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpServerUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpServerUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpServerUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpServerUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpServerUtility sealed" />
  <TypeSignature Language="F#" Value="type HttpServerUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ee09a-101">Provides helper methods for processing Web requests.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee09a-101">Provides helper methods for processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-102">속성과 메서드를 <xref:System.Web.HttpServerUtility> 클래스가 내장 함수를 통해 노출 됩니다 <xref:System.Web.HttpContext.Server%2A> ASP.NET에서 제공 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-102">The methods and properties of the <xref:System.Web.HttpServerUtility> class are exposed through the intrinsic <xref:System.Web.HttpContext.Server%2A> object provided by ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-103">소스 코드를 사용 하 여 Visual Studio 웹 사이트 프로젝트는 다음이 항목과 함께 사용할 수 있습니다: [다운로드](http://go.microsoft.com/fwlink/?LinkId=192870)합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-103">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192870).</span></span>  
  
 <span data-ttu-id="ee09a-104">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.HttpServerUtility.HtmlEncode%2A> 메서드 및 <xref:System.Web.HttpServerUtility.UrlEncode%2A> 메서드를 <xref:System.Web.HttpServerUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-104">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="ee09a-105"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> 메서드를 사용 하면 모든 사용자가 제공한 문자열 입력 실행 스크립트 또는 HTML 요소 대신 브라우저에서 정적 텍스트로 렌더링 됩니다 하는 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-105">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements.</span></span> <span data-ttu-id="ee09a-106"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 메서드 HTTP 스트림에 올바르게 전송 되도록 Url을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-106">The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpServerUtility1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpServerUtility1/cs/HttpServerUtilityCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpServerUtility1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpServerUtility1/vb/HttpServerUtilityVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpContext" />
  </Docs>
  <Members>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearError();" />
      <MemberSignature Language="F#" Value="member this.ClearError : unit -&gt; unit" Usage="httpServerUtility.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-107">Clears the previous exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-107">Clears the previous exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee09a-108">다음 예제에서는 throw 된 마지막 예외를 지웁니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-108">The following example clears the last exception that was thrown.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.GetLastError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-109">Creates a server instance of a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-109">Creates a server instance of a COM object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string -&gt; obj" Usage="httpServerUtility.CreateObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">
          <span data-ttu-id="ee09a-110">The class or type of object to create an instance of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-110">The class or type of object to create an instance of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-111">Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-111">Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-112">The new object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-112">The new object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee09a-113">다음 예제에서는 개체의 ProgID를 사용 하 여 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-113">The following example creates an object by using the object's ProgID.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-114">An instance of the object could not be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-114">An instance of the object could not be created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type -&gt; obj" Usage="httpServerUtility.CreateObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="ee09a-115">A <see cref="T:System.Type" /> representing the object to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-115">A <see cref="T:System.Type" /> representing the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-116">Creates a server instance of a COM object identified by the object's type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-116">Creates a server instance of a COM object identified by the object's type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-117">The new object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-117">The new object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectFromClsid">
      <MemberSignature Language="C#" Value="public object CreateObjectFromClsid (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObjectFromClsid(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectFromClsid (clsid As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObjectFromClsid(System::String ^ clsid);" />
      <MemberSignature Language="F#" Value="member this.CreateObjectFromClsid : string -&gt; obj" Usage="httpServerUtility.CreateObjectFromClsid clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid">
          <span data-ttu-id="ee09a-118">The class identifier of the object to create an instance of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-118">The class identifier of the object to create an instance of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-119">Creates a server instance of a COM object identified by the object's class identifier (CLSID).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-119">Creates a server instance of a COM object identified by the object's class identifier (CLSID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-120">The new object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-120">The new object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee09a-121">다음 예제에서는 사용 하는 방법에 설명 합니다 <xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A> COM 개체의 서버 인스턴스를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="ee09a-121">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A> method to create a server instance of a COM object.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-122">An instance of the object could not be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-122">An instance of the object could not be created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-123">Executes the handler for a specified resource in the context of the current request and returns execution to the page that invoked it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-123">Executes the handler for a specified resource in the context of the current request and returns execution to the page that invoked it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Execute : string -&gt; unit" Usage="httpServerUtility.Execute path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-124">The URL path to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-124">The URL path to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-125">Executes the handler for the specified virtual path in the context of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-125">Executes the handler for the specified virtual path in the context of the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-126"><xref:System.Web.HttpServerUtility.Execute%2A> 새 페이지의 실행이 완료 된 후 메서드는 원래 페이지의 실행을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-126">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original page after execution of the new page is completed.</span></span> <span data-ttu-id="ee09a-127"><xref:System.Web.HttpServerUtility.Transfer%2A> 메서드는 무조건 실행 다른 처리기에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-127">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="ee09a-128">ASP.NET에서 현재 사용자에서 제공 하는 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-128">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="ee09a-129">ASP.NET 인증 및 권한 부여 논리가 원래 리소스 처리기가 호출 되기 전에 실행을 ASP.NET에 나타난 처리기를 직접 호출을 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드 및 인증 및 권한 부여 논리 새 다시 실행 하지 않습니다 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-129">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="ee09a-130">응용 프로그램의 보안 정책 리소스에 액세스할 수 있는 적절 한 권한을 클라이언트에 필요한 경우 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-130">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="ee09a-131">사용 하 여 다시 인증을 할 수 있습니다 합니다 <xref:System.Web.HttpResponse.Redirect%2A> 메서드 대신는 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-131">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="ee09a-132"><xref:System.Web.HttpResponse.Redirect%2A> 브라우저는 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-132"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="ee09a-133">이 리디렉션 시스템으로 들어가는 새 요청을 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-133">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="ee09a-134">사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 응용 프로그램 호출 하기 전에 메서드를 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-134">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-135">다음 예에서는 현재 디렉터리에.aspx 페이지 ""를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-135">The following example displays the .aspx page "Updateinfo.aspx" in the current directory.</span></span> <span data-ttu-id="ee09a-136">프로그램 실행 Updateinfo.aspx 페이지 표시 되 면 시작 페이지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-136">Program execution returns to the starting page after the Updateinfo.aspx page is displayed.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-137">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-137">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ee09a-138">\- or -  An error occurred while executing the handler specified by <paramref name="path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-138">\- or -  An error occurred while executing the handler specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-139">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-139">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ee09a-140">\- or -  <paramref name="path" /> is not a virtual path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-140">\- or -  <paramref name="path" /> is not a virtual path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * bool -&gt; unit" Usage="httpServerUtility.Execute (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-141">The URL path to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-141">The URL path to execute.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="ee09a-142">
            <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-142">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-143">Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-143">Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee09a-144">다음 예제에서는.aspx 페이지를 실행 하는 방법을 보여 줍니다 `Updateinfo.aspx` 현재 요청에 유지 합니다 <xref:System.Web.HttpRequest.QueryString%2A> 및 <xref:System.Web.HttpRequest.Form%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-144">The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span> <span data-ttu-id="ee09a-145">프로그램 실행 후 시작 페이지를 반환 `Updateinfo.aspx` 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-145">Program execution returns to the starting page after `Updateinfo.aspx` is displayed.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute/CS/httpserverutility.execute_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute/VB/httpserverutility.execute_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-146">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-146">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ee09a-147">\- or -  An error occurred while executing the handler specified by <paramref name="path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-147">\- or -  An error occurred while executing the handler specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-148">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-148">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ee09a-149">\- or -  <paramref name="path" /> is not a virtual path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-149">\- or -  <paramref name="path" /> is not a virtual path.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.Execute (path, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-150">The URL path to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-150">The URL path to execute.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ee09a-151">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-151">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-152">Executes the handler for the specified virtual path in the context of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-152">Executes the handler for the specified virtual path in the context of the current request.</span>
          </span>
          <span data-ttu-id="ee09a-153">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-153">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-154"><xref:System.Web.HttpServerUtility.Execute%2A> 메서드는 지정 된 가상 경로 실행이 완료 된 후 원래 요청의 실행을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-154">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the virtual path specified is completed.</span></span> <span data-ttu-id="ee09a-155"><xref:System.Web.HttpServerUtility.Transfer%2A> 메서드는 무조건 실행 다른 처리기에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-155">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="ee09a-156">ASP.NET에서 현재 사용자에서 제공 하는 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-156">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="ee09a-157">ASP.NET 인증 및 권한 부여 논리가 원래 리소스 처리기가 호출 되기 전에 실행을 ASP.NET에 나타난 처리기를 직접 호출을 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드 및 인증 및 권한 부여 논리 새 다시 실행 하지 않습니다 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-157">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="ee09a-158">응용 프로그램의 보안 정책 리소스에 액세스할 수 있는 적절 한 권한을 클라이언트에 필요한 경우 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-158">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="ee09a-159">사용 하 여 다시 인증을 할 수 있습니다 합니다 <xref:System.Web.HttpResponse.Redirect%2A> 메서드 대신는 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-159">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="ee09a-160"><xref:System.Web.HttpResponse.Redirect%2A> 브라우저는 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-160"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="ee09a-161">이 리디렉션 시스템으로 들어가는 새 요청을 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-161">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="ee09a-162">사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 응용 프로그램 호출 하기 전에 메서드를 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-162">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-163">다음 예제를 실행 합니다 `Login.aspx` 현재 디렉터리에 서버에서 페이지를 통해 페이지에서 출력을 받는 합니다 <xref:System.IO.StringWriter> 개체 `writer`합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-163">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="ee09a-164">받은 HTML 스트림에 기록 `writer` http 출력 스트림으로.</span><span class="sxs-lookup"><span data-stu-id="ee09a-164">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-165">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-165">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ee09a-166">\- or -  An error occurred while executing the handler specified by <paramref name="path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-166">\- or -  An error occurred while executing the handler specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-167">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-167">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ee09a-168">\- or -  <paramref name="path" /> is not a virtual path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-168">\- or -  <paramref name="path" /> is not a virtual path.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtility.Execute (path, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-169">The URL path to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-169">The URL path to execute.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ee09a-170">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-170">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="ee09a-171">
            <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-171">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-172">Executes the handler for the specified virtual path in the context of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-172">Executes the handler for the specified virtual path in the context of the current request.</span>
          </span>
          <span data-ttu-id="ee09a-173">A <see cref="T:System.IO.TextWriter" /> captures output from the page and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-173">A <see cref="T:System.IO.TextWriter" /> captures output from the page and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-174"><xref:System.Web.HttpServerUtility.Execute%2A> 메서드는 지정 된 가상 경로의 실행이 완료 된 후 원래 요청의 실행을 계속 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-174">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the specified virtual path is completed.</span></span> <span data-ttu-id="ee09a-175"><xref:System.Web.HttpServerUtility.Transfer%2A> 메서드는 무조건 실행 다른 처리기에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-175">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="ee09a-176">ASP.NET에서 현재 사용자에서 제공 하는 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-176">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="ee09a-177">ASP.NET 인증 및 권한 부여 논리가 원래 리소스 처리기가 호출 되기 전에 실행을 ASP.NET에 나타난 처리기를 직접 호출을 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드 및 인증 및 권한 부여 논리 새 다시 실행 하지 않습니다 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-177">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="ee09a-178">응용 프로그램의 보안 정책 리소스에 액세스할 수 있는 적절 한 권한을 클라이언트에 필요한 경우 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-178">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="ee09a-179">사용 하 여 다시 인증을 할 수 있습니다 합니다 <xref:System.Web.HttpResponse.Redirect%2A> 메서드 대신는 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-179">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="ee09a-180"><xref:System.Web.HttpResponse.Redirect%2A> 브라우저는 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-180"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="ee09a-181">이 리디렉션 시스템으로 들어가는 새 요청을 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-181">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="ee09a-182">사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 응용 프로그램 호출 하기 전에 메서드를 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-182">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-183">다음 예제를 실행 합니다 `Login.aspx` 현재 디렉터리에 서버에서 페이지를 통해 페이지에서 출력을 받는 합니다 <xref:System.IO.StringWriter> 개체 `writer`합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-183">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="ee09a-184">받은 HTML 스트림에 기록 `writer` http 출력 스트림으로.</span><span class="sxs-lookup"><span data-stu-id="ee09a-184">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span> <span data-ttu-id="ee09a-185">콘텐츠를 <xref:System.Web.HttpRequest.Form%2A> 및 <xref:System.Web.HttpRequest.QueryString%2A> 컬렉션 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-185">The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute02#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute02/CS/httpserverutility.execute02_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute02#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute02/VB/httpserverutility.execute02_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-186">The current <see cref="T:System.Web.HttpContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-186">The current <see cref="T:System.Web.HttpContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
          <span data-ttu-id="ee09a-187">\- or -  <paramref name="path" /> ends with a period (.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-187">\- or -  <paramref name="path" /> ends with a period (.).</span>
          </span>
          <span data-ttu-id="ee09a-188">\- or -  An error occurred while executing the handler specified by <paramref name="path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-188">\- or -  An error occurred while executing the handler specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-189">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-189">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee09a-190">
            <paramref name="path" /> is not a virtual path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-190">
              <paramref name="path" /> is not a virtual path.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Web.IHttpHandler handler, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (handler As IHttpHandler, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Web::IHttpHandler ^ handler, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Web.IHttpHandler * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtility.Execute (handler, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="ee09a-191">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-191">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="ee09a-192">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-192">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="ee09a-193">
            <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-193">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-194">Executes the handler for the specified virtual path in the context of the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-194">Executes the handler for the specified virtual path in the context of the current request.</span>
          </span>
          <span data-ttu-id="ee09a-195">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-195">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-196">Cls는 공용 언어 사양 ()는 모든 언어로 HTTP 요청의 특정 한 미리 정의 된 형식을 처리 하려면 사용자 지정 HTTP 처리기를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-196">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="ee09a-197">기존 ASP (라고도: 클래식 ASP) 페이지 또는 ASP.NET 페이지 대신 HTTP 처리기 클래스에 정의 된 실행 코드에서 이러한 특정 요청에 응답 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-197">Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="ee09a-198">다르지만 유사한 기능을 제공 하 고 HTTP 처리기 저수준 요청 및 응답 서비스 웹 서버의 인터넷 정보 서비스 (IIS)를 실행 하는 상호 작용할 수 있도록 더 간단한 프로그래밍 모델을 사용 하면서 ISAPI 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-198">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="ee09a-199">ASP.NET에서 현재 사용자에서 전달 되는 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-199">ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="ee09a-200">ASP.NET 인증 및 권한 부여 논리가 원래 리소스 처리기가 호출 되기 전에 실행을 ASP.NET으로 표시 되는 처리기를 직접 호출을 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드 인증 및 권한 부여 논리를 다시 실행 하지 않습니다 하 고는 새 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-200">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="ee09a-201">응용 프로그램에 대 한 보안 정책 리소스에 액세스할 수 있는 적절 한 권한을 클라이언트에 필요한 경우 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-201">If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="ee09a-202">사용 하 여 다시 인증을 할 수 있습니다 합니다 <xref:System.Web.HttpResponse.Redirect%2A> 메서드 대신는 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-202">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="ee09a-203"><xref:System.Web.HttpResponse.Redirect%2A> 브라우저는 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-203">The <xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="ee09a-204">이 리디렉션 시스템으로 들어가는 새 요청을 이기 때문에 IIS 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-204">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="ee09a-205">사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 응용 프로그램 호출 하기 전에 메서드를 <xref:System.Web.HttpServerUtility.Execute%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-205">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-206">An error occurred while executing the handler specified by <paramref name="handler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-206">An error occurred while executing the handler specified by <paramref name="handler" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-207">The <paramref name="handler" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-207">The <paramref name="handler" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="GetLastError">
      <MemberSignature Language="C#" Value="public Exception GetLastError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetLastError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.GetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastError () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetLastError();" />
      <MemberSignature Language="F#" Value="member this.GetLastError : unit -&gt; Exception" Usage="httpServerUtility.GetLastError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-208">Returns the previous exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-208">Returns the previous exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-209">The previous exception that was thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-209">The previous exception that was thrown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee09a-210">다음 예제에서는 HTTP 출력 스트림에 응용 프로그램의 마지막 오류에 대 한 설명을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-210">The following example prints a description of the application's last error to the HTTP output stream.</span></span> <span data-ttu-id="ee09a-211">오류가 발생 하는 경우에 "오류 없음"을 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-211">It prints "No Errors" if no errors have been encountered.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.ClearError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-212">Decodes a string that has been encoded to eliminate invalid HTML characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-212">Decodes a string that has been encoded to eliminate invalid HTML characters.</span>
          </span>
          <span data-ttu-id="ee09a-213">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-213">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.HtmlDecode : string -&gt; string" Usage="httpServerUtility.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-214">The HTML string to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-214">The HTML string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-215">Decodes an HTML-encoded string and returns the decoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-215">Decodes an HTML-encoded string and returns the decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-216">The decoded text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-216">The decoded text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-217">HTML 인코딩을 사용 하면 텍스트 HTML로 브라우저에서 해석 되지 않는 브라우저에서 올바르게 표시 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-217">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="ee09a-218">예를 들어, 보다 작음 기호를 포함 하는 텍스트 문자열 (\<) 이상 기호 (>), 보다 브라우저는 HTML 태그의 닫는 괄호 또는 여 이러한 문자를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-218">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="ee09a-219">문자를 HTML로 인코딩된 경우 문자열로 변환 됩니다 `&lt;` 및 `&gt;`, 기호 및 보다 보다 작음 기호 올바르게 표시 하려면 브라우저에 이르게 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-219">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span> <span data-ttu-id="ee09a-220"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 서버에 전송 된 텍스트를 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-220"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="ee09a-221">이 방법은 편리 하 게 액세스를 <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임 시 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-221">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-222">이 메서드는 내부적으로 <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> 디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-222">Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="ee09a-223">ASP.NET 웹 페이지에 대 한 코드 숨김 파일에서의 인스턴스에 액세스 합니다 <xref:System.Web.HttpServerUtility> 를 통해 클래스는 `Server` 속성.</span><span class="sxs-lookup"><span data-stu-id="ee09a-223">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="ee09a-224">코드 숨김 파일에 없는 클래스에서 사용 하 여 `HttpContext.Current.Server` 의 인스턴스에 액세스 하는 <xref:System.Web.HttpServerUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-224">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="ee09a-225">웹 응용 프로그램을 외부에서 사용할는 <xref:System.Net.WebUtility> 인코딩 또는 디코딩하려면 값 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-225">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-226">함수를 포함 하는 다음 예제에서는 `LoadDecodedFile`에 파일에서 데이터를 디코딩하고을 하나의 문자열로 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-226">The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.</span></span>  
  
 [!code-aspx-csharp[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-227">The HTML string to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-227">The HTML string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="ee09a-228">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-228">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-229">Decodes an HTML-encoded string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-229">Decodes an HTML-encoded string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-230">HTML 인코딩을 사용 하면 텍스트 HTML로 브라우저에서 해석 되지 않는 브라우저에서 올바르게 표시 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-230">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="ee09a-231">예를 들어, 보다 작음 기호를 포함 하는 텍스트 문자열 (\<) 이상 기호 (>), 보다 브라우저는 HTML 태그의 닫는 괄호 또는 여 이러한 문자를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-231">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="ee09a-232">문자를 HTML로 인코딩된 경우 문자열로 변환 됩니다 `&lt;` 및 `&gt;`, 기호 및 보다 보다 작음 기호 올바르게 표시 하려면 브라우저에 이르게 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-232">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="ee09a-233"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 서버에 전송 된 텍스트를 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-233"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="ee09a-234"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 편리 하 게 액세스 되는 <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임에 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-234"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-235">내부적으로 <xref:System.Web.HttpServerUtility.HtmlDecode%2A> 사용 하 여 <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> 디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-235">Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="ee09a-236">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-236">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-237">다음 예제에서는 된 전송을 위해 HTML로 인코딩된 HTTP를 통해 문자열로 디코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-237">The following example decodes a string that has been HTML-encoded for transmission over HTTP.</span></span> <span data-ttu-id="ee09a-238">라는 제공된 된 문자열을 디코딩합니다 `EncodedString` 텍스트를 포함 하는 "이를 &lt;테스트 문자열&gt;.", 라는 문자열에 복사 `DecodedString` 으로 "이것이 \<테스트 문자열 >."입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-238">It decodes the supplied string named `EncodedString` which contains the text "This is a &lt;Test String&gt;.", and copies it into the string named `DecodedString` as "This is a \<Test String>.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-239">Encodes a string to be displayed in a browser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-239">Encodes a string to be displayed in a browser.</span>
          </span>
          <span data-ttu-id="ee09a-240">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-240">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : string -&gt; string" Usage="httpServerUtility.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-241">The text string to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-241">The text string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-242">HTML-encodes a string and returns the encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-242">HTML-encodes a string and returns the encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-243">The HTML-encoded text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-243">The HTML-encoded text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-244">HTML 인코딩을 사용 하면 텍스트 HTML로 브라우저에서 해석 되지 않는 브라우저에서 올바르게 표시 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-244">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="ee09a-245">예를 들어, 보다 작음 기호를 포함 하는 텍스트 문자열 (\<) 이상 기호 (>), 보다 브라우저는 HTML 태그의 닫는 괄호 또는 여 이러한 문자를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-245">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="ee09a-246">문자를 HTML로 인코딩된 경우 문자열로 변환 됩니다 `&lt;` 및 `&gt;`, 기호 및 보다 보다 작음 기호 올바르게 표시 하려면 브라우저에 이르게 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-246">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="ee09a-247">이 방법은 편리 하 게 액세스를 <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임 시 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-247">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-248">이 메서드는 내부적으로 <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-248">Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="ee09a-249">ASP.NET 웹 페이지에 대 한 코드 숨김 파일에서의 인스턴스에 액세스 합니다 <xref:System.Web.HttpServerUtility> 를 통해 클래스는 `Server` 속성.</span><span class="sxs-lookup"><span data-stu-id="ee09a-249">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="ee09a-250">코드 숨김 파일에 없는 클래스에서 사용 하 여 `HttpContext.Current.Server` 의 인스턴스에 액세스 하는 <xref:System.Web.HttpServerUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-250">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="ee09a-251">웹 응용 프로그램을 외부에서 사용할는 <xref:System.Net.WebUtility> 인코딩 또는 디코딩하려면 값 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-251">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-252">다음 예제에서는 어떻게 값을 HTML로 인코딩하는 잠재적으로 코드 안전 하지 않은 코드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-252">The following example shows how to HTML-encode a value that potentially codes unsafe code.</span></span> <span data-ttu-id="ee09a-253">코드를 웹 페이지에 대 한 코드 숨김 파일에 상주합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-253">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="ee09a-254">인코딩할 값 예제를 단순화 하 고 표시 값의 형식을 HTML로 인코딩하는 것이 수에이 예제에서 하드 코딩 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-254">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode.</span></span> <span data-ttu-id="ee09a-255">일반적으로 HTML 인코딩해야 사용자 또는 요청에서 수신 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-255">Typically, you would HTML-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="ee09a-256">`Result` 참조는 `Literal` 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-256">`Result` refers to a `Literal` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="ee09a-257">표시 됩니다 점을 제외 하 고 다음 예제는 이전 예제와 비슷한 방법을 HTML 인코딩하려면 클래스 내에서 값에에서 없는 코드 숨김 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-257">The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-258">The string to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-258">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="ee09a-259">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-259">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-260">HTML-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-260">HTML-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-261">HTML로 인코딩하면 텍스트 HTML로 브라우저에서 해석 되지 않는 브라우저에서 올바르게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-261">HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML.</span></span> <span data-ttu-id="ee09a-262">예를 들어, 보다 작음 기호를 포함 하는 텍스트 문자열 (\<) 이상 기호 (>), 보다 브라우저는 HTML 태그의 닫는 괄호 또는 여 이러한 문자를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-262">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="ee09a-263">이러한 두 문자가 HTML 인코딩이 `&lt;` 및 `&gt;`각각 기호 이상 보다 작음 기호 올바르게 표시 하려면 브라우저에 이르게 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-263">The HTML encoding of these two characters is `&lt;` and `&gt;`, respectively, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="ee09a-264"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> 편리 하 게 액세스 되는 <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임에 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-264"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-265">내부적으로 <xref:System.Web.HttpServerUtility.HtmlEncode%2A> 사용 하 여 <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-265">Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="ee09a-266">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-266">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-267">다음 예제에서는 HTTP에서 전송을 위해 문자열로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-267">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="ee09a-268">라는 문자열로 인코딩하도록 `TestString`, 텍스트를 포함 하는 "이를 \<테스트 문자열 >.", 라는 문자열에 복사 `EncodedString` 으로 "이것이 &lt;테스트 문자열&gt;."입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-268">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This is a &lt;Test String&gt;.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Web.HttpServerUtility.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-269">Gets the server's computer name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-269">Gets the server's computer name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee09a-270">로컬 컴퓨터의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-270">The name of the local computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee09a-271">다음 예제에서는 문자열 변수로 서버의 컴퓨터 이름을 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-271">The following example stores the server's computer name as a string variable.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-272">The computer name cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-272">The computer name cannot be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpServerUtility.MapPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-273">The virtual path in the Web application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-273">The virtual path in the Web application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-274">Returns the physical file path that corresponds to the specified virtual path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-274">Returns the physical file path that corresponds to the specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-275">The physical file path on the Web server that corresponds to <paramref name="path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-275">The physical file path on the Web server that corresponds to <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-276">하는 경우 `path` 됩니다 `null`, <xref:System.Web.HttpServerUtility.MapPath%2A> 메서드 경로 대 한 현재 요청을 포함 하는 디렉터리의 전체 실제 경로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-276">If `path` is `null`, the <xref:System.Web.HttpServerUtility.MapPath%2A> method returns the full physical path of the directory that contains the current request for the path.</span></span> <span data-ttu-id="ee09a-277">상대 경로 기존 파일 또는 폴더 값을 반환 하려면이 메서드를 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-277">The relative path does not need to specify an existing file or folder for this method to return a value.</span></span> <span data-ttu-id="ee09a-278">그러나 웹 응용 프로그램 외부에 경로 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-278">However, you cannot specify a path outside of the Web application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee09a-279"><xref:System.Web.HttpServerUtility.MapPath%2A> 메서드는 호스팅 환경에 대 한 중요 한 정보를 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-279">The <xref:System.Web.HttpServerUtility.MapPath%2A> method potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="ee09a-280">반환 값은 사용자에 게 표시 되지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-280">The return value should not be displayed to users.</span></span>  
  
 <span data-ttu-id="ee09a-281">에 있는 웹 응용 프로그램을 `C:\ExampleSites\TestMapPath` 다음 결과가 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-281">A Web application that resides at `C:\ExampleSites\TestMapPath` would return the following results:</span></span>  
  
|<span data-ttu-id="ee09a-282">요청</span><span class="sxs-lookup"><span data-stu-id="ee09a-282">Request from</span></span>|`path`|<span data-ttu-id="ee09a-283">반환 값</span><span class="sxs-lookup"><span data-stu-id="ee09a-283">Returned value</span></span>|  
|------------------|------------|--------------------|  
|<span data-ttu-id="ee09a-284">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="ee09a-284">RootLevelPage.aspx</span></span>|`null`|<span data-ttu-id="ee09a-285">C:\ExampleSites\TestMapPath</span><span class="sxs-lookup"><span data-stu-id="ee09a-285">C:\ExampleSites\TestMapPath</span></span>|  
|<span data-ttu-id="ee09a-286">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="ee09a-286">RootLevelPage.aspx</span></span>|<span data-ttu-id="ee09a-287">"/DownOneLevel/DownLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="ee09a-287">"/DownOneLevel/DownLevelPage.aspx"</span></span>|<span data-ttu-id="ee09a-288">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="ee09a-288">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span></span>|  
|<span data-ttu-id="ee09a-289">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="ee09a-289">RootLevelPage.aspx</span></span>|<span data-ttu-id="ee09a-290">"/NotRealFolder"</span><span class="sxs-lookup"><span data-stu-id="ee09a-290">"/NotRealFolder"</span></span>|<span data-ttu-id="ee09a-291">C:\ExampleSites\TestMapPath\NotRealFolder</span><span class="sxs-lookup"><span data-stu-id="ee09a-291">C:\ExampleSites\TestMapPath\NotRealFolder</span></span>|  
|<span data-ttu-id="ee09a-292">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="ee09a-292">RootLevelPage.aspx</span></span>|<span data-ttu-id="ee09a-293">"../OutsideApplication"</span><span class="sxs-lookup"><span data-stu-id="ee09a-293">"../OutsideApplication"</span></span>|<xref:System.Web.HttpException>|  
|<span data-ttu-id="ee09a-294">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="ee09a-294">/DownOneLevel/DownLevelPage.aspx</span></span>|`null`|<span data-ttu-id="ee09a-295">C:\ExampleSites\TestMapPath\DownOneLevel</span><span class="sxs-lookup"><span data-stu-id="ee09a-295">C:\ExampleSites\TestMapPath\DownOneLevel</span></span>|  
|<span data-ttu-id="ee09a-296">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="ee09a-296">/DownOneLevel/DownLevelPage.aspx</span></span>|<span data-ttu-id="ee09a-297">"../RootLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="ee09a-297">"../RootLevelPage.aspx"</span></span>|<span data-ttu-id="ee09a-298">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="ee09a-298">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-299">다음 예제에서는 상대 가상 경로의 실제 파일을 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-299">The following example shows how to retrieve the physical file of a relative virtual path.</span></span> <span data-ttu-id="ee09a-300">코드를 웹 페이지에 대 한 코드 숨김 파일에 있고 기본 활용 `Server` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-300">The code resides in the code-behind file for a web page and utilizes the default `Server` object.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="ee09a-301">다음 예제에서는 코드 숨김 파일에 없는 클래스 내에서 실제 경로 검색 하는 방법을 보여 줍니다 점을 제외 하 고 이전 예제와 비슷합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-301">The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-302">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-302">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ee09a-303">-or-  <paramref name="path" /> is a physical path, but a virtual path was expected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-303">-or-  <paramref name="path" /> is a physical path, but a virtual path was expected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTimeout">
      <MemberSignature Language="C#" Value="public int ScriptTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScriptTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScriptTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTimeout : int with get, set" Usage="System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-304">Gets and sets the request time-out value in seconds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-304">Gets and sets the request time-out value in seconds.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee09a-305">요청에 대한 제한 시간 값 설정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-305">The time-out value setting for requests.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-306">합니다 <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> 속성을 설정 하 여 Web.config 파일에서 설정할 수 있습니다는 `executionTimeout` 요소의 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-306">The <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property can be set in the Web.config file by setting the `executionTimeout` attribute of the  element.</span></span> <span data-ttu-id="ee09a-307">프로그래밍 방식으로 제한 시간 설정의 <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> 속성 Web.config 설정 보다 우선 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-307">Setting the time-out programmatically with the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property takes precedence over the Web.config setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ee09a-308">설정 하는 경우는 `debug` 요소의 특성 `true` 의 값을 Web.config 파일에서 <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-308">If you set the `debug` attribute of the  element to `true` in the Web.config file, the value of <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> will be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-309">다음 예제에서는 60 초로 요청 제한 시간을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-309">The following example sets the request time-out period to 60 seconds.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-310">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-310">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ee09a-311">The time-out period is <see langword="null" /> or otherwise could not be set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-311">The time-out period is <see langword="null" /> or otherwise could not be set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transfer">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-312">Terminates execution of the current page and starts execution of a new page for the current request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-312">Terminates execution of the current page and starts execution of a new page for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Transfer : string -&gt; unit" Usage="httpServerUtility.Transfer path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-313">The URL path of the new page on the server to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-313">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-314">For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-314">For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-315">전송 페이지에는 다른.aspx 페이지가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-315">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="ee09a-316">예를 들어.asp 또는.asmx 페이지로 전송 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-316">For instance, a transfer to an .asp or .asmx page is not valid.</span></span> <span data-ttu-id="ee09a-317">합니다 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드 유지 합니다 <xref:System.Web.HttpRequest.QueryString%2A> 및 <xref:System.Web.HttpRequest.Form%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-317">The <xref:System.Web.HttpServerUtility.Transfer%2A> method preserves the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span>  
  
 <span data-ttu-id="ee09a-318"><xref:System.Web.HttpServerUtility.Transfer%2A> 호출 <xref:System.Web.HttpResponse.End%2A>을 throw 하는 <xref:System.Threading.ThreadAbortException> 완료 되 면 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-318"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="ee09a-319">ASP.NET에서 현재 사용자에서 제공 하는 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-319">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="ee09a-320">ASP.NET 인증 및 권한 부여 논리가 원래 리소스 처리기가 호출 되기 전에 실행을 ASP.NET에 나타난 처리기를 직접 호출을 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드 및 인증 및 권한 부여 논리 새 다시 실행 하지 않습니다 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-320">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="ee09a-321">응용 프로그램의 보안 정책 리소스에 액세스할 수 있는 적절 한 권한을 클라이언트에 필요한 경우 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-321">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="ee09a-322">사용 하 여 다시 인증을 할 수 있습니다 합니다 <xref:System.Web.HttpResponse.Redirect%2A> 메서드 대신는 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-322">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="ee09a-323"><xref:System.Web.HttpResponse.Redirect%2A> 메서드는 브라우저는 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-323">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="ee09a-324">이 리디렉션 시스템으로 들어가는 새 요청을 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-324">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="ee09a-325">사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 응용 프로그램 호출 하기 전에 메서드를 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-325">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Transfer : string * bool -&gt; unit" Usage="httpServerUtility.Transfer (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-326">The URL path of the new page on the server to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-326">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="ee09a-327">
            <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-327">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-328">Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-328">Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span>
          </span>
          <span data-ttu-id="ee09a-329">Specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-329">Specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-330">전송 페이지에는 다른.aspx 페이지가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-330">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="ee09a-331">예를 들어.asp 또는.asmx 페이지로 전송 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-331">For instance, a transfer to an .asp or .asmx page is not valid.</span></span>  
  
 <span data-ttu-id="ee09a-332"><xref:System.Web.HttpServerUtility.Transfer%2A> 호출 <xref:System.Web.HttpResponse.End%2A>을 throw 하는 <xref:System.Threading.ThreadAbortException> 완료 되 면 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-332"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="ee09a-333">설정 하는 경우는 `preserveForm` 매개 변수를 `true`, 대상 페이지를 사용 하 여 이전 페이지의 뷰 상태에 액세스할 수는 <xref:System.Web.UI.Page.PreviousPage%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-333">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="ee09a-334">보안상의 이유로 유지 해야 합니다 `enableViewStateMac` 특성이 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-334">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="ee09a-335">ASP.NET에서 현재 사용자에서 제공 하는 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-335">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="ee09a-336">ASP.NET 인증 및 권한 부여 논리가 원래 리소스 처리기가 호출 되기 전에 실행을 ASP.NET에 나타난 처리기를 직접 호출을 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드 및 인증 및 권한 부여 논리 새 다시 실행 하지 않습니다 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-336">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="ee09a-337">응용 프로그램의 보안 정책 리소스에 액세스할 수 있는 적절 한 권한을 클라이언트에 필요한 경우 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-337">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="ee09a-338">사용 하 여 다시 인증을 할 수 있습니다 합니다 <xref:System.Web.HttpResponse.Redirect%2A> 메서드 대신는 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-338">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="ee09a-339"><xref:System.Web.HttpResponse.Redirect%2A> 메서드는 브라우저는 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-339">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="ee09a-340">이 리디렉션 시스템으로 들어가는 새 요청을 이기 때문에 인터넷 정보 서비스 (IIS) 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-340">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="ee09a-341">사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 응용 프로그램 호출 하기 전에 메서드를 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-341">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-342">다음 예에서는 현재 페이지와 같은 디렉터리에 새 페이지를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-342">The following example executes a new page in the same directory as the current page.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="ee09a-343">The current page request is a callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-343">The current page request is a callback.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(class System.Web.IHttpHandler handler, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (handler As IHttpHandler, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::Web::IHttpHandler ^ handler, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Transfer : System.Web.IHttpHandler * bool -&gt; unit" Usage="httpServerUtility.Transfer (handler, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="ee09a-344">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-344">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="ee09a-345">
            <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-345">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-346">Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-346">Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-347">Cls는 공용 언어 사양 ()는 모든 언어로 HTTP 요청의 특정 한 미리 정의 된 형식을 처리 하려면 사용자 지정 HTTP 처리기를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-347">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="ee09a-348">기존 ASP (라고도: 클래식 ASP) 페이지 또는 ASP.NET 페이지 대신 HTTP 처리기 클래스에 정의 된 실행 코드에서 이러한 특정 요청에 응답 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-348">Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="ee09a-349">다르지만 유사한 기능을 제공 하 고 HTTP 처리기 저수준 요청 및 응답 서비스 웹 서버의 인터넷 정보 서비스 (IIS)를 실행 하는 상호 작용할 수 있도록 더 간단한 프로그래밍 모델을 사용 하면서 ISAPI 확장 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-349">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="ee09a-350">설정 하는 경우는 `preserveForm` 매개 변수를 `true`, 대상 페이지를 사용 하 여 이전 페이지의 뷰 상태에 액세스할 수는 <xref:System.Web.UI.Page.PreviousPage%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-350">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="ee09a-351">보안상의 이유로 유지 해야 합니다 `enableViewStateMac` 특성이 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-351">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="ee09a-352">ASP.NET에서 현재 사용자에서 제공 하는 리소스를 볼 수 있는 권한이 있는지 확인 하지 않습니다는 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-352">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="ee09a-353">ASP.NET에 나타난 처리기를 직접 호출 ASP.NET 인증 및 권한 부여 논리가 원래 리소스 처리기가 호출 되기 전에 실행을 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드와 새 인증 및 권한 부여 논리를 다시 실행 하지 않습니다 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-353">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method, and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="ee09a-354">응용 프로그램에 대 한 보안 정책 리소스에 액세스할 수 있는 적절 한 권한을 클라이언트에 필요한 경우 응용 프로그램 가지도록 하거나 사용자 지정 액세스 제어 메커니즘을 제공 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-354">If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="ee09a-355">사용 하 여 다시 인증을 할 수 있습니다 합니다 <xref:System.Web.HttpResponse.Redirect%2A> 메서드 대신는 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-355">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="ee09a-356"><xref:System.Web.HttpResponse.Redirect%2A> 메서드는 브라우저는 새 리소스를 요청 하는 클라이언트 쪽 리디렉션을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-356">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="ee09a-357">이 리디렉션 시스템으로 들어가는 새 요청을 이기 때문에 IIS 및 ASP.NET 모두 보안 정책의 모든 인증 및 권한 부여 논리를 거쳐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-357">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="ee09a-358">사용 하는 사용자 지정 권한 부여 메서드를 통합 하 여 리소스를 볼 수 있는 권한이 있는지 확인할 수 있습니다 합니다 <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> 응용 프로그램 호출 하기 전에 메서드를 <xref:System.Web.HttpServerUtility.Transfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-358">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="ee09a-359">The current page request is a callback.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-359">The current page request is a callback.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransferRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-360">Performs an asynchronous execution of the specified URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-360">Performs an asynchronous execution of the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-361"><xref:System.Web.HttpServerUtility.TransferRequest%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-361"><xref:System.Web.HttpServerUtility.TransferRequest%2A> was introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="ee09a-362">.NET Framework에 대 한 요약 정보를 참조 하세요 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-362">For summary information about the .NET Framework, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string -&gt; unit" Usage="httpServerUtility.TransferRequest path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-363">The URL path of the new page on the server to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-363">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-364">Performs an asynchronous execution of the specified URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-364">Performs an asynchronous execution of the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-365">이 메서드 오버 로드를 호출 합니다 <xref:System.Web.HttpServerUtility.TransferRequest%2A> 오버 로드를 `preserveForm` 매개 변수 설정 `false`, `method` 매개 변수 설정 `null`의 `headers` 매개 변수 설정 `null`, 및 `preserveUser` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-365">This method overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to `false`, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="ee09a-366">자세한 내용은의 "주의" 섹션을 참조 하세요. <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-366">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="ee09a-367">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-367">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-368">The server is not available to handle the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-368">The server is not available to handle the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-369">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-369">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee09a-370">The <paramref name="path" /> parameter is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-370">The <paramref name="path" /> parameter is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-371">The URL path of the new page on the server to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-371">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="ee09a-372">
            <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-372">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-373">Performs an asynchronous execution of the specified URL and preserves query string parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-373">Performs an asynchronous execution of the specified URL and preserves query string parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-374">이 오버 로드를 호출 합니다 <xref:System.Web.HttpServerUtility.TransferRequest%2A> 오버 로드는 `preserveForm` 매개 변수에서 전달 된 값으로 설정 합니다 `method` 매개 변수 설정 `null`, `headers` 매개 변수 설정 `null`, 및 `preserveUser` 매개 변수 집합 `true`입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-374">This overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to the value passed in, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="ee09a-375">자세한 내용은의 "주의" 섹션을 참조 하세요. <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-375">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 <span data-ttu-id="ee09a-376"><xref:System.Web.HttpServerUtility.TransferRequest%2A> .NET Framework 버전 3.5에서에서 도입 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-376"><xref:System.Web.HttpServerUtility.TransferRequest%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ee09a-377">자세한 내용은 [버전 및 종속성](~/docs/framework/migration-guide/versions-and-dependencies.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="ee09a-377">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="ee09a-378">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-378">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-379">The server is not available to handle the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-379">The server is not available to handle the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-380">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-380">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee09a-381">The <paramref name="path" /> parameter is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-381">The <paramref name="path" /> parameter is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-382">The URL path of the new page on the server to execute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-382">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="ee09a-383">
            <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-383">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ee09a-384">The HTTP method to use in the execution of the new request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-384">The HTTP method to use in the execution of the new request.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="ee09a-385">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of request headers for the new request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-385">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of request headers for the new request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-386">Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-386">Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-387">통합된 파이프라인 모드에서 실행 되는 경우이 메서드는 [!INCLUDE[iisver](~/includes/iisver-md.md)] 요청을 처리 한 리소스 종류에서 올바른 요청 컨텍스트를 사용 하 여 대상 요청을 실행 하는 동안 다른 전송 될 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-387">This method is used when running with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</span></span> <span data-ttu-id="ee09a-388">예를 들어 사용할 수 있습니다는 <xref:System.Web.HttpServerUtility.TransferRequest%2A> XML 페이지 요청에 ASPX 페이지에 대 한 요청을 전송 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-388">For example, you can use the <xref:System.Web.HttpServerUtility.TransferRequest%2A> method to transfer a request for an ASPX page to a request for an XML page.</span></span>  
  
 <span data-ttu-id="ee09a-389"><xref:System.Web.HttpServerUtility.TransferRequest%2A> 메서드는 다음 조건에 따라 지정된 된 URL의 비동기 자식 실행을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-389">The <xref:System.Web.HttpServerUtility.TransferRequest%2A> method performs an asynchronous child execution of the specified URL with the following conditions:</span></span>  
  
-   <span data-ttu-id="ee09a-390">경우는 `path` 쿼리 문자열을 지정 하는 매개 변수, 새 쿼리 문자열로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-390">If the `path` parameter specifies a query string, it will be used as the new query string.</span></span> <span data-ttu-id="ee09a-391">쿼리 문자열이 포함 된 경우 요청의 쿼리 문자열 다시 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-391">If no query string is included, the query string of the request will be re-used.</span></span>  
  
-   <span data-ttu-id="ee09a-392">경우는 `method` 사용, 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-392">If the `method` parameter is specified, it will be used.</span></span> <span data-ttu-id="ee09a-393">있으면 `null`, 원래 요청의 HTTP 메서드가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-393">If it is `null`, the HTTP method of the original request will be used.</span></span>  
  
-   <span data-ttu-id="ee09a-394">경우는 `preserveForm` 매개 변수는 `true`, 현재 엔터티 본문 요청의 대상 요청에 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-394">If the `preserveForm` parameter is `true`, the current entity body of the request will be available to the target request.</span></span> <span data-ttu-id="ee09a-395">이 폼 게시를 허용 하며 업로드를 전송할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-395">This allows form posts and uploads to be transferred.</span></span>  
  
-   <span data-ttu-id="ee09a-396">사용자 id는 원래 요청에 현재 설정 되어, id 새 요청에 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-396">If the user identity is currently set on the original request, the identity will be transferred to the new request.</span></span> <span data-ttu-id="ee09a-397">이 새 요청에 대 한 인증 결과 다시 사용 하도록 인증 된 요청만 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-397">This allows authenticated requests to re-use the result of the authentication for the new request.</span></span> <span data-ttu-id="ee09a-398">사용자를 전송 하지 않으려면 사용자로 설정 `null` 전송 하기 전에 원래 요청에서.</span><span class="sxs-lookup"><span data-stu-id="ee09a-398">If you do not want the user to be transferred, set the user to `null` on the original request before transferring.</span></span>  
  
-   <span data-ttu-id="ee09a-399">경우는 `headers` 매개 변수가 지정 된, 지정 된 헤더를 사용 하 여 새 요청이 실행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-399">If the `headers` parameter is specified, the new request will execute with the specified headers.</span></span> <span data-ttu-id="ee09a-400">이 요청 헤더 및 쿠키 새 요청에 대 한 수정에 사용할 수 있습니다 하거나 원래 요청이 수신 위치를 지정 하는 특수 헤더를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-400">This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</span></span>  
  
     <span data-ttu-id="ee09a-401">이 메서드를 호출 합니다 <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29> 메서드 오버 로드는 `preserveUser` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-401">This method calls the <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29> method overload with the `preserveUser` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="ee09a-402">The request requires [!INCLUDE[iisver](~/includes/iisver-md.md)] running in integrated mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-402">The request requires [!INCLUDE[iisver](~/includes/iisver-md.md)] running in integrated mode.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-403">The server is not available to handle the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-403">The server is not available to handle the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-404">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-404">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee09a-405">The <paramref name="path" /> parameter is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-405">The <paramref name="path" /> parameter is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers, bool preserveUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection, preserveUser As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers, bool preserveUser);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection * bool -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm, method, headers, preserveUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="preserveUser" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="ee09a-406">The path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-406">The path.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="ee09a-407">
            <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-407">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="ee09a-408">The HTTP method to use in the new request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-408">The HTTP method to use in the new request.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="ee09a-409">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains request headers for the new request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-409">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains request headers for the new request.</span>
          </span>
        </param>
        <param name="preserveUser">
          <span data-ttu-id="ee09a-410">
            <see langword="true" /> to preserve the user identity; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-410">
              <see langword="true" /> to preserve the user identity; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ee09a-411">The other method overloads of this method call this overload with this parameter set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-411">The other method overloads of this method call this overload with this parameter set to <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-412">Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-412">Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-413">자세한 내용은의 "주의" 섹션을 참조 하세요. <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-413">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="ee09a-414">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-414">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ee09a-415">The server is not available to handle the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-415">The server is not available to handle the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-416">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-416">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee09a-417">The <paramref name="path" /> parameter is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-417">The <paramref name="path" /> parameter is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-418">Decodes a string that was encoded for HTTP transmission and then sent to the server in a URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-418">Decodes a string that was encoded for HTTP transmission and then sent to the server in a URL.</span>
          </span>
          <span data-ttu-id="ee09a-419">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-419">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public string UrlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlDecode : string -&gt; string" Usage="httpServerUtility.UrlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-420">The text string to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-420">The text string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-421">URL-decodes a string and returns the decoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-421">URL-decodes a string and returns the decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-422">The decoded text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-422">The decoded text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-423">URL 인코딩은 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-423">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="ee09a-424">질문 등의 문자 표시 (?), 앰퍼샌드 (&), 슬래시 (/) 표시 및 공간 잘리거나 일부 브라우저 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-424">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="ee09a-425">결과적으로, 이러한 문자 인코딩해야 `<a>` 태그 또는 쿼리에서 요청 문자열의 브라우저에서 다시 보낼 수 있도록 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-425">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="ee09a-426">이 방법은 편리 하 게 액세스를 <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임 시 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-426">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-427">이 메서드는 내부적으로 <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> 디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-427">Internally, this method uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="ee09a-428">ASP.NET 웹 페이지에 대 한 코드 숨김 파일에서의 인스턴스에 액세스 합니다 <xref:System.Web.HttpServerUtility> 를 통해 클래스는 `Server` 속성.</span><span class="sxs-lookup"><span data-stu-id="ee09a-428">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="ee09a-429">코드 숨김 파일에 없는 클래스에서 사용 하 여 `HttpContext.Current.Server` 의 인스턴스에 액세스 하는 <xref:System.Web.HttpServerUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-429">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="ee09a-430">웹 응용 프로그램을 외부에서 사용할는 <xref:System.Net.WebUtility> 인코딩 또는 디코딩하려면 값 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-430">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-431">다음 예와 어떻게 값 URL 디코딩을 수행 하는 쿼리 문자열에서 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-431">The following example shows how to URL-decode a value that is retrieved from the query string.</span></span> <span data-ttu-id="ee09a-432">코드를 웹 페이지에 대 한 코드 숨김 파일에 상주합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-432">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="ee09a-433">`ReturnPage` 참조는 `HyperLink` 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-433">`ReturnPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="ee09a-434">표시 점을 제외 하 고 다음 예제는 이전 예제와 비슷한 방법을 URL 디코딩할 클래스 내에서 값에에서 없는 코드 숨김 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-434">The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public void UrlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.UrlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.UrlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-435">The HTML string to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-435">The HTML string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="ee09a-436">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-436">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-437">Decodes an HTML string received in a URL and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-437">Decodes an HTML string received in a URL and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-438">URL 인코딩은 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-438">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="ee09a-439">질문 등의 문자 표시 (?), 앰퍼샌드 (&), 슬래시 (/) 표시 및 공간 잘리거나 일부 브라우저 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-439">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="ee09a-440">결과적으로, 이러한 문자 인코딩해야 `<a>` 태그 또는 쿼리에서 요청 문자열의 브라우저에서 다시 보낼 수 있도록 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-440">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="ee09a-441"><xref:System.Web.HttpServerUtility.UrlDecode%2A> 편리 하 게 액세스 되는 <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임에 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-441"><xref:System.Web.HttpServerUtility.UrlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-442">내부적으로 <xref:System.Web.HttpServerUtility.UrlDecode%2A> 사용 하 여 <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> 디코딩할 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-442">Internally, <xref:System.Web.HttpServerUtility.UrlDecode%2A> uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="ee09a-443">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-443">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-444">다음 예제에서는 명명 된 문자열을 디코딩합니다 `EncodedString` (URL에서 받은) 이라는 문자열로 `DecodedString`합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-444">The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee09a-445">Encodes a string for reliable HTTP transmission from the Web server to a client through the URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-445">Encodes a string for reliable HTTP transmission from the Web server to a client through the URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-446"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 편리 하 게 액세스 되는 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임에 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-446"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-447">내부적으로 <xref:System.Web.HttpServerUtility.UrlEncode%2A> 사용 하 여 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-447">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="ee09a-448">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-448">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public string UrlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlEncode : string -&gt; string" Usage="httpServerUtility.UrlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-449">The text to URL-encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-449">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-450">URL-encodes a string and returns the encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-450">URL-encodes a string and returns the encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-451">The URL-encoded text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-451">The URL-encoded text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-452">URL 인코딩은 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-452">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="ee09a-453">질문 등의 문자 표시 (?), 앰퍼샌드 (&), 슬래시 (/) 표시 및 공간 잘리거나 일부 브라우저 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-453">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="ee09a-454">결과적으로, 이러한 문자 인코딩해야 `<a>` 태그 또는 쿼리에서 요청 문자열의 브라우저에서 다시 보낼 수 있도록 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-454">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="ee09a-455">이 방법은 편리 하 게 액세스를 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임 시 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-455">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-456">이 메서드는 내부적으로 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-456">Internally, this method uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="ee09a-457">ASP.NET 웹 페이지에 대 한 코드 숨김 파일에서의 인스턴스에 액세스 합니다 <xref:System.Web.HttpServerUtility> 를 통해 클래스는 `Server` 속성.</span><span class="sxs-lookup"><span data-stu-id="ee09a-457">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="ee09a-458">코드 숨김 파일에 없는 클래스에서 사용 하 여 `HttpContext.Current.Server` 의 인스턴스에 액세스 하는 <xref:System.Web.HttpServerUtility> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-458">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="ee09a-459">웹 응용 프로그램을 외부에서 사용할는 <xref:System.Net.WebUtility> 인코딩 또는 디코딩하려면 값 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-459">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-460">다음 예와 어떻게 URL로 인코딩해야 값으로 사용 되는 하이퍼링크의 쿼리 문자열 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-460">The following example shows how to URL-encode a value that is used as a query string value of a hyperlink.</span></span> <span data-ttu-id="ee09a-461">코드를 웹 페이지에 대 한 코드 숨김 파일에 상주합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-461">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="ee09a-462">인코딩할 값 예제를 단순화 하 고 URL로 인코딩할 수 값의 형식을 표시에이 예제에서 하드 코딩 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-462">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode.</span></span> <span data-ttu-id="ee09a-463">일반적으로 URL로 인코딩한 사용자 또는 요청에서 수신 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-463">Typically, you would URL-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="ee09a-464">`NextPage` 참조는 `HyperLink` 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-464">`NextPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="ee09a-465">표시 됩니다 점을 제외 하 고 다음 예제는 이전 예제와 비슷한 방법을 URL로 인코딩해야 클래스 내에서 값에에서 없는 코드 숨김 파일입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-465">The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public void UrlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.UrlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.UrlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-466">The text string to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-466">The text string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="ee09a-467">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-467">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-468">URL-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-468">URL-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-469">URL 인코딩은 모든 브라우저에서 URL 문자열의에서 텍스트를 올바르게 전달할 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-469">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="ee09a-470">질문 등의 문자 표시 (?), 앰퍼샌드 (&), 슬래시 (/) 표시 및 공간 잘리거나 일부 브라우저 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-470">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="ee09a-471">결과적으로, 이러한 문자 인코딩해야 `<a>` 태그 또는 쿼리에서 요청 문자열의 브라우저에서 다시 보낼 수 있도록 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-471">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="ee09a-472"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 편리 하 게 액세스 되는 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> ASP.NET 응용 프로그램에서 런타임에 메서드.</span><span class="sxs-lookup"><span data-stu-id="ee09a-472"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="ee09a-473">내부적으로 <xref:System.Web.HttpServerUtility.UrlEncode%2A> 사용 하 여 <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> 문자열을 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-473">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="ee09a-474">웹 응용 프로그램 외부의 값을 인코딩 또는 디코딩하려면 <xref:System.Net.WebUtility> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-474">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee09a-475">다음 예제에서는 HTTP에서 전송을 위해 문자열로 인코딩합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-475">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="ee09a-476">라는 문자열로 인코딩하도록 `TestString`, 텍스트를 포함 하는 "이를 \<테스트 문자열 >.", 라는 문자열에 복사 `EncodedString` 으로 "이 +는 + a + %3cTest + 문자열 %3e."입니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-476">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This+is+a+%3cTest+String%3e.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public string UrlPathEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlPathEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlPathEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlPathEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlPathEncode : string -&gt; string" Usage="httpServerUtility.UrlPathEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="ee09a-477">The text to URL-encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-477">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-478">Do not use; intended only for browser compatibility.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-478">Do not use; intended only for browser compatibility.</span>
          </span>
          <span data-ttu-id="ee09a-479">Use <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-479">Use <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-480">The URL encoded text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-480">The URL encoded text.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenDecode">
      <MemberSignature Language="C#" Value="public static byte[] UrlTokenDecode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlTokenDecode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenDecode (input As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlTokenDecode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlTokenDecode : string -&gt; byte[]" Usage="System.Web.HttpServerUtility.UrlTokenDecode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="ee09a-481">The URL string token to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-481">The URL string token to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-482">Decodes a URL string token to its equivalent byte array using base 64 digits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-482">Decodes a URL string token to its equivalent byte array using base 64 digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-483">The byte array containing the decoded URL string token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-483">The byte array containing the decoded URL string token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-484"><xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> 메서드 base 64 숫자를 이진 데이터 인코딩하는 URL 문자열 토큰을 해당 하는 바이트 배열 표현으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-484">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</span></span> <span data-ttu-id="ee09a-485">사용 하 여는 <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> 메서드를 디코딩하는 데 토큰 URL에 전송 및를 사용 하 여 인코딩된는 <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-485">Use the <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method to decode tokens transmitted on the URL and encoded by using the <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</span></span>  
  
 <span data-ttu-id="ee09a-486">합니다 <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> 메서드는 빈 바이트 배열을 반환 하는 경우는 `input` 매개 변수 길이가 1 보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-486">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method will return an empty byte array if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-487">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-487">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="UrlTokenEncode">
      <MemberSignature Language="C#" Value="public static string UrlTokenEncode (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlTokenEncode(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenEncode (input As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlTokenEncode(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlTokenEncode : byte[] -&gt; string" Usage="System.Web.HttpServerUtility.UrlTokenEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="ee09a-488">The byte array to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-488">The byte array to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee09a-489">Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-489">Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee09a-490">The string containing the encoded token if the byte array *length* is greater than one; otherwise, an empty string ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-490">The string containing the encoded token if the byte array *length* is greater than one; otherwise, an empty string ("").</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee09a-491"><xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> 메서드는 바이트 배열을 base 64 숫자로 인코딩된 해당 하는 문자열 표현으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-491">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> method converts a byte array into an equivalent string representation encoded with base 64 digits.</span></span> <span data-ttu-id="ee09a-492">결과 문자열 토큰 URL에 전송할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-492">The resulting string token can be transmitted on the URL.</span></span>  
  
 <span data-ttu-id="ee09a-493">합니다 <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> 경우 빈 문자열을 반환 합니다는 `input` 매개 변수 길이가 1 보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="ee09a-493">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> will return an empty string if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee09a-494">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee09a-494">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>