<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpStaticObjectsCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52bf775c4b9ad364aa3552d220c0dacdcaeb9bbf5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bf775c4b9ad364aa3552d220c0dacdcaeb9bbf5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpStaticObjectsCollection">
          <source>Provides a collection of application-scoped objects for the <ph id="ph1">&lt;see cref="P:System.Web.HttpApplicationState.StaticObjects" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpApplicationState.StaticObjects" /&gt;</ph> 속성에 대한 응용 프로그램 범위 개체의 컬렉션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)">
          <source>The array to copy the <ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> into.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph>을 복사할 대상 배열입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)">
          <source>The member of the collection where copying starts.</source>
          <target state="translated">복사를 시작할 컬렉션의 멤버입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies members of an <ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> into an array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph>의 멤버를 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Object&gt;</ph> array of the required size and copies an existing <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt;</ph> collection into it.</source>
          <target state="translated">다음 예제에서는 새 <ph id="ph1">&lt;xref:System.Object&gt;</ph> 필요한 크기의 배열 하 고 기존 복사 <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt;</ph> 컬렉션을 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollection.Count">
          <source>Gets the number of objects in the collection.</source>
          <target state="translated">컬렉션에 있는 개체의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.Count">
          <source>The number of objects in the collection.</source>
          <target state="translated">컬렉션의 개체 수입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.Count">
          <source>The code in the following example executes only if the number of objects in the collection exceeds five.</source>
          <target state="translated">다음 예제에서 코드는 컬렉션의 개체 수가 5 개를 초과 하는 경우에 실행 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph> used to read the serialized collection from a stream or encoded string.</source>
          <target state="translated">스트림이나 인코딩된 문자열에서 serialized 컬렉션을 읽는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.IO.BinaryReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> object from a binary file that was written by using the <ph id="ph2">&lt;see cref="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> 메서드를 사용하여 작성한 이진 파일에서 <ph id="ph2">&lt;see cref="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> populated with the contents from a binary file written using the <ph id="ph2">&lt;see cref="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> 메서드를 사용하여 작성된 이진 파일의 내용으로 채워진 <ph id="ph2">&lt;see cref="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A&gt;</ph> method is used to read the contents of a <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> object that is stored in a storage location that is created by the <ph id="ph3">&lt;xref:System.Web.HttpStaticObjectsCollection.Serialize%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A&gt;</ph> 메서드의 내용을 읽는 데 사용 되는 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> 에 의해 만들어진 저장소 위치에 저장 된 개체는 <ph id="ph3">&lt;xref:System.Web.HttpStaticObjectsCollection.Serialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)">
          <source>To serialize an <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">Serialize 하는 <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection.Serialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.GetEnumerator">
          <source>Returns a dictionary enumerator used for iterating through the key-and-value pairs contained in the collection.</source>
          <target state="translated">컬렉션에 있는 키-값 쌍을 반복 실행하는 데 사용되는 사전 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.GetEnumerator">
          <source>The enumerator for the collection.</source>
          <target state="translated">컬렉션의 열거자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpStaticObjectsCollection.GetEnumerator">
          <source>The following example creates an enumerator for the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt;</ph> collection.</source>
          <target state="translated">다음 예제에서는 대 한 열거자는 <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.GetObject(System.String)">
          <source>The case-insensitive name of the object to return.</source>
          <target state="translated">반환할 개체의 이름으로, 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.GetObject(System.String)">
          <source>Returns the object with the specified name from the collection.</source>
          <target state="translated">컬렉션에서 지정한 이름의 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.GetObject(System.String)">
          <source>This property is an alternative to the <ph id="ph1">&lt;see langword="this" /&gt;</ph> accessor.</source>
          <target state="translated">이 속성은 <ph id="ph1">&lt;see langword="this" /&gt;</ph> 접근자 대신 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.GetObject(System.String)">
          <source>An object from the collection.</source>
          <target state="translated">컬렉션의 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpStaticObjectsCollection.GetObject(System.String)">
          <source>The following example returns an object named ArrayList1 from the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt;</ph> collection and copies it to an object variable.</source>
          <target state="translated">ArrayList1 라는 개체를 반환 하는 다음 예제는 <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt;</ph> 컬렉션 개체 변수에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollection.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.IsReadOnly">
          <source>The code in the following example executes only if the collection is read-only.</source>
          <target state="translated">다음 예제에서 코드에는 컬렉션이 읽기 전용인 경우에 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollection.IsSynchronized">
          <source>Gets a value indicating whether the collection is synchronized (that is, thread-safe).</source>
          <target state="translated">컬렉션이 동기화되는지 여부, 즉 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.IsSynchronized">
          <source>In this implementation, this property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 구현에서 이 속성은 항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollection.Item(System.String)">
          <source>The case-insensitive name of the object to get.</source>
          <target state="translated">가져올 개체의 이름으로, 대/소문자를 구분하지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollection.Item(System.String)">
          <source>Gets the object with the specified name from the collection.</source>
          <target state="translated">컬렉션에서 지정한 이름의 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.Item(System.String)">
          <source>An object from the collection.</source>
          <target state="translated">컬렉션의 개체입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.Item(System.String)">
          <source>The following example retrieves an object named ArrayList1 from the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt;</ph> collection and copies it to an object variable.</source>
          <target state="translated">다음 예제에서는 검색에서 ArrayList1 라는 개체는 <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.StaticObjects%2A&gt;</ph> 컬렉션 개체 변수에 복사 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollection.NeverAccessed">
          <source>Gets a Boolean value indicating whether the collection has been accessed before.</source>
          <target state="translated">컬렉션에 액세스한 적이 있는지 여부를 나타내는 부울 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.NeverAccessed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph> has never been accessed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph>에 액세스한 적이 없으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph> used to write the serialized collection to a stream or encoded string.</source>
          <target state="translated">스트림이나 인코딩된 문자열에 serialized 컬렉션을 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)">
          <source>Writes the contents of the collection to a <ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.BinaryWriter" /&gt;</ph> 개체에 컬렉션의 내용을 씁니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection.Serialize%2A&gt;</ph> method to write the contents of a <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> object to a <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> object.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection.Serialize%2A&gt;</ph> 의 콘텐츠를 작성 하는 메서드는 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> 개체를 한 <ph id="ph3">&lt;xref:System.IO.BinaryWriter&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)">
          <source>To retrieve a serialized <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">serialize 된 검색할 <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> 개체를 가져오려면는 <ph id="ph2">&lt;xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Web.HttpStaticObjectsCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the collection.</source>
          <target state="translated">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.SyncRoot">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Web.HttpStaticObjectsCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.SyncRoot">
          <source>Program code should generally perform synchronized operations on the <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection.SyncRoot%2A&gt;</ph> of a collection, not directly on the collection itself.</source>
          <target state="translated">프로그램 코드에서 일반적으로 동기화 된 작업을 수행 해야는 <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection.SyncRoot%2A&gt;</ph> 컬렉션 자체에서 직접 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">이렇게 하면 다른 개체에서 파생되는 컬렉션에 대해 적절한 작업이 수행됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection object.</source>
          <target state="translated">특히, 컬렉션 개체를 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.SyncRoot">
          <source>The object returned in this implementation is the <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> itself.</source>
          <target state="translated">이 구현에서 반환 되는 개체는 <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> 자체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpStaticObjectsCollection.SyncRoot">
          <source>The following example creates an object used to synchronize access to the <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 개체에 대 한 액세스를 동기화 하는 데는 <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>