<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OnSerializingAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5352742844160c8bb39af82f7fc146b85896b230b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">352742844160c8bb39af82f7fc146b85896b230b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>When applied to a method, specifies that the method is during serialization of an object in an object graph.</source>
          <target state="translated">메서드에 적용할 때 메서드가 개체 그래프에 있는 개체의 serialization 동안에 호출되도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>The order of serialization relative to other objects in the graph is non-deterministic.</source>
          <target state="translated">그래프의 다른 개체에 관한 serialization 순서는 결정적이지 않습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.OnSerializingAttribute&gt;</ph> to manipulate the object before serialization occurs.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.OnSerializingAttribute&gt;</ph> serialization 발생 하기 전에 개체를 조작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>To use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.OnSerializingAttribute&gt;</ph>, the method must contain a <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> parameter.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.OnSerializingAttribute&gt;</ph>, 메서드를 포함 해야 합니다는 <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>The attribute marks the method to be called by the serialization infrastructure and the <ph id="ph1">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> provides additional data about the type of serialization taking place.</source>
          <target state="translated">serialization 인프라에서 호출 될 메서드를 표시 하는 특성 및 <ph id="ph1">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> 수행 하는 serialization 형식에 대 한 추가 데이터를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>The usage is shown in the following code:</source>
          <target state="translated">사용법은 다음 코드에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>In your code, you can use the word <ph id="ph1">`OnSerializing`</ph> instead of the longer <ph id="ph2">&lt;xref:System.Runtime.Serialization.OnSerializingAttribute&gt;</ph>.</source>
          <target state="translated">코딩 시 <ph id="ph1">`OnSerializing`</ph> 대신에 간결하게 <ph id="ph2">&lt;xref:System.Runtime.Serialization.OnSerializingAttribute&gt;</ph>을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>When using binary serialization, the binary serialization process omits the call to the <ph id="ph1">`onSerializing`</ph> method when the serialized  objects are equal.</source>
          <target state="translated">이진 serialization 프로세스에 대 한 호출을 생략 이진 serialization을 사용할 경우의 <ph id="ph1">`onSerializing`</ph> serialize 된 개체가 같은지 메서드.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>Therefore, when using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> type with the <ph id="ph2">`equals`</ph> method (or <ph id="ph3">`Object.GetHashCode`</ph>) for example, the result may be undefined behavior.</source>
          <target state="translated">따라서 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> 형식을 <ph id="ph2">`equals`</ph> 메서드 (또는 <ph id="ph3">`Object.GetHashCode`</ph>) 예를 들어 결과가 정의 되지 않은 동작이 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.OnSerializingAttribute">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Runtime.Serialization.OnDeserializedAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.OnSerializingAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.OnSerializedAttribute&gt;</ph>, and <ph id="ph4">&lt;xref:System.Runtime.Serialization.OnDeserializingAttribute&gt;</ph> attributes to methods in a class.</source>
          <target state="translated">다음 예제에서는 적용는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.OnDeserializedAttribute&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.OnSerializingAttribute&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.OnSerializedAttribute&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Runtime.Serialization.OnDeserializingAttribute&gt;</ph> 클래스의 메서드에 특성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.OnSerializingAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.OnSerializingAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.OnSerializingAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>