<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SerializationBinder.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e75415f14529a35f5aecd70ea45ae71ba4fe0669.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e75415f14529a35f5aecd70ea45ae71ba4fe0669</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>Allows users to control class loading and mandate what class to load.</source>
          <target state="translated">사용자가 클래스 로딩을 제어하고 로드할 클래스를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</source>
          <target state="translated">serialization 도중에, 포맷터는 올바른 형식 및 버전의 개체 인스턴스를 만드는 데 필요한 정보를 전송합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>This information generally includes the full type name and assembly name of the object.</source>
          <target state="translated">이 정보에는 일반적으로 개체에 대한 어셈블리 이름 및 전체 형식 이름이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>The assembly name includes the name, version, and strong name (see <bpt id="p1">[</bpt>Strong-Named Assemblies<ept id="p1">](~/docs/framework/app-domains/strong-named-assemblies.md)</ept>) hash of the assembly.</source>
          <target state="translated">이름, 버전 및 강력한 이름 어셈블리 이름이 포함 됩니다 (참조 <bpt id="p1">[</bpt>강력한 이름의 어셈블리<ept id="p1">](~/docs/framework/app-domains/strong-named-assemblies.md)</ept>) 어셈블리의 해시입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</source>
          <target state="translated">기본적으로, deserialization은 이 정보를 사용하여 동일한 개체의 인스턴스를 만듭니다. 보안 정책에 의해 제한되는 어셈블리 로딩은 예외입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</source>
          <target state="translated">클래스가 어셈블리 간에 이동하거나 서버와 클라이언트에서 서로 다른 버전의 클래스를 필요로 하므로 일부 사용자는 로드할 클래스를 제어해야 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> can also be used for security.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> 보안을 위해 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>There might be some security exploits when you are trying to deserialize some data from an untrusted source.</source>
          <target state="translated">신뢰할 수 없는 소스에서 데이터를 deserialize 하려고 시도할 때에 몇 가지 보안 위험 요소 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>The binder gives you an opportunity to inspect what types are being loaded in your application domain.</source>
          <target state="translated">바인더는 형식을 응용 프로그램 도메인에서 로드 되 고 검사할 기회를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>You can then either maintain list of denied types or a list of allowed types and restrict which types are being loaded and instantiated.</source>
          <target state="translated">거부 된 형식의 목록 또는 허용된 유형 목록 유지 관리 하 고 있는 형식을 로드 하는 제한 하거나 다음 수 되며 인스턴스화됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>In addition you should be mindful of what information is being put out on the wire, you may want to secure (use transport or message security) when sending type names or other data on the wire.</source>
          <target state="translated">또한 유념 하는 것의 어떤 정보가 통신 중에 입력 되 고, (사용 하 여 전송 또는 메시지 보안)를 보호 하려는 경우 통신 중에 형식 이름 또는 기타 데이터를 보낼 때.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>Only use <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> if you are completely sure of what information is being serialized.</source>
          <target state="translated">만 사용 하 여 <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationBinder&gt;</ph> 의 정보는 serialize 되 고 완전히 확신 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>Malicious types can cause unexpected behavior.</source>
          <target state="translated">악의적인 형식이 예기치 않은 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>This is an abstract base class.</source>
          <target state="translated">이 클래스는 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>All binders extend this class.</source>
          <target state="translated">이 클래스를 확장 하는 모든 바인더입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.SerializationBinder">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph>, you must override the following member: <ph id="ph2">&lt;see cref="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph>에서 상속하는 경우 <ph id="ph2">&lt;see cref="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)" /&gt;</ph> 멤버를 재정의해야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
          <source>The type of the object the formatter creates a new instance of.</source>
          <target state="translated">포맷터가 새 인스턴스를 만드는 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> name of the serialized object.</source>
          <target state="translated">직렬화된 개체의 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> name of the serialized object.</source>
          <target state="translated">직렬화된 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)">
          <source>When overridden in a derived class, controls the binding of a serialized object to a type.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 형식으로 직렬화된 개체의 바인딩을 제어합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> name of the serialized object.</source>
          <target state="translated">직렬화된 개체의 <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> name of the serialized object.</source>
          <target state="translated">직렬화된 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
          <source>When overridden in a derived class, controls the binding of a serialized object to a type.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 형식으로 직렬화된 개체의 바인딩을 제어합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
          <source>The type of the object the formatter creates a new instance of.</source>
          <target state="translated">포맷터가 새 인스턴스를 만드는 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
          <source>SerializationBinder Example#1</source>
          <target state="translated">SerializationBinder 예제 #1</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)">
          <source>You must implement the current method in a derived class.</source>
          <target state="translated">파생된 클래스에서 현재 메서드를 구현 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>