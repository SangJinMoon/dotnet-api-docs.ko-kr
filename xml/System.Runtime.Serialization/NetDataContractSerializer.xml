<Type Name="NetDataContractSerializer" FullName="System.Runtime.Serialization.NetDataContractSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccb631cab80ff9cb6132f71832ca544b88cb27b0" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46631089" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NetDataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer, System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetDataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer implements class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.NetDataContractSerializer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NetDataContractSerializer&#xA;Inherits XmlObjectSerializer&#xA;Implements IFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetDataContractSerializer sealed : System::Runtime::Serialization::XmlObjectSerializer, System::Runtime::Serialization::IFormatter" />
  <TypeSignature Language="F#" Value="type NetDataContractSerializer = class&#xA;    inherit XmlObjectSerializer&#xA;    interface IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="79a57-101">제공된 .NET Framework 형식을 사용하여 형식의 인스턴스를 XML 스트림 또는 문서로 serialize하거나 deserialize합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79a57-101">Serializes and deserializes an instance of a type into XML stream or document using the supplied .NET Framework types.</span>
      </span>
      <span data-ttu-id="79a57-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79a57-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-103"><xref:System.Runtime.Serialization.NetDataContractSerializer>와 <xref:System.Runtime.Serialization.DataContractSerializer>의 중요한 차이점 하나는, <xref:System.Runtime.Serialization.NetDataContractSerializer>에는 serialize된 XML로 CLR 형식 정보가 포함되지만 <xref:System.Runtime.Serialization.DataContractSerializer>에는 포함되지 않는다는 점입니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-103">The <xref:System.Runtime.Serialization.NetDataContractSerializer> differs from the <xref:System.Runtime.Serialization.DataContractSerializer> in one important way: the <xref:System.Runtime.Serialization.NetDataContractSerializer> includes CLR type information in the serialized XML, whereas the <xref:System.Runtime.Serialization.DataContractSerializer> does not.</span></span> <span data-ttu-id="79a57-104">따라서 serialize측과 deserialize측이 모두 동일한 CLR 형식을 공유하는 경우에만 <xref:System.Runtime.Serialization.NetDataContractSerializer>를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-104">Therefore, the <xref:System.Runtime.Serialization.NetDataContractSerializer> can be used only if both the serializing and deserializing ends share the same CLR types.</span></span>  
  
 <span data-ttu-id="79a57-105">이 serializer는 <xref:System.Runtime.Serialization.DataContractAttribute> 또는 <xref:System.SerializableAttribute> 특성이 적용된 형식을 serialize할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-105">The serializer can serialize types to which either the <xref:System.Runtime.Serialization.DataContractAttribute> or <xref:System.SerializableAttribute> attribute has been applied.</span></span> <span data-ttu-id="79a57-106">또한 <xref:System.Runtime.Serialization.ISerializable>을 구현하는 형식도 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-106">It also serializes types that implement <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 <span data-ttu-id="79a57-107">Serialization에 대 한 자세한 내용은 참조 하세요. [Serialization 및 Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-107">For more information about serialization, see [Serialization and Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).</span></span>  
  
## <a name="incompatibility-with-xelement"></a><span data-ttu-id="79a57-108">XElement와의 비호환성</span><span class="sxs-lookup"><span data-stu-id="79a57-108">Incompatibility with XElement</span></span>  
 <span data-ttu-id="79a57-109"><xref:System.Xml.Linq.XElement> 클래스는 XML을 쓰는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-109">The <xref:System.Xml.Linq.XElement> class is used to write XML.</span></span> <span data-ttu-id="79a57-110">하지만 `NetDataContractSerializer`는 형식의 인스턴스를 serialize할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-110">However, the `NetDataContractSerializer` cannot serialize an instance of the type.</span></span> <span data-ttu-id="79a57-111">다음 코드에서 예외를 사용 하 여 따라서 실패: "루트 형식 'System.Xml.Linq.XElement'는 지원 되지 않습니다 최상위 수준에서 NetDataContractSerializer에 의해 인 ixmlserializable `IsAny` = `true` 모든 작성 해야 하 고 포함 한 내용을 루트 요소입니다. "</span><span class="sxs-lookup"><span data-stu-id="79a57-111">The following code, therefore, fails with the exception: "Root type 'System.Xml.Linq.XElement' is not supported at the top level by NetDataContractSerializer since it is IXmlSerializable with `IsAny`=`true` and must write all its contents including the root element."</span></span>  
  
 [!code-csharp[NetDataContractSerializer#15](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#15)]
 [!code-vb[NetDataContractSerializer#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#15)]  
  
 <span data-ttu-id="79a57-112">하지만 `XElement`가 클래스의 필드 또는 속성 형식으로 사용되는 경우 필드나 속성에 포함된 데이터는 serialize됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-112">However, if an `XElement` is used as the type of a field or property of a class, the data contained by the field or property is serialized.</span></span> <span data-ttu-id="79a57-113">그 이유는 클래스의 멤버인 데이터는 클래스의 최상위 수준이 아니기 때문입니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-113">This is because as a member of a class, the data is not the top level of the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79a57-114">다음 예제 코드에서는 `Person`에 의해 serialize되는 <xref:System.Runtime.Serialization.NetDataContractSerializer>이라는 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-114">The following example code shows a type named `Person` that is serialized by the <xref:System.Runtime.Serialization.NetDataContractSerializer>.</span></span> <span data-ttu-id="79a57-115"><xref:System.Runtime.Serialization.DataContractAttribute> 특성은 클래스에 적용되고 <xref:System.Runtime.Serialization.DataMemberAttribute>는 멤버(private 멤버 포함)에 적용되어 <xref:System.Runtime.Serialization.NetDataContractSerializer>에 serialize할 대상을 알려 줍니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-115">The <xref:System.Runtime.Serialization.DataContractAttribute> attribute is applied to the class, and the <xref:System.Runtime.Serialization.DataMemberAttribute> is applied to members (including a private member) to instruct the <xref:System.Runtime.Serialization.NetDataContractSerializer> what to serialize.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#0](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#0)]
 [!code-vb[NetDataContractSerializer#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.NetDataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XmlObjectSerializer" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/serialization-and-deserialization.md">
      <span data-ttu-id="79a57-116">Serialization 및 Deserialization</span>
      <span class="sxs-lookup">
        <span data-stu-id="79a57-116">Serialization and Deserialization</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-117">
            <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-117">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79a57-118">
            <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-118">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[NetDataContractSerializer#8](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#8)]
 [!code-vb[NetDataContractSerializer#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="79a57-119">컨텍스트 데이터를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-119">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-120">제공된 스트리밍 컨텍스트 데이터를 사용하여 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-120">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied streaming context data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-121"><xref:System.Runtime.Serialization.StreamingContext> 클래스를 사용하면 개체를 읽고 쓰는 동안 사용할 사용자별 컨텍스트 데이터를 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-121">The <xref:System.Runtime.Serialization.StreamingContext> class allows you to pass in user-specific context data to use while reading and writing objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79a57-122">다음 예제에서는 <xref:System.Runtime.Serialization.NetDataContractSerializer>를 사용하여 <xref:System.Runtime.Serialization.StreamingContext>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-122">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> using a <xref:System.Runtime.Serialization.StreamingContext>.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#9](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#9)]
 [!code-vb[NetDataContractSerializer#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As String, rootNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::String ^ rootName, System::String ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : string * string -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (rootName, rootNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootName">
          <span data-ttu-id="79a57-123">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-123">The name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="79a57-124">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-124">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-125">제공된 XML 루트 요소와 네임스페이스를 사용하여 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-125">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied XML root element and namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79a57-126">다음 예제에서는 개체를 deserialize할 때 필요한 XML 루트 요소와 네임스페이스를 지정하는 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-126">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> specifying the XML root element and namespace it will expect when deserializing an object.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#10)]
 [!code-vb[NetDataContractSerializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (rootName, rootNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="rootName">
          <span data-ttu-id="79a57-127">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 이름을 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-127">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="79a57-128">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스를 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-128">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-129">콘텐츠를 지정하는 데 사용되는 루트 요소와 네임스페이스를 포함하는 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 형식의 두 매개 변수를 사용하여 <see cref="T:System.Xml.XmlDictionaryString" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-129">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with two parameters of type <see cref="T:System.Xml.XmlDictionaryString" /> that contain the root element and namespace used to specify the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-130">여러 개체 인스턴스에 동일한 문자열 집합을 사용할 때 <xref:System.Xml.XmlDictionaryString>을 사용하면 성능을 최적화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-130">The <xref:System.Xml.XmlDictionaryString> can be used to optimize performance when the same set of strings is used across object instances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79a57-131">다음 예제에서는 개체를 deserialize할 때 필요한 XML 루트 요소와 네임스페이스를 <xref:System.Runtime.Serialization.DataContractSerializer> 인수로 지정하는 <xref:System.Xml.XmlDictionaryString>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-131">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> specifying the XML root element and namespace (as <xref:System.Xml.XmlDictionaryString> arguments) it will expect when deserializing an object.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#11](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#11)]
 [!code-vb[NetDataContractSerializer#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : System.Runtime.Serialization.StreamingContext * int * bool * System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.ISurrogateSelector -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (context, maxItemsInObjectGraph, ignoreExtensionDataObject, assemblyFormat, surrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="79a57-132">컨텍스트 데이터를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-132">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="79a57-133">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-133">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="79a57-134">형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-134">
              <see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="assemblyFormat">
          <span data-ttu-id="79a57-135">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-135">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span>
          </span>
        </param>
        <param name="surrogateSelector">
          <span data-ttu-id="79a57-136">
            <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-136">An implementation of the <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-137">제공된 컨텍스트 데이터를 사용하여 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 클래스의 새 인스턴스를 초기화하고 serialize할 개체에 있는 최대 항목 수, 추가 데이터의 무시 여부를 지정하는 매개 변수, 어셈블리 로딩 메서드, 서로게이트 선택기를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-137">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-138">`ignoreExtensionDataObject` 매개 변수는 serialize하거나 deserialize할 클래스에서 <xref:System.Runtime.Serialization.IExtensibleDataObject> 인터페이스를 구현할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-138">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79a57-139">다음 예제에서는 <xref:System.Runtime.Serialization.NetDataContractSerializer>를 사용하여 <xref:System.Runtime.Serialization.StreamingContext>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-139">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> using a <xref:System.Runtime.Serialization.StreamingContext>.</span></span> <span data-ttu-id="79a57-140">또한 이 코드는 `ignoreExtensionDataObject`를 설정하고, 레거시 형식을 deserialize하기 위한 서로게이트를 선택할 때 serializer 지원을 처리할 `ISurrogateSelector` 인터페이스의 구현을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-140">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the `ISurrogateSelector` interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#12](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#12)]
 [!code-vb[NetDataContractSerializer#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="79a57-141">
            <paramref name="maxItemsInObjectGraph" /> 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-141">
              <paramref name="maxItemsInObjectGraph" /> value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (string rootName, string rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string rootName, string rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As String, rootNamespace As String, context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::String ^ rootName, System::String ^ rootNamespace, System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : string * string * System.Runtime.Serialization.StreamingContext * int * bool * System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.ISurrogateSelector -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (rootName, rootNamespace, context, maxItemsInObjectGraph, ignoreExtensionDataObject, assemblyFormat, surrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName">
          <span data-ttu-id="79a57-142">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-142">The name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="79a57-143">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-143">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="79a57-144">컨텍스트 데이터를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-144">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="79a57-145">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-145">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="79a57-146">형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-146">
              <see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="assemblyFormat">
          <span data-ttu-id="79a57-147">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-147">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span>
          </span>
        </param>
        <param name="surrogateSelector">
          <span data-ttu-id="79a57-148">레거시 형식을 처리할 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-148">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to handle the legacy type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-149">제공된 컨텍스트 데이터와 루트 이름 및 네임스페이스를 사용하여 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 클래스의 새 인스턴스를 초기화하고 serialize할 개체에 있는 최대 항목 수, 추가 데이터의 무시 여부를 지정하는 매개 변수, 어셈블리 로딩 메서드, 서로게이트 선택기를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-149">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data and root name and namespace; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-150">`ignoreExtensionDataObject` 매개 변수는 serialize하거나 deserialize할 클래스에서 <xref:System.Runtime.Serialization.IExtensibleDataObject> 인터페이스를 구현할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-150">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79a57-151">다음 예제에서는 deserialize할 때 필요한 XML 요소 이름과 네임스페이스를 지정하는 <xref:System.Runtime.Serialization.NetDataContractSerializer>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-151">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> specifying the XML element name and namespace to expect when deserializing.</span></span> <span data-ttu-id="79a57-152">또한 이 코드는 `ignoreExtensionDataObject`를 설정하고, 레거시 형식을 deserialize하기 위한 서로게이트를 선택할 때 serializer 지원을 처리할 <xref:System.Runtime.Serialization.ISurrogateSelector> 인터페이스의 구현을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-152">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the <xref:System.Runtime.Serialization.ISurrogateSelector> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#13](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#13)]
 [!code-vb[NetDataContractSerializer#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="79a57-153">
            <paramref name="maxItemsInObjectGraph" /> 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-153">
              <paramref name="maxItemsInObjectGraph" /> value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetDataContractSerializer (System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Runtime.Serialization.StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, System.Runtime.Serialization.ISurrogateSelector surrogateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, valuetype System.Runtime.Serialization.StreamingContext context, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle assemblyFormat, class System.Runtime.Serialization.ISurrogateSelector surrogateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootName As XmlDictionaryString, rootNamespace As XmlDictionaryString, context As StreamingContext, maxItemsInObjectGraph As Integer, ignoreExtensionDataObject As Boolean, assemblyFormat As FormatterAssemblyStyle, surrogateSelector As ISurrogateSelector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetDataContractSerializer(System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Runtime::Serialization::StreamingContext context, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, System::Runtime::Serialization::Formatters::FormatterAssemblyStyle assemblyFormat, System::Runtime::Serialization::ISurrogateSelector ^ surrogateSelector);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.NetDataContractSerializer : System.Xml.XmlDictionaryString * System.Xml.XmlDictionaryString * System.Runtime.Serialization.StreamingContext * int * bool * System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.ISurrogateSelector -&gt; System.Runtime.Serialization.NetDataContractSerializer" Usage="new System.Runtime.Serialization.NetDataContractSerializer (rootName, rootNamespace, context, maxItemsInObjectGraph, ignoreExtensionDataObject, assemblyFormat, surrogateSelector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="assemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="surrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      </Parameters>
      <Docs>
        <param name="rootName">
          <span data-ttu-id="79a57-154">콘텐츠의 루트 요소를 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-154">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="79a57-155">루트 요소의 네임스페이스를 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-155">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="79a57-156">컨텍스트 데이터를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-156">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains context data.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="79a57-157">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-157">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="79a57-158">형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-158">
              <see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="assemblyFormat">
          <span data-ttu-id="79a57-159">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-159">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span>
          </span>
        </param>
        <param name="surrogateSelector">
          <span data-ttu-id="79a57-160">레거시 형식을 처리할 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-160">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to handle the legacy type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-161">제공된 컨텍스트 데이터와 루트 이름 및 네임스페이스를 <see cref="T:System.Xml.XmlDictionaryString" /> 매개 변수로 사용하여 <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> 클래스의 새 인스턴스를 초기화하고 serialize할 개체에 있는 최대 항목 수, 발견된 추가 데이터의 무시 여부를 지정하는 매개 변수, 어셈블리 로딩 메서드, 서로게이트 선택기를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-161">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /> class with the supplied context data, and root name and namespace (as <see cref="T:System.Xml.XmlDictionaryString" /> parameters); in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data found is ignored, assembly loading method, and a surrogate selector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-162">여러 개체 인스턴스에 동일한 문자열 집합을 사용할 때 <xref:System.Xml.XmlDictionaryString>을 사용하면 성능을 최적화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-162">The <xref:System.Xml.XmlDictionaryString> can be used to optimize performance when the same set of strings is used across object instances.</span></span>  
  
 <span data-ttu-id="79a57-163">`ignoreExtensionDataObject` 매개 변수는 serialize하거나 deserialize할 클래스에서 <xref:System.Runtime.Serialization.IExtensibleDataObject> 인터페이스를 구현할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-163">The `ignoreExtensionDataObject` parameter is used when the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface is implemented in the class that is being serialized or deserialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79a57-164">다음 예제에서는 deserialize할 때 필요한 XML 요소 이름과 네임스페이스를 <xref:System.Runtime.Serialization.NetDataContractSerializer> 인수로 지정하는 <xref:System.Xml.XmlDictionaryString>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-164">The following example creates an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer> specifying the XML element name and namespace (as <xref:System.Xml.XmlDictionaryString> arguments) to expect when deserializing.</span></span> <span data-ttu-id="79a57-165">또한 이 코드는 `ignoreExtensionDataObject`를 설정하고, 레거시 형식을 deserialize하기 위한 서로게이트를 선택할 때 serializer 지원을 처리할 <xref:System.Runtime.Serialization.ISurrogateSelector> 인터페이스의 구현을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-165">The code also sets the `ignoreExtensionDataObject`, and specifies an implementation of the <xref:System.Runtime.Serialization.ISurrogateSelector> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</span></span>  
  
 [!code-csharp[NetDataContractSerializer#14](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#14)]
 [!code-vb[NetDataContractSerializer#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="79a57-166">
            <paramref name="maxItemsInObjectGraph" /> 값이 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-166">
              <paramref name="maxItemsInObjectGraph" /> value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle AssemblyFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-167">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-167">Gets a value that specifies a method for locating and loading assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79a57-168">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 열거형 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-168">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> enumeration value that specifies a method for locating and loading assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-169">`AssemblyFormat` 인스턴스는 <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full> 또는 <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple>이라는 두 가지 스타일을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-169">An `AssemblyFormat` instance can have two styles: <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full> or <xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple>.</span></span> <span data-ttu-id="79a57-170">`Simple`을 지정하면 한 버전의 형식을 다른 버전에서 serialize된 인스턴스에서 로드하여 deserialize할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-170">Specifying `Simple` allows types in one version to be loaded and deserialized from an instance serialized from a different version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79a57-171">설정되는 값이 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 값 중 어느 것과도 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-171">The value being set does not correspond to any of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binder : System.Runtime.Serialization.SerializationBinder with get, set" Usage="System.Runtime.Serialization.NetDataContractSerializer.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-172">클래스 로딩을 제어하는 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-172">Gets or sets an object that controls class loading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79a57-173">현재 포맷터에 사용되는 <see cref="T:System.Runtime.Serialization.SerializationBinder" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-173">The <see cref="T:System.Runtime.Serialization.SerializationBinder" /> used with the current formatter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-174">serialization 도중에, 포맷터는 올바른 형식 및 버전의 개체 인스턴스를 만드는 데 필요한 정보를 전송합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-174">During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</span></span> <span data-ttu-id="79a57-175">이 정보에는 일반적으로 개체에 대한 어셈블리 이름 및 전체 형식 이름이 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-175">This information generally includes the full type name and assembly name of the object.</span></span> <span data-ttu-id="79a57-176">어셈블리 이름에는 이름, 버전, 어셈블리의 강력한 이름 해시가 포함됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-176">The assembly name includes the name, version, and strong name hash of the assembly.</span></span> <span data-ttu-id="79a57-177">기본적으로, deserialization은 이 정보를 사용하여 동일한 개체의 인스턴스를 만듭니다. 보안 정책에 의해 제한되는 어셈블리 로딩은 예외입니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-177">By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</span></span> <span data-ttu-id="79a57-178">클래스가 어셈블리 간에 이동하거나 서버와 클라이언트에서 서로 다른 버전의 클래스를 필요로 하므로 일부 사용자는 로드할 클래스를 제어해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-178">Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Runtime.Serialization.StreamingContext with get, set" Usage="System.Runtime.Serialization.NetDataContractSerializer.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-179">serialize하거나 deserialize하는 동안 유용한 컨텍스트 데이터를 전달할 수 있는 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-179">Gets or sets the object that enables the passing of context data that is useful while serializing or deserializing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79a57-180">컨텍스트 데이터를 포함하는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-180">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the context data.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream -&gt; obj&#xA;override this.Deserialize : System.IO.Stream -&gt; obj" Usage="netDataContractSerializer.Deserialize stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="79a57-181">deserialize할 XML을 포함하는 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-181">A <see cref="T:System.IO.Stream" /> that contains the XML to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-182">XML 문서 또는 스트림을 개체로 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-182">Deserializes an XML document or stream into an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79a57-183">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-183">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-184">이 메서드는 기본 형식이 텍스트 XML이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-184">This method assumes the default format is text XML.</span></span>  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreExtensionDataObject : bool" Usage="System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-185">개체 확장에서 제공하는 데이터를 무시하는지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-185">Gets a value that specifies whether data supplied by an extension of the object is ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79a57-186">형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-186">
              <see langword="true" /> to ignore the data supplied by an extension of the type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-187"><xref:System.Runtime.Serialization.IExtensibleDataObject>를 구현할 때 <xref:System.Runtime.Serialization.ExtensionDataObject>를 사용하여 이후 버전 형식의 데이터를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-187">When implementing the <xref:System.Runtime.Serialization.IExtensibleDataObject>, data from a future version of a type can be stored by the <xref:System.Runtime.Serialization.ExtensionDataObject>.</span></span> <span data-ttu-id="79a57-188">개체가 deserialize되고 변경된 후 다시 serialize되는 라운드트립 중에 추가 데이터가 저장되고 다시 serialize됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-188">During a round trip (where an object is deserialized, altered, and serialized again), the extra data is stored and serialized again.</span></span> <span data-ttu-id="79a57-189">자세한 내용은 [Serialization 및 Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-189">For more information, see [Serialization and Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-190">deserialize할 수 있는 개체에 판독기가 배치되는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-190">Determines whether the reader is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-191">이 과정은 `ReadObject` 인터페이스의 `IFormatter` 메서드를 사용하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-191">This is equivalent to using the `ReadObject` method of the `IFormatter` interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.IsStartObject : System.Xml.XmlDictionaryReader -&gt; bool" Usage="netDataContractSerializer.IsStartObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="79a57-192">읽을 XML을 포함하는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-192">An <see cref="T:System.Xml.XmlDictionaryReader" /> that contains the XML to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-193">지정된 판독기를 사용하여 deserialize할 수 있는 개체에 <see cref="T:System.Xml.XmlDictionaryReader" />가 배치되는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-193">Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized using the specified reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79a57-194">판독기가 읽을 스트림의 시작 요소에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-194">
              <see langword="true" />, if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-195"><xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A>는 판독기가 배치되는 XML 요소의 이름과 네임스페이스를 검사하고 예상 이름 및 네임스페이스와 값을 비교하여 개체를 읽을 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-195">The <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="79a57-196">예상 이름 및 네임스페이스는 생성자로 전달된 형식의 데이터 계약 이름과 네임스페이스 또는 생성자로 전달된 `rootName` 및 `rootNamespace` 값(있는 경우)을 사용하여 설정될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-196">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="79a57-197">`rootName`, `rootNamespace`, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType> 생성자에서 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType>과 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType>를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-197">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79a57-198">
            <paramref name="reader" />가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-198">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.IsStartObject : System.Xml.XmlReader -&gt; bool" Usage="netDataContractSerializer.IsStartObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="79a57-199">읽을 XML을 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-199">An <see cref="T:System.Xml.XmlReader" /> that contains the XML to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-200">지정된 판독기를 사용하여 deserialize할 수 있는 개체에 <see cref="T:System.Xml.XmlReader" />가 배치되는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-200">Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized using the specified reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79a57-201">판독기가 읽을 스트림의 시작 요소에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-201">
              <see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79a57-202">
            <paramref name="reader" />가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-202">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxItemsInObjectGraph : int" Usage="System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-203">serialize할 개체에 허용되는 최대 항목 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-203">Gets the maximum number of items allowed in the object to be serialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79a57-204">개체에 허용되는 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-204">The maximum number of items allowed in the object.</span>
          </span>
          <span data-ttu-id="79a57-205">기본값은 <see cref="F:System.Int32.MaxValue" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-205">The default is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-206">할당량 설정에 대 한 자세한 내용은 참조 하세요. [데이터에 대 한 보안 고려 사항](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-206">For more information about setting quotas, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-207">XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-207">Reads the XML stream or document and returns the deserialized object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlReader -&gt; obj" Usage="netDataContractSerializer.ReadObject reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="79a57-208">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-208">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-209">
            <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-209">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79a57-210">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-210">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79a57-211">
            <paramref name="reader" />가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-211">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlDictionaryReader * bool -&gt; obj" Usage="netDataContractSerializer.ReadObject (reader, verifyObjectName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="79a57-212">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-212">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="79a57-213">바깥쪽 XML 요소 이름과 네임스페이스가 serializer를 생성하는 데 사용된 루트 이름 및 루트 네임스페이스와 일치하는지 확인하려면 <see langword="true" />이고, 확인을 건너뛰려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-213">
              <see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; <see langword="false" /> to skip the verification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-214">
            <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다. 또한 개체 데이터가 serializer를 만드는 데 사용되는 이름과 네임스페이스를 따르는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-214">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79a57-215">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-215">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-216">`verifyObjectName` 매개 변수는 판독기가 배치된 XML 요소의 이름과 네임스페이스를 검사하고 예상 이름 및 네임스페이스와 값을 비교하여 개체를 읽을 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-216">The `verifyObjectName` parameter determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="79a57-217">예상 이름 및 네임스페이스는 생성자로 전달된 형식의 데이터 계약 이름과 네임스페이스 또는 생성자로 전달된 `rootName` 및 `rootNamespace` 값(있는 경우)을 사용하여 설정될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-217">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="79a57-218">`rootName`, `rootNamespace`, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29> 생성자에서 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>과 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-218">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>.</span></span>  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79a57-219">
            <paramref name="reader" />가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-219">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberSignature Language="F#" Value="override this.ReadObject : System.Xml.XmlReader * bool -&gt; obj" Usage="netDataContractSerializer.ReadObject (reader, verifyObjectName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="79a57-220">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-220">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="79a57-221">바깥쪽 XML 요소 이름과 네임스페이스가 serializer를 생성하는 데 사용된 루트 이름 및 루트 네임스페이스와 일치하는지 확인하려면 <see langword="true" />이고, 확인을 건너뛰려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-221">
              <see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; <see langword="false" /> to skip the verification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-222">
            <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다. 또한 개체 데이터가 serializer를 만드는 데 사용되는 이름과 네임스페이스를 따르는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-222">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79a57-223">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-223">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-224">`verifyObjectName` 매개 변수는 판독기가 배치된 XML 요소의 이름과 네임스페이스를 검사하고 예상 이름 및 네임스페이스와 값을 비교하여 개체를 읽을 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-224">The `verifyObjectName` parameter determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</span></span> <span data-ttu-id="79a57-225">예상 이름 및 네임스페이스는 생성자로 전달된 형식의 데이터 계약 이름과 네임스페이스 또는 생성자로 전달된 `rootName` 및 `rootNamespace` 값(있는 경우)을 사용하여 설정될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-225">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
 <span data-ttu-id="79a57-226">`rootName`, `rootNamespace`, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29> 생성자에서 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>과 <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-226">You can set the `rootName` and `rootNamespace` in the following constructors: <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29>, <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29>.</span></span>  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79a57-227">
            <paramref name="reader" />가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-227">the <paramref name="reader" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream stream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ stream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj -&gt; unit&#xA;override this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="netDataContractSerializer.Serialize (stream, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="79a57-228">serialize할 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-228">The <see cref="T:System.IO.Stream" /> to serialize with.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="79a57-229">serialize할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-229">The object to serialize.</span>
          </span>
          <span data-ttu-id="79a57-230">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-230">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-231">지정된 작성기를 사용하여 지정된 개체 그래프를 serialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-231">Serializes the specified object graph using the specified writer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-232">serialization을 위한 서로게이트를 선택할 때 포맷터를 지원하는 개체를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-232">Gets or sets an object that assists the formatter when selecting a surrogate for serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79a57-233">서로게이트를 선택하기 위한 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-233">An <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> for selecting a surrogate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-234">에 대 한 자세한 내용은 합니다 <xref:System.Runtime.Serialization.IDataContractSurrogate>를 참조 하세요 [데이터 계약 서로게이트](~/docs/framework/wcf/extending/data-contract-surrogates.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-234">For more information about the <xref:System.Runtime.Serialization.IDataContractSurrogate>, see [Data Contract Surrogates](~/docs/framework/wcf/extending/data-contract-surrogates.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISurrogateSelector" />
        <altmember cref="T:System.Runtime.Serialization.IFormatter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-235">지정된 작성기를 사용하여 닫기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-235">Writes the closing XML element using the specified writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-236">쓰기 시작, 콘텐츠 쓰기 및 쓰기 종료의 패턴으로 전체 serialization을 쓰기 위해 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 및 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 메서드가 연속적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-236">The <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="79a57-237">이 세 가지 메서드는 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> 메서드에서도 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-237">The three methods are also called by the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="netDataContractSerializer.WriteEndObject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="79a57-238">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-238">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-239">
            <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 닫기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-239">Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79a57-240">다음 예제에서는 serialize할 개체, <xref:System.Runtime.Serialization.NetDataContractSerializer>의 인스턴스 및 <xref:System.Xml.XmlDictionaryWriter> 클래스의 인스턴스를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-240">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="79a57-241">이 예제에서는 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 메서드를 사용하여 XML 문서에 개체를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-241">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79a57-242">
            <paramref name="writer" />가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-242">the <paramref name="writer" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : System.Xml.XmlWriter -&gt; unit" Usage="netDataContractSerializer.WriteEndObject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="79a57-243">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-243">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-244">
            <see cref="T:System.Xml.XmlWriter" />를 사용하여 닫기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-244">Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79a57-245">
            <paramref name="writer" />가 <see langword="null" />로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-245">the <paramref name="writer" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObject : System.Xml.XmlWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="79a57-246">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-246">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="79a57-247">쓸 콘텐츠를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-247">The object containing the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-248">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서 또는 스트림에 개체의 전체 콘텐츠(시작, 콘텐츠, 끝)를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-248">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="79a57-249">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-249">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="79a57-250">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-250">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="79a57-251">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-251">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="79a57-252">serialize할 최대 개체 수가 초과된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-252">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="79a57-253">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-253">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-254">지정된 작성기를 사용하여 XML 콘텐츠를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-254">Writes the XML content using the specified writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79a57-255">쓰기 시작, 콘텐츠 쓰기 및 쓰기 종료의 패턴으로 전체 serialization을 쓰기 위해 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A> 및 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 메서드가 연속적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-255">The <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="79a57-256">이 세 가지 메서드는 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> 메서드에서도 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-256">The three methods are also called by the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObjectContent : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteObjectContent (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="79a57-257">XML 콘텐츠를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-257">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML content.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="79a57-258">serialize할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-258">The object to serialize.</span>
          </span>
          <span data-ttu-id="79a57-259">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-259">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-260">
            <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 XML 콘텐츠를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-260">Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79a57-261">다음 예제에서는 serialize할 개체, <xref:System.Runtime.Serialization.NetDataContractSerializer>의 인스턴스 및 <xref:System.Xml.XmlDictionaryWriter> 클래스의 인스턴스를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-261">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="79a57-262">이 예제에서는 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 메서드를 사용하여 XML 문서에 개체를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-262">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="79a57-263">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-263">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="79a57-264">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-264">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="79a57-265">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-265">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="79a57-266">serialize할 최대 개체 수가 초과된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-266">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="79a57-267">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-267">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteObjectContent : System.Xml.XmlWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteObjectContent (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="79a57-268">XML 콘텐츠를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-268">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML content.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="79a57-269">serialize할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-269">The object to serialize.</span>
          </span>
          <span data-ttu-id="79a57-270">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-270">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-271">
            <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 콘텐츠를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-271">Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="79a57-272">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-272">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="79a57-273">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-273">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="79a57-274">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-274">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="79a57-275">serialize할 최대 개체 수가 초과된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-275">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="79a57-276">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-276">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79a57-277">지정된 작성기를 사용하여 열기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-277">Writes the opening XML element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xml.XmlDictionaryWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteStartObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="79a57-278">XML 요소를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-278">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="79a57-279">serialize할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-279">The object to serialize.</span>
          </span>
          <span data-ttu-id="79a57-280">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-280">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-281">
            <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 열기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-281">Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79a57-282">다음 예제에서는 serialize할 개체, <xref:System.Runtime.Serialization.NetDataContractSerializer>의 인스턴스 및 <xref:System.Xml.XmlDictionaryWriter> 클래스의 인스턴스를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-282">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.NetDataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="79a57-283">이 예제에서는 <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> 메서드를 사용하여 XML 문서에 개체를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="79a57-283">The example uses the <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[NetDataContractSerializer#5](~/samples/snippets/csharp/VS_Snippets_CFX/netdatacontractserializer/cs/source.cs#5)]
 [!code-vb[NetDataContractSerializer#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/netdatacontractserializer/vb/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="79a57-284">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-284">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="79a57-285">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-285">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="79a57-286">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-286">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="79a57-287">serialize할 최대 개체 수가 초과된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-287">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="79a57-288">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-288">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xml.XmlWriter * obj -&gt; unit" Usage="netDataContractSerializer.WriteStartObject (writer, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="79a57-289">XML 요소를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-289">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="79a57-290">serialize할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-290">The object to serialize.</span>
          </span>
          <span data-ttu-id="79a57-291">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-291">All child objects of this root object are automatically serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79a57-292">
            <see cref="T:System.Xml.XmlWriter" />를 사용하여 열기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-292">Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="79a57-293">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-293">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="79a57-294">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-294">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="79a57-295">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-295">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="79a57-296">serialize할 최대 개체 수가 초과된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-296">the maximum number of object to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="79a57-297">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79a57-297">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>