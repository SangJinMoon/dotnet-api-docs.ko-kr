<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NetDataContractSerializer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac562bf60e28609495b2d68b59e22ae24f9ca545137.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62bf60e28609495b2d68b59e22ae24f9ca545137</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Serializes and deserializes an instance of a type into XML stream or document using the supplied .NET Framework types.</source>
          <target state="translated">제공된 .NET Framework 형식을 사용하여 형식의 인스턴스를 XML 스트림 또는 문서로 serialize하거나 deserialize합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> differs from the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> in one important way: the <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> includes CLR type information in the serialized XML, whereas the <ph id="ph4">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> does not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>와 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>의 중요한 차이점 하나는, <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>에는 serialize된 XML로 CLR 형식 정보가 포함되지만 <ph id="ph4">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>에는 포함되지 않는다는 점입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> can be used only if both the serializing and deserializing ends share the same CLR types.</source>
          <target state="translated">따라서 serialize측과 deserialize측이 모두 동일한 CLR 형식을 공유하는 경우에만 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The serializer can serialize types to which either the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> attribute has been applied.</source>
          <target state="translated">이 serializer는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> 특성이 적용된 형식을 serialize할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>It also serializes types that implement <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>을 구현하는 형식도 serialize합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>For more information about serialization, see <bpt id="p1">[</bpt>Serialization and Deserialization<ept id="p1">](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)</ept>.</source>
          <target state="translated">Serialization에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>Serialization 및 Deserialization<ept id="p1">](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Incompatibility with XElement</source>
          <target state="translated">XElement와의 비호환성</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> class is used to write XML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> 클래스는 XML을 쓰는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>However, the <ph id="ph1">`NetDataContractSerializer`</ph> cannot serialize an instance of the type.</source>
          <target state="translated">하지만 <ph id="ph1">`NetDataContractSerializer`</ph>는 형식의 인스턴스를 serialize할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The following code, therefore, fails with the exception: "Root type 'System.Xml.Linq.XElement' is not supported at the top level by NetDataContractSerializer since it is IXmlSerializable with <ph id="ph1">`IsAny`</ph><ph id="ph2">=</ph><ph id="ph3">`true`</ph> and must write all its contents including the root element."</source>
          <target state="translated">다음 코드는 따라서 예외와 함께 실패: "루트 형식 'System.Xml.Linq.XElement'는 지원 되지 않습니다 최상위 수준에서 NetDataContractSerializer에 의해 인 ixmlserializable <ph id="ph1">`IsAny`</ph> <ph id="ph2">=</ph> <ph id="ph3">`true`</ph> 모두 작성 해야 하 고 포함 한 내용을 루트 요소입니다. "</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>However, if an <ph id="ph1">`XElement`</ph> is used as the type of a field or property of a class, the data contained by the field or property is serialized.</source>
          <target state="translated">하지만 <ph id="ph1">`XElement`</ph>가 클래스의 필드 또는 속성 형식으로 사용되는 경우 필드나 속성에 포함된 데이터는 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>This is because as a member of a class, the data is not the top level of the class.</source>
          <target state="translated">그 이유는 클래스의 멤버인 데이터는 클래스의 최상위 수준이 아니기 때문입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The following example code shows a type named <ph id="ph1">`Person`</ph> that is serialized by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>.</source>
          <target state="translated">다음 예제 코드에서는 <ph id="ph1">`Person`</ph>에 의해 serialize되는 <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>이라는 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute is applied to the class, and the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> is applied to members (including a private member) to instruct the <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> what to serialize.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 특성은 클래스에 적용되고 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph>는 멤버(private 멤버 포함)에 적용되어 <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>에 serialize할 대상을 알려 줍니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains context data.</source>
          <target state="translated">컨텍스트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> class with the supplied streaming context data.</source>
          <target state="translated">제공된 스트리밍 컨텍스트 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> class allows you to pass in user-specific context data to use while reading and writing objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> 클래스를 사용하면 개체를 읽고 쓰는 동안 사용할 사용자별 컨텍스트 데이터를 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> using a <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>를 사용하여 <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph>의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)">
          <source>The namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> class with the supplied XML root element and namespace.</source>
          <target state="translated">제공된 XML 루트 요소와 네임스페이스를 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> specifying the XML root element and namespace it will expect when deserializing an object.</source>
          <target state="translated">다음 예제에서는 개체를 deserialize할 때 필요한 XML 루트 요소와 네임스페이스를 지정하는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 이름을 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> class with two parameters of type <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contain the root element and namespace used to specify the content.</source>
          <target state="translated">콘텐츠를 지정하는 데 사용되는 루트 요소와 네임스페이스를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> 형식의 두 매개 변수를 사용하여 <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> can be used to optimize performance when the same set of strings is used across object instances.</source>
          <target state="translated">여러 개체 인스턴스에 동일한 문자열 집합을 사용할 때 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph>을 사용하면 성능을 최적화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> specifying the XML root element and namespace (as <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> arguments) it will expect when deserializing an object.</source>
          <target state="translated">다음 예제에서는 개체를 deserialize할 때 필요한 XML 루트 요소와 네임스페이스를 <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 인수로 지정하는 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph>의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains context data.</source>
          <target state="translated">컨텍스트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">형식 확장에서 제공하는 데이터를 무시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> enumeration value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISurrogateSelector" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISurrogateSelector" /&gt;</ph>의 구현입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> class with the supplied context data; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</source>
          <target state="translated">제공된 컨텍스트 데이터를 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 serialize할 개체에 있는 최대 항목 수, 추가 데이터의 무시 여부를 지정하는 매개 변수, 어셈블리 로딩 메서드, 서로게이트 선택기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The <ph id="ph1">`ignoreExtensionDataObject`</ph> parameter is used when the <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface is implemented in the class that is being serialized or deserialized.</source>
          <target state="translated"><ph id="ph1">`ignoreExtensionDataObject`</ph> 매개 변수는 serialize하거나 deserialize할 클래스에서 <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 인터페이스를 구현할 때 사용됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> using a <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>를 사용하여 <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph>의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The code also sets the <ph id="ph1">`ignoreExtensionDataObject`</ph>, and specifies an implementation of the <ph id="ph2">`ISurrogateSelector`</ph> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</source>
          <target state="translated">또한 이 코드는 <ph id="ph1">`ignoreExtensionDataObject`</ph>를 설정하고, 레거시 형식을 deserialize하기 위한 서로게이트를 선택할 때 serializer 지원을 처리할 <ph id="ph2">`ISurrogateSelector`</ph> 인터페이스의 구현을 지정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source><ph id="ph1">&lt;paramref name="maxItemsInObjectGraph" /&gt;</ph> value is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxItemsInObjectGraph" /&gt;</ph> 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The namespace of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains context data.</source>
          <target state="translated">컨텍스트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">형식 확장에서 제공하는 데이터를 무시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> enumeration value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to handle the legacy type.</source>
          <target state="translated">레거시 형식을 처리할 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph>의 구현입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> class with the supplied context data and root name and namespace; in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data is ignored, the assembly loading method, and a surrogate selector.</source>
          <target state="translated">제공된 컨텍스트 데이터와 루트 이름 및 네임스페이스를 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 serialize할 개체에 있는 최대 항목 수, 추가 데이터의 무시 여부를 지정하는 매개 변수, 어셈블리 로딩 메서드, 서로게이트 선택기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The <ph id="ph1">`ignoreExtensionDataObject`</ph> parameter is used when the <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface is implemented in the class that is being serialized or deserialized.</source>
          <target state="translated"><ph id="ph1">`ignoreExtensionDataObject`</ph> 매개 변수는 serialize하거나 deserialize할 클래스에서 <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 인터페이스를 구현할 때 사용됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> specifying the XML element name and namespace to expect when deserializing.</source>
          <target state="translated">다음 예제에서는 deserialize할 때 필요한 XML 요소 이름과 네임스페이스를 지정하는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The code also sets the <ph id="ph1">`ignoreExtensionDataObject`</ph>, and specifies an implementation of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISurrogateSelector&gt;</ph> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</source>
          <target state="translated">또한 이 코드는 <ph id="ph1">`ignoreExtensionDataObject`</ph>를 설정하고, 레거시 형식을 deserialize하기 위한 서로게이트를 선택할 때 serializer 지원을 처리할 <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISurrogateSelector&gt;</ph> 인터페이스의 구현을 지정합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.String,System.String,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source><ph id="ph1">&lt;paramref name="maxItemsInObjectGraph" /&gt;</ph> value is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxItemsInObjectGraph" /&gt;</ph> 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element of the content.</source>
          <target state="translated">콘텐츠의 루트 요소를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the namespace of the root element.</source>
          <target state="translated">루트 요소의 네임스페이스를 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains context data.</source>
          <target state="translated">컨텍스트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">형식 확장에서 제공하는 데이터를 무시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> enumeration value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to handle the legacy type.</source>
          <target state="translated">레거시 형식을 처리할 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph>의 구현입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> class with the supplied context data, and root name and namespace (as <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> parameters); in addition, specifies the maximum number of items in the object to be serialized, and parameters to specify whether extra data found is ignored, assembly loading method, and a surrogate selector.</source>
          <target state="translated">제공된 컨텍스트 데이터와 루트 이름 및 네임스페이스를 <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> 매개 변수로 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.NetDataContractSerializer" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 serialize할 개체에 있는 최대 항목 수, 발견된 추가 데이터의 무시 여부를 지정하는 매개 변수, 어셈블리 로딩 메서드, 서로게이트 선택기를 지정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> can be used to optimize performance when the same set of strings is used across object instances.</source>
          <target state="translated">여러 개체 인스턴스에 동일한 문자열 집합을 사용할 때 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph>을 사용하면 성능을 최적화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The <ph id="ph1">`ignoreExtensionDataObject`</ph> parameter is used when the <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface is implemented in the class that is being serialized or deserialized.</source>
          <target state="translated"><ph id="ph1">`ignoreExtensionDataObject`</ph> 매개 변수는 serialize하거나 deserialize할 클래스에서 <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 인터페이스를 구현할 때 사용됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The following example creates an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> specifying the XML element name and namespace (as <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph> arguments) to expect when deserializing.</source>
          <target state="translated">다음 예제에서는 deserialize할 때 필요한 XML 요소 이름과 네임스페이스를 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph> 인수로 지정하는 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryString&gt;</ph>의 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source>The code also sets the <ph id="ph1">`ignoreExtensionDataObject`</ph>, and specifies an implementation of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISurrogateSelector&gt;</ph> interface to handle to assist the serializer when selecting a surrogate (for deserializing legacy types).</source>
          <target state="translated">또한 이 코드는 <ph id="ph1">`ignoreExtensionDataObject`</ph>를 설정하고, 레거시 형식을 deserialize하기 위한 서로게이트를 선택할 때 serializer 지원을 처리할 <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISurrogateSelector&gt;</ph> 인터페이스의 구현을 지정합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.#ctor(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Runtime.Serialization.StreamingContext,System.Int32,System.Boolean,System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.ISurrogateSelector)">
          <source><ph id="ph1">&lt;paramref name="maxItemsInObjectGraph" /&gt;</ph> value is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maxItemsInObjectGraph" /&gt;</ph> 값이 0보다 작은 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat">
          <source>Gets a value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> enumeration value that specifies a method for locating and loading assemblies.</source>
          <target state="translated">어셈블리를 찾고 로딩하기 위한 메서드를 지정하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> 열거형 값입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat">
          <source>An <ph id="ph1">`AssemblyFormat`</ph> instance can have two styles: <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AssemblyFormat`</ph> 인스턴스는 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Full&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle.Simple&gt;</ph>이라는 두 가지 스타일을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat">
          <source>Specifying <ph id="ph1">`Simple`</ph> allows types in one version to be loaded and deserialized from an instance serialized from a different version.</source>
          <target state="translated"><ph id="ph1">`Simple`</ph>을 지정하면 한 버전의 형식을 다른 버전에서 serialize된 인스턴스에서 로드하여 deserialize할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.NetDataContractSerializer.AssemblyFormat">
          <source>The value being set does not correspond to any of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> values.</source>
          <target state="translated">설정되는 값이 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> 값 중 어느 것과도 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
          <source>Gets or sets an object that controls class loading.</source>
          <target state="translated">클래스 로딩을 제어하는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph> used with the current formatter.</source>
          <target state="translated">현재 포맷터에 사용되는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationBinder" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
          <source>During serialization, a formatter transmits the information required to create an instance of an object of the correct type and version.</source>
          <target state="translated">serialization 도중에, 포맷터는 올바른 형식 및 버전의 개체 인스턴스를 만드는 데 필요한 정보를 전송합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
          <source>This information generally includes the full type name and assembly name of the object.</source>
          <target state="translated">이 정보에는 일반적으로 개체에 대한 어셈블리 이름 및 전체 형식 이름이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
          <source>The assembly name includes the name, version, and strong name hash of the assembly.</source>
          <target state="translated">어셈블리 이름에는 이름, 버전, 어셈블리의 강력한 이름 해시가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
          <source>By default, deserialization uses this information to create an instance of an identical object (with the exception of any assembly loading restricted by the security policy).</source>
          <target state="translated">기본적으로, deserialization은 이 정보를 사용하여 동일한 개체의 인스턴스를 만듭니다. 보안 정책에 의해 제한되는 어셈블리 로딩은 예외입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Binder">
          <source>Some users need to control which class to load, either because the class has moved between assemblies or a different version of the class is required on the server and client.</source>
          <target state="translated">클래스가 어셈블리 간에 이동하거나 서버와 클라이언트에서 서로 다른 버전의 클래스를 필요로 하므로 일부 사용자는 로드할 클래스를 제어해야 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Context">
          <source>Gets or sets the object that enables the passing of context data that is useful while serializing or deserializing.</source>
          <target state="translated">serialize하거나 deserialize하는 동안 유용한 컨텍스트 데이터를 전달할 수 있는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.Context">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the context data.</source>
          <target state="translated">컨텍스트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that contains the XML to deserialize.</source>
          <target state="translated">deserialize할 XML을 포함하는 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
          <source>Deserializes an XML document or stream into an object.</source>
          <target state="translated">XML 문서 또는 스트림을 개체로 deserialize합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
          <source>The deserialized object.</source>
          <target state="translated">deserialize된 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
          <source>This method assumes the default format is text XML.</source>
          <target state="translated">이 메서드는 기본 형식이 텍스트 XML이라고 가정합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">신뢰할 수 있는 데이터에만이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Deserialize(System.IO.Stream)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 유효성 검사<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject">
          <source>Gets a value that specifies whether data supplied by an extension of the object is ignored.</source>
          <target state="translated">개체 확장에서 제공하는 데이터를 무시하는지 여부를 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the data supplied by an extension of the type; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">형식 확장에서 제공하는 데이터를 무시하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject">
          <source>When implementing the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph>, data from a future version of a type can be stored by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph>를 구현할 때 <ph id="ph2">&lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;</ph>를 사용하여 이후 버전 형식의 데이터를 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject">
          <source>During a round trip (where an object is deserialized, altered, and serialized again), the extra data is stored and serialized again.</source>
          <target state="translated">개체가 deserialize되고 변경된 후 다시 serialize되는 라운드트립 중에 추가 데이터가 저장되고 다시 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.IgnoreExtensionDataObject">
          <source>For more information, see <bpt id="p1">[</bpt>Serialization and Deserialization<ept id="p1">](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Serialization 및 Deserialization<ept id="p1">](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Determines whether the reader is positioned on an object that can be deserialized.</source>
          <target state="translated">deserialize할 수 있는 개체에 판독기가 배치되는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>This is equivalent to using the <ph id="ph1">`ReadObject`</ph> method of the <ph id="ph2">`IFormatter`</ph> interface.</source>
          <target state="translated">이 과정은 <ph id="ph1">`ReadObject`</ph> 인터페이스의 <ph id="ph2">`IFormatter`</ph> 메서드를 사용하는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> that contains the XML to read.</source>
          <target state="translated">읽을 XML을 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> is positioned on an object that can be deserialized using the specified reader.</source>
          <target state="translated">지정된 판독기를 사용하여 deserialize할 수 있는 개체에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph>가 배치되는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if the reader is at the start element of the stream to read; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">판독기가 읽을 스트림의 시작 요소에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt;</ph> determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A&gt;</ph>는 판독기가 배치되는 XML 요소의 이름과 네임스페이스를 검사하고 예상 이름 및 네임스페이스와 값을 비교하여 개체를 읽을 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> values passed into the constructor (if present).</source>
          <target state="translated">예상 이름 및 네임스페이스는 생성자로 전달된 형식의 데이터 계약 이름과 네임스페이스 또는 생성자로 전달된 <ph id="ph1">`rootName`</ph> 및 <ph id="ph2">`rootNamespace`</ph> 값(있는 경우)을 사용하여 설정될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>You can set the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> in the following constructors: <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType&gt;</ph>, and <ph id="ph5">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`rootName`</ph>, <ph id="ph2">`rootNamespace`</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> 생성자에서 <ph id="ph4">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29?displayProperty=nameWithType&gt;</ph>과 <ph id="ph5">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29?displayProperty=nameWithType&gt;</ph>를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>the <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the XML to read.</source>
          <target state="translated">읽을 XML을 포함하는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is positioned on an object that can be deserialized using the specified reader.</source>
          <target state="translated">지정된 판독기를 사용하여 deserialize할 수 있는 개체에 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>가 배치되는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is at the start element of the stream to read; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">판독기가 읽을 스트림의 시작 요소에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>the <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph">
          <source>Gets the maximum number of items allowed in the object to be serialized.</source>
          <target state="translated">serialize할 개체에 허용되는 최대 항목 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph">
          <source>The maximum number of items allowed in the object.</source>
          <target state="translated">개체에 허용되는 최대 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.MaxItemsInObjectGraph">
          <source>For more information about setting quotas, see <bpt id="p1">[</bpt>Security Considerations for Data<ept id="p1">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.</source>
          <target state="translated">할당량 설정에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터에 대 한 보안 고려 사항<ept id="p1">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Reads the XML stream or document and returns the deserialized object.</source>
          <target state="translated">XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Call this method only with trusted data.</source>
          <target state="translated">신뢰할 수 있는 데이터에만이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 유효성 검사<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML stream or document.</source>
          <target state="translated">XML 스트림 또는 문서를 읽는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>Reads the XML stream or document with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> and returns the deserialized object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph>를 사용하여 XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>The deserialized object.</source>
          <target state="translated">deserialize된 개체입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">신뢰할 수 있는 데이터에만이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 유효성 검사<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader)">
          <source>the <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML stream or document.</source>
          <target state="translated">XML 스트림 또는 문서를 읽는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to skip the verification.</source>
          <target state="translated">바깥쪽 XML 요소 이름과 네임스페이스가 serializer를 생성하는 데 사용된 루트 이름 및 루트 네임스페이스와 일치하는지 확인하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 확인을 건너뛰려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>Reads the XML stream or document with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph>를 사용하여 XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다. 또한 개체 데이터가 serializer를 만드는 데 사용되는 이름과 네임스페이스를 따르는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The deserialized object.</source>
          <target state="translated">deserialize된 개체입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The <ph id="ph1">`verifyObjectName`</ph> parameter determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</source>
          <target state="translated"><ph id="ph1">`verifyObjectName`</ph> 매개 변수는 판독기가 배치된 XML 요소의 이름과 네임스페이스를 검사하고 예상 이름 및 네임스페이스와 값을 비교하여 개체를 읽을 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> values passed into the constructor (if present).</source>
          <target state="translated">예상 이름 및 네임스페이스는 생성자로 전달된 형식의 데이터 계약 이름과 네임스페이스 또는 생성자로 전달된 <ph id="ph1">`rootName`</ph> 및 <ph id="ph2">`rootNamespace`</ph> 값(있는 경우)을 사용하여 설정될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>You can set the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> in the following constructors: <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29&gt;</ph>, <ph id="ph4">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29&gt;</ph>, and <ph id="ph5">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`rootName`</ph>, <ph id="ph2">`rootNamespace`</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29&gt;</ph> 생성자에서 <ph id="ph4">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29&gt;</ph>과 <ph id="ph5">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29&gt;</ph>를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">신뢰할 수 있는 데이터에만이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 유효성 검사<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>the <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML stream or document.</source>
          <target state="translated">XML 스트림 또는 문서를 읽는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace used to construct the serializer; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to skip the verification.</source>
          <target state="translated">바깥쪽 XML 요소 이름과 네임스페이스가 serializer를 생성하는 데 사용된 루트 이름 및 루트 네임스페이스와 일치하는지 확인하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 확인을 건너뛰려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>Reads the XML stream or document with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> and returns the deserialized object; also checks whether the object data conforms to the name and namespace used to create the serializer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph>를 사용하여 XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다. 또한 개체 데이터가 serializer를 만드는 데 사용되는 이름과 네임스페이스를 따르는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The deserialized object.</source>
          <target state="translated">deserialize된 개체입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The <ph id="ph1">`verifyObjectName`</ph> parameter determines whether it can read an object by examining the name and namespace of the XML element the reader is positioned at, and comparing the values to expected name and namespace.</source>
          <target state="translated"><ph id="ph1">`verifyObjectName`</ph> 매개 변수는 판독기가 배치된 XML 요소의 이름과 네임스페이스를 검사하고 예상 이름 및 네임스페이스와 값을 비교하여 개체를 읽을 수 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> values passed into the constructor (if present).</source>
          <target state="translated">예상 이름 및 네임스페이스는 생성자로 전달된 형식의 데이터 계약 이름과 네임스페이스 또는 생성자로 전달된 <ph id="ph1">`rootName`</ph> 및 <ph id="ph2">`rootNamespace`</ph> 값(있는 경우)을 사용하여 설정될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>You can set the <ph id="ph1">`rootName`</ph> and <ph id="ph2">`rootNamespace`</ph> in the following constructors: <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29&gt;</ph>, <ph id="ph4">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29&gt;</ph>, and <ph id="ph5">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`rootName`</ph>, <ph id="ph2">`rootNamespace`</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.String%2CSystem.String%29&gt;</ph> 생성자에서 <ph id="ph4">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%29&gt;</ph>과 <ph id="ph5">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.%23ctor%28System.Xml.XmlDictionaryString%2CSystem.Xml.XmlDictionaryString%2CSystem.Runtime.Serialization.StreamingContext%2CSystem.Int32%2CSystem.Boolean%2CSystem.Runtime.Serialization.Formatters.FormatterAssemblyStyle%2CSystem.Runtime.Serialization.ISurrogateSelector%29&gt;</ph>를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">신뢰할 수 있는 데이터에만이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 유효성 검사<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>the <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to serialize with.</source>
          <target state="translated">serialize할 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">serialize할 개체입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>All child objects of this root object are automatically serialized.</source>
          <target state="translated">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.Serialize(System.IO.Stream,System.Object)">
          <source>Serializes the specified object graph using the specified writer.</source>
          <target state="translated">지정된 작성기를 사용하여 지정된 개체 그래프를 serialize합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector">
          <source>Gets or sets an object that assists the formatter when selecting a surrogate for serialization.</source>
          <target state="translated">serialization을 위한 서로게이트를 선택할 때 포맷터를 지원하는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISurrogateSelector" /&gt;</ph> for selecting a surrogate.</source>
          <target state="translated">서로게이트를 선택하기 위한 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISurrogateSelector" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.NetDataContractSerializer.SurrogateSelector">
          <source>For more information about the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph>, see <bpt id="p1">[</bpt>Data Contract Surrogates<ept id="p1">](~/docs/framework/wcf/extending/data-contract-surrogates.md)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph>, 참조 <bpt id="p1">[</bpt>데이터 계약 서로게이트<ept id="p1">](~/docs/framework/wcf/extending/data-contract-surrogates.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Writes the closing XML element using the specified writer.</source>
          <target state="translated">지정된 작성기를 사용하여 닫기 XML 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</source>
          <target state="translated">쓰기 시작, 콘텐츠 쓰기 및 쓰기 종료의 패턴으로 전체 serialization을 쓰기 위해 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> 메서드가 연속적으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The three methods are also called by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A&gt;</ph> method.</source>
          <target state="translated">이 세 가지 메서드는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A&gt;</ph> 메서드에서도 호출됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML document or stream.</source>
          <target state="translated">XML 문서 또는 스트림을 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>Writes the closing XML element using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>를 사용하여 닫기 XML 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>The following example creates an object to serialize, an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>, and an instance of the <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 serialize할 개체, <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>의 인스턴스 및 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 클래스의 인스턴스를 작성합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> methods to write the object data into the XML document.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> 메서드를 사용하여 XML 문서에 개체를 씁니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>the <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document or stream.</source>
          <target state="translated">XML 문서 또는 스트림을 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>Writes the closing XML element using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>를 사용하여 닫기 XML 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>the <ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>로 설정된 경우</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document or stream.</source>
          <target state="translated">XML 문서 또는 스트림을 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The object containing the content to write.</source>
          <target state="translated">쓸 콘텐츠를 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>를 사용하여 XML 문서 또는 스트림에 개체의 전체 콘텐츠(시작, 콘텐츠, 끝)를 씁니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>the type being serialized does not conform to data contract rules.</source>
          <target state="translated">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>there is a problem with the instance being serialized.</source>
          <target state="translated">serialize하고 있는 인스턴스에 문제가 있는 경우.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>the maximum number of object to serialize has been exceeded.</source>
          <target state="translated">serialize할 최대 개체 수가 초과된 경우.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> 속성을 확인합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Writes the XML content using the specified writer.</source>
          <target state="translated">지정된 작성기를 사용하여 XML 콘텐츠를 씁니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</source>
          <target state="translated">쓰기 시작, 콘텐츠 쓰기 및 쓰기 종료의 패턴으로 전체 serialization을 쓰기 위해 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> 메서드가 연속적으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>The three methods are also called by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A&gt;</ph> method.</source>
          <target state="translated">이 세 가지 메서드는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObject%2A&gt;</ph> 메서드에서도 호출됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML content.</source>
          <target state="translated">XML 콘텐츠를 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">serialize할 개체입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>All child objects of this root object are automatically serialized.</source>
          <target state="translated">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes the XML content using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>를 사용하여 XML 콘텐츠를 씁니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The following example creates an object to serialize, an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>, and an instance of the <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 serialize할 개체, <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>의 인스턴스 및 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 클래스의 인스턴스를 작성합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> methods to write the object data into the XML document.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> 메서드를 사용하여 XML 문서에 개체를 씁니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>the type being serialized does not conform to data contract rules.</source>
          <target state="translated">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>there is a problem with the instance being serialized.</source>
          <target state="translated">serialize하고 있는 인스턴스에 문제가 있는 경우.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>the maximum number of object to serialize has been exceeded.</source>
          <target state="translated">serialize할 최대 개체 수가 초과된 경우.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> 속성을 확인합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML content.</source>
          <target state="translated">XML 콘텐츠를 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">serialize할 개체입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>All child objects of this root object are automatically serialized.</source>
          <target state="translated">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>Writes the XML content using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>를 사용하여 XML 콘텐츠를 씁니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>the type being serialized does not conform to data contract rules.</source>
          <target state="translated">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>there is a problem with the instance being serialized.</source>
          <target state="translated">serialize하고 있는 인스턴스에 문제가 있는 경우.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>the maximum number of object to serialize has been exceeded.</source>
          <target state="translated">serialize할 최대 개체 수가 초과된 경우.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> 속성을 확인합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.NetDataContractSerializer">
          <source>Writes the opening XML element using the specified writer.</source>
          <target state="translated">지정된 작성기를 사용하여 열기 XML 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML element.</source>
          <target state="translated">XML 요소를 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">serialize할 개체입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>All child objects of this root object are automatically serialized.</source>
          <target state="translated">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes the opening XML element using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>를 사용하여 열기 XML 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The following example creates an object to serialize, an instance of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>, and an instance of the <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 serialize할 개체, <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer&gt;</ph>의 인스턴스 및 <ph id="ph2">&lt;xref:System.Xml.XmlDictionaryWriter&gt;</ph> 클래스의 인스턴스를 작성합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> methods to write the object data into the XML document.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteObjectContent%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.NetDataContractSerializer.WriteEndObject%2A&gt;</ph> 메서드를 사용하여 XML 문서에 개체를 씁니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>the type being serialized does not conform to data contract rules.</source>
          <target state="translated">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>there is a problem with the instance being serialized.</source>
          <target state="translated">serialize하고 있는 인스턴스에 문제가 있는 경우.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>the maximum number of object to serialize has been exceeded.</source>
          <target state="translated">serialize할 최대 개체 수가 초과된 경우.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> 속성을 확인합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML element.</source>
          <target state="translated">XML 요소를 쓰는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>The object to serialize.</source>
          <target state="translated">serialize할 개체입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>All child objects of this root object are automatically serialized.</source>
          <target state="translated">이 루트 개체의 모든 자식 개체는 자동으로 serialize됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>Writes the opening XML element using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>를 사용하여 열기 XML 요소를 씁니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>the type being serialized does not conform to data contract rules.</source>
          <target state="translated">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>there is a problem with the instance being serialized.</source>
          <target state="translated">serialize하고 있는 인스턴스에 문제가 있는 경우.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>the maximum number of object to serialize has been exceeded.</source>
          <target state="translated">serialize할 최대 개체 수가 초과된 경우.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.NetDataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> 속성을 확인합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>