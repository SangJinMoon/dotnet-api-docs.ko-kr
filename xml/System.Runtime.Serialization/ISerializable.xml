<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e472d101330ad3fe07ac415fe5b90af0a16de62b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30488957" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>개체가 자체 serialization 및 deserialization을 제어할 수 있도록 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Serialize 할 수 있는 모든 클래스도 표시 되어야 합니다는 <xref:System.SerializableAttribute>합니다. 구현할 수 있는 클래스를 해당 serialization 프로세스를 제어 하는 경우는 <xref:System.Runtime.Serialization.ISerializable> 인터페이스입니다. <xref:System.Runtime.Serialization.Formatter> 호출은 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> serialization 시 제공 된 정보를 표시 하 고 <xref:System.Runtime.Serialization.SerializationInfo> 개체를 나타내는 데 필요한 모든 데이터를 사용 합니다. <xref:System.Runtime.Serialization.Formatter> 만듭니다는 <xref:System.Runtime.Serialization.SerializationInfo> 그래프에서 개체 유형을 사용 합니다. 자체 צ ְ ײ에 대 한 프록시를 전송 해야 하는 개체는 <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> 및 <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> 에 대 한 메서드 <xref:System.Runtime.Serialization.SerializationInfo> 전송 된 정보를 변경할 수 있습니다.  
  
 클래스 상속의 경우 구현 하는 기본 클래스에서 파생 되는 클래스를 serialize 할 수는 <xref:System.Runtime.Serialization.ISerializable>합니다. 파생된 클래스의 기본 클래스 구현을 호출 해야이 경우 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 내 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>합니다. 그렇지 않은 경우 기본 클래스에서 데이터 serialize 되지 않습니다.  
  
 <xref:System.Runtime.Serialization.ISerializable> 서명 생성자를 가진 생성자를 암시 하는 인터페이스 (<xref:System.Runtime.Serialization.SerializationInfo> 내용은 <xref:System.Runtime.Serialization.StreamingContext> 컨텍스트). Deserialization 시 현재 생성자의 데이터를 한 후에 호출 됩니다는 <xref:System.Runtime.Serialization.SerializationInfo> 포맷터에서 deserialize 합니다. 일반적으로 클래스가 봉인 하는 경우이 생성자를 보호 해야 합니다.  
  
 개체가 deserialize 되는 순서를 보장할 수 없습니다. 예를 들어, 한 형식 아직 deserialize 되지 않습니다 형식을 참조 하 고, 예외가 발생 합니다. 구현 하 여 문제 해결할 수 이러한 종속성이 있는 형식을 만드는 경우는 `IDeserializationCallback` 인터페이스 및 `OnDeserialization` 메서드.  
  
 확장 된 개체 유형을 처리 하는 serialization 아키텍처 <xref:System.MarshalByRefObject> 확장 하는 형식은 동일 <xref:System.Object>합니다. 이러한 형식은로 표시할 수 있습니다는 <xref:System.SerializableAttribute> 구현 하 고는 <xref:System.Runtime.Serialization.ISerializable> 다른 개체 형식으로 인터페이스입니다. 해당 개체의 상태 캡처되고 스트림에 유지 됩니다.  
  
 이러한 형식을 통해 사용 중인 경우 <xref:System.Runtime.Remoting>, 일반적인 serialization을 중지 하 고 대신에 대 한 프록시가 serialize 하는 서로게이트를 제공 하는 원격 인프라는 <xref:System.MarshalByRefObject>합니다. 서로게이트를 serialize 하 고 특정 유형의 개체를 역직렬화 하는 방법을 알고 있는 도우미입니다. 대부분의 경우에서 사용자에 게 보이지 않는 프록시 형식이 됩니다 <xref:System.Runtime.Remoting.ObjRef>합니다.  
  
 일반적인 디자인 패턴으로는 것은 serializable 특성으로 표시 되어야 하 고 확장 하는 클래스에 대 한 일반적인 <xref:System.MarshalByRefObject>합니다. 개발자는 이러한 두 가지 특성을 결합 하는 경우 가능한 직렬화 및 원격 처리 시나리오에 대 한 신중 하 게 생각해 야 합니다. 사용 하 게 활용할 수 적용 하는 한 가지 예는 한 <xref:System.IO.MemoryStream>합니다. 기본 클래스는 동안 <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>)에서 확장 <xref:System.MarshalByRefObject>의 상태를 캡처하고자 할 수는 <xref:System.IO.MemoryStream> 를 복원 합니다. 따라서이 스트림의 상태를 데이터베이스에 serialize 및 시간에는 나중에 복원 하는 의미 있는 수 수 있습니다. 그러나 원격 서비스를 통해 사용 하는 경우이 형식의 개체 프록시 됩니다.  
  
 확장 하는 클래스의 serialization에 대 한 자세한 내용은 <xref:System.MarshalByRefObject>, 참조 <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>합니다. 구현에 대 한 자세한 내용은 <xref:System.Runtime.Serialization.ISerializable>, 참조 [사용자 지정 Serialization](~/docs/standard/serialization/custom-serialization.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Runtime.Serialization.ISerializable> 인터페이스 클래스에 대 한 사용자 지정 serialization 동작을 정의 합니다.  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>개체가 자체 serialization 및 deserialization에 참여할 수 있도록 하려면이 인터페이스를 구현 합니다.</para>
    </block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
        <param name="context">이 serialization에 대한 대상입니다(<see cref="T:System.Runtime.Serialization.StreamingContext" /> 참조).</param>
        <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 포함 된 모든 개체는 <xref:System.Runtime.Serialization.SerializationInfo> 자동으로 추적 되 고 포맷터에 의해 serialize 합니다.  
  
 호출 하는 코드 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 필요는 <xref:System.Security.Permissions.SecurityPermission> serialization 서비스를 제공 하는 데 있습니다. 연관된 열거형: <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>  
  
> [!NOTE]
>  이 메서드가 전파 직렬화 하는 동안의 개체 인스턴스당 한 번만 호출할 수는 보장 되지 않습니다. 따라서 해당 동작이 호출 되는 횟수에 관계 없이 동일 됩니다 하는 방식으로 메서드를 구현 해야 합니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 메서드는 직렬화 된 개체에 대 한 대체 값을 설정 합니다. 코드를 사용 하 여는 <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> 의 메서드는 <xref:System.Runtime.Serialization.SerializationInfo> 개체가 serialize 되는 경우 대체 값을 저장 하는 클래스입니다. 반대로,의 생성자는 `Person` 클래스 역직렬화 하는 동안 호출 되 면 사용 하 여 대체 값은 검색에서 <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> 메서드 개체의 필드에 할당 합니다.  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">호출자에게 필요한 권한이 없는 경우</exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
  </Members>
</Type>