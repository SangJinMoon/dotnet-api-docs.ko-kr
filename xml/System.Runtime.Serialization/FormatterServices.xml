<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FormatterServices.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aeca285d3347396598e0c601bf5970bee7252497.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aeca285d3347396598e0c601bf5970bee7252497</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.FormatterServices">
          <source>Provides static methods to aid with the implementation of a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatter" /&gt;</ph> for serialization.</source>
          <target state="translated">serialization을 위한 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatter" /&gt;</ph>의 구현을 지원하는 정적 메서드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.FormatterServices">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to check for the ability to deserialize.</source>
          <target state="translated">deserialize 권한을 확인할 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> property value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> can be deserialized with the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> property set to <ph id="ph3">&lt;see langword="Low" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="Low" /&gt;</ph>로 설정한 상태에서 지정한 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph>을 deserialize할 수 있는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>Use this method to determine whether a specified type can be deserialized when the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel&gt;</ph> property is set to <ph id="ph2">`Low`</ph>.</source>
          <target state="translated">이 메서드를 사용 하 여 수 있는지 여부 지정된 된 형식의 역직렬화 된 시기를 결정 하는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel&gt;</ph> 속성이 <ph id="ph2">`Low`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>.NET Framework remoting provides two levels of automatic deserialization, <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph>.</source>
          <target state="translated">.NET framework remoting는 두 가지 수준의 자동 deserialization <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> helps protect against deserialization attacks by deserializing only the types associated with the most basic remoting functionality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> 가장 기본적인 remoting 기능와 관련 된 형식만 역직렬화 하 여 역직렬화 공격 으로부터 보호할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> deserialization level supports automatic deserialization of all types that remoting supports in all situations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> deserialization 수준은 모든 상황에서 원격 기능이 지원하는 모든 형식의 자동 deserialization을 지원합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>For more information about the.NET Framework remoting types that <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> support, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph3">\&lt;</ph>topic://cpconAutomaticDeserializationInNETRemoting&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</source>
          <target state="translated">원격 서비스 형식에.net Framework에 대 한 자세한 내용은 <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> 지원, 참조 <bpt id="p1">[</bpt> &amp;#91; <ph id="ph3">\&lt;</ph>topic://cpconAutomaticDeserializationInNETRemoting &gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>This example shows how to use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices&gt;</ph> class to serialize or deserialize an object where the base class does not implement <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> but the derived class does.</source>
          <target state="translated">사용 하는 방법을 보여 주는이 예제는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices&gt;</ph> 클래스를 직렬화 또는 역직렬화 기본 클래스 구현 하지 않는 개체 <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> 파생된 클래스는 하지만 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)">
          <source>The <ph id="ph1">&lt;paramref name="t" /&gt;</ph> parameter is an advanced type and cannot be deserialized when the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> property is set to <ph id="ph3">&lt;see langword="Low" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="t" /&gt;</ph> 매개 변수가 고급 형식이고 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="Low" /&gt;</ph>로 설정하면 deserialize할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The object to write to the formatter.</source>
          <target state="translated">포맷터에 쓸 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The members to extract from the object.</source>
          <target state="translated">개체에서 추출할 멤버입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>Extracts the data from the specified object and returns it as an array of objects.</source>
          <target state="translated">지정된 개체에서 데이터를 추출하여 개체의 배열로서 반환합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data stored in <ph id="ph2">&lt;paramref name="members" /&gt;</ph> and associated with <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="members" /&gt;</ph>에 저장되어 있고 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>와 관련된 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>For each supplied member of the <ph id="ph1">`members`</ph> array the <ph id="ph2">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> method extracts the value associated with the <ph id="ph3">`obj`</ph> object, and returns it.</source>
          <target state="translated">제공 된 각 구성원에 대해는 <ph id="ph1">`members`</ph> 배열은 <ph id="ph2">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> 와 연결 된 값을 추출 하는 메서드는 <ph id="ph3">`obj`</ph> 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The length of the returned array is the same as the length of the <ph id="ph1">`members`</ph> array.</source>
          <target state="translated">반환 된 배열의 길이가의 길이와 동일는 <ph id="ph1">`members`</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The following example creates an instance of a Book class and sets field values on the instance.</source>
          <target state="translated">다음 예제에서는 책 클래스의 인스턴스를 만들고 인스턴스에서 필드 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The code then gets the type information using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> method.</source>
          <target state="translated">코드는 다음 사용 하 여 형식 정보를 가져옵니다는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The code copies the instance data into an object array using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 개체 배열에 인스턴스 데이터를 복사 하는 코드는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>A new uninitialized instance of the class is created using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> method.</source>
          <target state="translated">클래스의 새 초기화 되지 않은 인스턴스를 사용 하 여 만들어집니다는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>Finally, the data from the first instance is copied into the second instance using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> method.</source>
          <target state="translated">첫 번째 인스턴스가의 데이터가 사용 하 여 두 번째 인스턴스에에 복사 되는 마지막으로 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> or <ph id="ph2">&lt;paramref name="members" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="members" /&gt;</ph> 매개 변수가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>An element of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="members" /&gt;</ph>의 요소가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>An element of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> does not represent a field.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="members" /&gt;</ph>의 요소가 필드를 나타내지 않는 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>For providing serialization services.</source>
          <target state="translated">serialization 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>The type of object to create.</source>
          <target state="translated">만들 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>Creates a new instance of the specified object type.</source>
          <target state="translated">지정된 개체 형식의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>A zeroed object of the specified type.</source>
          <target state="translated">0으로 초기화된 지정된 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object.</source>
          <target state="translated">0으로 초기화 되는 개체의 새 인스턴스 생성자 없음 실행 하므로, 개체가 해당 개체에서 유효한 것으로 간주 되는 상태를 나타내지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> should only be used for deserialization when the user intends to immediately populate all fields.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> 만 사용할지 deserialization을 위해 사용자가 즉시 모든 필드를 채울 하려고 할 때입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.</source>
          <target state="translated">변경할 수 없는 형식의 빈 인스턴스를 만드는 어떠한 기능도 수행 하므로 초기화 되지 않은 문자열을 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> converts all class level <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> to <bpt id="p2">[</bpt>Demands<ept id="p2">](http://msdn.microsoft.com/library/e5283e28-2366-4519-b27d-ef5c1ddc1f48)</ept> to ensure that all direct and indirect callers have the permissions that the demand specifies.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> 모든 클래스 수준 변환 <bpt id="p1">[</bpt>링크 요청<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> 를 <bpt id="p2">[</bpt>요구<ept id="p2">](http://msdn.microsoft.com/library/e5283e28-2366-4519-b27d-ef5c1ddc1f48)</ept> 모든 직접 및 간접 호출자에 게 요구에 지정 된 사용 권한을 갖도록 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> to increase the level of security when deserializing from a partially trusted source.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> 부분적으로 신뢰할 수 있는 소스에서 역직렬화 할 때의 보안 수준을 높입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>For better performance in full trust scenarios, use <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph>.</source>
          <target state="translated">완전 신뢰 시나리오에서 성능 향상을 위해 사용 하 여 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is not a valid common language runtime type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 매개 변수가 유효한 공용 언어 런타임 형식이 아닌 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>For providing serialization services.</source>
          <target state="translated">serialization 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.FormatterServices">
          <source>Returns all the serializable members for a particular class.</source>
          <target state="translated">특정 클래스에 대한 serializable 멤버를 모두 반환합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>The type being serialized.</source>
          <target state="translated">serialize되는 형식입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>Gets all the serializable members for a class of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>의 클래스에 대한 serializable 멤버를 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> of the non-transient, non-static members.</source>
          <target state="translated">임시가 아닌 비정적 멤버의 <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> 형식 배열입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>Generally, the serializable members of a class are the non-transient, non-static members such as fields and properties.</source>
          <target state="translated">일반적으로 클래스의 직렬화 가능 멤버는 필드 및 속성과 같은 영구, static이 아닌 멤버입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>To be included, properties must have both a getter and a setter.</source>
          <target state="translated">포함 되도록 속성에 getter와 setter가 모두 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>A class that implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</source>
          <target state="translated">구현 하는 클래스는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> 인터페이스 또는 serialization에 서로게이트 이러한 모든 멤버를 serialize 하지 않아도 또는 추가 멤버를 serialize 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>The following code example demonstrates implementing the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 구현 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>For providing serialization services.</source>
          <target state="translated">serialization 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>The type being serialized or cloned.</source>
          <target state="translated">serialize 또는 복제되는 형식입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>The context where the serialization occurs.</source>
          <target state="translated">serialization이 발생하는 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>Gets all the serializable members for a class of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and in the provided <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">제공된 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>에 위치하는, 지정된 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>의 클래스에 대한 serializable 멤버를 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> of the non-transient, non-static members.</source>
          <target state="translated">임시가 아닌 비정적 멤버의 <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> 형식 배열입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>Generally, the serializable members of a class are the non-transient, non-static members such as fields and properties.</source>
          <target state="translated">일반적으로 클래스의 직렬화 가능 멤버는 필드 및 속성과 같은 영구, static이 아닌 멤버입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>To be included, properties must have both a getter and a setter.</source>
          <target state="translated">포함 되도록 속성에 getter와 setter가 모두 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>A class that implements <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</source>
          <target state="translated">구현 하는 클래스 <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> 되었거나 serialization 서로게이트는 이러한 모든 멤버를 serialize 하지 않아도 또는 추가 멤버를 serialize 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>Currently, you do not need to do anything different unless <ph id="ph1">`context`</ph> has the <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContextStates&gt;</ph> value <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContextStates.Clone&gt;</ph> set.</source>
          <target state="translated">평소와 하지 않는 한 필요가 없습니다 현재 <ph id="ph1">`context`</ph> 에 <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContextStates&gt;</ph> 값 <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContextStates.Clone&gt;</ph> 설정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>For providing serialization services.</source>
          <target state="translated">serialization 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
          <source>The specified surrogate.</source>
          <target state="translated">지정된 서로게이트입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
          <source>Returns a serialization surrogate for the specified <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /&gt;</ph>의 serialization 서로게이트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /&gt;</ph> for the specified <ph id="ph2">&lt;paramref name="innerSurrogate" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;paramref name="innerSurrogate" /&gt;</ph>에 대한 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializationSurrogate" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The assembly where you want to look up the object.</source>
          <target state="translated">개체를 조회할 어셈블리입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The name of the object.</source>
          <target state="translated">개체의 이름입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>Looks up the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the specified object in the provided <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated">지정된 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>을 제공된 <ph id="ph2">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>에서 조회합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the named object.</source>
          <target state="translated">명명된 개체의 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="assem" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assem" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>For providing serialization services.</source>
          <target state="translated">serialization 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>For extraction of reflection information on members of a type that are not visible.</source>
          <target state="translated">에 대 한 표시 되지 않는 형식의 멤버에 리플렉션 정보를 추출 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>The type of object to create.</source>
          <target state="translated">만들 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>Creates a new instance of the specified object type.</source>
          <target state="translated">지정된 개체 형식의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>A zeroed object of the specified type.</source>
          <target state="translated">0으로 초기화된 지정된 형식의 개체입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object.</source>
          <target state="translated">0으로 초기화 되는 개체의 새 인스턴스 생성자 없음 실행 하므로, 개체가 해당 개체에서 유효한 것으로 간주 되는 상태를 나타내지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>The current method should only be used for deserialization when the user intends to immediately populate all fields.</source>
          <target state="translated">현재 메서드는 사용자가 즉시 모든 필드를 채울 하려고 할 때 deserialization에만 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.</source>
          <target state="translated">변경할 수 없는 형식의 빈 인스턴스를 만드는 어떠한 기능도 수행 하므로 초기화 되지 않은 문자열을 생성 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph> method to create instances of types that derive from the <ph id="ph2">&lt;xref:System.ContextBoundObject&gt;</ph> class.</source>
          <target state="translated">사용할 수 없습니다는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph> 에서 파생 된 형식의 인스턴스를 만드는 메서드는 <ph id="ph2">&lt;xref:System.ContextBoundObject&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>For providing serialization services.</source>
          <target state="translated">serialization 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The object to populate.</source>
          <target state="translated">채울 개체입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that describes which fields and properties to populate.</source>
          <target state="translated">채울 필드 및 속성을 설명하는 <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the values for each field and property to populate.</source>
          <target state="translated">채울 각 필드 및 속성의 값을 지정하는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>의 배열입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>Populates the specified object with values for each field drawn from the data array of objects.</source>
          <target state="translated">지정된 개체를 개체의 데이터 배열에서 끌어 온 각 필드의 값으로 채웁니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The newly populated object.</source>
          <target state="translated">새로 채워진 개체입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>If an element in <ph id="ph1">`data`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> does not write anything to that field.</source>
          <target state="translated">요소가 <ph id="ph1">`data`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> 쓰지 않습니다 아무 것도 해당 필드에 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The following example creates an instance of a Book class and sets field values on the instance.</source>
          <target state="translated">다음 예제에서는 책 클래스의 인스턴스를 만들고 인스턴스에서 필드 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The code then gets the type information using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> method.</source>
          <target state="translated">코드는 다음 사용 하 여 형식 정보를 가져옵니다는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The code copies the instance data into an object array using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 개체 배열에 인스턴스 데이터를 복사 하는 코드는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>A new uninitialized instance of the class is created using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> method.</source>
          <target state="translated">클래스의 새 초기화 되지 않은 인스턴스를 사용 하 여 만들어집니다는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>Finally, the data from the first instance is copied into the second instance using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> method.</source>
          <target state="translated">첫 번째 인스턴스가의 데이터가 사용 하 여 두 번째 인스턴스에에 복사 되는 마지막으로 <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The <ph id="ph1">&lt;paramref name="obj" /&gt;</ph>, <ph id="ph2">&lt;paramref name="members" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="data" /&gt;</ph> parameter is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>, <ph id="ph2">&lt;paramref name="members" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="data" /&gt;</ph> 매개 변수가 <ph id="ph4">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>An element of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="members" /&gt;</ph>의 요소가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The length of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> does not match the length of <ph id="ph2">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="members" /&gt;</ph>의 길이가 <ph id="ph2">&lt;paramref name="data" /&gt;</ph>의 길이와 일치하지 않는 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>An element of <ph id="ph1">&lt;paramref name="members" /&gt;</ph> is not an instance of <ph id="ph2">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="members" /&gt;</ph>의 요소가 <ph id="ph2">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>의 인스턴스가 아닌 경우</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>The caller does not have the required permission.</source>
          <target state="translated">호출자에게 필요한 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>For providing serialization services.</source>
          <target state="translated">serialization 서비스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">연관 된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>