<Type Name="DataContractSerializer" FullName="System.Runtime.Serialization.DataContractSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68c63064380f71ad23832747011f8e1855a2c7cb" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32089281" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataContractSerializer : System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractSerializer extends System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractSerializer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractSerializer&#xA;Inherits XmlObjectSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractSerializer sealed : System::Runtime::Serialization::XmlObjectSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.XmlObjectSerializer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2b703-101">제공된 데이터 계약을 사용하여 특정 형식의 인스턴스를 XML 스트림 또는 문서로 serialize하거나 deserialize합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b703-101">Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract.</span>
      </span>
      <span data-ttu-id="2b703-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b703-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b703-103">특정 형식의 인스턴스를 XML 스트림 또는 문서로 serialize하거나 deserialize하려면 <xref:System.Runtime.Serialization.DataContractSerializer> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-103">Use the <xref:System.Runtime.Serialization.DataContractSerializer> class to serialize and deserialize instances of a type into an XML stream or document.</span></span> <span data-ttu-id="2b703-104">예를 들어, 이름 및 주소와 같은 주요 데이터를 포함하는 속성을 사용하여 `Person`이라는 형식을 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-104">For example, you can create a type named `Person` with properties that contain essential data, such as a name and address.</span></span> <span data-ttu-id="2b703-105">그런 다음 `Person` 클래스의 인스턴스를 만들어 조작할 수 있으며, 모든 속성 값을 나중에 검색하기 위해 XML 문서에 쓰거나 즉시 전송하기 위해 XML 스트림에 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-105">You can then create and manipulate an instance of the `Person` class and write all of its property values in an XML document for later retrieval, or in an XML stream for immediate transport.</span></span> <span data-ttu-id="2b703-106">가장 중요 한는 <xref:System.Runtime.Serialization.DataContractSerializer> Windows Communication Foundation (WCF) 메시지로 전송 데이터 serialize 및 deserialize 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-106">Most important, the <xref:System.Runtime.Serialization.DataContractSerializer> is used to serialize and deserialize data sent in Windows Communication Foundation (WCF) messages.</span></span> <span data-ttu-id="2b703-107">클래스에 <xref:System.Runtime.Serialization.DataContractAttribute> 특성을 적용하고 클래스 멤버에 <xref:System.Runtime.Serialization.DataMemberAttribute> 특성을 적용하여 serialize되는 속성과 필드를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-107">Apply the <xref:System.Runtime.Serialization.DataContractAttribute> attribute to classes, and the <xref:System.Runtime.Serialization.DataMemberAttribute> attribute to class members to specify properties and fields that are serialized.</span></span>  
  
 <span data-ttu-id="2b703-108">Serialize 할 수 있는 형식의 목록, 참조 [데이터 계약 Serializer에서 지 원하는 유형](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-108">For a list of types that can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 <span data-ttu-id="2b703-109"><xref:System.Runtime.Serialization.DataContractSerializer>를 사용하려면 먼저 원하는 클래스의 인스턴스를 만들고 해당 형식을 쓰거나 읽을 적절한 개체를 만듭니다. 예를 들어, <xref:System.Xml.XmlDictionaryWriter>의 인스턴스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-109">To use the <xref:System.Runtime.Serialization.DataContractSerializer>, first create an instance of a class and an object appropriate to writing or reading the format; for example, an instance of the <xref:System.Xml.XmlDictionaryWriter>.</span></span> <span data-ttu-id="2b703-110">그런 다음 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 메서드를 호출하여 데이터를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-110">Then call the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method to persist the data.</span></span> <span data-ttu-id="2b703-111">데이터를 검색하려면 데이터 형식을 읽을 적절한 개체(예: XML 문서의 경우 <xref:System.Xml.XmlDictionaryReader>)를 만들고 <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-111">To retrieve data, create an object appropriate to reading the data format (such as an <xref:System.Xml.XmlDictionaryReader> for an XML document) and call the <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> method.</span></span>  
  
 <span data-ttu-id="2b703-112">사용 하는 방법에 대 한 자세한 내용은 <xref:System.Runtime.Serialization.DataContractSerializer>, 참조 [Serialization 및 Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-112">For more information about using the <xref:System.Runtime.Serialization.DataContractSerializer>, see [Serialization and Deserialization](~/docs/framework/wcf/feature-details/serialization-and-deserialization.md).</span></span>  
  
 <span data-ttu-id="2b703-113">사용 하 여 데이터 계약 serializer의 형식을 설정할 수 있습니다는 [ &lt;dataContractSerializer&gt; ](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) 클라이언트 응용 프로그램 구성 파일의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-113">You can set the type of a data contract serializer using the [&lt;dataContractSerializer&gt;](~/docs/framework/configure-apps/file-schema/wcf/datacontractserializer-element.md) element in a client application configuration file.</span></span>  
  
## <a name="preparing-classes-for-serialization-or-deserialization"></a><span data-ttu-id="2b703-114">Serialization 또는 Deserialization을 위한 클래스 준비</span><span class="sxs-lookup"><span data-stu-id="2b703-114">Preparing Classes for Serialization or Deserialization</span></span>  
 <span data-ttu-id="2b703-115"><xref:System.Runtime.Serialization.DataContractSerializer>는 <xref:System.Runtime.Serialization.DataContractAttribute> 및 <xref:System.Runtime.Serialization.DataMemberAttribute> 클래스와 함께 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-115">The <xref:System.Runtime.Serialization.DataContractSerializer> is used in combination with the <xref:System.Runtime.Serialization.DataContractAttribute> and <xref:System.Runtime.Serialization.DataMemberAttribute> classes.</span></span> <span data-ttu-id="2b703-116">클래스 serialization을 준비하려면 클래스에 <xref:System.Runtime.Serialization.DataContractAttribute>를 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-116">To prepare a class for serialization, apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class.</span></span>  <span data-ttu-id="2b703-117">serialize할 데이터를 반환하는 클래스의 각 멤버에 대해 <xref:System.Runtime.Serialization.DataMemberAttribute>를 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-117">For each member of the class that returns data that you want to serialize, apply the <xref:System.Runtime.Serialization.DataMemberAttribute>.</span></span> <span data-ttu-id="2b703-118">액세스 가능성에 상관없이 private, protected, internal, protected internal, public 등의 필드와 속성을 serialize할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-118">You can serialize fields and properties, regardless of accessibility: private, protected, internal, protected internal, or public.</span></span>  
  
 <span data-ttu-id="2b703-119">예를 들어, 스키마에서 `Customer` 속성을 사용하여 `ID`를 지정하는데 이미 기존 응용 프로그램에서 `Person` 속성을 가진 `Name`이라는 형식을 사용할 경우가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-119">For example, your schema specifies a `Customer` with an `ID` property, but you already have an existing application that uses a type named `Person` with a `Name` property.</span></span> <span data-ttu-id="2b703-120">계약을 따르는 형식을 만들려면 먼저 클래스에 <xref:System.Runtime.Serialization.DataContractAttribute>를 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-120">To create a type that conforms to the contract, first apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class.</span></span>  <span data-ttu-id="2b703-121">그런 다음 serialize할 모든 필드 또는 속성에 <xref:System.Runtime.Serialization.DataMemberAttribute>를 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-121">Then apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to every field or property that you want to serialize.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b703-122"><xref:System.Runtime.Serialization.DataMemberAttribute>는 private 및 public 멤버에 모두 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-122">You can apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to both private and public members.</span></span>  
  
 <span data-ttu-id="2b703-123">XML의 최종 형식은 텍스트여야 할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-123">The final format of the XML need not be text.</span></span> <span data-ttu-id="2b703-124"><xref:System.Runtime.Serialization.DataContractSerializer>는 데이터를 XML infoset으로 작성하며, 이 형식을 사용하면 <xref:System.Xml.XmlReader>와 <xref:System.Xml.XmlWriter>에서 인식되는 어떤 형식으로든 데이터를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-124">Instead, the <xref:System.Runtime.Serialization.DataContractSerializer> writes the data as an XML infoset, which allows you to write the data to any format recognized by the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter>.</span></span> <span data-ttu-id="2b703-125"><xref:System.Xml.XmlDictionaryReader> 및 <xref:System.Xml.XmlDictionaryWriter> 클래스는 <xref:System.Runtime.Serialization.DataContractSerializer>와 함께 작동하도록 최적화되어 있으므로 이 두 클래스를 사용하여 읽고 쓰는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-125">It is recommended that you use the <xref:System.Xml.XmlDictionaryReader> and <xref:System.Xml.XmlDictionaryWriter> classes to read and write, because both are optimized to work with the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span>  
  
 <span data-ttu-id="2b703-126">직렬화 하기 전에 채워야 할 수 있는 필드 또는 속성을 가진 만들면 또는 deserialization이 발생 하는 경우에 설명 된 대로 콜백 특성을 사용 [버전 독립적 Serialization 콜백](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-126">If you are creating a class that has fields or properties that must be populated before the serialization or deserialization occurs, use callback attributes, as described in [Version-Tolerant Serialization Callbacks](~/docs/framework/wcf/feature-details/version-tolerant-serialization-callbacks.md).</span></span>  
  
## <a name="adding-to-the-collection-of-known-types"></a><span data-ttu-id="2b703-127">알려진 형식 컬렉션에 추가</span><span class="sxs-lookup"><span data-stu-id="2b703-127">Adding to the Collection of Known Types</span></span>  
 <span data-ttu-id="2b703-128">개체를 serialize하거나 deserialize할 때 형식은 <xref:System.Runtime.Serialization.DataContractSerializer>에 "알려진" 형식이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-128">When serializing or deserializing an object, it is required that the type is "known" to the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="2b703-129">먼저 <xref:System.Collections.Generic.IEnumerable%601>을 구현하는 클래스 인스턴스(예: <xref:System.Collections.Generic.List%601>)를 만들고 알려진 형식을 컬렉션에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-129">Begin by creating an instance of a class that implements <xref:System.Collections.Generic.IEnumerable%601> (such as <xref:System.Collections.Generic.List%601>) and adding the known types to the collection.</span></span> <span data-ttu-id="2b703-130">그런 다음 <xref:System.Runtime.Serialization.DataContractSerializer>을 사용하는 오버로드 중 하나를 사용하여 <xref:System.Collections.Generic.IEnumerable%601>의 인스턴스를 만듭니다(예: <xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29>).</span><span class="sxs-lookup"><span data-stu-id="2b703-130">Then create an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> using one of the overloads that takes the <xref:System.Collections.Generic.IEnumerable%601> (for example, <xref:System.Runtime.Serialization.DataContractSerializer.%23ctor%28System.Type%2CSystem.Collections.Generic.IEnumerable%7BSystem.Type%7D%29>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b703-131">다른 기본 형식과 달리는 <xref:System.DateTimeOffset> 알려진 형식의 목록에 수동으로 추가 해야 구조체는 기본적으로 알려진된 형식이 아니므로 (참조 [데이터 계약 알려진 형식을](~/docs/framework/wcf/feature-details/data-contract-known-types.md)).</span><span class="sxs-lookup"><span data-stu-id="2b703-131">Unlike other primitive types, the <xref:System.DateTimeOffset> structure is not a known type by default, so it must be manually added to the list of known types (see [Data Contract Known Types](~/docs/framework/wcf/feature-details/data-contract-known-types.md)).</span></span>  
  
## <a name="forward-compatibility"></a><span data-ttu-id="2b703-132">이후 버전과의 호환성</span><span class="sxs-lookup"><span data-stu-id="2b703-132">Forward Compatibility</span></span>  
 <span data-ttu-id="2b703-133"><xref:System.Runtime.Serialization.DataContractSerializer>는 이후 버전의 계약과 호환되도록 설계된 데이터 계약을 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-133">The <xref:System.Runtime.Serialization.DataContractSerializer> understands data contracts that have been designed to be compatible with future versions of the contract.</span></span> <span data-ttu-id="2b703-134">이러한 형식은 <xref:System.Runtime.Serialization.IExtensibleDataObject> 인터페이스를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-134">Such types implement the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span> <span data-ttu-id="2b703-135">이 인터페이스는 <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> 개체를 반환하는 <xref:System.Runtime.Serialization.ExtensionDataObject> 속성을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-135">The interface features the <xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A> property that returns an <xref:System.Runtime.Serialization.ExtensionDataObject> object.</span></span> <span data-ttu-id="2b703-136">자세한 내용은 [호환 가능한 데이터 계약](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2b703-136">For more information, see [Forward-Compatible Data Contracts](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md).</span></span>  
  
## <a name="running-under-partial-trust"></a><span data-ttu-id="2b703-137">부분 신뢰로 실행</span><span class="sxs-lookup"><span data-stu-id="2b703-137">Running under Partial Trust</span></span>  
 <span data-ttu-id="2b703-138">deserialization 중에 대상 개체를 인스턴스화할 때 <xref:System.Runtime.Serialization.DataContractSerializer>는 대상 개체의 생성자를 호출하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-138">When instantiating the target object during deserialization, the <xref:System.Runtime.Serialization.DataContractSerializer> does not call the constructor of the target object.</span></span> <span data-ttu-id="2b703-139">작성할 경우는 *[DataContract]* 부분 신뢰에서 액세스할 수 있는 형식 (즉, public이 고 어셈블리에서 포함 하는 `AllowPartiallyTrustedCallers` 특성 적용) 알고 있어야 몇 가지 보안 관련 작업을 수행 하는 생성자 호출 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-139">If you author a *[DataContract]* type that is accessible from partial trust (that is, it is public and in an assembly that has the `AllowPartiallyTrustedCallers` attribute applied) and that performs some security-related actions, you must be aware that the constructor is not called.</span></span> <span data-ttu-id="2b703-140">특히 다음과 같은 경우에 해당 기능을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-140">In particular, the following techniques do not work:</span></span>  
  
-   <span data-ttu-id="2b703-141">생성자를 internal 또는 private으로 만들거나 생성자에 `LinkDemand`를 추가하여 부분 신뢰 액세스를 제한하려고 시도할 경우 부분 신뢰로 deserialization을 수행하면 두 가지 방법 모두 아무런 효력이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-141">If you try to restrict partial trust access by making the constructor internal or private, or by adding a `LinkDemand` to the constructor -- neither of these have any effect during deserialization under partial trust.</span></span>  
  
-   <span data-ttu-id="2b703-142">실행된 생성자를 가정하는 클래스를 코딩할 경우 이 클래스의 상태가 잘못된 internal 상태로 되어 악용될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-142">If you code the class that assumes the constructor has run, the class may get into an invalid internal state that is exploitable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b703-143">다음 예제 코드에서는 `Person`에 의해 serialize되는 <xref:System.Runtime.Serialization.DataContractSerializer>이라는 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-143">The following example code shows a type named `Person` that is serialized by the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="2b703-144"><xref:System.Runtime.Serialization.DataContractAttribute> 특성은 클래스에 적용되고 <xref:System.Runtime.Serialization.DataMemberAttribute>는 멤버(private 멤버 포함)에 적용되어 <xref:System.Runtime.Serialization.DataContractSerializer>에 serialize할 대상을 알려 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-144">The <xref:System.Runtime.Serialization.DataContractAttribute> attribute is applied to the class, and the <xref:System.Runtime.Serialization.DataMemberAttribute> is applied to members to instruct the <xref:System.Runtime.Serialization.DataContractSerializer> what to serialize.</span></span>  
  
 [!code-csharp[DataContractSerializer#0](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#0)]
 [!code-vb[DataContractSerializer#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#0)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2b703-145">이 클래스의 인스턴스는 스레드로부터 안전 구현 된 인스턴스가 사용 되는 경우를 제외 하 고는 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 또는 <see cref="T:System.Runtime.Serialization.DataContractResolver" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b703-145">Instances of this class are thread safe except when the instance is used with an implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> or <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="2b703-146">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-146">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="2b703-147">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-147">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="2b703-148">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-148">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-149">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-149">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-150">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-150">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-151">다음 예제에서는 serialize하거나 deserialize할 형식을 지정하는 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-151">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize.</span></span>  
  
 [!code-csharp[DataContractSerializer#8](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#8)]
 [!code-vb[DataContractSerializer#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-152">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-152">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-153">@FSHO1@개체 그래프에 있을 수 있는 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-153">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-154">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체와 개체 그래프에 있을 수 있는 알려진 형식의 컬렉션을 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-154">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-155">다음 예제에서는 serialize하거나 deserialize할 형식을 지정하는 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스와 개체 그래프에서 사용할 수 있는 알려진 형식의 컬렉션을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-155">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize and a collection of known types that can be used in the object graph.</span></span>  
  
 [!code-csharp[DataContractSerializer#9](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#9)]
 [!code-vb[DataContractSerializer#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Runtime.Serialization.DataContractSerializerSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Runtime.Serialization.DataContractSerializerSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Runtime::Serialization::DataContractSerializerSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="settings" Type="System.Runtime.Serialization.DataContractSerializerSettings" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-156">serialize되거나 deserialize할 인스턴스의 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-156">The type of the instance to serialize or deserialize.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="2b703-157">serializer 설정입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-157">The serializer settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-158">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식 및 설정의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-158">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type and settings.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-159">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-159">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="2b703-160">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-160">The name of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="2b703-161">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-161">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-162">제공된 XML 루트 요소 및 네임스페이스를 사용하여 지정된 형식의 개체를 serialize하거나 deserialize하기 위해 <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-162">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-163">다음 예제에서는 serialize하거나 deserialize할 형식과, XML 문서에서 읽거나 쓸 XML 이름 및 네임스페이스를 지정하는 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-163">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#10)]
 [!code-vb[DataContractSerializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-164">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-164">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="2b703-165">콘텐츠의 루트 요소 이름을 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-165">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="2b703-166">루트 요소의 네임스페이스를 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-166">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-167">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 형식 매개 변수를 통해 지정된 XML 루트 요소 및 네임스페이스를 사용하여 지정된 형식의 개체를 serialize하거나 deserialize하기 위해 <see cref="T:System.Xml.XmlDictionaryString" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-167">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type <see cref="T:System.Xml.XmlDictionaryString" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-168">다음 예제에서는 serialize하거나 deserialize할 형식과, XML 문서에서 읽거나 쓸 XML 이름 및 네임스페이스를 <xref:System.Runtime.Serialization.DataContractSerializer> 개체로 지정하는 <xref:System.Xml.XmlDictionaryString>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-168">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref:System.Xml.XmlDictionaryString> objects) to read from or write to the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#11](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#11)]
 [!code-vb[DataContractSerializer#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-169">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-169">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="2b703-170">콘텐츠의 루트 요소 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-170">The root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="2b703-171">루트 요소의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-171">The namespace of the root element.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-172">@FSHO1@개체 그래프에 있을 수 있는 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-172">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-173">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-173">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="2b703-174">이 메서드는 두 문자열 매개 변수에 루트 XML 요소와 네임스페이스를 지정하고, 개체 그래프에 있을 수 있는 알려진 형식의 목록을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-174">This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-175">다음 예제에서는 serialize하거나 deserialize할 형식과, XML 문서에서 읽거나 쓸 XML 이름 및 네임스페이스를 지정하는 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-175">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace to read from or write to the XML document.</span></span> <span data-ttu-id="2b703-176">이 코드에서는 serialization 또는 deserialization 중에 사용되는 알려진 형식을 포함하는 <xref:System.Collections.Generic.IEnumerable%601>의 인스턴스도 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-176">The code also creates an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span>  
  
 [!code-csharp[DataContractSerializer#12](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#12)]
 [!code-vb[DataContractSerializer#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-177">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-177">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="2b703-178">콘텐츠의 루트 요소 이름을 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-178">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the root element name of the content.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="2b703-179">루트 요소의 네임스페이스를 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-179">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace of the root element.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-180">개체 그래프에 있을 수 있는 알려진 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-180">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-181">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-181">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="2b703-182">이 메서드는 두 개의 <see cref="T:System.Xml.XmlDictionaryString" /> 매개 변수에 루트 XML 요소와 네임스페이스를 지정하고, 개체 그래프에 있을 수 있는 알려진 형식의 목록을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-182">This method also specifies the root XML element and namespace in two <see cref="T:System.Xml.XmlDictionaryString" /> parameters as well as a list of known types that may be present in the object graph.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-183">다음 예제에서는 serialize하거나 deserialize할 형식과, XML 문서에서 읽거나 쓸 XML 이름 및 네임스페이스를 <xref:System.Runtime.Serialization.DataContractSerializer> 개체로 지정하는 <xref:System.Xml.XmlDictionaryString>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-183">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize as well as the XML name and namespace (as <xref:System.Xml.XmlDictionaryString> objects) to read from or write to the XML document.</span></span> <span data-ttu-id="2b703-184">이 코드에서는 serialization 또는 deserialization 중에 사용되는 알려진 형식을 포함하는 <xref:System.Collections.Generic.IEnumerable%601>의 인스턴스도 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-184">The code also creates an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span>  
  
 [!code-csharp[DataContractSerializer#13](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#13)]
 [!code-vb[DataContractSerializer#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-185">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-185">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-186">개체 그래프에 있을 수 있는 알려진 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-186">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="2b703-187">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-187">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="2b703-188">기본값은 <see cref="F:System.Int32.MaxValue" /> 속성에서 반환한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-188">The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="2b703-189">serialization 및 deserialization 중에 형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-189">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="2b703-190">비표준 XML 구문을 사용하여 개체 참조 데이터를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-190">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="2b703-191">serialization 프로세스를 사용자 지정하기 위한 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-191">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-192">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-192">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="2b703-193">또한 이 메서드는 개체 그래프에 있을 수 있는 알려진 형식의 목록, serialize할 최대 그래프 항목 수, 예기치 않은 데이터를 무시할 매개 변수, 비표준 XML 구문을 사용하여 그래프에서 개체 참조 데이터를 유지할지 여부, 사용자 지정 serialization을 위한 서로게이트를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-193">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, and a surrogate for custom serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-194">다음 예제에서는 serialize하거나 deserialize할 형식을 지정하는 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스와, serialization 또는 deserialization 중에 사용되는 알려진 형식을 포함하는 <xref:System.Collections.Generic.IEnumerable%601>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-194">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize and an instance of a <xref:System.Collections.Generic.IEnumerable%601> to contain the known types used during serialization or deserialization.</span></span> <span data-ttu-id="2b703-195">코드에서는 또한 설정는 `ignoreExtensionDataObject` 및 `preserveObjectReferences` 매개 변수를 `true`의 구현을 지정 하 고는 <xref:System.Runtime.Serialization.IDataContractSurrogate> 레거시 형식을 처리 하는 인터페이스 (하지 않은 형식에는 <xref:System.Runtime.Serialization.DataContractAttribute> 특성이 적용).</span><span class="sxs-lookup"><span data-stu-id="2b703-195">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="2b703-196">자세한 내용은 참조는 <xref:System.Runtime.Serialization.IDataContractSurrogate> 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-196">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#14](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#14)]
 [!code-vb[DataContractSerializer#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b703-197">항목 수가 최대값을 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-197">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-198">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-198">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-199">개체 그래프에 있을 수 있는 알려진 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-199">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="2b703-200">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-200">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="2b703-201">기본값은 <see cref="F:System.Int32.MaxValue" /> 속성에서 반환한 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-201">The default is the value returned by the <see cref="F:System.Int32.MaxValue" /> property.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="2b703-202">serialization 및 deserialization 중에 형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-202">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="2b703-203">비표준 XML 구문을 사용하여 개체 참조 데이터를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-203">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="2b703-204">serialization 프로세스를 사용자 지정하기 위한 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-204">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="2b703-205">
            <see langword="xsi:type" /> 선언을 데이터 계약 형식에 매핑하기 위한 <see cref="T:System.Runtime.Serialization.DataContractResolver" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-205">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-206">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-206">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="2b703-207">또한 이 메서드는 개체 그래프에 있을 수 있는 알려진 형식의 목록, serialize할 최대 그래프 항목 수, 예기치 않은 데이터를 무시할 매개 변수, 비표준 XML 구문을 사용하여 그래프에서 개체 참조 데이터를 유지할지 여부, 사용자 지정 serialization을 위한 서로게이트 및 런타임에 <see langword="xsi:type" /> 선언을 매핑하기 위한 대안을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-207">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="2b703-208">이 메서드는 Windows 스토어 앱에서 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-208">This method is not available in Windows Store apps.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-209">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-209">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="2b703-210">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-210">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="2b703-211">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-211">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-212">개체 그래프에 있을 수 있는 알려진 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-212">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="2b703-213">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-213">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="2b703-214">serialization 및 deserialization 중에 형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-214">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="2b703-215">비표준 XML 구문을 사용하여 개체 참조 데이터를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-215">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="2b703-216">serialization 프로세스를 사용자 지정하기 위한 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-216">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-217">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-217">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="2b703-218">또한 이 메서드는 개체 그래프에 있을 수 있는 알려진 형식의 목록, serialize할 최대 그래프 항목 수, 예기치 않은 데이터를 무시할 매개 변수, 비표준 XML 구문을 사용하여 그래프에서 개체 참조 데이터를 유지할지 여부, 사용자 지정 serialization을 위한 서로게이트 및 콘텐츠가 들어 있는 XML 요소와 네임스페이스를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-218">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and the XML element and namespace that contain the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-219">다음 예제에서는 serialize하거나 deserialize할 형식을 지정하는 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스, 루트 XML 요소와 네임스페이스, deserialization 중에 사용되는 형식을 포함하는 <xref:System.Collections.Generic.IEnumerable%601>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-219">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize, the root XML element and namespace, and an instance of a <xref:System.Collections.Generic.IEnumerable%601> that contains the types used during deserialization.</span></span> <span data-ttu-id="2b703-220">코드에서는 또한 설정는 `ignoreExtensionDataObject` 및 `preserveObjectReferences` 매개 변수를 `true`의 구현을 지정 하 고는 <xref:System.Runtime.Serialization.IDataContractSurrogate> 레거시 형식을 처리 하는 인터페이스 (하지 않은 형식에는 <xref:System.Runtime.Serialization.DataContractAttribute> 특성이 적용).</span><span class="sxs-lookup"><span data-stu-id="2b703-220">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="2b703-221">자세한 내용은 참조는 <xref:System.Runtime.Serialization.IDataContractSurrogate> 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-221">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#15](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#15)]
 [!code-vb[DataContractSerializer#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b703-222">항목 수가 최대값을 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-222">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-223">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-223">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="2b703-224">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소를 지정하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-224">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="2b703-225">루트의 XML 네임스페이스를 지정하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-225">The <see cref="T:System.Xml.XmlDictionaryString" /> that specifies the XML namespace of the root.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-226">개체 그래프에 있을 수 있는 알려진 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-226">A <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="2b703-227">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-227">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="2b703-228">serialization 및 deserialization 중에 형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-228">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="2b703-229">비표준 XML 구문을 사용하여 개체 참조 데이터를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-229">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="2b703-230">serialization 프로세스를 사용자 지정하기 위한 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-230">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-231">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-231">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="2b703-232">또한 이 메서드는 개체 그래프에 있을 수 있는 알려진 형식의 목록, serialize할 최대 그래프 항목 수, 예기치 않은 데이터를 무시할 매개 변수, 비표준 XML 구문을 사용하여 그래프에서 개체 참조 데이터를 유지할지 여부, 사용자 지정 serialization을 위한 서로게이트, 콘텐츠가 포함된 XML 요소와 네임스페이스를 지정하는 <see cref="T:System.Xml.XmlDictionaryString" />의 매개 변수를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-232">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, and parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contain the content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-233">다음 예제에서는 serialize하거나 deserialize할 형식을 지정하는 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스, 루트 XML 요소와 네임스페이스(<xref:System.Xml.XmlDictionaryString> 매개 변수로 지정), deserialization 중에 사용되는 형식을 포함하는 <xref:System.Collections.Generic.IEnumerable%601>의 인스턴스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-233">The following example creates an instance of the <xref:System.Runtime.Serialization.DataContractSerializer> that specifies the type to serialize or deserialize, the root XML element and namespace (as <xref:System.Xml.XmlDictionaryString> parameters), and an instance of a <xref:System.Collections.Generic.IEnumerable%601> that contains the types used during deserialization.</span></span> <span data-ttu-id="2b703-234">코드에서는 또한 설정는 `ignoreExtensionDataObject` 및 `preserveObjectReferences` 매개 변수를 `true`의 구현을 지정 하 고는 <xref:System.Runtime.Serialization.IDataContractSurrogate> 레거시 형식을 처리 하는 인터페이스 (하지 않은 형식에는 <xref:System.Runtime.Serialization.DataContractAttribute> 특성이 적용).</span><span class="sxs-lookup"><span data-stu-id="2b703-234">The code also sets the `ignoreExtensionDataObject` and `preserveObjectReferences` parameters to `true`, and specifies an implementation of the <xref:System.Runtime.Serialization.IDataContractSurrogate> interface to handle legacy types (types that do not have the <xref:System.Runtime.Serialization.DataContractAttribute> attribute applied).</span></span> <span data-ttu-id="2b703-235">자세한 내용은 참조는 <xref:System.Runtime.Serialization.IDataContractSurrogate> 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-235">For more information, see the <xref:System.Runtime.Serialization.IDataContractSurrogate> documentation.</span></span>  
  
 [!code-csharp[DataContractSerializer#16](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#16)]
 [!code-vb[DataContractSerializer#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b703-236">항목 수가 최대값을 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-236">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, string rootName, string rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string rootName, string rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::String ^ rootName, System::String ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-237">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-237">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="2b703-238">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-238">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="2b703-239">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-239">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-240">개체 그래프에 있을 수 있는 알려진 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="2b703-241">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-241">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="2b703-242">serialization 및 deserialization 중에 형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-242">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="2b703-243">비표준 XML 구문을 사용하여 개체 참조 데이터를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-243">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="2b703-244">serialization 프로세스를 사용자 지정하기 위한 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-244">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="2b703-245">
            <see langword="xsi:type" /> 선언을 데이터 계약 형식에 매핑하기 위한 <see cref="T:System.Runtime.Serialization.DataContractResolver" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-245">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-246">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-246">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="2b703-247">또한 이 메서드는 개체 그래프에 있을 수 있는 알려진 형식의 목록, serialize할 최대 그래프 항목 수, 예기치 않은 데이터를 무시할 매개 변수, 비표준 XML 구문을 사용하여 그래프에서 개체 참조 데이터를 유지할지 여부, 사용자 지정 serialization을 위한 서로게이트, 콘텐츠를 포함하는 XML 요소와 네임스페이스, 그리고 런타임에 <see langword="xsi:type" /> 선언을 매핑하기 위한 대안을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-247">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, the XML element and namespace that contains the content, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractSerializer (Type type, System.Xml.XmlDictionaryString rootName, System.Xml.XmlDictionaryString rootNamespace, System.Collections.Generic.IEnumerable&lt;Type&gt; knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.XmlDictionaryString rootName, class System.Xml.XmlDictionaryString rootNamespace, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; knownTypes, int32 maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, class System.Runtime.Serialization.IDataContractSurrogate dataContractSurrogate, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractSerializer(Type ^ type, System::Xml::XmlDictionaryString ^ rootName, System::Xml::XmlDictionaryString ^ rootNamespace, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ knownTypes, int maxItemsInObjectGraph, bool ignoreExtensionDataObject, bool preserveObjectReferences, System::Runtime::Serialization::IDataContractSurrogate ^ dataContractSurrogate, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="rootName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="rootNamespace" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="knownTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
        <Parameter Name="maxItemsInObjectGraph" Type="System.Int32" />
        <Parameter Name="ignoreExtensionDataObject" Type="System.Boolean" />
        <Parameter Name="preserveObjectReferences" Type="System.Boolean" />
        <Parameter Name="dataContractSurrogate" Type="System.Runtime.Serialization.IDataContractSurrogate" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="2b703-248">serialize되거나 deserialize되는 인스턴스 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-248">The type of the instances that are serialized or deserialized.</span>
          </span>
        </param>
        <param name="rootName">
          <span data-ttu-id="2b703-249">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-249">The XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="rootNamespace">
          <span data-ttu-id="2b703-250">serialize하거나 deserialize할 콘텐츠를 둘러싸는 XML 요소의 네임스페이스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-250">The namespace of the XML element that encloses the content to serialize or deserialize.</span>
          </span>
        </param>
        <param name="knownTypes">
          <span data-ttu-id="2b703-251">개체 그래프에 있을 수 있는 알려진 형식을 포함하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-251">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Type" /> that contains the known types that may be present in the object graph.</span>
          </span>
        </param>
        <param name="maxItemsInObjectGraph">
          <span data-ttu-id="2b703-252">그래프에서 serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-252">The maximum number of items in the graph to serialize or deserialize.</span>
          </span>
        </param>
        <param name="ignoreExtensionDataObject">
          <span data-ttu-id="2b703-253">serialization 및 deserialization 중에 형식 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-253">
              <see langword="true" /> to ignore the data supplied by an extension of the type upon serialization and deserialization; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="preserveObjectReferences">
          <span data-ttu-id="2b703-254">비표준 XML 구문을 사용하여 개체 참조 데이터를 유지하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-254">
              <see langword="true" /> to use non-standard XML constructs to preserve object reference data; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractSurrogate">
          <span data-ttu-id="2b703-255">serialization 프로세스를 사용자 지정하기 위한 <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-255">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> to customize the serialization process.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="2b703-256">
            <see langword="xsi:type" /> 선언을 데이터 계약 형식에 매핑하기 위한 <see cref="T:System.Runtime.Serialization.DataContractResolver" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-256">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-257">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체를 serialize하거나 deserialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-257">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> class to serialize or deserialize an object of the specified type.</span>
          </span>
          <span data-ttu-id="2b703-258">또한 이 메서드는 개체 그래프에 있을 수 있는 알려진 형식의 목록, serialize할 최대 그래프 항목 수, 예기치 않은 데이터를 무시할 매개 변수, 비표준 XML 구문을 사용하여 그래프에서 개체 참조 데이터를 유지할지 여부, 사용자 지정 serialization을 위한 서로게이트, 콘텐츠를 포함하는 XML 요소 및 네임스페이스를 지정하는 <see cref="T:System.Xml.XmlDictionaryString" /> 매개 변수, 그리고 런타임에 <see langword="xsi:type" /> 선언을 매핑하기 위한 대안을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-258">This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize, parameters to ignore unexpected data, whether to use non-standard XML constructs to preserve object reference data in the graph, a surrogate for custom serialization, parameters of <see cref="T:System.Xml.XmlDictionaryString" /> that specify the XML element and namespace that contains the content, and an alternative for mapping <see langword="xsi:type" /> declarations at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractResolver">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.DataContractResolver DataContractResolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.DataContractResolver DataContractResolver" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContractResolver As DataContractResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::DataContractResolver ^ DataContractResolver { System::Runtime::Serialization::DataContractResolver ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.DataContractResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-259">
            <see langword="xsi:type" /> 선언을 알려진 계약 형식에 동적으로 매핑하는 데 사용되는 구성 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-259">Gets the component used to dynamically map <see langword="xsi:type" /> declarations to known contract types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b703-260">
            <see cref="T:System.Runtime.Serialization.DataContractResolver" /> 클래스의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-260">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b703-261"><xref:System.Runtime.Serialization.DataContractResolver>는 <xref:System.Runtime.Serialization.DataContractSerializer> 생성자를 사용하여 설정됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-261">The <xref:System.Runtime.Serialization.DataContractResolver> is set using a <xref:System.Runtime.Serialization.DataContractSerializer> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-262">serialization 또는 deserialization 프로세스를 확장할 수 있는 서로게이트 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-262">Gets a surrogate type that can extend the serialization or deserialization process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b703-263">
            <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> 클래스의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-263">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b703-264"><xref:System.Runtime.Serialization.IDataContractSurrogate>를 사용하면 특정 형식의 인스턴스가 serialize되거나 deserialize되는 방법을 사용자 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-264">The <xref:System.Runtime.Serialization.IDataContractSurrogate> can be used to customize how instances of a type are serialized and deserialized.</span></span> <span data-ttu-id="2b703-265">예를 들어 serialize할 수 없는 레거시 형식, 즉 <xref:System.Runtime.Serialization.DataContractAttribute> 특성이 적용되지 않는 형식을 serialize할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-265">For example, it can be used to enable the serialization of legacy types that are not serializable, that is, types to which the <xref:System.Runtime.Serialization.DataContractAttribute> attribute has not been applied.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDataContractSurrogate" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreExtensionDataObject">
      <MemberSignature Language="C#" Value="public bool IgnoreExtensionDataObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreExtensionDataObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreExtensionDataObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreExtensionDataObject { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-266">클래스를 serialize하거나 deserialize할 때 해당 클래스의 확장에서 제공하는 데이터를 무시하는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-266">Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b703-267">확장 데이터를 생략하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-267">
              <see langword="true" /> to omit the extension data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b703-268"><xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A> 속성은 <xref:System.Runtime.Serialization.DataContractAttribute>가 적용된 클래스에서 <xref:System.Runtime.Serialization.IExtensibleDataObject> 인터페이스도 구현할 때 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-268">The <xref:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject%2A> property is used when the class to which a <xref:System.Runtime.Serialization.DataContractAttribute> has been applied also implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span> <span data-ttu-id="2b703-269">이 경우 이후 버전의 계약에 추가된 데이터는 읽기 및 쓰기 중에 무시됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-269">In this case, the data added in a future version of the contract is ignored on read and write.</span></span> <span data-ttu-id="2b703-270">자세한 내용은 [호환 가능한 데이터 계약](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="2b703-270">For more information, see [Forward-Compatible Data Contracts](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject" />
        <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
        <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
        <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-271">deserialize할 수 있는 개체에 판독기가 배치되는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-271">Determines whether the reader is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2b703-272">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-272">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-273">deserialize할 수 있는 개체에 <see cref="T:System.Xml.XmlDictionaryReader" />가 배치되는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-273">Determines whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b703-274">판독기가 읽을 스트림의 시작 요소에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-274">
              <see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b703-275"><xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A>는 판독기가 XML 요소에 배치되는지를 검사하여 개체를 읽을 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-275">The <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> determines whether it can read an object by checking that it is positioned on an XML element.</span></span> <span data-ttu-id="2b703-276">또한 판독기가 배치되는 XML 요소의 이름과 네임스페이스를 검사하고 예상 이름 및 네임스페이스와 값을 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-276">It also examines the name and namespace of the XML element that the reader is positioned at and compares the values to the expected name and namespace.</span></span> <span data-ttu-id="2b703-277">예상 이름 및 네임스페이스는 생성자로 전달된 형식의 데이터 계약 이름과 네임스페이스 또는 생성자로 전달된 `rootName` 및 `rootNamespace` 값(있는 경우)을 사용하여 설정될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-277">The expected name and namespace can be set with the following: the data contract name and namespace of the type passed into the constructor, or the `rootName` and `rootNamespace` values passed into the constructor (if present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b703-278">다음 예제에서는 <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> 속성을 사용하여 데이터 시작을 찾았는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-278">The following example uses the <xref:System.Runtime.Serialization.DataContractSerializer.IsStartObject%2A> property to determine whether the start of the data has been found.</span></span>  
  
 [!code-csharp[DataContractSerializer#6](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#6)]
 [!code-vb[DataContractSerializer#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public override bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2b703-279">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-279">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-280">deserialize할 수 있는 개체에 <see cref="T:System.Xml.XmlReader" />가 배치되는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-280">Determines whether the <see cref="T:System.Xml.XmlReader" /> is positioned on an object that can be deserialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b703-281">판독기가 읽을 스트림의 시작 요소에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-281">
              <see langword="true" /> if the reader is at the start element of the stream to read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;Type&gt; KnownTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Type&gt; KnownTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownTypes As ReadOnlyCollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;Type ^&gt; ^ KnownTypes { System::Collections::ObjectModel::ReadOnlyCollection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-282">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" />의 이 인스턴스를 사용하여 serialize된 개체 그래프에 있을 수 있는 형식 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-282">Gets a collection of types that may be present in the object graph serialized using this instance of the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b703-283">
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 생성자에 알려진 형식으로 전달되는 예상 형식을 포함하는 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-283">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the expected types passed in as known types to the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> constructor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b703-284"><xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A> 속성은 serialization 및 deserialization에 사용되는 알려진 형식의 집합을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-284">The <xref:System.Runtime.Serialization.DataContractSerializer.KnownTypes%2A> property provides the set of known types that are used for serialization and deserialization.</span></span> <span data-ttu-id="2b703-285">예를 들어, <xref:System.Collections.Hashtable> 클래스의 인스턴스에 `Person` 클래스의 인스턴스가 포함된 경우 `Person` 형식을 <xref:System.Collections.Generic.List%601> 클래스의 인스턴스에 추가하고 이 인스턴스를 사용하여 <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-285">For example, if an instance of the <xref:System.Collections.Hashtable> class contains instances of a `Person` class, add the `Person` type to an instance of the <xref:System.Collections.Generic.List%601> class and use the instance to construct an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="2b703-286"><xref:System.Collections.Hashtable>에 추가할 다른 형식을 알고 있으면 컬렉션에 그러한 형식을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-286">If you know of other types to add to the <xref:System.Collections.Hashtable>, then add those types to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MaxItemsInObjectGraph">
      <MemberSignature Language="C#" Value="public int MaxItemsInObjectGraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxItemsInObjectGraph" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxItemsInObjectGraph As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxItemsInObjectGraph { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-287">개체 그래프에서 serialize하거나 deserialize할 최대 항목 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-287">Gets the maximum number of items in an object graph to serialize or deserialize.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b703-288">serialize하거나 deserialize할 최대 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-288">The maximum number of items to serialize or deserialize.</span>
          </span>
          <span data-ttu-id="2b703-289">기본값은 <see cref="F:System.Int32.MaxValue" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-289">The default is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b703-290">이 속성은 구성에서 설정하거나 코드에서 명령적으로 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-290">This property can be set in configuration or imperatively in code.</span></span> <span data-ttu-id="2b703-291">구성에서 설정하려면 사용자 지정 동작을 동작 섹션에 추가하고 다음 설정을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-291">To set it in configuration, add a custom behavior to the behaviors section and add the following setting.</span></span>  
  
```  
<behaviors>    <behavior name="MyServiceBehavior">        <dataContractSerializer maxItemsInObjectGraph="3" />    </behavior></behaviors>  
```  
  
 <span data-ttu-id="2b703-292">이 속성을 코드에서 명령적으로 설정하려면 서비스의 작업 설명을 찾은 후 작업 동작을 가져오고 마지막으로 속성을 설정합니다(아래 코드 참조).</span><span class="sxs-lookup"><span data-stu-id="2b703-292">To set this property imperatively in code find the operation description of the service, then get the operation behavior, finally set the property as shown in the following code.</span></span>  
  
```  
OperationDescription operation = host.Description.Endpoints[0].Contract.Operations.Find("MyOperationName");operation.Behaviors.Find<DataContractSerializerOperationBehavior>().MaxItemsInObjectGraph = 3;  
```  
  
 <span data-ttu-id="2b703-293"><xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A> 속성은 serializer가 단일 <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> 메서드 호출에서 serialize하거나 deserialize하는 최대 개체 수를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-293">The <xref:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph%2A> property specifies the maximum number of objects that the serializer serializes or deserializes in a single <xref:System.Runtime.Serialization.DataContractSerializer.ReadObject%2A> method call.</span></span> <span data-ttu-id="2b703-294">이 메서드는 항상 하나의 루트 개체를 읽지만 이 개체의 데이터 멤버에 다른 개체가 있을 수 있으며,</span><span class="sxs-lookup"><span data-stu-id="2b703-294">(The method always reads one root object, but this object may have other objects in its data members.</span></span> <span data-ttu-id="2b703-295">마찬가지로 그러한 개체에도 다른 개체가 있을 수 있습니다. 기본값은 <xref:System.Int32.MaxValue>입니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-295">Those objects may have other objects, and so on.) The default is <xref:System.Int32.MaxValue>.</span></span> <span data-ttu-id="2b703-296">배열을 serialize하거나 deserialize할 때 모든 배열 항목은 개별 개체로 계산됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-296">Note that when serializing or deserializing arrays, every array entry counts as a separate object.</span></span> <span data-ttu-id="2b703-297">또한 일부 개체에는 큰 메모리 표현이 있을 수 있으므로 서비스 거부 공격을 방지하기에 이 할당량만으로 충분하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-297">Also, note that some objects may have a large memory representation and so this quota alone may not be sufficient to prevent Denial of Service attacks.</span></span> <span data-ttu-id="2b703-298">자세한 내용은 참조 [데이터에 대 한 보안 고려 사항](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-298">For more information, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span> <span data-ttu-id="2b703-299">이 할당량을 기본값보다 크게 늘려야 할 경우 보내는 측(serialize)과 받는 측(deserialize) 모두에서 값을 늘려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-299">If you need to increase this quota beyond its default value, it is important to do so both on the sending (serializing) and receiving (deserializing) sides.</span></span> <span data-ttu-id="2b703-300">이 값은 데이터를 읽을 때와 쓸 때 모두 적용됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-300">It applies both when reading and writing data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2b703-301">항목 수가 최대값을 초과하는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-301">The number of items exceeds the maximum value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PreserveObjectReferences">
      <MemberSignature Language="C#" Value="public bool PreserveObjectReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveObjectReferences" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreserveObjectReferences As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveObjectReferences { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-302">비표준 XML 구문을 사용하여 개체 참조 데이터를 유지할지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-302">Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b703-303">참조를 유지하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-303">
              <see langword="true" /> to keep the references; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-304">XML 스트림을 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-304">Reads the XML stream and returns the deserialized object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2b703-305">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-305">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-306">
            <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 스트림을 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-306">Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b703-307">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-307">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2b703-308">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-308">The <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="2b703-309">개체의 이름이 생성자에서 제공된 루트 이름 값과 일치하는지 여부를 확인하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-309">
              <see langword="true" /> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-310">
            <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 스트림을 읽고 deserialize된 개체를 반환하며, 값을 읽기 전에 개체 이름을 확인하는지 여부도 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-310">Reads the XML stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b703-311">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-311">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-312">다음 예제에서는 XML 문서를 읽고 개체의 인스턴스를 deserialize합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-312">The following example reads an XML document and deserializes an instance of an object.</span></span>  
  
 [!code-csharp[DataContractSerializer#2](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#2)]
 [!code-vb[DataContractSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2b703-313">
            <paramref name="verifyObjectName" /> 매개 변수가 <see langword="true" />로 설정되고 요소 이름과 네임스페이스가 생성자에서 설정된 값과 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-313">The <paramref name="verifyObjectName" /> parameter is set to <see langword="true" />, and the element name and namespace do not correspond to the values set in the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public override object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2b703-314">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-314">The <see cref="T:System.Xml.XmlReader" /> used to read the XML stream.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="2b703-315">개체의 이름이 생성자에서 제공된 루트 이름 값과 일치하는지 여부를 확인하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-315">
              <see langword="true" /> to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-316">
            <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 스트림을 읽고 deserialize된 개체를 반환하며, 값을 읽기 전에 개체 이름을 확인하는지 여부도 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-316">Reads the XML stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b703-317">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-317">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2b703-318">
            <paramref name="verifyObjectName" /> 매개 변수가 <see langword="true" />로 설정되고 요소 이름과 네임스페이스가 생성자에서 설정된 값과 일치하지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-318">The <paramref name="verifyObjectName" /> parameter is set to <see langword="true" />, and the element name and namespace do not correspond to the values set in the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="2b703-319">콘텐츠를 읽는 데 사용되는 XML 판독기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-319">The XML reader used to read the content.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="2b703-320">개체 이름을 확인하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-320">
              <see langword="true" /> to verify the object name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="2b703-321">
            <see langword="xsi:type" /> 선언을 데이터 계약 형식에 매핑하기 위한 <see cref="T:System.Runtime.Serialization.DataContractResolver" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-321">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> to map <see langword="xsi:type" /> declarations to data contract types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-322">XML 문서나 문서 스트림을 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-322">Reads an XML document or document stream and returns the deserialized object.</span>
          </span>
          <span data-ttu-id="2b703-323">메서드에는 확인된 개체 이름의 유효성 검사 여부를 지정하는 매개 변수와 런타임에 <see langword="xsi:type" /> 선언을 매핑하기 위한 확인자가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-323">The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping <see langword="xsi:type" /> declarations at runtime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b703-324">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-324">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeReadOnlyTypes">
      <MemberSignature Language="C#" Value="public bool SerializeReadOnlyTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeReadOnlyTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializeReadOnlyTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeReadOnlyTypes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-325">읽기 전용 형식을 serialize하는지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-325">Gets a value that specifies whether read-only types are serialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b703-326">읽기 전용 형식이 serialize되면 <see langword="true" />이고, 모든 형식이 serialize되면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-326">
              <see langword="true" /> if read-only types are serialized; <see langword="false" /> if all types are serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-327">지정된 작성기를 사용하여 닫기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-327">Writes the closing XML element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2b703-328">스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-328">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-329">
            <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 닫기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-329">Writes the closing XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-330">다음 예제에서는 serialize할 개체, <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스 및 <xref:System.Xml.XmlDictionaryWriter> 클래스의 인스턴스를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-330">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="2b703-331">이 예제에서는 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 메서드를 사용하여 XML 문서에 개체를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-331">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span> <span data-ttu-id="2b703-332">이러한 호출은 <xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A> 메서드를 한 번 호출하는 것과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-332">Making these calls is equivalent to making a single call of the <xref:System.Runtime.Serialization.DataContractSerializer.WriteObject%2A> method.</span></span> <span data-ttu-id="2b703-333">예를 들어, <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A> 메서드를 호출한 후 별도로 호출을 수행하여 XML에 추가 XML 특성을 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-333">For example, a user might make the calls separately to insert additional XML attributes into the XML after calling the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A> method.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="2b703-334">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-334">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="2b703-335">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-335">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2b703-336">쓰고 있는 인스턴스에 문제가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-336">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2b703-337">스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-337">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-338">
            <see cref="T:System.Xml.XmlWriter" />를 사용하여 닫기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-338">Writes the closing XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="2b703-339">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-339">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="2b703-340">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-340">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2b703-341">쓰고 있는 인스턴스에 문제가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-341">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-342">모든 개체 데이터(시작 XML 요소, 콘텐츠, 닫기 요소)를 XML 문서 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-342">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public override void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2b703-343">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-343">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="2b703-344">스트림에 쓸 데이터를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-344">The object that contains the data to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-345">
            <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서 또는 스트림에 모든 개체 데이터(시작 XML 요소, 콘텐츠, 닫기 요소)를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-345">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="2b703-346">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-346">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="2b703-347">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-347">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2b703-348">쓰고 있는 인스턴스에 문제가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-348">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public void WriteObject (System.Xml.XmlDictionaryWriter writer, object graph, System.Runtime.Serialization.DataContractResolver dataContractResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteObject(class System.Xml.XmlDictionaryWriter writer, object graph, class System.Runtime.Serialization.DataContractResolver dataContractResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph, System::Runtime::Serialization::DataContractResolver ^ dataContractResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="dataContractResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2b703-349">XML 문서 또는 스트림에 콘텐츠를 쓰는 데 사용되는 XmlDictionaryWriter입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-349">An XmlDictionaryWriter used to write the content to the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="2b703-350">쓸 콘텐츠를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-350">The object that contains the content to write.</span>
          </span>
        </param>
        <param name="dataContractResolver">
          <span data-ttu-id="2b703-351">
            <see langword="xsi:type" /> 선언을 알려진 데이터 계약에 매핑하는 데 사용되는 <see cref="T:System.Runtime.Serialization.DataContractResolver" />의 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-351">An implementation of the <see cref="T:System.Runtime.Serialization.DataContractResolver" /> used to map <see langword="xsi:type" /> declarations to known data contracts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-352">지정된 XmlDictionaryWriter를 사용하여 XML 문서 또는 스트림에 모든 개체 데이터(시작 XML 요소, 콘텐츠, 포함 요소)를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-352">Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter.</span>
          </span>
          <span data-ttu-id="2b703-353">메서드에는 런타임에 <see langword="xsi:type" /> 선언을 매핑하기 위한 확인자가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-353">The method includes a resolver for mapping <see langword="xsi:type" /> declarations at runtime.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-354">지정된 작성기를 사용하여 래핑 요소 없이 XML 콘텐츠를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-354">Writes the XML content without the wrapping element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2b703-355">스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-355">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="2b703-356">스트림에 쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-356">The object to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-357">
            <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 XML 콘텐츠를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-357">Writes the XML content using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-358">다음 예제에서는 serialize할 개체, <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스 및 <xref:System.Xml.XmlDictionaryWriter> 클래스의 인스턴스를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-358">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="2b703-359">이 예제에서는 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 메서드를 사용하여 XML 문서에 개체를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-359">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="2b703-360">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-360">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="2b703-361">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-361">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2b703-362">쓰고 있는 인스턴스에 문제가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-362">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public override void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2b703-363">스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-363">The <see cref="T:System.Xml.XmlWriter" /> used to write the stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="2b703-364">스트림에 쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-364">The object to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-365">
            <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 콘텐츠를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-365">Writes the XML content using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="2b703-366">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-366">The type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="2b703-367">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-367">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="2b703-368">쓰고 있는 인스턴스에 문제가 있는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-368">There is a problem with the instance being written.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b703-369">지정된 작성기를 사용하여 열기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-369">Writes the opening XML element using the specified writer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2b703-370">XML 시작 요소를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-370">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML start element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="2b703-371">쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-371">The object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-372">
            <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 열기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-372">Writes the opening XML element using an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b703-373">다음 예제에서는 serialize할 개체, <xref:System.Runtime.Serialization.DataContractSerializer>의 인스턴스 및 <xref:System.Xml.XmlDictionaryWriter> 클래스의 인스턴스를 작성합니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-373">The following example creates an object to serialize, an instance of the <xref:System.Runtime.Serialization.DataContractSerializer>, and an instance of the <xref:System.Xml.XmlDictionaryWriter> class.</span></span>  <span data-ttu-id="2b703-374">이 예제에서는 <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> 메서드를 사용하여 XML 문서에 개체를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="2b703-374">The example uses the <xref:System.Runtime.Serialization.DataContractSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent%2A> methods to write the object data into the XML document.</span></span>  
  
 [!code-csharp[DataContractSerializer#7](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractserializer/cs/source.cs#7)]
 [!code-vb[DataContractSerializer#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractserializer/vb/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="2b703-375">XML 시작 요소를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-375">The <see cref="T:System.Xml.XmlWriter" /> used to write the XML start element.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="2b703-376">쓸 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-376">The object to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b703-377">
            <see cref="T:System.Xml.XmlWriter" />를 사용하여 열기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b703-377">Writes the opening XML element using an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>