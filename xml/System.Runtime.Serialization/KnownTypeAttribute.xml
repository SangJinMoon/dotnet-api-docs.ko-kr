<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KnownTypeAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e528e2ed0c01f916d419c3c25d9b01ba53c4774d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e528e2ed0c01f916d419c3c25d9b01ba53c4774d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>Specifies types that should be recognized by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> when serializing or deserializing a given type.</source>
          <target state="translated">지정한 형식을 serialize 또는 deserialize할 때 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>가 인식해야 할 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> attribute to a type to indicate to the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> 특성을 형식에 적용하여, 특성이 적용되는 형식의 인스턴스를 serialize 또는 deserialize할 때 인식해야 할 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 형식을 표시합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>This attribute could also be recognized by other serializers that understand data contracts.</source>
          <target state="translated">데이터 계약을 이해하는 다른 serializer도 이 특성을 인식할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>In your code, you can use the word <ph id="ph1">`KnownType`</ph> instead of the longer <ph id="ph2">`KnownTypeAttribute`</ph>.</source>
          <target state="translated">코딩 시 <ph id="ph1">`KnownType`</ph> 대신에 간결하게 <ph id="ph2">`KnownTypeAttribute`</ph>을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>You can either apply exactly one <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> instance with the <ph id="ph2">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A&gt;</ph> property set, or one or more <ph id="ph3">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> instances with the <ph id="ph4">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A&gt;</ph> property set.</source>
          <target state="translated">정확히 한 개의 <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> 인스턴스를 <ph id="ph2">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A&gt;</ph> 속성 집합과 함께 적용하거나, 한 개 이상의 <ph id="ph3">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> 인스턴스를 <ph id="ph4">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A&gt;</ph> 속성 집합과 함께 적용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>The following example shows a type named <ph id="ph1">`Person`</ph> and a type named <ph id="ph2">`IDInformation`</ph> that should be recognized when serializing or deserializing the <ph id="ph3">`Person`</ph> type.</source>
          <target state="translated">다음 예제에서는<ph id="ph1">`Person`</ph> 형식을 serialize 또는 deserialize할 때 인식해야 할 <ph id="ph2">`IDInformation`</ph>이라는 형식과 <ph id="ph3">`Person`</ph>이라는 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.KnownTypeAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>The name of the method that returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> of types used when serializing or deserializing data.</source>
          <target state="translated">데이터를 serialize 또는 deserialize할 때 사용된 형식의 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>을 반환하는 메서드의 이름입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> class with the name of a method that returns an <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> of known types.</source>
          <target state="translated">알려진 형식의 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph>을 반환하는 메서드의 이름을 사용하여 <ph id="ph2">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>This constructor uses a method name that matches a method of the class.</source>
          <target state="translated">이 생성자는 해당 클래스의 메서드와 일치하는 메서드 이름을 사용합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>The method returns a <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> of <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Type&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.</source>
          <target state="translated">serialization 또는 deserialization 중에 특성이 적용되는 루트 형식 내에서 컬렉션에 있는 형식을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)">
          <source>The following example uses the <ph id="ph1">`methodName`</ph> parameter to identify a method in the type that contains an array of <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`methodName`</ph> 매개 변수를 사용하여 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 개체 배열을 포함하는 형식의 메서드를 식별합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is included as a known type when serializing or deserializing data.</source>
          <target state="translated">데이터를 serialize 또는 deserialize할 때 알려진 형식으로 포함되는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> class with the specified type.</source>
          <target state="translated">지정된 형식을 사용하여 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)">
          <source>The following example shows a type named <ph id="ph1">`Person`</ph> and a type named <ph id="ph2">`IDInformation`</ph> that should be included when or deserializing.</source>
          <target state="translated">다음 예제에서는 deserialize할 때 포함해야 할 <ph id="ph1">`Person`</ph>이라는 형식과 <ph id="ph2">`IDInformation`</ph>이라는 형식을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.</source>
          <target state="translated">serialization 또는 deserialization 중에 인식해야 할 형식 목록을 반환하는 메서드의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name of the method on the type defined by the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 클래스로 정의된 형식에서 해당 메서드의 이름을 포함하는 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>The method must exist on the class or structure that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface, such as the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> class, or an array of <ph id="ph4">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph>가 적용되는 클래스나 구조체에 있어야 하고, static 메서드여야 하며, 매개 변수를 취하지 않아야 하고, <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> 클래스나 <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> 개체 배열과 같은 제네릭 <ph id="ph4">&lt;xref:System.Type&gt;</ph> 인터페이스를 구현하는 형식의 인스턴스를 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>The method is called once per application domain when the data contract is loaded for the type.</source>
          <target state="translated">이 메서드는 형식에 대해 데이터 계약이 로드될 때 응용 프로그램 도메인당 한 번씩 호출됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName">
          <source>The following example uses the <ph id="ph1">`methodName`</ph> parameter to identify a method in the type that contains an array of <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`methodName`</ph> 매개 변수를 사용하여 <ph id="ph2">&lt;xref:System.Type&gt;</ph> 개체 배열을 포함하는 형식의 메서드를 식별합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.KnownTypeAttribute.Type">
          <source>Gets the type that should be recognized during serialization or deserialization by the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>의 serialization 또는 deserialization 중에 인식해야 할 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.KnownTypeAttribute.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that is used during serialization or deserialization.</source>
          <target state="translated">serialization 또는 deserialization 중에 사용하는 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>