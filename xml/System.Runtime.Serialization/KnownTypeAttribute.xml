<Type Name="KnownTypeAttribute" FullName="System.Runtime.Serialization.KnownTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4bf80133a94e1e61a0438eb672d9652cc9789e22" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36533836" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class KnownTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KnownTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.KnownTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KnownTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class KnownTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type KnownTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="93a79-101">지정한 형식을 serialize 또는 deserialize할 때 <see cref="T:System.Runtime.Serialization.DataContractSerializer" />가 인식해야 할 형식을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93a79-101">Specifies types that should be recognized by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> when serializing or deserializing a given type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a79-102"><xref:System.Runtime.Serialization.KnownTypeAttribute> 특성을 형식에 적용하여, 특성이 적용되는 형식의 인스턴스를 serialize 또는 deserialize할 때 인식해야 할 <xref:System.Runtime.Serialization.DataContractSerializer> 형식을 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-102">Apply the <xref:System.Runtime.Serialization.KnownTypeAttribute> attribute to a type to indicate to the <xref:System.Runtime.Serialization.DataContractSerializer> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied.</span></span> <span data-ttu-id="93a79-103">데이터 계약을 이해하는 다른 serializer도 이 특성을 인식할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-103">This attribute could also be recognized by other serializers that understand data contracts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93a79-104">코딩 시 `KnownType` 대신에 간결하게 `KnownTypeAttribute`을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-104">In your code, you can use the word `KnownType` instead of the longer `KnownTypeAttribute`.</span></span>  
  
 <span data-ttu-id="93a79-105">정확히 한 개의 <xref:System.Runtime.Serialization.KnownTypeAttribute> 인스턴스를 <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> 속성 집합과 함께 적용하거나, 한 개 이상의 <xref:System.Runtime.Serialization.KnownTypeAttribute> 인스턴스를 <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> 속성 집합과 함께 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-105">You can either apply exactly one <xref:System.Runtime.Serialization.KnownTypeAttribute> instance with the <xref:System.Runtime.Serialization.KnownTypeAttribute.MethodName%2A> property set, or one or more <xref:System.Runtime.Serialization.KnownTypeAttribute> instances with the <xref:System.Runtime.Serialization.KnownTypeAttribute.Type%2A> property set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a79-106">다음 예제에서는`Person` 형식을 serialize 또는 deserialize할 때 인식해야 할 `IDInformation`이라는 형식과 `Person`이라는 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-106">The following example shows a type named `Person` and a type named `IDInformation` that should be recognized when serializing or deserializing the `Person` type.</span></span>  
  
 [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]
 [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="93a79-107">
            <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-107">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnownTypeAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KnownTypeAttribute(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.KnownTypeAttribute : string -&gt; System.Runtime.Serialization.KnownTypeAttribute" Usage="new System.Runtime.Serialization.KnownTypeAttribute methodName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">
          <span data-ttu-id="93a79-108">데이터를 serialize 또는 deserialize할 때 사용된 형식의 <see cref="T:System.Collections.IEnumerable" />을 반환하는 메서드의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-108">The name of the method that returns an <see cref="T:System.Collections.IEnumerable" /> of types used when serializing or deserializing data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93a79-109">알려진 형식의 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" />을 반환하는 메서드의 이름을 사용하여 <see cref="T:System.Collections.IEnumerable" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-109">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the name of a method that returns an <see cref="T:System.Collections.IEnumerable" /> of known types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a79-110">이 생성자는 해당 클래스의 메서드와 일치하는 메서드 이름을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-110">This constructor uses a method name that matches a method of the class.</span></span>  <span data-ttu-id="93a79-111">이 메서드는 <xref:System.Collections.Generic.IEnumerable%601> 개체의 <xref:System.Type>을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-111">The method returns a <xref:System.Collections.Generic.IEnumerable%601> of <xref:System.Type> objects.</span></span> <span data-ttu-id="93a79-112">serialization 또는 deserialization 중에 특성이 적용되는 루트 형식 내에서 컬렉션에 있는 형식을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-112">During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a79-113">다음 예제에서는 `methodName` 매개 변수를 사용하여 <xref:System.Type> 개체 배열을 포함하는 형식의 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-113">The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.</span></span>  
  
 [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]
 [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KnownTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.KnownTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KnownTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.KnownTypeAttribute : Type -&gt; System.Runtime.Serialization.KnownTypeAttribute" Usage="new System.Runtime.Serialization.KnownTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="93a79-114">데이터를 serialize 또는 deserialize할 때 알려진 형식으로 포함되는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-114">The <see cref="T:System.Type" /> that is included as a known type when serializing or deserializing data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93a79-115">지정된 형식을 사용하여 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-115">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class with the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93a79-116">다음 예제에서는 deserialize할 때 포함해야 할 `Person`이라는 형식과 `IDInformation`이라는 형식을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-116">The following example shows a type named `Person` and a type named `IDInformation` that should be included when or deserializing.</span></span>  
  
 [!code-csharp[KnownTypeAttribute#0](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute/cs/overview.cs#0)]
 [!code-vb[KnownTypeAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute/vb/overview.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.KnownTypeAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string" Usage="System.Runtime.Serialization.KnownTypeAttribute.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93a79-117">serialization 또는 deserialization 중에 인식해야 할 형식 목록을 반환하는 메서드의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-117">Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93a79-118">
            <see cref="T:System.String" /> 클래스로 정의된 형식에서 해당 메서드의 이름을 포함하는 <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-118">A <see cref="T:System.String" /> that contains the name of the method on the type defined by the <see cref="T:System.Runtime.Serialization.KnownTypeAttribute" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a79-119">이 메서드는 <xref:System.Runtime.Serialization.KnownTypeAttribute>가 적용되는 클래스나 구조체에 있어야 하고, static 메서드여야 하며, 매개 변수를 취하지 않아야 하고, <xref:System.Collections.Generic.IEnumerable%601> 클래스나 <xref:System.Collections.ObjectModel.Collection%601> 개체 배열과 같은 제네릭 <xref:System.Type> 인터페이스를 구현하는 형식의 인스턴스를 반환해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-119">The method must exist on the class or structure that the <xref:System.Runtime.Serialization.KnownTypeAttribute> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <xref:System.Collections.Generic.IEnumerable%601> interface, such as the <xref:System.Collections.ObjectModel.Collection%601> class, or an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="93a79-120">이 메서드는 형식에 대해 데이터 계약이 로드될 때 응용 프로그램 도메인당 한 번씩 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-120">The method is called once per application domain when the data contract is loaded for the type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a79-121">다음 예제에서는 `methodName` 매개 변수를 사용하여 <xref:System.Type> 개체 배열을 포함하는 형식의 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="93a79-121">The following example uses the `methodName` parameter to identify a method in the type that contains an array of <xref:System.Type> objects.</span></span>  
  
 [!code-csharp[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/csharp/VS_Snippets_CFX/knowntypeattribute_ctor_string/cs/knowntype_ctor1.cs#1)]
 [!code-vb[KnownTypeAttribute_Ctor_String#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/knowntypeattribute_ctor_string/vb/knowntypeattribute_ctor1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.KnownTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Runtime.Serialization.KnownTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93a79-122">
            <see cref="T:System.Runtime.Serialization.DataContractSerializer" />의 serialization 또는 deserialization 중에 인식해야 할 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-122">Gets the type that should be recognized during serialization or deserialization by the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93a79-123">serialization 또는 deserialization 중에 사용하는 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93a79-123">The <see cref="T:System.Type" /> that is used during serialization or deserialization.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>