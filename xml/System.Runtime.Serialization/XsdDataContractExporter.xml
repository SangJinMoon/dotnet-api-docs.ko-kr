<Type Name="XsdDataContractExporter" FullName="System.Runtime.Serialization.XsdDataContractExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b10630be84113cc7ca50aaf4a6938af091054dba" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46689368" /></Metadata><TypeSignature Language="C#" Value="public class XsdDataContractExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractExporter" />
  <TypeSignature Language="F#" Value="type XsdDataContractExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="12946-101">데이터 계약에 사용되는 .NET Framework 형식 집합을 XML 스키마 파일(.xsd)로 변형할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12946-101">Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12946-102">CLR(공용 언어 런타임) 형식으로 표시된 데이터를 통합하는 웹 서비스를 작성했을 때 또는 다른 웹 서비스에서 사용할 수 있도록 각 형식에 대한 XML 스키마를 내보내야 할 때 <xref:System.Runtime.Serialization.XsdDataContractExporter> 클래스를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-102">Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</span></span> <span data-ttu-id="12946-103">즉, <xref:System.Runtime.Serialization.XsdDataContractExporter>는 CLR 형식 집합을 XML 스키마로 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-103">That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas.</span></span> <span data-ttu-id="12946-104">(사용할 수 있는 형식에 대 한 자세한 내용은 참조 하세요. [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) 그런 다음 해당 서비스와 상호 운용해야 할 다른 서비스에서 사용할 수 있도록 WSDL(웹 서비스 기술 언어) 문서를 통해 이 스키마를 공개할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12946-104">(For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</span></span>  
  
 <span data-ttu-id="12946-105">반대로, 기존 웹 서비스와 상호 운용해야 하는 웹 서비스를 작성할 경우에는 <xref:System.Runtime.Serialization.XsdDataContractImporter>를 사용하여 XML 스키마를 변형한 후 선택한 프로그래밍 언어로 데이터를 나타내는 CLR 형식을 작성하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="12946-105">Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.</span></span>  
  
 <span data-ttu-id="12946-106"><xref:System.Runtime.Serialization.XsdDataContractExporter>는 스키마 컬렉션을 포함하는 <xref:System.Xml.Schema.XmlSchemaSet> 개체를 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-106">The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas.</span></span> <span data-ttu-id="12946-107">이 스키마 집합은 <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> 속성을 통해 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12946-107">Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12946-108">다른 웹 서비스에서 사용할 수 있는 XML 스키마 정의 파일(XSD)을 간편하게 생성하려면 <xref:System.Runtime.Serialization.XsdDataContractExporter>를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-108">To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
## <a name="exporting-schemas-into-an-xmlschemaset"></a><span data-ttu-id="12946-109">XmlSchemaSet으로 스키마 내보내기</span><span class="sxs-lookup"><span data-stu-id="12946-109">Exporting Schemas Into an XmlSchemaSet</span></span>  
 <span data-ttu-id="12946-110">XML 스키마 파일을 포함하는 <xref:System.Xml.Schema.XmlSchemaSet> 클래스의 인스턴스를 만들려면 다음 사항을 알아 두어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-110">To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.</span></span>  
  
 <span data-ttu-id="12946-111">내보내는 형식 집합은 내부 데이터 계약 집합으로 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="12946-111">The set of types you are exporting are recorded as an internal set of data contracts.</span></span> <span data-ttu-id="12946-112">따라서 새 형식만 집합에 추가되므로 성능을 저하시키지 않고 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 메서드를 여러 번 호출하여 스키마 집합에 새 형식을 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12946-112">Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</span></span> <span data-ttu-id="12946-113">추가하는 새 스키마는 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 작업 중에 기존 스키마와 비교됩니다.</span><span class="sxs-lookup"><span data-stu-id="12946-113">During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added.</span></span> <span data-ttu-id="12946-114">충돌이 발생하면 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="12946-114">If there are conflicts, an exception will be thrown.</span></span> <span data-ttu-id="12946-115">동일한 <xref:System.Runtime.Serialization.XsdDataContractExporter> 인스턴스에서 계약은 다르지만(멤버가 다름) 데이터 계약 이름이 동일한 두 형식을 내보낼 경우 일반적으로 충돌이 감지됩니다.</span><span class="sxs-lookup"><span data-stu-id="12946-115">A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.</span></span>  
  
## <a name="using-the-exporter"></a><span data-ttu-id="12946-116">내보내기 사용</span><span class="sxs-lookup"><span data-stu-id="12946-116">Using the Exporter</span></span>  
 <span data-ttu-id="12946-117">이 클래스를 사용할 때는 다음과 같은 방법이 권장됩니다.</span><span class="sxs-lookup"><span data-stu-id="12946-117">A recommended way of using this class is as follows:</span></span>  
  
1.  <span data-ttu-id="12946-118"><xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 오버로드 중 하나를 사용하여 지정된 형식 또는 형식 집합을 내보낼 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-118">Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span> <span data-ttu-id="12946-119">요구 사항에 따라 적합한 오버로드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-119">Use one of the overloads that is appropriate to your requirements.</span></span>  
  
2.  <span data-ttu-id="12946-120">해당하는 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-120">Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.</span></span>  
  
3.  <span data-ttu-id="12946-121"><xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 속성에서 스키마를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-121">Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12946-122">다음 예제에서는 <xref:System.Runtime.Serialization.XsdDataContractExporter>의 인스턴스를 만들고 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-122">The following example creates an instance of the <xref:System.Runtime.Serialization.XsdDataContractExporter> and calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]
 [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md"><span data-ttu-id="12946-123">데이터 계약 Serializer에서 지원하는 형식</span><span class="sxs-lookup"><span data-stu-id="12946-123">Types Supported by the Data Contract Serializer</span></span></related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/serialization-and-deserialization.md"><span data-ttu-id="12946-124">Serialization 및 Deserialization</span><span class="sxs-lookup"><span data-stu-id="12946-124">Serialization and Deserialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="12946-125"><see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-125">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="12946-126"><see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-126">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.XsdDataContractExporter : System.Xml.Schema.XmlSchemaSet -&gt; System.Runtime.Serialization.XsdDataContractExporter" Usage="new System.Runtime.Serialization.XsdDataContractExporter schemas" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="12946-127">내보낼 스키마를 포함하는 <see cref="T:System.Xml.Schema.XmlSchemaSet" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-127">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to be exported.</span></span></param>
        <summary><span data-ttu-id="12946-128">지정한 스키마 집합을 사용하여 <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-128">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class with the specified set of schemas.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12946-129">기존 <xref:System.Xml.Schema.XmlSchemaSet>에 새 스키마를 추가하려 할 때 이 오버로드를 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-129">Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas.</span></span> <span data-ttu-id="12946-130">이 오버로드를 사용하여 <xref:System.Runtime.Serialization.XsdDataContractExporter>를 생성한 후 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 메서드를 호출하여 기존 집합에 새 형식을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-130">After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="12946-131">CLR(공용 언어 런타임) 형식 또는 형식 집합을 내보낼 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="12946-131">Gets a value that indicates whether a common language runtime (CLR) type (or set of types) can be exported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12946-132">데이터 계약에서 모든 CLR 형식을 사용할 수 있는 것은 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="12946-132">Not all CLR types can be used in data contracts.</span></span> <span data-ttu-id="12946-133">Serialize 할 수 있는 하는 방법에 대 한 자세한 내용은 참조 하십시오 [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-133">For more information about what can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (assemblies As ICollection(Of Assembly)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies"><span data-ttu-id="12946-134">내보낼 형식을 사용하는 어셈블리가 포함된 <see cref="T:System.Reflection.Assembly" />의 <see cref="T:System.Collections.Generic.ICollection`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-134">A <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Reflection.Assembly" /> that contains the assemblies with the types to export.</span></span></param>
        <summary><span data-ttu-id="12946-135">어셈블리 집합에 포함된 CLR(공용 언어 런타임) 형식을 내보낼 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="12946-135">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</span></span></summary>
        <returns><span data-ttu-id="12946-136">형식을 내보낼 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-136"><see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (types As ICollection(Of Type)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="12946-137">내보내도록 지정한 형식을 포함하는 <see cref="T:System.Collections.Generic.ICollection`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-137">A <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the specified types to export.</span></span></param>
        <summary><span data-ttu-id="12946-138"><see cref="T:System.Collections.Generic.ICollection`1" />에 포함된 CLR(공용 언어 런타임) 형식 집합을 내보낼 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="12946-138">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <see cref="T:System.Collections.Generic.ICollection`1" /> can be exported.</span></span></summary>
        <returns><span data-ttu-id="12946-139">형식을 내보낼 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-139"><see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CanExport : Type -&gt; bool" Usage="xsdDataContractExporter.CanExport type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="12946-140">내보낼 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-140">The <see cref="T:System.Type" /> to export.</span></span></param>
        <summary><span data-ttu-id="12946-141">지정한 CLR(공용 언어 런타임) 형식을 내보낼 수 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="12946-141">Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</span></span></summary>
        <returns><span data-ttu-id="12946-142">형식을 내보낼 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-142"><see langword="true" /> if the type can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="12946-143">다음 예제에서는 <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> 메서드를 호출하기 전에 <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-143">The following example calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> method before calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]
 [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="12946-144">CLR(공용 언어 런타임) 형식 또는 형식 집합을 XML 스키마 집합으로 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-144">Transforms the common language runtime (CLR) type, or set of types, into a set of XML schemas.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12946-145"><xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> 오버로드 중 하나를 사용하여 지정한 형식 또는 형식 집합을 내보낼 수 있는지 여부를 확인하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="12946-145">As a recommended practice, use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span>  
  
 <span data-ttu-id="12946-146"><xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 메서드를 호출한 후 <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 속성에서 스키마를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-146">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (assemblies As ICollection(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; unit" Usage="xsdDataContractExporter.Export assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies"><span data-ttu-id="12946-147">내보낼 형식을 포함하는 <see cref="T:System.Reflection.Assembly" />의 <see cref="T:System.Collections.Generic.ICollection`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-147">A <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Reflection.Assembly" />) that contains the types to export.</span></span></param>
        <summary><span data-ttu-id="12946-148">지정한 어셈블리 컬렉션에 포함된 형식을 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-148">Transforms the types contained in the specified collection of assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="12946-149"><paramref name="assemblies" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="12946-149">The <paramref name="assemblies" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="12946-150">컬렉션의 <see cref="T:System.Reflection.Assembly" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="12946-150">An <see cref="T:System.Reflection.Assembly" /> in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (types As ICollection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; unit" Usage="xsdDataContractExporter.Export types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="12946-151">내보낼 형식을 포함하는 <see cref="T:System.Collections.Generic.ICollection`1" />의 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-151">A  <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Type" />) that contains the types to export.</span></span></param>
        <summary><span data-ttu-id="12946-152">이 메서드에 전달되는 <see cref="T:System.Collections.Generic.ICollection`1" />에 포함된 형식을 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-152">Transforms the types contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> passed to this method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="12946-153"><paramref name="types" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="12946-153">The <paramref name="types" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="12946-154">컬렉션에 있는 형식이 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="12946-154">A type in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Export : Type -&gt; unit" Usage="xsdDataContractExporter.Export type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="12946-155">XML 스키마로 변형할 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-155">The <see cref="T:System.Type" /> to transform into an XML schema.</span></span></param>
        <summary><span data-ttu-id="12946-156">지정한 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 형식을 XSD(XML 스키마 정의 언어) 스키마로 변형합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-156">Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12946-157"><xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A>를 호출하여 형식을 내보낼 수 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-157">Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported.</span></span> <span data-ttu-id="12946-158"><xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> 메서드를 호출한 후 <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> 속성을 통해 스키마를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="12946-158">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="12946-159"><paramref name="type" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="12946-159">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootElementName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetRootElementName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetRootElementName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetRootElementName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetRootElementName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetRootElementName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="12946-160">쿼리할 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-160">The <see cref="T:System.Type" /> to query.</span></span></param>
        <summary><span data-ttu-id="12946-161"><see cref="T:System.Type" />의 최상위 이름과 네임스페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-161">Returns the top-level name and namespace for the <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="12946-162">이 <see cref="T:System.Xml.XmlQualifiedName" />의 최상위 이름과 네임스페이스를 나타내는 <see cref="T:System.Type" />으로, 이 개체를 작성할 때 스트림에 기록됩니다.</span><span class="sxs-lookup"><span data-stu-id="12946-162">The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the top-level name and namespace for this <see cref="T:System.Type" />, which is written to the stream when writing this object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="12946-163"><paramref name="type" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="12946-163">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaType GetSchemaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaType ^ GetSchemaType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaType : Type -&gt; System.Xml.Schema.XmlSchemaType" Usage="xsdDataContractExporter.GetSchemaType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="12946-164">스키마를 반환할 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-164">The type to return a schema for.</span></span></param>
        <summary><span data-ttu-id="12946-165">지정한 형식에 대한 XML 스키마 형식을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-165">Returns the XML schema type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="12946-166">XML 스키마를 포함하는 <see cref="T:System.Xml.Schema.XmlSchemaType" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-166">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that contains the XML schema.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12946-167">이 메서드의 주요 목적은 XML 스키마의 익명 형식을 나타낼 수 있도록 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-167">The main purpose of this method is to allow anonymous types in XML schema to be represented.</span></span> <span data-ttu-id="12946-168">익명 형식에는 계약 이름과 네임스페이스가 없으므로 <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>을 사용하여 익명 형식을 찾을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="12946-168">Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span></span> <span data-ttu-id="12946-169">이 메서드는 그러한 형식에 대한 <xref:System.Xml.Schema.XmlSchemaType> 정의를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-169">This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types.</span></span> <span data-ttu-id="12946-170"><xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> 메서드가 유효한 이름을 반환하는 형식의 경우 이 메서드는 `null`을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-170">The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="12946-171"><paramref name="type" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="12946-171">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTypeName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetSchemaTypeName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetSchemaTypeName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaTypeName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetSchemaTypeName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="12946-172">내보낸 <see cref="T:System.Type" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-172">The <see cref="T:System.Type" /> that was exported.</span></span></param>
        <summary><span data-ttu-id="12946-173"><see cref="T:System.Type" />의 계약 이름과 계약 네임스페이스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-173">Returns the contract name and contract namespace for the <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="12946-174">형식의 계약 이름과 네임스페이스를 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-174">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the contract name of the type and its namespace.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="12946-175"><paramref name="type" /> 인수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="12946-175">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ExportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ExportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ExportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ExportOptions ^ Options { System::Runtime::Serialization::ExportOptions ^ get(); void set(System::Runtime::Serialization::ExportOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Runtime.Serialization.ExportOptions with get, set" Usage="System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ExportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12946-176">내보내기 작업에 대해 설정할 수 있는 옵션이 포함된 <see cref="T:System.Runtime.Serialization.ExportOptions" />를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="12946-176">Gets or sets an <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options that can be set for the export operation.</span></span></summary>
        <value><span data-ttu-id="12946-177">형식을 스키마로 내보내는 방법을 사용자 지정할 때 사용하는 옵션이 포함된 <see cref="T:System.Runtime.Serialization.ExportOptions" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-177">An <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options used to customize how types are exported to schemas.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet" Usage="System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="12946-178">내보낸 XML 스키마 컬렉션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="12946-178">Gets the collection of exported XML schemas.</span></span></summary>
        <value><span data-ttu-id="12946-179"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 메서드를 호출한 후 CLR(공용 언어 런타임) 형식 집합에서 변형된 스키마를 포함하는 <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />입니다.</span><span class="sxs-lookup"><span data-stu-id="12946-179">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>