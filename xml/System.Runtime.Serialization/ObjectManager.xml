<Type Name="ObjectManager" FullName="System.Runtime.Serialization.ObjectManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="441eaf19930e3fc015f1322c1a4bcacfa8fa6824" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490247" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ObjectManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ObjectManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectManager" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a4b9f-101">개체가 deserialize될 때 추적합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a4b9f-101">Keeps track of objects as they are deserialized.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-102">역직렬화 하는 동안는 <xref:System.Runtime.Serialization.Formatter> 쿼리는 <xref:System.Runtime.Serialization.ObjectManager> 직렬화 된 스트림의 개체에 대 한 참조를 참조 하는지를 역직렬화 된 이미 있는 개체 (이전 버전과 참조)를 확인 하려면 아직 되지 않은 개체 또는 (정방향 참조)를 역직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-102">During deserialization, the <xref:System.Runtime.Serialization.Formatter> queries the <xref:System.Runtime.Serialization.ObjectManager> to determine whether a reference to an object in the serialized stream refers to an object that has already been deserialized (a backward reference), or to an object that has not yet been deserialized (a forward reference).</span></span> <span data-ttu-id="a4b9f-103">직렬화 된 스트림에 대 한 참조 정방향 참조 인 경우 하면 <xref:System.Runtime.Serialization.Formatter> 에 픽스업을 등록할 수는 <xref:System.Runtime.Serialization.ObjectManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-103">If the reference in the serialized stream is a forward reference, then the <xref:System.Runtime.Serialization.Formatter> can register a fixup with the <xref:System.Runtime.Serialization.ObjectManager>.</span></span> <span data-ttu-id="a4b9f-104">직렬화 된 스트림에 대 한 참조는 이전 버전과 참조 인 경우는 <xref:System.Runtime.Serialization.Formatter> 즉시 대 한 참조를 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-104">If the reference in the serialized stream is a backward reference, the <xref:System.Runtime.Serialization.Formatter> immediately completes the reference.</span></span> <span data-ttu-id="a4b9f-105">픽스업 개체 deserialization 프로세스 동안 아직 완료 하는 개체 참조를 완료 하는 중의 프로세스를 말합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-105">Fixup refers to the process of finalizing object references not already completed during the object deserialization process.</span></span> <span data-ttu-id="a4b9f-106">필수 개체가 deserialize 된 다음의 <xref:System.Runtime.Serialization.ObjectManager> 대 한 참조를 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-106">After the required object has been deserialized, the <xref:System.Runtime.Serialization.ObjectManager> will complete the reference.</span></span>  
  
 <span data-ttu-id="a4b9f-107"><xref:System.Runtime.Serialization.ObjectManager> 픽스업 순서를 지정 하는 규칙의 집합을 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-107">The <xref:System.Runtime.Serialization.ObjectManager> follows a set of rules that dictate the fixup order.</span></span> <span data-ttu-id="a4b9f-108">구현 하는 모든 개체 <xref:System.Runtime.Serialization.ISerializable> 수도 있고 한 <xref:System.Runtime.Serialization.ISerializationSurrogate> 통해 전송 된 모든 개체를 기대할 수 있는 <xref:System.Runtime.Serialization.SerializationInfo> deserialize 하는 개체 트리는 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-108">All objects that implement <xref:System.Runtime.Serialization.ISerializable> or have a <xref:System.Runtime.Serialization.ISerializationSurrogate> can expect to have all the objects that they transmitted through <xref:System.Runtime.Serialization.SerializationInfo> available when the object tree is deserialized.</span></span> <span data-ttu-id="a4b9f-109">그러나 부모 개체를 완벽 하 게 역직렬화 할 때 모든 자식 개체 완전히 완료 될 됩니다 가정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-109">However, a parent object cannot presume that all its child objects will be fully completed when it is fully deserialized.</span></span> <span data-ttu-id="a4b9f-110">모든 자식 개체 표시 됩니다. 하지만 모든 손자 개체가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-110">All child objects will be present but not all the grandchild objects will necessarily be present.</span></span> <span data-ttu-id="a4b9f-111">개체를 자식 개체의 실행 코드에 종속 된 특정 작업을 수행 하는 경우 이러한 작업을 지연 하, 구현 수는 <xref:System.Runtime.Serialization.IDeserializationCallback> , 인터페이스 및이 인터페이스에서 다시 호출 하는 경우에 코드를 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-111">If an object needs to take certain actions that depend on executing code on its child objects, it can delay these actions, implement the <xref:System.Runtime.Serialization.IDeserializationCallback> interface, and execute the code only when it is called back on this interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4b9f-112">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <xref:System.Runtime.Serialization.ObjectManager> 클래스를 각 개체에 한 번만 이동 하 여 개체 그래프를 진행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-112">The following code example shows how to use the <xref:System.Runtime.Serialization.ObjectManager> class to walk through an object graph, traversing to each object only once.</span></span>  
  
 [!code-csharp[ObjectManager#1](~/samples/snippets/csharp/VS_Snippets_Misc/ObjectManager/CS/ObjectManager.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectManager (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selector As ISurrogateSelector, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectManager(System::Runtime::Serialization::ISurrogateSelector ^ selector, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="selector">
          <span data-ttu-id="a4b9f-113">사용할 서로게이트 선택기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-113">The surrogate selector to use.</span>
          </span>
          <span data-ttu-id="a4b9f-114">
            <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />는 지정된 형식의 개체를 deserialize할 때 사용할 올바른 서로게이트를 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-114">The <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> determines the correct surrogate to use when deserializing objects of a given type.</span>
          </span>
          <span data-ttu-id="a4b9f-115">deserialization 도중에 서로게이트 선택기는 스트림에 전송된 정보로 개체의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-115">At deserialization time, the surrogate selector creates a new instance of the object from the information transmitted on the stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="a4b9f-116">스트리밍 컨텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-116">The streaming context.</span>
          </span>
          <span data-ttu-id="a4b9f-117">
            <see cref="T:System.Runtime.Serialization.StreamingContext" />는 <see langword="ObjectManager" />에서 사용되지 않지만, <see cref="T:System.Runtime.Serialization.ISerializable" />을 구현하거나 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />를 갖는 개체에 매개 변수로서 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-117">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> is not used by <see langword="ObjectManager" />, but is passed as a parameter to any objects implementing <see cref="T:System.Runtime.Serialization.ISerializable" /> or having a <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />.</span>
          </span>
          <span data-ttu-id="a4b9f-118">이러한 개체는 deserialize할 정보의 소스에 따라 특정 작업을 수행할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-118">These objects can take specific actions depending on the source of the information to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-119">
            <see cref="T:System.Runtime.Serialization.ObjectManager" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-119">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ObjectManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="a4b9f-120">호출자에게 필요한 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-120">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a4b9f-121">serialization 서비스를 제공 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-121">for providing serialization services.</span>
          </span>
          <span data-ttu-id="a4b9f-122">연관된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-122">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DoFixups">
      <MemberSignature Language="C#" Value="public virtual void DoFixups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoFixups() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.DoFixups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoFixups ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoFixups();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4b9f-123">기록된 픽스업을 모두 수행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-123">Performs all the recorded fixups.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-124">수정 된 모든 적절 한 서로게이트 개체 자체에 의해 수행 됩니다 (구현 하는 경우 <xref:System.Runtime.Serialization.ISerializable>), 또는 기본 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-124">The fixups are carried out by any appropriate surrogate, the object itself (if it implements <xref:System.Runtime.Serialization.ISerializable>), or the default implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a4b9f-125">픽스업이 제대로 완료되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-125">A fixup was not successfully completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (long objectID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(int64 objectID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (objectID As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(long objectID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectID" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectID">
          <span data-ttu-id="a4b9f-126">요청된 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-126">The ID of the requested object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-127">지정된 개체 ID를 가진 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-127">Returns the object with the specified object ID.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a4b9f-128">지정된 개체 ID를 가진 개체가 이전에 저장된 경우에는 이 개체가 반환되고 이러한 개체가 등록되지 않은 경우에는 <see langword="null" />이 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-128">The object with the specified object ID if it has been previously stored or <see langword="null" /> if no such object has been registered.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-129">개체를 등록 하 고 호출 하 여 개체 ID를 발급 한 수의 <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-129">An object can be registered and issued an object ID with a call to the <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-130">
            <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-130">The <paramref name="objectID" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RaiseDeserializationEvent">
      <MemberSignature Language="C#" Value="public virtual void RaiseDeserializationEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseDeserializationEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RaiseDeserializationEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseDeserializationEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a4b9f-131">
            <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />을 구현하는 등록된 개체에 대해 deserialization 이벤트를 발생시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-131">Raises the deserialization event to any registered object that implements <see cref="T:System.Runtime.Serialization.IDeserializationCallback" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseOnDeserializingEvent">
      <MemberSignature Language="C#" Value="public void RaiseOnDeserializingEvent (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseOnDeserializingEvent(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseOnDeserializingEvent (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseOnDeserializingEvent(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a4b9f-132">호출할 메서드가 들어 있는 형식의 인스턴스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-132">The instance of the type that contains the method to be invoked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-133">
            <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />로 표시된 메서드를 호출합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-133">Invokes the method marked with the <see cref="T:System.Runtime.Serialization.OnDeserializingAttribute" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RecordArrayElementFixup">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4b9f-134">배열에 있는 한 요소가 나중에 실행되도록 픽스업을 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-134">Records a fixup for one element in an array, to be executed later.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RecordArrayElementFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordArrayElementFixup (long arrayToBeFixed, int index, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordArrayElementFixup(int64 arrayToBeFixed, int32 index, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordArrayElementFixup (arrayToBeFixed As Long, index As Integer, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordArrayElementFixup(long arrayToBeFixed, int index, long objectRequired);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayToBeFixed" Type="System.Int64" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="arrayToBeFixed">
          <span data-ttu-id="a4b9f-135">픽스업을 기록하는 데 사용되는 배열의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-135">The ID of the array used to record a fixup.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a4b9f-136">픽스업이 요청된 <c>arrayFixup</c> 내부의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-136">The index within <c>arrayFixup</c> that a fixup is requested for.</span>
          </span>
        </param>
        <param name="objectRequired">
          <span data-ttu-id="a4b9f-137">픽스업이 완료된 후에 현재 배열 요소가 가리키는 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-137">The ID of the object that the current array element will point to after fixup is completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-138">배열에 있는 한 요소에 대한 픽스업을 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-138">Records a fixup for one element in an array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-139">픽스업이 지정 된 배열에서 지정 된 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-139">The fixup is for a specified element of a specified array.</span></span> <span data-ttu-id="a4b9f-140">픽스업 과정 중에 사용 되는 값에서 제공 됩니다는 `objectRequired` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-140">The value used during the fixup process is provided in the `objectRequired` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-141">
            <paramref name="arrayToBeFixed" /> 또는 <paramref name="objectRequired" /> 매개 변수가 0 이하인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-141">The <paramref name="arrayToBeFixed" /> or <paramref name="objectRequired" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4b9f-142">
            <paramref name="index" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-142">The <paramref name="index" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordArrayElementFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordArrayElementFixup (long arrayToBeFixed, int[] indices, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordArrayElementFixup(int64 arrayToBeFixed, int32[] indices, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordArrayElementFixup (arrayToBeFixed As Long, indices As Integer(), objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordArrayElementFixup(long arrayToBeFixed, cli::array &lt;int&gt; ^ indices, long objectRequired);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayToBeFixed" Type="System.Int64" />
        <Parameter Name="indices" Type="System.Int32[]" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="arrayToBeFixed">
          <span data-ttu-id="a4b9f-143">픽스업을 기록하는 데 사용되는 배열의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-143">The ID of the array used to record a fixup.</span>
          </span>
        </param>
        <param name="indices">
          <span data-ttu-id="a4b9f-144">픽스업이 요청된 다차원 배열 내부의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-144">The indexes within the multidimensional array that a fixup is requested for.</span>
          </span>
        </param>
        <param name="objectRequired">
          <span data-ttu-id="a4b9f-145">픽스업이 완료된 후에 배열 요소가 가리키는 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-145">The ID of the object the array elements will point to after fixup is completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-146">배열에 있는 지정된 요소가 나중에 실행되도록 픽스업을 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-146">Records fixups for the specified elements in an array, to be executed later.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-147">지정 된 배열의 지정 된 요소에 대 한 픽스업이입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-147">The fixup is for specified elements of a specified array.</span></span> <span data-ttu-id="a4b9f-148">픽스업 과정 중에 사용 되는 값에서 제공 됩니다는 `objectRequired` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-148">The value used during the fixup process is provided in the `objectRequired` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-149">
            <paramref name="arrayToBeFixed" /> 또는 <paramref name="objectRequired" /> 매개 변수가 0 이하인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-149">The <paramref name="arrayToBeFixed" /> or <paramref name="objectRequired" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4b9f-150">
            <paramref name="indices" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-150">The <paramref name="indices" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordDelayedFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordDelayedFixup (long objectToBeFixed, string memberName, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordDelayedFixup(int64 objectToBeFixed, string memberName, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordDelayedFixup (objectToBeFixed As Long, memberName As String, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordDelayedFixup(long objectToBeFixed, System::String ^ memberName, long objectRequired);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToBeFixed" Type="System.Int64" />
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectToBeFixed">
          <span data-ttu-id="a4b9f-151">
            <c>objectRequired</c>에 대한 참조를 필요로 하는 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-151">The ID of the object that needs the reference to <c>objectRequired</c>.</span>
          </span>
        </param>
        <param name="memberName">
          <span data-ttu-id="a4b9f-152">픽스업이 수행될 <c>objectToBeFixed</c>의 멤버 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-152">The member name of <c>objectToBeFixed</c> where the fixup will be performed.</span>
          </span>
        </param>
        <param name="objectRequired">
          <span data-ttu-id="a4b9f-153">
            <c>objectToBeFixed</c>에서 필요한 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-153">The ID of the object required by <c>objectToBeFixed</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-154">개체 멤버가 나중에 실행되도록 픽스업을 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-154">Records a fixup for an object member, to be executed later.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-155">지정된 된 개체의 지정 된 멤버에 대 한 픽스업이입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-155">The fixup is for a specified member of a specified object.</span></span> <span data-ttu-id="a4b9f-156">픽스업 과정 중에 사용할 값으로 제공 됩니다는 `objectRequired` 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-156">The value to be used during the fixup process is provided as the `objectRequired` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-157">
            <paramref name="objectToBeFixed" /> 또는 <paramref name="objectRequired" /> 매개 변수가 0 이하인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-157">
              <paramref name="objectToBeFixed" /> or <paramref name="objectRequired" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4b9f-158">
            <paramref name="memberName" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-158">The <paramref name="memberName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordFixup">
      <MemberSignature Language="C#" Value="public virtual void RecordFixup (long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordFixup(int64 objectToBeFixed, class System.Reflection.MemberInfo member, int64 objectRequired) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RecordFixup (objectToBeFixed As Long, member As MemberInfo, objectRequired As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RecordFixup(long objectToBeFixed, System::Reflection::MemberInfo ^ member, long objectRequired);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectToBeFixed" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="objectRequired" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="objectToBeFixed">
          <span data-ttu-id="a4b9f-159">
            <c>objectRequired</c> 개체에 대한 참조를 필요로 하는 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-159">The ID of the object that needs the reference to the <c>objectRequired</c> object.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="a4b9f-160">픽스업이 수행될 <c>objectToBeFixed</c>의 멤버입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-160">The member of <c>objectToBeFixed</c> where the fixup will be performed.</span>
          </span>
        </param>
        <param name="objectRequired">
          <span data-ttu-id="a4b9f-161">
            <c>objectToBeFixed</c>에서 필요한 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-161">The ID of the object required by <c>objectToBeFixed</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-162">개체 멤버가 나중에 실행되도록 픽스업을 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-162">Records a fixup for a member of an object, to be executed later.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-163">지정된 된 개체의 지정 된 멤버에 대 한 픽스업이입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-163">The fixup is for a specified member of a specified object.</span></span> <span data-ttu-id="a4b9f-164">픽스업 과정 중에 사용할 값으로 제공 됩니다는 `objectRequired` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-164">The value to be used during the fixup process is provided as the `objectRequired` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-165">
            <paramref name="objectToBeFixed" /> 또는 <paramref name="objectRequired" /> 매개 변수가 0 이하인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-165">The <paramref name="objectToBeFixed" /> or <paramref name="objectRequired" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4b9f-166">
            <paramref name="member" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-166">The <paramref name="member" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a4b9f-167">개체가 deserialize될 때 개체를 등록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-167">Registers an object as it is deserialized.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public virtual void RegisterObject (object obj, long objectID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObject(object obj, int64 objectID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterObject (obj As Object, objectID As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterObject(System::Object ^ obj, long objectID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a4b9f-168">등록할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-168">The object to register.</span>
          </span>
        </param>
        <param name="objectID">
          <span data-ttu-id="a4b9f-169">등록할 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-169">The ID of the object to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-170">개체가 deserialize될 때 개체를 등록하여 <paramref name="objectID" />와 연관시킵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-170">Registers an object as it is deserialized, associating it with <paramref name="objectID" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-171"><xref:System.Runtime.Serialization.ObjectManager> 개체와 ID에 대 한 정보를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-171"><xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID.</span></span> <span data-ttu-id="a4b9f-172">역직렬화 하는 동안 나중 <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> 는 특정 개체 ID가 이미 deserialize 된, 여부 deserialize 되지 않습니다 아직 개체에 대 한 전방 참조는 여부를 확인 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-172">Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to determine whether a particular object ID has already been deserialized, or whether it is a forward reference to an object that has not yet been deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4b9f-173">
            <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-173">The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-174">
            <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-174">The <paramref name="objectID" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a4b9f-175">
            <paramref name="objectID" />가 <paramref name="obj" /> 이외의 개체에 대해 이미 등록된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-175">The <paramref name="objectID" /> has already been registered for an object other than <paramref name="obj" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a4b9f-176">등록할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-176">The object to register.</span>
          </span>
        </param>
        <param name="objectID">
          <span data-ttu-id="a4b9f-177">등록할 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-177">The ID of the object to register.</span>
          </span>
        </param>
        <param name="info">
          <span data-ttu-id="a4b9f-178">
            <c>obj</c>가 <see cref="T:System.Runtime.Serialization.ISerializable" />을 구현하거나 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />를 포함하는 경우 사용된 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-178">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> used if <c>obj</c> implements <see cref="T:System.Runtime.Serialization.ISerializable" /> or has a <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />.</span>
          </span>
          <span data-ttu-id="a4b9f-179">
            <c>info</c>는 필수 픽스업 정보를 사용하여 완료된 다음 필수 개체가 완료될 때 해당 개체에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-179">
              <c>info</c> will be completed with any required fixup information and then passed to the required object when that object is completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-180">개체가 deserialize될 때 개체를 등록하여 <paramref name="objectID" />와 연관시키고 여기에 사용되는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-180">Registers an object as it is deserialized, associating it with <paramref name="objectID" />, and recording the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> used with it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-181"><xref:System.Runtime.Serialization.ObjectManager> 개체와 ID에 대 한 정보를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-181"><xref:System.Runtime.Serialization.ObjectManager> retains the information about both the object and its ID.</span></span> <span data-ttu-id="a4b9f-182">역직렬화 하는 동안 나중에 사용할 수 있습니다 <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> 되었거나 deserialize 되지 않습니다 아직 개체에 대 한 전방 참조는 특정 개체 ID, deserialize 이미 있는지 여부를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-182">Later during deserialization, you can use <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> to discover whether a particular object ID has already been deserialized, or if it is a forward reference to an object that has not yet been deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4b9f-183">
            <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-183">The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-184">
            <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-184">The <paramref name="objectID" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a4b9f-185">
            <paramref name="objectID" />가 <paramref name="obj" /> 이외의 개체에 대해 이미 등록된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-185">The <paramref name="objectID" /> has already been registered for an object other than <paramref name="obj" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info, int64 idOfContainingObj, class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo, idOfContainingObj As Long, member As MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info, long idOfContainingObj, System::Reflection::MemberInfo ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="idOfContainingObj" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a4b9f-186">등록할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-186">The object to register.</span>
          </span>
        </param>
        <param name="objectID">
          <span data-ttu-id="a4b9f-187">등록할 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-187">The ID of the object to register.</span>
          </span>
        </param>
        <param name="info">
          <span data-ttu-id="a4b9f-188">
            <c>obj</c>가 <see cref="T:System.Runtime.Serialization.ISerializable" />을 구현하거나 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />를 포함하는 경우 사용된 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-188">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> used if <c>obj</c> implements <see cref="T:System.Runtime.Serialization.ISerializable" /> or has a <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />.</span>
          </span>
          <span data-ttu-id="a4b9f-189">
            <c>info</c>는 필수 픽스업 정보를 사용하여 완료된 다음 필수 개체가 완료될 때 해당 개체에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-189">
              <c>info</c> will be completed with any required fixup information and then passed to the required object when that object is completed.</span>
          </span>
        </param>
        <param name="idOfContainingObj">
          <span data-ttu-id="a4b9f-190">
            <c>obj</c>를 포함하는 개체의 ID입니다. 이 매개 변수는 <c>obj</c>가 값 형식인 경우에만 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-190">The ID of the object that contains <c>obj</c>. This parameter is required only if <c>obj</c> is a value type.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="a4b9f-191">
            <c>obj</c>가 존재하는 포함 개체의 필드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-191">The field in the containing object where <c>obj</c> exists.</span>
          </span>
          <span data-ttu-id="a4b9f-192">이 매개 변수는 <c>obj</c>가 값 형식인 경우에만 의미가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-192">This parameter has meaning only if <c>obj</c> is a value type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-193">개체의 멤버가 deserialize될 때 개체의 멤버를 등록하여 <paramref name="objectID" />와 연관시키고 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-193">Registers a member of an object as it is deserialized, associating it with <paramref name="objectID" />, and recording the <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-194">제공 해야는 `member` 및 `idOfContainingObj` 매개 변수 경우 `obj` 는 <xref:System.ValueType> 픽스업에서 수행 되는 방식으로 인해 <xref:System.ValueType> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-194">You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects.</span></span> <span data-ttu-id="a4b9f-195">에 대 한 정보를 저장할 공간을 <xref:System.ValueType> 포함 하는 개체와 같은 줄에 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-195">The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object.</span></span> <span data-ttu-id="a4b9f-196">그러나 때는 <xref:System.ValueType> boxed에 등록 해야 하는 <xref:System.Runtime.Serialization.ObjectManager>, 포함 하는 개체와의 연결이 손상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-196">However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object.</span></span> <span data-ttu-id="a4b9f-197">인스턴스의 픽스업이 발생을 보장 하려면는 <xref:System.ValueType> boxed 인스턴스 아니라 포함 하는 개체에 저장 된 <xref:System.Runtime.Serialization.ObjectManager> 몇 가지 추가 정보를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-197">To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information.</span></span>  
  
 <span data-ttu-id="a4b9f-198"><xref:System.Runtime.Serialization.ObjectManager> 개체와 ID에 대 한 정보를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-198"><xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID.</span></span> <span data-ttu-id="a4b9f-199">역직렬화 하는 동안 나중 <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> 는 특정 개체 ID가 이미 deserialize 된, 또는 역직렬화 아직 개체에 대 한 전방 참조 되지 인지 여부를 검색 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-199">Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4b9f-200">
            <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-200">The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-201">
            <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-201">The <paramref name="objectID" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a4b9f-202">
            <paramref name="objectID" />가 이미 <paramref name="obj" /> 이외의 개체에 대해 등록된 경우 또는 <paramref name="member" />가 <see cref="T:System.Reflection.FieldInfo" />가 아니며 <paramref name="member" />가 <see langword="null" />도 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-202">The <paramref name="objectID" /> has already been registered for an object other than <paramref name="obj" />, or <paramref name="member" /> is not a <see cref="T:System.Reflection.FieldInfo" /> and <paramref name="member" /> is not <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterObject(object obj, int64 objectID, class System.Runtime.Serialization.SerializationInfo info, int64 idOfContainingObj, class System.Reflection.MemberInfo member, int32[] arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObject (obj As Object, objectID As Long, info As SerializationInfo, idOfContainingObj As Long, member As MemberInfo, arrayIndex As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObject(System::Object ^ obj, long objectID, System::Runtime::Serialization::SerializationInfo ^ info, long idOfContainingObj, System::Reflection::MemberInfo ^ member, cli::array &lt;int&gt; ^ arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="objectID" Type="System.Int64" />
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="idOfContainingObj" Type="System.Int64" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="arrayIndex" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a4b9f-203">등록할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-203">The object to register.</span>
          </span>
        </param>
        <param name="objectID">
          <span data-ttu-id="a4b9f-204">등록할 개체의 ID입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-204">The ID of the object to register.</span>
          </span>
        </param>
        <param name="info">
          <span data-ttu-id="a4b9f-205">
            <c>obj</c>가 <see cref="T:System.Runtime.Serialization.ISerializable" />을 구현하거나 <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />를 포함하는 경우 사용된 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-205">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> used if <c>obj</c> implements <see cref="T:System.Runtime.Serialization.ISerializable" /> or has a <see cref="T:System.Runtime.Serialization.ISerializationSurrogate" />.</span>
          </span>
          <span data-ttu-id="a4b9f-206">
            <c>info</c>는 필수 픽스업 정보를 사용하여 완료된 다음 필수 개체가 완료될 때 해당 개체에 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-206">
              <c>info</c> will be completed with any required fixup information and then passed to the required object when that object is completed.</span>
          </span>
        </param>
        <param name="idOfContainingObj">
          <span data-ttu-id="a4b9f-207">
            <c>obj</c>를 포함하는 개체의 ID입니다. 이 매개 변수는 <c>obj</c>가 값 형식인 경우에만 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-207">The ID of the object that contains <c>obj</c>. This parameter is required only if <c>obj</c> is a value type.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="a4b9f-208">
            <c>obj</c>가 존재하는 포함 개체의 필드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-208">The field in the containing object where <c>obj</c> exists.</span>
          </span>
          <span data-ttu-id="a4b9f-209">이 매개 변수는 <c>obj</c>가 값 형식인 경우에만 의미가 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-209">This parameter has meaning only if <c>obj</c> is a value type.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="a4b9f-210">
            <c>obj</c>가 <see cref="T:System.ValueType" />이고 배열의 멤버인 경우 <c>arrayIndex</c>에는 <c>obj</c>가 존재하는 해당 배열 내부의 인덱스가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-210">If <c>obj</c> is a <see cref="T:System.ValueType" /> and a member of an array, <c>arrayIndex</c> contains the index within that array where <c>obj</c> exists.</span>
          </span>
          <span data-ttu-id="a4b9f-211">
            <c>obj</c>가 <see cref="T:System.ValueType" /> 및 배열의 멤버가 아닌 경우에는 <c>arrayIndex</c>가 무시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-211">
              <c>arrayIndex</c> is ignored if <c>obj</c> is not both a <see cref="T:System.ValueType" /> and a member of an array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a4b9f-212">개체에 포함된 배열의 멤버가 deserialize될 때 해당 멤버를 등록하여 <paramref name="objectID" />와 연관시키고 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 기록합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-212">Registers a member of an array contained in an object while it is deserialized, associating it with <paramref name="objectID" />, and recording the <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4b9f-213">제공 해야는 `member` 및 `idOfContainingObj` 매개 변수 경우 `obj` 는 <xref:System.ValueType> 픽스업에서 수행 되는 방식으로 인해 <xref:System.ValueType> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-213">You need to provide the `member` and `idOfContainingObj` parameters if `obj` is a <xref:System.ValueType> because of the way fixups are performed on <xref:System.ValueType> objects.</span></span> <span data-ttu-id="a4b9f-214">에 대 한 정보를 저장할 공간을 <xref:System.ValueType> 포함 하는 개체와 같은 줄에 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-214">The space to store the information for a <xref:System.ValueType> is allocated inline with its containing object.</span></span> <span data-ttu-id="a4b9f-215">그러나 때는 <xref:System.ValueType> boxed에 등록 해야 하는 <xref:System.Runtime.Serialization.ObjectManager>, 포함 하는 개체와의 연결이 손상 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-215">However, when the <xref:System.ValueType> is boxed to be registered with the <xref:System.Runtime.Serialization.ObjectManager>, it loses the connection with its containing object.</span></span> <span data-ttu-id="a4b9f-216">인스턴스의 픽스업이 발생을 보장 하려면는 <xref:System.ValueType> boxed 인스턴스 아니라 포함 하는 개체에 저장 된 <xref:System.Runtime.Serialization.ObjectManager> 몇 가지 추가 정보를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-216">To guarantee that fixups occur in the instance of the <xref:System.ValueType> stored in the containing object and not in the boxed instance, the <xref:System.Runtime.Serialization.ObjectManager> retains some additional information.</span></span>  
  
 <span data-ttu-id="a4b9f-217"><xref:System.Runtime.Serialization.ObjectManager> 개체와 ID에 대 한 정보를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-217"><xref:System.Runtime.Serialization.ObjectManager> retains information about both the object and its ID.</span></span> <span data-ttu-id="a4b9f-218">역직렬화 하는 동안 나중 <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> 는 특정 개체 ID가 이미 deserialize 된, 또는 역직렬화 아직 개체에 대 한 전방 참조 되지 인지 여부를 검색 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a4b9f-218">Later during deserialization, <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A> can be used to discover whether a particular object ID has already been deserialized, or whether it is a forward reference to an object not yet deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a4b9f-219">
            <paramref name="obj" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-219">The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a4b9f-220">
            <paramref name="objectID" /> 매개 변수가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-220">The <paramref name="objectID" /> parameter is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a4b9f-221">
            <paramref name="objectID" />가 이미 <paramref name="obj" /> 이외의 개체에 대해 등록된 경우 또는 <paramref name="member" />가 <see cref="T:System.Reflection.FieldInfo" />가 아니며 <paramref name="member" />가 <see langword="null" />도 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="a4b9f-221">The <paramref name="objectID" /> has already been registered for an object other than <paramref name="obj" />, or <paramref name="member" /> is not a <see cref="T:System.Reflection.FieldInfo" /> and <paramref name="member" /> isn't <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>