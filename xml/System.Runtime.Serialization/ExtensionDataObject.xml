<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExtensionDataObject.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c0f6b0c6c7ab05b995b84ab0159d453837edcf5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c0f6b0c6c7ab05b995b84ab0159d453837edcf5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>Stores data from a versioned data contract that has been extended by adding new members.</source>
          <target state="translated">버전이 있는 데이터 계약이 새 멤버가 추가되어 확장될 경우 계약의 데이터를 저장합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;</ph> is the structure that stores extra data encountered by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XmlObjectSerializer&gt;</ph> during deserialization operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.ExtensionDataObject&gt;</ph>는 deserialization 작업 중 <ph id="ph2">&lt;xref:System.Runtime.Serialization.XmlObjectSerializer&gt;</ph>가 발견한 추가 데이터를 저장하는 구조체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The structure is used by serialization to write the extra data into the serialized instance.</source>
          <target state="translated">이 구조체는 serialization 수행 시 serialize된 인스턴스에 추가 데이터를 기록하는 데 사용되며,</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The structure is returned by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData%2A&gt;</ph> 인터페이스의 <ph id="ph2">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> 속성에서 반환합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The following code serializes an instance of a type (<ph id="ph1">`PersonVersion2`</ph>) that is the second version of the serializable type (<ph id="ph2">`Person`</ph>).</source>
          <target state="translated">다음 코드는 serialize할 수 있는 형식(<ph id="ph1">`PersonVersion2`</ph>)의 두 번째 버전 형식(<ph id="ph2">`Person`</ph>)의 인스턴스를 serialize합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The second version contains extra data (<ph id="ph1">`ID`</ph> field) that is not present in the first version.</source>
          <target state="translated">두 번째 버전에는 첫 번째 버전에 없는 추가 데이터(<ph id="ph1">`ID`</ph> 필드)가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>The code then deserializes the XML document into a <ph id="ph1">`Person`</ph> object, then immediately reserializes the object including the extra data.</source>
          <target state="translated">그런 다음 XML 문서를 <ph id="ph1">`Person`</ph> 개체로 deserialize하자마자 추가 데이터를 포함한 개체를 다시 serialize합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>Finally, the code deserializes the new XML into a <ph id="ph1">`PersonVersion2`</ph> object and writes the complete data to the console, proving that the data has made a round trip to and from an older version of the type.</source>
          <target state="translated">마지막으로, 새 XML을 <ph id="ph1">`PersonVersion2`</ph> 개체로 deserialize하고 전체 데이터를 콘솔에 기록하여 두 번째 버전의 형식과 이전 버전의 형식 간에 데이터가 라운드트립되었음을 증명합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ExtensionDataObject">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute must be applied with the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> properties set to the same name and namespace as the original class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> 특성은 원래 클래스와 동일한 이름과 네임스페이스로 설정된 <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> 속성과 함께 적용해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>