<Type Name="XmlObjectSerializer" FullName="System.Runtime.Serialization.XmlObjectSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68bf1db20ac5f2ecee451cd66389d76483f9ccce" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlObjectSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlObjectSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XmlObjectSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlObjectSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlObjectSerializer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a5a02-101">개체를 XML 스트림이나 문서로 serialize하는 데 사용되는 기본 클래스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5a02-101">Provides the base class used to serialize objects as XML streams or documents.</span>
      </span>
      <span data-ttu-id="a5a02-102">이 클래스는 추상 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5a02-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-103"><xref:System.Runtime.Serialization.XmlObjectSerializer>를 확장하여 개체를 serialize 및 deserialize할 고유의 serializer를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-103">Extend the <xref:System.Runtime.Serialization.XmlObjectSerializer> to create your own serializer to serialize and deserialize objects.</span></span> <span data-ttu-id="a5a02-104"><xref:System.Runtime.Serialization.DataContractSerializer> 클래스와 <xref:System.Runtime.Serialization.NetDataContractSerializer> 클래스는 <xref:System.Runtime.Serialization.XmlObjectSerializer>에서 상속되며 데이터 계약 규칙을 따르는 개체(<xref:System.Runtime.Serialization.DataContractAttribute> 및 <xref:System.Runtime.Serialization.DataMemberAttribute>를 사용하여 만든 개체)를 serialize 및 deserialize하는 데 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-104">Both the <xref:System.Runtime.Serialization.DataContractSerializer> class and the <xref:System.Runtime.Serialization.NetDataContractSerializer> class inherit from the <xref:System.Runtime.Serialization.XmlObjectSerializer> and are used to serialize and deserialize objects that conform to data contract rules (objects created using the <xref:System.Runtime.Serialization.DataContractAttribute> and the <xref:System.Runtime.Serialization.DataMemberAttribute>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5a02-105">다음 예제에서는 `WriteObjectWithInstance`가 매개 변수로 포함된 <xref:System.Runtime.Serialization.XmlObjectSerializer>라는 메서드를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-105">The following example shows a method named `WriteObjectWithInstance` that includes an <xref:System.Runtime.Serialization.XmlObjectSerializer> as a parameter.</span></span> <span data-ttu-id="a5a02-106">이 메서드는 <xref:System.Runtime.Serialization.DataContractSerializer> 메서드를 호출한 후 <xref:System.Runtime.Serialization.NetDataContractSerializer> 또는 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A>를 사용하여 개체를 serialize합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-106">The method serializes an object using either the <xref:System.Runtime.Serialization.DataContractSerializer> or <xref:System.Runtime.Serialization.NetDataContractSerializer> by calling the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method.</span></span>  
  
 [!code-csharp[XmlObjectSerializer#1](~/samples/snippets/csharp/VS_Snippets_CFX/xmlobjectserializer/cs/source.cs#1)]
 [!code-vb[XmlObjectSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xmlobjectserializer/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
      <span data-ttu-id="a5a02-107">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5a02-107">the type being serialized does not conform to data contract rules.</span>
      </span>
      <span data-ttu-id="a5a02-108">
        <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5a02-108">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
      </span>
    </exception>
    <exception cref="T:System.Runtime.Serialization.SerializationException">
      <span data-ttu-id="a5a02-109">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5a02-109">there is a problem with the instance being serialized.</span>
      </span>
    </exception>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="a5a02-110">
          <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />에서 상속되는 경우 <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />, <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />, <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />와 같은 멤버를 재정의해야 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a5a02-110">When you inherit from <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />, you must override the following members: <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />, <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />, <see cref="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />.</span>
        </span>
        <span data-ttu-id="a5a02-111">또한 읽기 및 deserialize를 위해 <see cref="Overload:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject" /> 및 <see cref="Overload:System.Runtime.Serialization.XmlObjectSerializer.ReadObject" /> 메서드를 구현해야 합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="a5a02-111">Additionally, the <see cref="Overload:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject" /> and <see cref="Overload:System.Runtime.Serialization.XmlObjectSerializer.ReadObject" /> methods must be implemented for reading and deserializing.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.NetDataContractSerializer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlObjectSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlObjectSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a5a02-112">
            <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-112">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-113">이 생성자는 파생 클래스가 생성자를 연결할 수 있도록 protected로 표시됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-113">This constructor is marked protected to allow derived classes to chain constructors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a5a02-114">serializer가 개체를 읽을 수 있는지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-114">Gets a value that specifies whether the serializer can read the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-115">이 메서드는 판독기가 읽을 요소에 배치되는지 여부를 확인하고, 해당 요소가 XML 스트림 또는 문서에서 찾은 개체의 최상위 요소이면 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-115">This method checks whether the reader is positioned on an element to read, and returns `true` if the element is the top-level element for the object found in the XML stream or document.</span></span> <span data-ttu-id="a5a02-116">`true`를 반환하려면 찾은 요소의 이름이 예상 이름과 일치해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-116">To return `true`, the found element must have an expected name.</span></span> <span data-ttu-id="a5a02-117">예상되는 실제 요소 이름은 serializer의 구현에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-117">The actual expected element name depends on the implementation of the serializer.</span></span>  
  
 <span data-ttu-id="a5a02-118"><xref:System.Runtime.Serialization.DataContractSerializer>를 사용할 경우 확장 클래스의 생성자에 시작 요소가 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-118">With the <xref:System.Runtime.Serialization.DataContractSerializer>, the starting element is specified in the constructor of the extension class.</span></span>  <span data-ttu-id="a5a02-119">예제를 보려면 <xref:System.Runtime.Serialization.DataContractSerializer> 클래스에 대한 생성자를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a5a02-119">For an example, see the constructors for the <xref:System.Runtime.Serialization.DataContractSerializer> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public abstract bool IsStartObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsStartObject (reader As XmlDictionaryReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsStartObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a5a02-120">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-120">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-121">읽을 수 있는 XML 요소 위에 <see cref="T:System.Xml.XmlDictionaryReader" />가 배치되는지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-121">Gets a value that specifies whether the <see cref="T:System.Xml.XmlDictionaryReader" /> is positioned over an XML element that can be read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5a02-122">판독기가 데이터를 읽을 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-122">
              <see langword="true" /> if the reader can read the data; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-123">이 메서드는 판독기가 읽을 요소에 배치되는지를 확인하고, 해당 요소가 XML 스트림 또는 문서에서 찾은 개체의 최상위 요소이면 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-123">This method checks if the reader is positioned on an element to read, and returns `true` if the element is the top-level element for the object found in the XML stream or document.</span></span> <span data-ttu-id="a5a02-124"><xref:System.Runtime.Serialization.XmlObjectSerializer> 구현에 따라 `true`를 반환할 시점이 결정되며,</span><span class="sxs-lookup"><span data-stu-id="a5a02-124">The <xref:System.Runtime.Serialization.XmlObjectSerializer> implementation determines when to return `true`.</span></span> <span data-ttu-id="a5a02-125">구현이 하나의 요소에 배치되는지 확인하거나 필요한 요소 이름을 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-125">Implementations may check that they are positioned on an element or look for an expected element name.</span></span> <span data-ttu-id="a5a02-126"><xref:System.Runtime.Serialization.XmlObjectSerializer>의 구현 중 하나인 <xref:System.Runtime.Serialization.DataContractSerializer>는 해당 구현이 하나의 요소에 배치되는지를 확인하고, 요소 이름이 현재 deserialize 중인 형식에 예상되는 최상위 이름인지도 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-126">One implementation of the <xref:System.Runtime.Serialization.XmlObjectSerializer>, the <xref:System.Runtime.Serialization.DataContractSerializer>, checks that it is positioned on an element and also checks that the element name is the top level expected name for the type currently being deserialized.</span></span>  
  
 <span data-ttu-id="a5a02-127">필요한 경우 <xref:System.Runtime.Serialization.XmlObjectSerializer.ReadObject%2A> 메서드를 사용하여 XML 콘텐츠를 읽기 전에 최상위 요소에 배치된 동안 XML 스트림의 추가 특성을 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-127">If needed, additional attributes in the XML stream can be read while positioned on the top level element before reading XML contents using the <xref:System.Runtime.Serialization.XmlObjectSerializer.ReadObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartObject">
      <MemberSignature Language="C#" Value="public virtual bool IsStartObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartObject (reader As XmlReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a5a02-128">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-128">An <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-129">읽을 수 있는 XML 요소 위에 <see cref="T:System.Xml.XmlReader" />가 배치되는지 여부를 지정하는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-129">Gets a value that specifies whether the <see cref="T:System.Xml.XmlReader" /> is positioned over an XML element that can be read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5a02-130">판독기가 시작 요소 위에 배치되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-130">
              <see langword="true" /> if the reader is positioned over the starting element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-131">이 메서드는 판독기가 읽을 요소에 배치되는지 여부를 확인하고, 해당 요소가 XML 스트림 또는 문서에서 찾은 개체의 최상위 요소이면 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-131">This method checks whether the reader is positioned on an element to read, and returns `true` if the element is the top-level element for the object found in the XML stream or document.</span></span> <span data-ttu-id="a5a02-132">`true`를 반환하려면 찾은 요소의 이름이 예상 이름과 일치해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-132">To return `true`, the found element must have an expected name.</span></span> <span data-ttu-id="a5a02-133">예상되는 실제 요소 이름은 serializer의 구현에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-133">The actual expected element name depends on the implementation of the serializer.</span></span>  
  
 <span data-ttu-id="a5a02-134"><xref:System.Runtime.Serialization.DataContractSerializer>를 사용할 경우 확장 클래스의 생성자에 시작 요소가 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-134">With the <xref:System.Runtime.Serialization.DataContractSerializer>, the starting element is specified in the constructor of the extension class.</span></span>  <span data-ttu-id="a5a02-135">예제를 보려면 <xref:System.Runtime.Serialization.DataContractSerializer> 클래스에 대한 생성자를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="a5a02-135">For an example, see the constructors for the <xref:System.Runtime.Serialization.DataContractSerializer> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a5a02-136">XML 문서나 문서 스트림을 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-136">Reads an XML document or document stream and returns the deserialized object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public virtual object ReadObject (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadObject(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a5a02-137">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-137">A <see cref="T:System.IO.Stream" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-138">
            <see cref="T:System.IO.Stream" />을 사용하여 XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-138">Reads the XML stream or document with a <see cref="T:System.IO.Stream" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5a02-139">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-139">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-140">이 메서드는 가상 메서드이며, 사전 판독기를 작성하여 내부 스트림을 읽고 deserialize하는 기본 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-140">This method is a virtual method, and has a default implementation that creates a dictionary reader to read the underlying stream and deserialize it.</span></span> <span data-ttu-id="a5a02-141">기본 구현은 스트림이 텍스트 또는 XML이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-141">The default implementation assumes the stream is text or XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public virtual object ReadObject (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadObject (reader As XmlDictionaryReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a5a02-142">XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-142">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-143">
            <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 문서 또는 스트림을 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-143">Reads the XML document or stream with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5a02-144">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-144">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-145">이 메서드는 가상 메서드이며, 사전 판독기를 작성하여 내부 스트림을 읽고 deserialize하는 기본 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-145">This method is a virtual method, and has a default implementation that creates a dictionary reader to read the underlying stream and deserialize it.</span></span> <span data-ttu-id="a5a02-146">기본 구현은 스트림이 텍스트 또는 XML이라고 가정합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-146">The default implementation assumes the stream is text or XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public virtual object ReadObject (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadObject (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadObject(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a5a02-147">XML 스트림 또는 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-147">An <see cref="T:System.Xml.XmlReader" /> used to read the XML stream or document.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-148">
            <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 문서 또는 스트림을 읽고 deserialize된 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-148">Reads the XML document or stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5a02-149">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-149">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public abstract object ReadObject (System.Xml.XmlDictionaryReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.Xml.XmlDictionaryReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadObject (reader As XmlDictionaryReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ReadObject(System::Xml::XmlDictionaryReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a5a02-150">XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-150">An <see cref="T:System.Xml.XmlDictionaryReader" /> used to read the XML document.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="a5a02-151">바깥쪽 XML 요소 이름과 네임스페이스가 루트 이름 및 루트 네임스페이스에 해당하는지 확인하려면 <see langword="true" />이고, 확인을 건너뛰려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-151">
              <see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, <see langword="false" /> to skip the verification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-152">
            <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 XML 스트림 또는 문서를 읽고 deserialize된 개체를 반환합니다. 또한 serializer가 읽기를 시도하기 전에 데이터를 읽을 수 있는지 여부를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-152">Reads the XML stream or document with an <see cref="T:System.Xml.XmlDictionaryReader" /> and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5a02-153">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-153">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-154">`verifyObjectName` 매개 변수는 <xref:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject%2A> 메서드와 동일한 코드를 사용하여 요소가 개체의 시작인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-154">The `verifyObjectName` parameter uses the same code as the <xref:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject%2A> method to determine whether the element is the start of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public virtual object ReadObject (System.Xml.XmlReader reader, bool verifyObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadObject(class System.Xml.XmlReader reader, bool verifyObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadObject (reader As XmlReader, verifyObjectName As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadObject(System::Xml::XmlReader ^ reader, bool verifyObjectName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="verifyObjectName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a5a02-155">XML 문서 또는 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-155">An <see cref="T:System.Xml.XmlReader" /> used to read the XML document or stream.</span>
          </span>
        </param>
        <param name="verifyObjectName">
          <span data-ttu-id="a5a02-156">바깥쪽 XML 요소 이름과 네임스페이스가 루트 이름 및 루트 네임스페이스에 해당하는지 확인하려면 <see langword="true" />이고, 확인을 건너뛰려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-156">
              <see langword="true" /> to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; <see langword="false" /> to skip the verification.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-157">
            <see cref="T:System.Xml.XmlReader" />를 사용하여 XML 문서 또는 스트림을 읽고 deserialize된 개체를 반환합니다. 또한 serializer가 읽기를 시도하기 전에 데이터를 읽을 수 있는지 여부를 지정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-157">Reads the XML document or stream with an <see cref="T:System.Xml.XmlReader" /> and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5a02-158">deserialize된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-158">The deserialized object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-159">`verifyObjectName` 매개 변수는 <xref:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject%2A> 메서드와 동일한 코드를 사용하여 요소가 개체의 시작인지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-159">The `verifyObjectName` parameter uses the same code as the <xref:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject%2A> method to determine whether the element is the start of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEndObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a5a02-160">XML 스트림 또는 문서에 닫기 XML 요소를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-160">Writes the closing XML element to an XML stream or document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-161"><xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 메서드를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-161">The <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> methods must be implemented.</span></span> <span data-ttu-id="a5a02-162">전체 serialization을 쓰기 위해 시작 쓰기, 콘텐츠 쓰기, 끝 쓰기 등의 패턴을 사용한 세 가지 메서드가 연속으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-162">The three methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="a5a02-163">개체를 쓰는 중에 사용자가 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A> 호출과 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 호출 사이에 XML 특성을 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-163">Users can insert XML attributes during the writing of the object between the calls to <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A> and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A>.</span></span> <span data-ttu-id="a5a02-164">이 세 가지 메서드는 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 메서드의 가상 구현에서도 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-164">The three methods are also called by the virtual implementation of the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public abstract void WriteEndObject (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndObject(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndObject (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndObject(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a5a02-165">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-165">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-166">
            <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 XML 문서 또는 스트림에 개체 데이터의 끝을 닫기 XML 요소로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-166">Writes the end of the object data as a closing XML element to the XML document or stream with an <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-167">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-167">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-168">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-168">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-169">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-169">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-170">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-170">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-171">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-171">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public virtual void WriteEndObject (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndObject(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndObject (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndObject(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a5a02-172">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-172">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-173">
            <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서 또는 스트림에 개체 데이터의 끝을 닫기 XML 요소로 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-173">Writes the end of the object data as a closing XML element to the XML document or stream with an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-174">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-174">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-175">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-175">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-176">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-176">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-177">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-177">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-178">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-178">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-179">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-179">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-180">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-180">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-181">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-181">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-182">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-182">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-183">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-183">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="a5a02-184">모든 개체 데이터(시작 XML 요소, 콘텐츠, 닫기 요소)를 XML 문서 또는 스트림에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-184">Writes all the object data (starting XML element, content, and closing element) to an XML document or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public virtual void WriteObject (System.IO.Stream stream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObject(class System.IO.Stream stream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteObject(System::IO::Stream ^ stream, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a5a02-185">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-185">A <see cref="T:System.IO.Stream" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a5a02-186">스트림에 쓸 데이터를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-186">The object that contains the data to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-187">지정된 <see cref="T:System.IO.Stream" />를 사용하여 XML 문서 또는 스트림에 개체의 전체 콘텐츠(시작, 콘텐츠, 끝)를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-187">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-188">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-188">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-189">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-189">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-190">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-190">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-191">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-191">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-192">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-192">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public virtual void WriteObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a5a02-193">XML 문서 또는 스트림에 콘텐츠를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-193">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the content to the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a5a02-194">쓸 콘텐츠를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-194">The object that contains the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-195">지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 XML 문서 또는 스트림에 개체의 전체 콘텐츠(시작, 콘텐츠, 끝)를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-195">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-196">이 메서드는 가상 메서드이며 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 메서드를 호출하는 기본 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-196">This is a virtual method and has a default implementation that calls the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> methods.</span></span> <span data-ttu-id="a5a02-197">따라서 serializer에서 가장 일반적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-197">Because of this, this method is intended to be the most commonly used method on a serializer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-198">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-198">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-199">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-199">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-200">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-200">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-201">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-201">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-202">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-202">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public virtual void WriteObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a5a02-203">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-203">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a5a02-204">쓸 콘텐츠를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-204">The object that contains the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-205">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서 또는 스트림에 개체의 전체 콘텐츠(시작, 콘텐츠, 끝)를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-205">Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-206">이 메서드는 가상 메서드이며 쓰기를 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%28System.Xml.XmlDictionaryWriter%2CSystem.Object%29?displayProperty=nameWithType> 오버로드에 위임하는 기본 구현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-206">This is a virtual method, and has a default implementation that delegates writing to the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%28System.Xml.XmlDictionaryWriter%2CSystem.Object%29?displayProperty=nameWithType> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-207">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-207">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-208">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-208">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-209">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-209">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-210">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-210">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-211">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-211">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteObjectContent">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a5a02-212">XML 문서 또는 스트림에 개체의 콘텐츠만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-212">Writes only the content of an object to an XML document or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-213"><xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 메서드를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-213">The <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> methods must be implemented.</span></span> <span data-ttu-id="a5a02-214">전체 serialization을 쓰기 위해 시작 쓰기, 콘텐츠 쓰기, 끝 쓰기 등의 패턴을 사용한 세 가지 메서드가 연속으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-214">The three methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="a5a02-215">구현 시 XML 요소를 사용하여 쓰는 경우 개체의 콘텐츠를 쓰기 전에 특성을 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-215">If the implementation writes using XML elements, attributes can be inserted before writing the contents of the object.</span></span> <span data-ttu-id="a5a02-216">이 세 가지 메서드는 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 메서드의 가상 구현에서도 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-216">The three methods are also called by the virtual implementation of the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public abstract void WriteObjectContent (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObjectContent(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteObjectContent (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteObjectContent(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a5a02-217">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-217">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a5a02-218">쓸 콘텐츠를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-218">The object that contains the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-219">지정된 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 XML 문서 또는 스트림에 개체의 콘텐츠만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-219">Writes only the content of the object to the XML document or stream using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-220">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-220">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-221">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-221">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-222">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-222">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-223">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-223">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-224">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-224">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObjectContent">
      <MemberSignature Language="C#" Value="public virtual void WriteObjectContent (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObjectContent(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteObjectContent (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteObjectContent(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a5a02-225">XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-225">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document or stream.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a5a02-226">쓸 콘텐츠를 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-226">The object that contains the content to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-227">지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서 또는 스트림에 개체의 콘텐츠만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-227">Writes only the content of the object to the XML document or stream with the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-228">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-228">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-229">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-229">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-230">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-230">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-231">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-231">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-232">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-232">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a5a02-233">XML 문서 또는 스트림에 시작 XML 요소만 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-233">Writes only the starting XML element to an XML document or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5a02-234"><xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> 메서드를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-234">The <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject%2A>, <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent%2A>, and <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject%2A> methods must be implemented.</span></span> <span data-ttu-id="a5a02-235">전체 serialization을 쓰기 위해 시작 쓰기, 콘텐츠 쓰기, 끝 쓰기 등의 패턴을 사용한 세 가지 메서드가 연속으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-235">The three methods are used in succession to write the complete serialization using the pattern: write start, write content, and write end.</span></span> <span data-ttu-id="a5a02-236">구현 시 XML 요소를 사용하여 쓰는 경우 개체의 콘텐츠를 쓰기 전에 특성을 삽입할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-236">If the implementation writes using XML elements, attributes can be inserted before writing the contents of the object.</span></span> <span data-ttu-id="a5a02-237">이 세 가지 메서드는 <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> 메서드의 가상 구현에서도 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="a5a02-237">The three methods are also called by the virtual implementation of the <xref:System.Runtime.Serialization.XmlObjectSerializer.WriteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public abstract void WriteStartObject (System.Xml.XmlDictionaryWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartObject(class System.Xml.XmlDictionaryWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartObject (writer As XmlDictionaryWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartObject(System::Xml::XmlDictionaryWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a5a02-238">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-238">An <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the XML document.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a5a02-239">serialize할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-239">The object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-240">지정한 <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 열기 XML 요소로 개체 데이터의 시작을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-240">Writes the start of the object's data as an opening XML element using the specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-241">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-241">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-242">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-242">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-243">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-243">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-244">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-244">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-245">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-245">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public virtual void WriteStartObject (System.Xml.XmlWriter writer, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartObject(class System.Xml.XmlWriter writer, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStartObject (writer As XmlWriter, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStartObject(System::Xml::XmlWriter ^ writer, System::Object ^ graph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a5a02-246">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-246">An <see cref="T:System.Xml.XmlWriter" /> used to write the XML document.</span>
          </span>
        </param>
        <param name="graph">
          <span data-ttu-id="a5a02-247">serialize할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-247">The object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5a02-248">지정한 <see cref="T:System.Xml.XmlWriter" />를 사용하여 열기 XML 요소로 개체 데이터의 시작을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-248">Writes the start of the object's data as an opening XML element using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">
          <span data-ttu-id="a5a02-249">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-249">the type being serialized does not conform to data contract rules.</span>
          </span>
          <span data-ttu-id="a5a02-250">
            <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-250">For example, the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute has not been applied to the type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="a5a02-251">serialize하고 있는 인스턴스에 문제가 있는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-251">there is a problem with the instance being serialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <span data-ttu-id="a5a02-252">serialize될 개체가 최대 수를 초과한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-252">the maximum number of objects to serialize has been exceeded.</span>
          </span>
          <span data-ttu-id="a5a02-253">
            <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5a02-253">Check the <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>