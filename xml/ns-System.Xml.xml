<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.Xml.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef18645f4356b45fc380f4d1fd7b6734a2bfd0b92e7cb9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f4356b45fc380f4d1fd7b6734a2bfd0b92e7cb9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see cref="N:System.Xml" /&gt;</ph> namespace provides standards-based support for processing XML.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Xml" /&gt;</ph> 네임스페이스는 XML 처리를 위한 표준 기반 지원을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Supported standards</source>
          <target state="translated">지원 되는 표준</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml&gt;</ph> namespace supports these standards:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml&gt;</ph> 네임 스페이스에는 이러한 표준을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML 1.0, including DTD support: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/2006/REC-xml-20060816/</ph><ept id="p1">](http://www.w3.org/TR/2006/REC-xml-20060816/)</ept></source>
          <target state="translated">DTD 지원을 비롯 하 여 XML 1.0: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/2006/REC-xml-20060816/</ph><ept id="p1">](http://www.w3.org/TR/2006/REC-xml-20060816/)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML namespaces, both stream-level and DOM: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/REC-xml-names/</ph><ept id="p1">](http://www.w3.org/TR/REC-xml-names/)</ept></source>
          <target state="translated">XML 네임 스페이스 모두 스트림 수준 및 DOM: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/REC-xml-names/</ph><ept id="p1">](http://www.w3.org/TR/REC-xml-names/)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>XML schemas: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/2001/XMLSchema</ph><ept id="p1">](http://www.w3.org/2001/XMLSchema)</ept></source>
          <target state="translated">XML 스키마: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/2001/XMLSchema</ph><ept id="p1">](http://www.w3.org/2001/XMLSchema)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>XPath expressions: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/xpath</ph><ept id="p1">](http://www.w3.org/TR/xpath)</ept></source>
          <target state="translated">XPath 식: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/xpath</ph><ept id="p1">](http://www.w3.org/TR/xpath)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT transformations: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/xslt</ph><ept id="p1">](http://www.w3.org/TR/xslt)</ept></source>
          <target state="translated">XSLT 변환: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/xslt</ph><ept id="p1">](http://www.w3.org/TR/xslt)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>DOM Level 1 Core: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/REC-DOM-Level-1/</ph><ept id="p1">](http://www.w3.org/TR/REC-DOM-Level-1/)</ept></source>
          <target state="translated">DOM Level 1 Core: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/REC-DOM-Level-1/</ph><ept id="p1">](http://www.w3.org/TR/REC-DOM-Level-1/)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>DOM Level 2 Core: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/DOM-Level-2/</ph><ept id="p1">](http://www.w3.org/TR/DOM-Level-2/)</ept></source>
          <target state="translated">DOM 수준 2 코어: <bpt id="p1">[</bpt><ph id="ph1">http://www.w3.org/TR/DOM-Level-2/</ph><ept id="p1">](http://www.w3.org/TR/DOM-Level-2/)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the section <bpt id="p1">[</bpt>Differences from the W3C specs<ept id="p1">](#diff)</ept> for two cases in which the XML classes differ from the W3C recommendations.</source>
          <target state="translated">섹션을 참조 <bpt id="p1">[</bpt>W3C 사양 으로부터<ept id="p1">](#diff)</ept> XML 클래스는 W3C 권장 사항에서 서로 다른 두 가지 경우에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Related namespaces</source>
          <target state="translated">관련된 네임 스페이스</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework also provides other namespaces for XML-related operations.</source>
          <target state="translated">또한.NET Framework는 XML 관련 작업에 다른 네임 스페이스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list, descriptions, and links, see the <bpt id="p1">[</bpt>System.Xml Namespaces<ept id="p1">](http://msdn.microsoft.com/library/gg145036.aspx)</ept> webpage.</source>
          <target state="translated">목록, 설명 및 링크에 대 한 참조는 <bpt id="p1">[</bpt>System.Xml 네임 스페이스<ept id="p1">](http://msdn.microsoft.com/library/gg145036.aspx)</ept> 웹 페이지입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Processing XML asynchronously</source>
          <target state="translated">XML을 비동기적으로 처리</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlWriter?displayProperty=nameWithType&gt;</ph> classes include a number of asynchronous methods that are based on the .</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.XmlWriter?displayProperty=nameWithType&gt;</ph> 클래스에는 다양 한 기반으로 하는 비동기 메서드는 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods can be identified by the string "Async" at the end of their names.</source>
          <target state="translated">이러한 메서드 이름의 끝에 "Async" 문자열에 의해 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>With these methods, you can write asynchronous code that's similar to your synchronous code, and you can migrate your existing synchronous code to asynchronous code easily.</source>
          <target state="translated">이러한 메서드를 통해 동기 코드와 비슷한 비동기 코드를 작성할 수 있으며 기존 동기 코드 비동기 코드를 쉽게 마이그레이션할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the asynchronous methods in apps where there is significant network stream latency.</source>
          <target state="translated">응용 프로그램에서 비동기 메서드를 사용 하 여 네트워크 스트림을 대기 시간이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid using the asynchronous APIs for memory stream or local file stream read/write operations.</source>
          <target state="translated">메모리 스트림 또는 로컬 파일 스트림 읽기/쓰기 작업에 대 한 비동기 Api를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input stream, <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, and <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> should support asynchronous operations as well.</source>
          <target state="translated">입력된 스트림의 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, 및 <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> 도 비동기 작업을 지원 해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, threads will still be blocked by I/O operations.</source>
          <target state="translated">그렇지 않으면 스레드가 여전히 I/O 작업에 의해 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>We don't recommend mixing synchronous and asynchronous function calls, because you might forget to use the <ph id="ph1">`await`</ph> keyword or use a synchronous API where an asynchronous one is necessary.</source>
          <target state="translated">사용 하지 때문에 동기 및 비동기 함수 호출을 혼합 권장 하지는 <ph id="ph1">`await`</ph> 키워드 또는 비동기 1이 필요한 동기 API 사용 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.Async%2A?displayProperty=nameWithType&gt;</ph> flag to <ph id="ph3">`true`</ph> if you don't intend to use an asynchronous method.</source>
          <target state="translated">설정 하지 않으면는 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A?displayProperty=nameWithType&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.Async%2A?displayProperty=nameWithType&gt;</ph> 플래그를 <ph id="ph3">`true`</ph> 비동기 메서드를 사용 하지 않으려는 경우.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you forget to specify the <ph id="ph1">`await`</ph> keyword when you call an asynchronous method, the results are non-deterministic: You might receive the result you expected or an exception.</source>
          <target state="translated">지정 하지 않으면는 <ph id="ph1">`await`</ph> 키워드는 비동기 메서드를 호출 하는 경우 결과 명확 하지 않은: 예상 결과 나 예외가 표시 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object is reading a large text node, it might cache only a partial text value and return the text node, so retrieving the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Value%2A?displayProperty=nameWithType&gt;</ph> property might be blocked by an I/O operation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체 큰 텍스트 노드를 읽고, 부분 텍스트 값만을 캐시 하 고 있으므로 검색 하 고 텍스트 노드를 반환 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Value%2A?displayProperty=nameWithType&gt;</ph> 속성 I/O 연산에 의해 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetValueAsync%2A&gt;</ph> method to get the text value in asynchronous mode, or use the <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadValueChunkAsync%2A&gt;</ph> method to read a large text block in chunks.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetValueAsync%2A&gt;</ph> 비동기 모드에서 텍스트 값을 가져오거나 사용 하 여 메서드는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadValueChunkAsync%2A&gt;</ph> 청크에서 큰 텍스트를 읽을 수는 메서드를 차단 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> object, call the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.FlushAsync%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> to avoid blocking an I/O operation.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> 개체를 호출 하는 <ph id="ph2">&lt;xref:System.Xml.XmlWriter.FlushAsync%2A&gt;</ph> 메서드 호출 하기 전에 <ph id="ph3">&lt;xref:System.Xml.XmlWriter.Close%2A&gt;</ph> I/O 작업을 차단 하지 않기 위해 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Differences from the W3C specs</source>
          <target state="translated">W3C 사양과의 차이점</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>In two cases that involve constraints on model group schema components, the <ph id="ph1">&lt;xref:System.Xml&gt;</ph> namespace differs from the W3C recommendations.</source>
          <target state="translated">모델 그룹 스키마 구성 요소에 대 한 제약 조건을 포함 하는 두 가지 경우에는 <ph id="ph1">&lt;xref:System.Xml&gt;</ph> W3C 권장 사항에서와 다른 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Consistency in element declarations:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>요소 선언에 일관성:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some cases, when substitution groups are used, the <ph id="ph1">&lt;xref:System.Xml&gt;</ph> implementation does not satisfy the "Schema Component Constraint: Element Declarations Consistent," which is described in the <bpt id="p1">[</bpt>Constraints on Model Group Schema Components<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=137029)</ept> section of the W3C spec.</source>
          <target state="translated">대체 그룹에 사용 되는 경우 일부 경우에는 <ph id="ph1">&lt;xref:System.Xml&gt;</ph> 는 "스키마 구성 요소 제약 조건:: 요소 선언 일치,"에 설명 된 구현에 맞지 않는 <bpt id="p1">[</bpt>모델 그룹 스키마 구성 요소에 대 한 제약 조건 <ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=137029)</ept> W3C 사양 섹션.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following schema includes elements that have the same name but different types in the same content model, and substitution groups are used.</source>
          <target state="translated">예를 들어 다음 스키마에 같은 이름을 가진 요소가 포함 되어 있지만 동일한 콘텐츠 모델 및 대체 그룹에서 서로 다른 형식이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This should cause an error, but <ph id="ph1">&lt;xref:System.Xml&gt;</ph> compiles and validates the schema without errors.</source>
          <target state="translated">이로 인해 오류가 발생해야 하지만 <ph id="ph1">&lt;xref:System.Xml&gt;</ph>은 오류 없이 스키마의 컴파일과 유효성 검사를 수행합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this schema, type <ph id="ph1">`t3`</ph> contains a sequence of elements.</source>
          <target state="translated">이 스키마에서 <ph id="ph1">`t3`</ph> 형식에는 요소의 시퀀스가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of the substitution, the reference to element <ph id="ph1">`e1`</ph> from the sequence can result either in element <ph id="ph2">`e1`</ph> of type <ph id="ph3">`t1`</ph> or in element <ph id="ph4">`e2`</ph> of type <ph id="ph5">`t2`</ph>.</source>
          <target state="translated">대체 때문에 시퀀스에서 <ph id="ph1">`e1`</ph> 요소를 참조하면 <ph id="ph2">`e1`</ph> 형식의 <ph id="ph3">`t1`</ph> 요소나 <ph id="ph4">`e2`</ph> 형식의 <ph id="ph5">`t2`</ph> 요소가 생성될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The latter case would result in a sequence of two <ph id="ph1">`e2`</ph> elements, where one is of type <ph id="ph2">`t2`</ph> and the other is of type <ph id="ph3">`xs:int`</ph>.</source>
          <target state="translated">후자의 경우는 두 개의 시퀀스를 유발 <ph id="ph1">`e2`</ph> 형식의 하나인 요소 <ph id="ph2">`t2`</ph> 이 고 다른 형식의 <ph id="ph3">`xs:int`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Unique particle attribution:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Unique particle attribution:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Under the following conditions, the <ph id="ph1">&lt;xref:System.Xml&gt;</ph> implementation does not satisfy the "Schema Component Constraint: Unique Particle Attribution," which is described in the <bpt id="p1">[</bpt>Constraints on Model Group Schema Components<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=137029)</ept> section of the W3C spec.</source>
          <target state="translated">다음과 같은 경우에는 <ph id="ph1">&lt;xref:System.Xml&gt;</ph> 구현에는 "스키마 구성 요소 제약 조건:: Unique Particle Attribution,"에 설명 된 충족 하지 않습니다는 <bpt id="p1">[</bpt>모델 그룹 스키마 구성 요소의<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=137029)</ept> 섹션 W3C 사양입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of the elements in the group references another element.</source>
          <target state="translated">그룹의 요소 중 하나가 다른 요소를 참조합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The referenced element is a head element of a substitution group.</source>
          <target state="translated">참조된 요소가 대체 그룹의 head 요소입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The substitution group contains an element that has the same name as one of the elements in the group.</source>
          <target state="translated">대체 그룹에는 그룹의 요소 중 하 나와 동일한 이름이 있는 요소가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cardinality of the element that references the substitution group head element and the element with the same name as a substitution group element is not fixed (minOccurs &lt; maxOccurs).</source>
          <target state="translated">대체 그룹 요소를 수정 하지 않으면 대체 그룹 헤드 요소와 동일한 이름 가진 요소를 참조 하는 요소의 카디널리티 (minOccurs &lt; maxOccurs).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The definition of the element that references the substitution group precedes the definition of the element with the same name as a substitution group element.</source>
          <target state="translated">대체 그룹을 참조 하는 요소 정의 대체 그룹 요소와 동일한 이름 가진 요소를 정의 앞에 붙습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the schema below the content model is ambiguous and should cause a compilation error, but <ph id="ph1">&lt;xref:System.Xml&gt;</ph> compiles the schema without errors.</source>
          <target state="translated">예를 들어, 아래의 스키마에서 콘텐츠 모델은 모호하며 컴파일 오류를 발생시켜야 하지만 <ph id="ph1">&lt;xref:System.Xml&gt;</ph>은 오류 없이 스키마를 컴파일합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you try to validate the following XML against the schema above, the validation will fail with the following message: "The element 'e3' has invalid child element 'e2'." and an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> exception will be thrown.</source>
          <target state="translated">위의 스키마에 대해 다음과 같은 XML의 유효성을 검사 하려고 하면 다음 메시지와 함께 유효성 검사 실패 합니다. "요소 'e 3'에 잘못 된 자식 요소 'e 2'."와 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationException&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>To work around this problem, you can swap element declarations in the XSD document.</source>
          <target state="translated">이 문제를 해결 하려면 XSD 문서에 요소 선언을 바꿀 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
          <target state="translated">예:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>becomes this:</source>
          <target state="translated">다음과 같이 바꿉니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Here's another example of the same issue:</source>
          <target state="translated">같은 문제가 있는 또 다른 예는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you try to validate the following XML against the schema above, the validation will fail with the following exception: "Unhandled Exception: System.Xml.Schema.XmlSchemaValidationException: The 'e2' el element is invalid - The value 'abc' is invalid according to its datatype '<ph id="ph1">http://www.w3.org/2001/XMLSchema:int</ph>' - The string 'abc' is not a valid Int32 value."\</source>
          <target state="translated">위의 스키마에 대해 다음과 같은 XML의 유효성을 검사 하려고 하면 예외가 발생 하 여 유효성 검사 실패 합니다. "처리 되지 않은 예외: System.Xml.Schema.XmlSchemaValidationException: 'e2' el 요소가 올바르지 않음-'abc' 값이 올바르지 않습니다 데이터 타입 '<ph id="ph1">http://www.w3.org/2001/XMLSchema:int</ph>'-'abc' 문자열이 올바른 Int32 값이 아닙니다. " \</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security considerations</source>
          <target state="translated">보안 고려 사항</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types and members in the <ph id="ph1">&lt;xref:System.Xml&gt;</ph> namespace rely on the .</source>
          <target state="translated">형식과 멤버는 <ph id="ph1">&lt;xref:System.Xml&gt;</ph> 네임 스페이스에 의존는 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following sections discuss security issues that are specific to XML technologies.</source>
          <target state="translated">다음 섹션에서는 XML 기술에만 적용 되는 보안 문제에 설명 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see the specific classes and members mentioned, and visit the <bpt id="p1">[</bpt>XML Developer Center<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=42458)</ept> for technical information, downloads, newsgroups, and other resources for XML developers.</source>
          <target state="translated">자세한 내용은 특정 클래스와 멤버 언급 했 듯이 참조 및 방문는 <bpt id="p1">[</bpt>XML 개발자 센터<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=42458)</ept> 기술 정보, 다운로드, 뉴스 그룹 및 XML 개발자를 위한 기타 리소스에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also note that when you use the <ph id="ph1">&lt;xref:System.Xml&gt;</ph> types and members, if the XML contains data that has potential privacy implications, you need to implement your app in a way that respects your end users' privacy.</source>
          <target state="translated">또한 사용 하는 경우 유의 <ph id="ph1">&lt;xref:System.Xml&gt;</ph> 는 최종 사용자의 개인 정보를 존중 하는 방식으로 응용 프로그램을 구현 해야 하는 형식 및 멤버를 XML에 개인 데이터가 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>External access<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>외부 액세스<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Several XML technologies have the ability to retrieve other documents during processing.</source>
          <target state="translated">여러 XML 기술은 처리 중 다른 문서를 검색하는 기능을 갖추고 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a document type definition (DTD) can reside in the document being parsed.</source>
          <target state="translated">예를 들어, 구문 분석 중인 문서에 DTD(문서 종류 정의)가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DTD can also live in an external document that is referenced by the document being parsed.</source>
          <target state="translated">또한 구문 분석 중인 문서에 참조된 외부 문서에 DTD가 있을 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XML Schema definition language (XSD) and XSLT technologies also have the ability to include information from other files.</source>
          <target state="translated">XSD(XML 스키마 정의 언어) 및 XSLT 기술에도 다른 파일의 정보를 포함할 수 있는 기능이 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>These external resources can present some security concerns.</source>
          <target state="translated">이러한 외부 리소스에는 몇 가지 보안 문제가 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you'll want to ensure that your app retrieves files only from trusted sites, and that the file it retrieves doesn't contain malicious data.</source>
          <target state="translated">예를 들어 앱만 신뢰할 수 있는 사이트에서에서 파일을 검색 하 고 악의적인 데이터가 포함 되지 않은 파일 검색 되는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to load XML documents and to resolve external resources such as entities, DTDs, or schemas, and import or include directives.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 클래스는 XML 문서를 로드 하 및 엔터티, Dtd 또는 스키마와 같은 외부 리소스를 확인 하 고 가져오기 또는 지시문을 포함 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this class and specify the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> object to use.</source>
          <target state="translated">이 클래스를 재정의 하 고 지정할 수는 <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class if you need to open a resource that you do not control, or that is untrusted.</source>
          <target state="translated">사용자가 제어하지 않거나 신뢰할 수 없는 리소스를 열어야 하는 경우에는 <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 클래스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> wraps an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> and allows you to restrict the resources that the underlying <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> has access to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>는 <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>를 래핑하며 원본으로 사용하는 <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>가 액세스하는 리소스를 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Denial of service<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>서비스 거부<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following scenarios are considered to be less vulnerable to denial of service attacks because the <ph id="ph1">&lt;xref:System.Xml&gt;</ph> classes provide a means of protection from such attacks.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml&gt;</ph> 클래스를 사용하여 서비스 거부 공격으로부터 보호할 수 있으므로 다음 시나리오는 서비스 거부 공격에 대해 덜 취약한 것으로 간주됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing text XML data.</source>
          <target state="translated">텍스트 XML 데이터를 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing binary XML data if the binary XML data was generated by Microsoft SQL Server.</source>
          <target state="translated">이진 XML 데이터는 Microsoft SQL Server에서 생성 된 경우 이진 XML 데이터를 구문 분석 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Writing XML documents and fragments from data sources to the file system, streams, a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph>, or a <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
          <target state="translated">데이터 소스에서 파일 시스템, 스트림, <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>로 XML 문서 및 조각을 씁니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Loading documents into the Document Object Model (DOM) object if you are using an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object and <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> set to <ph id="ph3">&lt;xref:System.Xml.DtdProcessing.Prohibit&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체 및 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph>로 설정된 <ph id="ph3">&lt;xref:System.Xml.DtdProcessing.Prohibit&gt;</ph>를 사용하는 경우 DOM(문서 개체 모델) 개체에 문서를 로드합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Navigating the DOM object.</source>
          <target state="translated">DOM 개체를 탐색합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following scenarios are not recommended if you are concerned about denial of service attacks, or if you are working in an untrusted environment.</source>
          <target state="translated">서비스 거부 공격을 염려하거나 신뢰할 수 없는 환경에서 작업하는 경우 다음 시나리오를 사용하지 않는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>DTD processing.</source>
          <target state="translated">DTD를 처리합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Schema processing.</source>
          <target state="translated">스키마를 처리합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes adding an untrusted schema to the schema collection, compiling an untrusted schema, and validating by using an untrusted schema.</source>
          <target state="translated">여기에는 신뢰할 수 없는 스키마를 스키마 컬렉션에 추가하고 신뢰할 수 없는 스키마를 컴파일하며 신뢰할 수 없는 스키마를 사용하여 유효성을 검사하는 작업이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT processing.</source>
          <target state="translated">XSLT를 처리합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing any arbitrary stream of user supplied binary XML data.</source>
          <target state="translated">사용자가 제공한 이진 XML 데이터에서 임의의 스트림을 구문 분석합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>DOM operations such as querying, editing, moving sub-trees between documents, and saving DOM objects.</source>
          <target state="translated">하위 트리 쿼리, 편집, 문서 간 이동 및 DOM 개체 저장 등의 DOM 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are concerned about denial of service issues or if you are dealing with untrusted sources, do not enable DTD processing.</source>
          <target state="translated">서비스 거부 문제가 염려 하거나 신뢰할 수 없는 소스 처리 하는 경우 DTD 처리를 사용 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is disabled by default on <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects that the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method creates.</source>
          <target state="translated">기본적으로 해제 되어이 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 메서드를 만듭니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> allows DTD processing by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>에서는 기본적으로 DTD 처리를 허용합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.DtdProcessing%2A?displayProperty=nameWithType&gt;</ph> property to disable this feature.</source>
          <target state="translated">이 기능을 비활성화하려면 <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.DtdProcessing%2A?displayProperty=nameWithType&gt;</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have DTD processing enabled, you can use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class to restrict the resources that the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> can access.</source>
          <target state="translated">사용 하도록 설정 하는 DTD 처리를 사용 하는 경우 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 리소스를 제한 하는 클래스는는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also design your app so that the XML processing is memory and time constrained.</source>
          <target state="translated">또한 XML 처리에 필요한 메모리 및 시간을 제한할 수 있도록 앱을 디자인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can configure timeout limits in your ASP.NET app.</source>
          <target state="translated">예를 들어 ASP.NET 응용 프로그램에서 시간 초과 한도 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Processing considerations<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>처리 고려 사항<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because XML documents can include references to other files, it is difficult to determine how much processing power is required to parse an XML document.</source>
          <target state="translated">XML 문서에 다른 파일에 대한 참조를 삽입할 수 있으므로 XML 문서를 구문 분석하는 데 필요한 처리 능력을 결정하기가 어렵습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, XML documents can include a DTD.</source>
          <target state="translated">예를 들어, XML 문서에 DTD가 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the DTD contains nested entities or complex content models, it could take an excessive amount of time to parse the document.</source>
          <target state="translated">DTD에 중첩된 엔터티 또는 복합 내용 모델이 포함된 경우 문서를 구문 분석하는 데 엄청난 시간일 걸릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, you can limit the size of the document that can be parsed by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>를 사용할 때 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A&gt;</ph> 속성을 설정하여 구문 분석될 수 있는 문서 크기를 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can limit the number of characters that result from expanding entities by setting the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A&gt;</ph> 속성을 설정하여 확장 엔터티의 결과인 문자 수를 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the appropriate reference topics for examples of setting these properties.</source>
          <target state="translated">이러한 속성 설정 예제를 보려면 적절한 참조 항목을 참고하십시오.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSD and XSLT technologies have additional capabilities that can affect processing performance.</source>
          <target state="translated">XSD 및 XSLT 기술에는 처리 성능에 영향을 줄 수 있는 추가 기능이 있습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, it is possible to construct an XML schema that requires a substantial amount of time to process when evaluated over a relatively small document.</source>
          <target state="translated">예를 들어, 상대적으로 작은 문서에서 평가되는 경우 처리하는 데 많은 시간이 필요한 XML 스키마를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also possible to embed script blocks within an XSLT style sheet.</source>
          <target state="translated">또한 XSLT 스타일시트에 스크립트 블록을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both cases pose a potential security threat to your app.</source>
          <target state="translated">두 경우 모두 응용 프로그램에 잠재적 보안 위협을 발생 시킵니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating an app that uses the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class, you should be aware of the following items and their implications:</source>
          <target state="translated">사용 하는 응용 프로그램을 만드는 경우는 <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> 클래스의 다음 항목 및 그 의미에 대해 알고 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT scripting is disabled by default.</source>
          <target state="translated">XSLT 스크립트는 기본적으로 비활성화되어 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</source>
          <target state="translated">XSLT 스크립트는 스크립트 지원이 필요하거나 완전히 신뢰할 수 있는 환경에서 작업하는 경우에만 활성화해야 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSLT <ph id="ph1">`document()`</ph> function is disabled by default.</source>
          <target state="translated">XSLT <ph id="ph1">`document()`</ph> 함수는 기본적으로 비활성화되어 있습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you enable the <ph id="ph1">`document()`</ph> function, restrict the resources that can be accessed by passing an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`document()`</ph> 함수를 활성화하는 경우 <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 개체를 <ph id="ph3">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> 메서드에 전달하여 액세스할 수 있는 리소스를 제한합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Extension objects are enabled by default.</source>
          <target state="translated">확장명 개체는 기본적으로 활성화되어 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> object that contains extension objects is passed to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method, the extension objects are used.</source>
          <target state="translated">확장 개체가 포함된 <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> 개체를 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> 메서드에 전달하면 이 확장 개체가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT style sheets can include references to other files and embedded script blocks.</source>
          <target state="translated">XSLT 스타일시트에는 다른 파일에 대한 참조 및 포함 스크립트 블록이 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>A malicious user can exploit this by supplying you with data or style sheets that, when executed, can cause your system to process until the computer runs low on resources.</source>
          <target state="translated">악의적인 사용자는 이 스타일시트를 실행할 경우 컴퓨터 리소스가 부족할 때까지 시스템에서 처리하게 만들 수 있는 데이터 또는 스타일시트를 제공하여 악용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT apps that run in a mixed trust environment can result in style sheet spoofing.</source>
          <target state="translated">혼합된 신뢰 환경에서 실행 되는 XSLT 앱 스타일 시트가 스푸핑될 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method and executes the transformation.</source>
          <target state="translated">예를 들어, 악의적인 사용자는 해로운 스타일시트가 포함된 개체를 로드한 후 <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> 메서드를 호출하고 변환을 실행할 다른 사용자에게 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>These security issues can be mitigated by not enabling scripting or the <ph id="ph1">`document()`</ph> function unless the style sheet comes from a trusted source, and by not accepting <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> objects, XSLT style sheets, or XML source data from an untrusted source.</source>
          <target state="translated">신뢰할 수 있는 소스에서 스타일시트를 가져오지 않은 경우 스크립트 또는 <ph id="ph1">`document()`</ph> 함수를 비활성화하여 이러한 보안 문제를 완화하거나 신뢰할 수 없는 소스로부터 <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> 개체, XSLT 스타일시트 또는 XML 소스 데이터를 차단하여 완화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Exception handling<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예외 처리<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions thrown by lower level components can disclose path information that you do not want exposed to the app.</source>
          <target state="translated">하위 수준의 구성 요소에서 발생 한 예외는 응용 프로그램에 노출 하지 않을 경로 정보를 공개할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your apps must catch exceptions and process them appropriately.</source>
          <target state="translated">응용 프로그램 예외를 catch 하 고 적절 하 게 처리 해야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>