<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c5ac665d7a09a64c7d809537c167f4981657b27" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30365787" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">비교할 개체의 형식입니다.</typeparam>
    <summary>같음에 대해 개체 비교를 지원하는 메서드를 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 인터페이스는 컬렉션에 대 한 사용자 지정 된 같음 비교를 구현할을 수 있습니다. 즉, 사용자 고유의 같음 형식에 대 한 정의 만들 수 있습니다 `T`를 허용 하는 컬렉션 형식으로 사용 하도록이 정의 지정 하 고는 <xref:System.Collections.Generic.IEqualityComparer%601> 제네릭 인터페이스입니다. .NET framework의 생성자는 <xref:System.Collections.Generic.Dictionary%602> 제네릭 컬렉션 형식에는이 인터페이스 허용 합니다.  
  
 이 인터페이스의 기본 구현에서 제공 되는 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> 속성은 <xref:System.Collections.Generic.EqualityComparer%601> 제네릭 클래스입니다. <xref:System.StringComparer> 클래스 구현 <xref:System.Collections.Generic.IEqualityComparer%601> 형식의 <xref:System.String>합니다.  
  
 이 인터페이스는 같음 비교만 지원합니다. 정렬 및 순서 지정에 대 한 비교를 사용자 지정에서 제공 되는 <xref:System.Collections.Generic.IComparer%601> 제네릭 인터페이스입니다.  
  
 파생 되는 것이 좋습니다는 <xref:System.Collections.Generic.EqualityComparer%601> 구현 하는 대신 클래스는 <xref:System.Collections.Generic.IEqualityComparer%601> 있기 때문는 <xref:System.Collections.Generic.EqualityComparer%601> 사용 하 여 같음을 테스트 클래스는 <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> 메서드 대신는 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 메서드. 이 일치는 `Contains`, `IndexOf`, `LastIndexOf`, 및 `Remove` 의 메서드는 <xref:System.Collections.Generic.Dictionary%602> 클래스 및 기타 제네릭 컬렉션입니다.  
  
   
  
## Examples  
 다음 예제에서는 사용자 지정 추가 `Box` 사전 컬렉션 개체입니다. `Box` 개체 차원을 동일한 경우 같은 것으로 간주 됩니다.  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">비교할 <c>T</c> 형식의 첫 번째 개체입니다.</param>
        <param name="y">비교할 <c>T</c> 형식의 두 번째 개체입니다.</param>
        <summary>지정한 개체가 같은지를 확인합니다.</summary>
        <returns>
          지정한 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식에 대 한 사용자 지정 된 같음 비교를 제공 하려면이 메서드를 구현 `T`합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>구현 되는 경우를 확인 하는 데 필요한는 <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> 메서드 반환 <see langword="true" /> 두 개체에 대 한 <c>x</c> 및 <c>y</c>에서 반환 된 값은 <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> 에대한메서드<c>x</c> 에 대해 반환 된 값과 같아야 <c>y</c>합니다.  
  
 <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> 메서드는 재귀 대칭, 및 전이적입니다. 즉, 반환 <see langword="true" /> 자신과; 개체를 비교 하는 데 사용 하는 경우 <see langword="true" /> 두 개체에 대 한 <c>x</c> 및 <c>y</c> 경우 <see langword="true" /> 에 대 한 <c>y</c> 및 <c>x</c>; 및 <see langword="true" /> 두 개체에 대 한 <c>x</c> 및 <c>z</c> 경우 <see langword="true" /> 에 대 한 <c>x</c> 및 <c>y</c> 그리고 <see langword="true" /> 에 대 한 <c>y</c> 및 <c>z</c>합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">해시 코드가 반환될 <see cref="T:System.Object" />입니다.</param>
        <summary>지정한 개체의 해시 코드를 반환합니다.</summary>
        <returns>지정한 개체의 해시 코드입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식에 대 한 사용자 지정 된 해시 코드를 제공 하려면이 메서드를 구현 `T`, 해당 사용자 지정된 같음 비교에서 제공 하는 <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 형식이 참조 형식이고 <paramref name="obj" />가 <see langword="null" />인 경우</exception>
        <block subset="none" type="overrides">
          <para>구현 되는 경우를 확인 하는 데 필요한는 <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> 메서드 반환 <see langword="true" /> 두 개체에 대 한 <c>x</c> 및 <c>y</c>에서 반환 된 값은 <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> 에대한메서드<c>x</c> 에 대해 반환 된 값과 같아야 <c>y</c>합니다.</para>
        </block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>