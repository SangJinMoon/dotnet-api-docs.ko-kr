<Type Name="IReadOnlyDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1085a08e24f5f95c18921ba74a94f939942bf27" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IReadOnlyDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReadOnlyDictionary`2&lt;TKey, TValue&gt; implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IReadOnlyDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IReadOnlyDictionary(Of TKey, TValue)&#xA;Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IReadOnlyDictionary : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="b9770-101">읽기 전용 사전에 있는 키의 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9770-101">The type of keys in the read-only dictionary.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="b9770-102">읽기 전용 사전에 있는 값의 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9770-102">The type of values in the read-only dictionary.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b9770-103">키/값 쌍의 읽기 전용 제네릭 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9770-103">Represents a generic read-only collection of key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9770-104">각 요소는에 저장 된 키/값 쌍을 <xref:System.Collections.Generic.KeyValuePair%602> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-104">Each element is a key/value pair that is stored in a <xref:System.Collections.Generic.KeyValuePair%602> object.</span></span>  
  
 <span data-ttu-id="b9770-105">각 쌍에는 고유 키를 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-105">Each pair must have a unique key.</span></span> <span data-ttu-id="b9770-106">키를 지정할 수 있습니다 수 있는지는 여부에 따라 다양 한 구현이 수 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-106">Implementations can vary in whether they allow you to specify a key that is `null`.</span></span> <span data-ttu-id="b9770-107">값일 수 `null` 및 고유할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-107">The value can be `null` and does not have to be unique.</span></span> <span data-ttu-id="b9770-108"><xref:System.Collections.Generic.IDictionary%602> 인터페이스를 사용 하면 포함 된 키와 값을 열거할 수 있지만 특정 정렬 순서를 의미 하지는 않습니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-108">The <xref:System.Collections.Generic.IDictionary%602> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="b9770-109">`foreach` C# 언어의 (`For Each` Visual Basic의 `for each` c + +에서) 컬렉션에 있는 각 요소의 형식이 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-109">The `foreach` statement of the C# language (`For Each` in Visual Basic, `for each` in C++) requires the type of each element in the collection.</span></span> <span data-ttu-id="b9770-110">때문에 각 요소의 <xref:System.Collections.Generic.IReadOnlyDictionary%602> 인터페이스는 키/값 쌍, 요소 형식은 아닙니다 키의 유형 값의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-110">Because each element of the <xref:System.Collections.Generic.IReadOnlyDictionary%602> interface is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="b9770-111">요소 형식이 대신 <xref:System.Collections.Generic.KeyValuePair%602>다음 예제와 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-111">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>, as the following example illustrates.</span></span>  
  
 [!code-cpp[Generic.IDictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.IDictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.IDictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.IDictionary/CS/source2.cs#11)]
 [!code-vb[Generic.IDictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.IDictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="b9770-112">`foreach` 문을 열거자에 대 한 래퍼로 이며 컬렉션에 쓰지 않습니다. 컬렉션에서 읽기만 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-112">The `foreach` statement is a wrapper around the enumerator; it allows only reading from the collection, not writing to the collection.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsKey(TKey key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="b9770-113">찾을 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-113">The key to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9770-114">지정된 키를 가진 요소가 읽기 전용 사전에 포함되어 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-114">Determines whether the read-only dictionary contains an element that has the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9770-115">읽기 전용 사전에 지정된 키를 가진 요소가 포함되어 있는 경우 <see langword="true" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-115">
              <see langword="true" /> if the read-only dictionary contains an element that has the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9770-116">개체의 동일성을 결정 하는 방법에 따라 다양 한 구현이 수 있습니다. 클래스를 구현 하는 예를 들어 <xref:System.Collections.Generic.IReadOnlyDictionary%602> 사용할 수는 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 속성 또는를 구현할 수는 <xref:System.Collections.Generic.IComparer%601> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b9770-116">Implementations can vary in how they determine the equality of objects; for example, the class that implements <xref:System.Collections.Generic.IReadOnlyDictionary%602> might use the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property, or it might implement the <xref:System.Collections.Generic.IComparer%601> method.</span></span>  
  
 <span data-ttu-id="b9770-117">있습니다 수 있는지 여부에 따라 다양 한 구현이 `key` 되도록 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-117">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9770-118">
            <paramref name="key" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-118">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="b9770-119">찾을 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-119">The key to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9770-120">읽기 전용 사전에 지정된 키를 가진 요소를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-120">Gets the element that has the specified key in the read-only dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9770-121">읽기 전용 사전에 지정된 키를 가진 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-121">The element that has the specified key in the read-only dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9770-122">이 속성을 사용 하면 다음 구문을 사용 하 여 컬렉션의 특정 요소에 액세스할 수 있습니다: `myCollection[key]` (`myCollection(key)` Visual basic에서).</span><span class="sxs-lookup"><span data-stu-id="b9770-122">This property lets you access a specific element in the collection by using the following syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="b9770-123">개체의 같음 여부를 결정 하는 방법에 따라 다양 한 구현이 수: 클래스를 구현 하는 예를 들어 <xref:System.Collections.Generic.IReadOnlyDictionary%602> 사용할 수는 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 이거나 속성을 구현할 수 있습니다는 <xref:System.Collections.Generic.IComparer%601> 메서드.</span><span class="sxs-lookup"><span data-stu-id="b9770-123">Implementations can vary in how they determine the equality of objects: for example, the class that implements <xref:System.Collections.Generic.IReadOnlyDictionary%602> might use the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property, or it might implement the <xref:System.Collections.Generic.IComparer%601> method.</span></span>  
  
 <span data-ttu-id="b9770-124">있습니다 수 있는지 여부에 따라 다양 한 구현이 `key` 되도록 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-124">Implementations can vary in whether they allow `key` to be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9770-125">
            <paramref name="key" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-125">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="b9770-126">속성이 검색되었지만 <paramref name="key" />가 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-126">The property is retrieved and <paramref name="key" /> is not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IEnumerable(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9770-127">읽기 전용 사전의 키를 포함하는 열거 가능한 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-127">Gets an enumerable collection that contains the keys in the read-only dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9770-128">읽기 전용 사전의 키를 포함하는 열거 가능한 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-128">An enumerable collection that contains the keys in the read-only dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9770-129">열거 가능한 컬렉션의 키의 순서 지정 되어 있지 않지만 구현에서 반환 되는 열거 가능한 컬렉션의 해당 값과 동일한 순서로 키가 있는지를 보장 해야는 <xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-129">The order of the keys in the enumerable collection is unspecified, but the implementation must guarantee that the keys are in the same order as the corresponding values in the enumerable collection that is returned by the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Values%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="b9770-130">찾을 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-130">The key to locate.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b9770-131">이 메서드가 반환될 때 지정된 키가 있으면 해당 키와 연결된 값이고, 그렇지 않으면 <c>값</c> 매개 변수의 형식에 대한 기본값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-131">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <c>value</c> parameter.</span>
          </span>
          <span data-ttu-id="b9770-132">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-132">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b9770-133">지정한 키와 연결된 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-133">Gets the value that is associated with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b9770-134">
            <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> 인터페이스를 구현하는 개체에 지정된 키를 가진 요소가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-134">
              <see langword="true" /> if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> interface contains an element that has the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9770-135">기능을 결합 하는이 메서드는 <xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A> 메서드 및 <xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-135">This method combines the functionality of the <xref:System.Collections.Generic.IReadOnlyDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="b9770-136">키가 없는 경우는 `value` 매개 변수 형식에 대 한 적절 한 기본값이 가져옵니다 `TValue`: 예를 들어, 정수 형식에 대해 0 (영) `false` 부울 형식에 대 한 및 `null` 참조 형식에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-136">If the key is not found, the `value` parameter gets the appropriate default value for the type `TValue`: for example, 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b9770-137">
            <paramref name="key" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-137">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IReadOnlyDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IEnumerable(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9770-138">읽기 전용 사전의 값을 포함하는 열거 가능한 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-138">Gets an enumerable collection that contains the values in the read-only dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b9770-139">읽기 전용 사전의 값을 포함하는 열거 가능한 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9770-139">An enumerable collection that contains the values in the read-only dictionary.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9770-140">열거 가능한 컬렉션에 있는 값의 순서 지정 되어 있지 않지만 구현에서 반환 되는 열거 가능한 컬렉션에 해당 키와 같은 순서로 값으로 보장 해야는 <xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="b9770-140">The order of the values in the enumerable collection is unspecified, but the implementation must guarantee that the values are in the same order as the corresponding keys in the enumerable collection that is returned by the <xref:System.Collections.Generic.IReadOnlyDictionary%602.Keys%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>