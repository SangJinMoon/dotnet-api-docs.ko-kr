<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Comparer`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56f0074415999f9984a7244f1cccee96197dddc42.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f0074415999f9984a7244f1cccee96197dddc42</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The type of objects to compare.</source>
          <target state="translated">비교할 개체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.Comparer`1">
          <source>Provides a base class for implementations of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> generic interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IComparer`1" /&gt;</ph> 제네릭 인터페이스의 구현에 대한 기본 클래스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>Derive from this class to provide a custom implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> interface for use with collection classes such as the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> generic classes.</source>
          <target state="translated">사용자 지정 구현을 제공 하려면이 클래스에서 파생 되는 <ph id="ph1">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> 와 같은 컬렉션 클래스와 함께 사용 하기 위해 인터페이스는 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602&gt;</ph> 제네릭 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The difference between deriving from the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class and implementing the <ph id="ph2">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface is as follows:</source>
          <target state="translated">파생 된 간의 차이 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 클래스 및 구현는 <ph id="ph2">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> 인터페이스는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>To specify how two objects should be compared by default, implement the <ph id="ph1">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface in your class.</source>
          <target state="translated">지정 하려면 기본적으로 두 개체를 비교 해야 하는 방법을 구현에서 <ph id="ph1">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> 클래스에 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This ensures that sort operations will use the default comparison code that you provided.</source>
          <target state="translated">이렇게 하면 정렬 작업이 사용자가 제공한 기본 비교 코드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>To define a comparer to use instead of the default comparer, derive from the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">대신 기본 비교 연산자를 사용 하는 비교자를 정의 하려면에서 파생 된 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>You can then use this comparer in sort operations that take a comparer as a parameter.</source>
          <target state="translated">다음 매개 변수로 비교자를 사용 하는 정렬 작업이이 비교자를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The object returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property uses the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface (<ph id="ph3">`IComparable&lt;T&gt;`</ph> in C#, <ph id="ph4">`IComparable(Of T)`</ph> in Visual Basic) to compare two objects.</source>
          <target state="translated">반환 되는 개체는 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> 속성에서 사용 하는 <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> 제네릭 인터페이스 (<ph id="ph3">`IComparable&lt;T&gt;`</ph> C#에서는 <ph id="ph4">`IComparable(Of T)`</ph> Visual basic에서) 두 개체를 비교 하 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>If type <ph id="ph1">`T`</ph> does not implement the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, the <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property returns a <ph id="ph4">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> that uses the <ph id="ph5">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">경우 형식 <ph id="ph1">`T`</ph> 를 구현 하지 않습니다는 <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> 제네릭 인터페이스는 <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> 속성에서 반환은 <ph id="ph4">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 를 사용 하는 <ph id="ph5">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The following example derives a class, <ph id="ph1">`BoxLengthFirst`</ph>, from the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 클래스를 파생 <ph id="ph1">`BoxLengthFirst`</ph>에서 <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This comparer compares two objects of type <ph id="ph1">`Box`</ph>.</source>
          <target state="translated">이 비교자의 형식이 두 개체를 비교 <ph id="ph1">`Box`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>It sorts them first by length, then by height, and then by width.</source>
          <target state="translated">정렬에 먼저 길이 다음 높이 너비입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The <ph id="ph1">`Box`</ph> class implements the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> interface to control the default comparison between two <ph id="ph3">`Box`</ph> objects.</source>
          <target state="translated"><ph id="ph1">`Box`</ph> 클래스가 구현 하는 <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> 두 기본 비교를 제어 하는 인터페이스 <ph id="ph3">`Box`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>This default implementation sorts first by height, then by length, and then by width.</source>
          <target state="translated">이 기본 구현은 높이, 한 다음 여 길이 차례로 너비 먼저 정렬합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The example shows the differences between the two comparisons by sorting a list of <ph id="ph1">`Box`</ph> objects first by using the <ph id="ph2">`BoxLengthFirst`</ph> comparer and then by using the default comparer.</source>
          <target state="translated">이 예제에서는 두 비교의 목록을 정렬 하 여 차이점을 보여 줍니다. <ph id="ph1">`Box`</ph> 먼저을 사용 하 여 개체는 <ph id="ph2">`BoxLengthFirst`</ph> 비교자와 다음 사용 하 여 기본 비교 연산자.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> may behave differently in terms of culture-sensitivity and case-sensitivity.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> 문화권 구분 및 대/소문자 구분 측면에서 다르게 동작할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">문자열 비교에는 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 클래스 보다 권장 <bpt id="p1">&lt;c&gt;</bpt>비교자<ph id="ph2">&amp;lt;</ph>문자열<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">속성은 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 클래스 문화권 구분 및 대/소문자 구분의 다양 한 조합과 함께 문자열 비교를 수행 하는 미리 정의 된 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">대/소문자 구분 및 문화권 구분 동일한 멤버 중 하나에 일관성이 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.Comparer`1">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">문화권별 비교에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> 네임 스페이스 및 <bpt id="p1">[</bpt>전역화 및 지역화<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The first object to compare.</source>
          <target state="translated">비교할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The second object to compare.</source>
          <target state="translated">비교할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</source>
          <target state="translated">파생된 클래스에서 재정의된 경우 같은 형식의 두 개체를 비교한 다음 한 개체가 다른 개체보다 작은지, 큰지 또는 두 개체가 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">다음 표와 같이 <ph id="ph1">&lt;paramref name="x" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="y" /&gt;</ph>의 상대 값을 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 의미</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>와 같습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Implement this method to provide a customized sort order comparison for type <ph id="ph1">`T`</ph>.</source>
          <target state="translated">사용자 지정을 제공 하려면이 메서드를 구현 합니다. 정렬 순서 비교 형식에 대 한 <ph id="ph1">`T`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>The following example defines a comparer of <ph id="ph1">`Box`</ph> objects that can be used instead of the default comparer.</source>
          <target state="translated">다음 예제에서는 정의의 비교자 <ph id="ph1">`Box`</ph> 기본 비교 연산자 대신 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Type <ph id="ph1">&lt;paramref name="T" /&gt;</ph> does not implement either the <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="T" /&gt;</ph> 형식이 <ph id="ph2">&lt;see cref="T:System.IComparable`1" /&gt;</ph> 제네릭 인터페이스나 <ph id="ph3">&lt;see cref="T:System.IComparable" /&gt;</ph> 인터페이스를 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>Comparing <ph id="ph1">&lt;see langword="null" /&gt;</ph> with any reference type is allowed and does not generate an exception.</source>
          <target state="translated">비교 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 을 다른 참조는 허용 형식과 예외가 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>A null reference is considered to be less than any reference that is not null.</source>
          <target state="translated">Null 참조는 null이 아닌 보다 작아야 참조로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
          <source>For information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">문화권별 비교에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> 네임 스페이스 및 <bpt id="p1">[</bpt>전역화 및 지역화<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>The comparison to use.</source>
          <target state="translated">사용할 비교입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>Creates a comparer by using the specified comparison.</source>
          <target state="translated">지정된 비교를 사용하여 비교자를 만듭니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
          <source>The new comparer.</source>
          <target state="translated">새 비교자입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>Returns a default sort order comparer for the type specified by the generic argument.</source>
          <target state="translated">제네릭 인수에서 지정한 형식의 기본 정렬 순서 비교자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>An object that inherits <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph> and serves as a sort order comparer for type <ph id="ph2">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.Comparer`1" /&gt;</ph>을 상속하고 <ph id="ph2">&lt;paramref name="T" /&gt;</ph> 형식에 대한 정렬 순서 비교자의 역할을 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> returned by this property uses the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface (<ph id="ph3">`IComparable&lt;T&gt;`</ph> in C#, <ph id="ph4">`IComparable(Of T)`</ph> in Visual Basic) to compare two objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 이 속성에서 반환 된 사용 하 여는 <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> 제네릭 인터페이스 (<ph id="ph3">`IComparable&lt;T&gt;`</ph> C#에서 <ph id="ph4">`IComparable(Of T)`</ph> Visual basic에서) 두 개체를 비교 하 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>If type <ph id="ph1">`T`</ph> does not implement the <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> generic interface, this property returns a <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> that uses the <ph id="ph4">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">경우 형식 <ph id="ph1">`T`</ph> 를 구현 하지 않습니다는 <ph id="ph2">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> 제네릭 인터페이스를이 속성은 반환는 <ph id="ph3">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 를 사용 하는 <ph id="ph4">&lt;xref:System.IComparable?displayProperty=nameWithType&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> property to get an object that performs the default comparison.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph> 기본 비교를 수행 하는 개체를 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept> (<bpt id="p2">&lt;c&gt;</bpt>Comparer(Of String)<ept id="p2">&lt;/c&gt;</ept> in Visual Basic).</source>
          <target state="translated">문자열 비교에는 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 클래스 보다 권장 <bpt id="p1">&lt;c&gt;</bpt>비교자<ph id="ph2">&amp;lt;</ph>문자열<ph id="ph3">&amp;gt;</ph> <ept id="p1">&lt;/c&gt;</ept> (<bpt id="p2">&lt;c&gt;</bpt>비교자 (Of String)<ept id="p2">&lt;/c&gt;</ept> Visual basic에서).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">속성은 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 클래스 문화권 구분 및 대/소문자 구분의 다양 한 조합과 함께 문자열 비교를 수행 하는 미리 정의 된 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">대/소문자 구분 및 문화권 구분 동일한 멤버 중 하나에 일관성이 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.Comparer`1.Default">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">문화권별 비교에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> 네임 스페이스 및 <bpt id="p1">[</bpt>전역화 및 지역화<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The first object to compare.</source>
          <target state="translated">비교할 첫 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The second object to compare.</source>
          <target state="translated">비교할 두 번째 개체입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</source>
          <target state="translated">두 개체를 비교하여 한 개체가 다른 개체보다 작거나, 같거나 또는 크다는 것을 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">다음 표와 같이 <ph id="ph1">&lt;paramref name="x" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="y" /&gt;</ph>의 상대 값을 나타내는 부호 있는 정수입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 값</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 의미</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 작음</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>보다 작습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>와 같습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0보다 큼</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph4">&lt;paramref name="y" /&gt;</ph>보다 큽니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>This method is a wrapper for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29&gt;</ph> method, so <ph id="ph2">`obj`</ph> must be cast to the type specified by the generic argument <ph id="ph3">`T`</ph> of the current instance.</source>
          <target state="translated">이 메서드는에 대 한 래퍼는 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29&gt;</ph> 메서드 하므로 <ph id="ph2">`obj`</ph> 제네릭 인수에서 지정 된 형식으로 캐스팅 되어야 합니다 <ph id="ph3">`T`</ph> 현재 인스턴스의 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>If it cannot be cast to <ph id="ph1">`T`</ph>, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">으로 캐스팅할 수 없는 경우 <ph id="ph1">`T`</ph>, <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Comparing <ph id="ph1">`null`</ph> with any reference type is allowed and does not generate an exception.</source>
          <target state="translated">비교 <ph id="ph1">`null`</ph> 을 다른 참조는 허용 형식과 예외가 생성 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>When sorting, <ph id="ph1">`null`</ph> is considered to be less than any other object.</source>
          <target state="translated">정렬할 때 <ph id="ph1">`null`</ph> 다른 개체 보다 작은 것으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A&gt;</ph> method to compare two objects.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A&gt;</ph> 메서드를 두 개체를 비교 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> class.</source>
          <target state="translated">이 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Collections.Generic.Comparer%601&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> or <ph id="ph2">&lt;paramref name="y" /&gt;</ph> is of a type that cannot be cast to type <ph id="ph3">&lt;paramref name="T" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="y" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="T" /&gt;</ph> 형식으로 캐스팅할 수 없는 형식인 경우</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="x" /&gt;</ph> and <ph id="ph2">&lt;paramref name="y" /&gt;</ph> do not implement either the <ph id="ph3">&lt;see cref="T:System.IComparable`1" /&gt;</ph> generic interface or the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="x" /&gt;</ph>와 <ph id="ph2">&lt;paramref name="y" /&gt;</ph>가 <ph id="ph3">&lt;see cref="T:System.IComparable`1" /&gt;</ph> 제네릭 인터페이스나 <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> 인터페이스를 구현하지 않는 경우</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> behave differently in terms of culture-sensitivity and case-sensitivity.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /&gt;</ph> 문화권 구분 및 대/소문자 구분 측면에서 다르게 동작 합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>For string comparisons, the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class is recommended over <bpt id="p1">&lt;c&gt;</bpt>Comparer<ph id="ph2">&amp;lt;</ph>String<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">문자열 비교에는 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 클래스 보다 권장 <bpt id="p1">&lt;c&gt;</bpt>비교자<ph id="ph2">&amp;lt;</ph>문자열<ph id="ph3">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Properties of the <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.</source>
          <target state="translated">속성은 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 클래스 문화권 구분 및 대/소문자 구분의 다양 한 조합과 함께 문자열 비교를 수행 하는 미리 정의 된 인스턴스를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The case-sensitivity and culture-sensitivity are consistent among the members of the same <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> instance.</source>
          <target state="translated">대/소문자 구분 및 문화권 구분 동일한 멤버 중 하나에 일관성이 <ph id="ph1">&lt;see cref="T:System.StringComparer" /&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">문화권별 비교에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;see cref="N:System.Globalization" /&gt;</ph> 네임 스페이스 및 <bpt id="p1">[</bpt>전역화 및 지역화<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>