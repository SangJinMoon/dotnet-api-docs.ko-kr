<Type Name="SynchronizedCollection&lt;T&gt;" FullName="System.Collections.Generic.SynchronizedCollection&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class SynchronizedCollection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizedCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SynchronizedCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizedCollection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SynchronizedCollection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="c003e-101">스레드로부터 안전한 컬렉션에 항목으로 포함된 개체의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-101">The type of object contained as items in the thread-safe collection.</span></span></typeparam>
    <summary><span data-ttu-id="c003e-102">제네릭 매개 변수를 통해 지정된 형식의 개체가 요소로 포함된, 스레드로부터 안전한 컬렉션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-102">Provides a thread-safe collection that contains objects of a type specified by the generic parameter as elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-103"><xref:System.Collections.Generic.SynchronizedCollection%601>은 <xref:System.Collections.Generic.List%601> 컨테이너에 데이터를 저장하고, 스레드로부터 안전하도록 컬렉션에 대한 액세스를 동기화하기 위해 설정하고 사용할 수 있는 개체를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-103">The <xref:System.Collections.Generic.SynchronizedCollection%601> stores data in a <xref:System.Collections.Generic.List%601> container and provides an object that can be set and used to synchronize access to the collection so that it is thread-safe.</span></span> <span data-ttu-id="c003e-104"><xref:System.Collections.Generic.IList%601> 컨테이너는 <xref:System.Collections.Generic.SynchronizedCollection%601.Items%2A> 메서드를 사용하여 복구할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-104">The <xref:System.Collections.Generic.IList%601> container can be recovered using the <xref:System.Collections.Generic.SynchronizedCollection%601.Items%2A> method.</span></span> <span data-ttu-id="c003e-105">동기화된 개체는 <xref:System.Collections.Generic.SynchronizedCollection%601.SyncRoot%2A> 속성을 사용하여 복구할 수 있으며</span><span class="sxs-lookup"><span data-stu-id="c003e-105">The synchronized object can be recovered using the <xref:System.Collections.Generic.SynchronizedCollection%601.SyncRoot%2A> property.</span></span> <span data-ttu-id="c003e-106">`syncRoot` 매개 변수를 사용하는 생성자 중 하나를 사용해야만 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-106">It can only be set using one of the constructors that take the `syncRoot` parameter.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c003e-107"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-107">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c003e-108"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-108">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="syncRoot"><span data-ttu-id="c003e-109">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-109">The object used to synchronize access the thread-safe collection.</span></span></param>
        <summary><span data-ttu-id="c003e-110">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체를 사용하여 <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-110">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class with the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-111"><xref:System.Collections.Generic.SynchronizedCollection%601>의 여러 인스턴스가 동일한 `syncRoot`를 사용하여 만들어지면 액세스가 모든 인스턴스에서 보호됩니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-111">If multiple instances of the <xref:System.Collections.Generic.SynchronizedCollection%601> are created using the same `syncRoot`, then access is protected across all instances.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c003e-112"><paramref name="syncRoot" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-112"><paramref name="syncRoot" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, System.Collections.Generic.IEnumerable&lt;T&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="syncRoot"><span data-ttu-id="c003e-113">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-113">The object used to synchronize access to the thread-safe collection.</span></span></param>
        <param name="list"><span data-ttu-id="c003e-114">스레드로부터 안전한 컬렉션을 초기화하는 데 사용되는 요소 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-114">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe collection.</span></span></param>
        <summary><span data-ttu-id="c003e-115">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체를 사용하여 지정된 열거 가능 요소 목록에서 <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-115">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c003e-116"><paramref name="syncRoot" /> 또는 <paramref name="list" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-116"><paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, params T[] list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, !T[] list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, ParamArray list As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, ... cli::array &lt;T&gt; ^ list);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="syncRoot"><span data-ttu-id="c003e-117">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-117">The object used to synchronize access the thread-safe collection.</span></span></param>
        <param name="list"><span data-ttu-id="c003e-118">스레드로부터 안전한 컬렉션을 초기화하는 데 사용되는 형식 <c>T</c> 요소의 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-118">The <see cref="T:System.Array" /> of type <c>T</c> elements used to initialize the thread-safe collection.</span></span></param>
        <summary><span data-ttu-id="c003e-119">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체를 사용하여 지정된 요소 배열에서 <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-119">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c003e-120"><paramref name="syncRoot" /> 또는 <paramref name="list" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-120"><paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedCollection (object syncRoot, System.Collections.Generic.List&lt;T&gt; list, bool makeCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.List`1&lt;!T&gt; list, bool makeCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.List{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As List(Of T), makeCopy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedCollection(System::Object ^ syncRoot, System::Collections::Generic::List&lt;T&gt; ^ list, bool makeCopy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" />
        <Parameter Name="makeCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="syncRoot">To be added.</param>
        <param name="list">To be added.</param>
        <param name="makeCopy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c003e-121">컬렉션에 추가할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-121">The element to be added to the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-122">스레드로부터 안전한 읽기 전용 컬렉션에 항목을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-122">Adds an item to the thread-safe, read-only collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c003e-123">값 집합이 <see langword="null" />인 경우 또는 컬렉션에 적합한 제네릭 형식 <paramref name="T" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-123">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c003e-124">컬렉션에서 모든 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-124">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected virtual void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c003e-125">컬렉션에서 모든 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-125">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c003e-126">컬렉션에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-126">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-127">컬렉션에 특정 값을 가진 요소가 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-127">Determines whether the collection contains an element with a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="c003e-128">요소 값이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면<see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-128"><see langword="true" /> if the element value is found in the collection; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c003e-129">값 집합이 <see langword="null" />인 경우 또는 컬렉션에 적합한 제네릭 형식 <paramref name="T" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-129">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c003e-130">컬렉션에서 복사한 형식 <c>T</c> 요소의 대상 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-130">The destination <see cref="T:System.Array" /> for the elements of type <c>T</c> copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="c003e-131">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-131">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c003e-132">특정 인덱스부터 시작하여 컬렉션의 요소를 지정된 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-132">Copies the elements of the collection to a specified array, starting at a particular index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c003e-133">스레드로부터 안전한 컬렉션에 포함된 요소의 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-133">Gets the number of elements contained in the thread-safe collection.</span></span></summary>
        <value><span data-ttu-id="c003e-134">스레드로부터 안전한 읽기 전용 컬렉션에 포함된 요소의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-134">The number of elements contained in the thread-safe, read-only collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c003e-135">동기화된 컬렉션에서 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-135">Returns an enumerator that iterates through the synchronized collection.</span></span></summary>
        <returns><span data-ttu-id="c003e-136">컬렉션에 저장된 형식의 개체에 대한 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-136">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c003e-137">컬렉션에서 모든 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-137">Removes all items from the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-138">컬렉션에서 맨 처음 발견되는 값의 인덱스를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-138">Returns the index of the first occurrence of a value in the collection.</span></span></summary>
        <returns><span data-ttu-id="c003e-139">컬렉션에서 맨 처음 발견되는 값의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-139">The zero-based index of the first occurrence of the value in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c003e-140">값 집합이 <see langword="null" />인 경우 또는 컬렉션에 적합한 제네릭 형식 <paramref name="T" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-140">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c003e-141">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-141">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <param name="item"><span data-ttu-id="c003e-142">컬렉션에 요소로 삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-142">The object to be inserted into the collection as an element.</span></span></param>
        <summary><span data-ttu-id="c003e-143">항목을 컬렉션 내의 지정된 인덱스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-143">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-144">`index`가 컬렉션에 있는 요소의 수와 같으면 항목이 목록에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-144">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="c003e-145">`index`가 컬렉션에 있는 요소의 수보다 작을 경우 새 요소를 수용할 수 있도록 항목의 삽입 지점 다음에 오는 요소가 아래로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-145">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c003e-146">지정된 <paramref name="index" />가 0보다 작거나 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-146">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c003e-147">값 집합이 <see langword="null" />인 경우 또는 컬렉션에 적합한 제네릭 형식 <paramref name="T" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-147">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected virtual void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InsertItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c003e-148">컬렉션에서 개체를 삽입할 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-148">The zero-based index of the collection where the object is to be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="c003e-149">컬렉션에 삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-149">The object to be inserted into the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-150">항목을 컬렉션 내의 지정된 인덱스에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-150">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-151">`index`가 컬렉션에 있는 요소의 수와 같으면 항목이 목록에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-151">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="c003e-152">`index`가 컬렉션에 있는 요소의 수보다 작을 경우 새 요소를 수용할 수 있도록 항목의 삽입 지점 다음에 오는 요소가 아래로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-152">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c003e-153">지정된 <paramref name="index" />가 0보다 작거나 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-153">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c003e-154">값 집합이 <see langword="null" />인 경우 또는 컬렉션에 적합한 제네릭 형식 <paramref name="T" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-154">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c003e-155">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-155">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-156">지정된 인덱스를 사용하여 스레드로부터 안전한 컬렉션에서 요소를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-156">Gets an element from the thread-safe collection with a specified index.</span></span></summary>
        <value><span data-ttu-id="c003e-157">컬렉션에서 지정된 <paramref name="index" />를 가진 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-157">The object in the collection that has the specified <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c003e-158">지정된 <paramref name="index" />가 0보다 작거나 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-158">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.List&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::List&lt;T&gt; ^ Items { System::Collections::Generic::List&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c003e-159">스레드로부터 안전한 컬렉션에 포함된 요소의 목록을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-159">Gets the list of elements contained in the thread-safe collection.</span></span></summary>
        <value><span data-ttu-id="c003e-160">스레드로부터 안전한 읽기 전용 컬렉션에 포함된 요소의 <see cref="T:System.Collections.Generic.IList`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-160">The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c003e-161">컬렉션에서 제거할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-161">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-162">컬렉션에서 맨 처음 발견되는 지정된 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-162">Removes the first occurrence of a specified item from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="c003e-163">항목이 컬렉션에서 제거된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-163"><see langword="true" /> if item was successfully removed from the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-164">컬렉션에서 제거된 요소 다음에 오는 요소는 위로 이동하여 빈 지점을 채우며 인덱스도 따라서 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-164">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c003e-165">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-165">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-166">컬렉션에서 지정된 인덱스의 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-166">Removes an item at a specified index from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-167">컬렉션에서 제거된 요소 다음에 오는 요소는 위로 이동하여 빈 지점을 채우며 인덱스도 따라서 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-167">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c003e-168">지정된 <paramref name="index" />가 0보다 작거나 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-168">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RemoveItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c003e-169">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-169">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-170">컬렉션에서 지정된 <paramref name="index" />에 있는 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-170">Removes an item at a specified <paramref name="index" /> from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c003e-171">지정된 <paramref name="index" />가 0보다 작거나 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-171">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected virtual void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c003e-172">바꿀 개체의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-172">The zero-based index of the object to be replaced.</span></span></param>
        <param name="item"><span data-ttu-id="c003e-173">대체할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-173">The object to replace</span></span></param>
        <summary><span data-ttu-id="c003e-174">지정된 인덱스에 있는 항목을 다른 항목으로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-174">Replaces the item at a specified index with another item.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c003e-175">지정된 <paramref name="index" />가 0보다 작거나 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-175">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c003e-176">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-176">Gets the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <value><span data-ttu-id="c003e-177">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-177">An object used to synchronize access to the thread-safe collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c003e-178">컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-178">Gets a value that indicates whether the collection is read only.</span></span></summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-179">컬렉션을 추가할 수 있고 따라서 읽기 전용이 아니므로 이 속성은 항상 `false`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-179">This property always returns `false` because the collection can be added to and so is not read only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c003e-180">컬렉션에서 복사한 형식 <c>T</c> 요소의 대상 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-180">The destination <see cref="T:System.Array" /> for the elements of type <c>T</c> copied from the collection.</span></span></param>
        <param name="index"><span data-ttu-id="c003e-181">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-181">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c003e-182">특정 인덱스부터 시작하여 컬렉션의 요소를 지정된 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-182">Copies the elements of the collection to a specified array, starting at a particular index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c003e-183">컬렉션이 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-183">Gets a value that indicates whether the collection is thread safe.</span></span></summary>
        <value>
          <see langword="true" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-184">컬렉션이 스레드로부터 안전하므로 이 속성은 항상 `true`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-184">This property always returns `true` because the collection is thread safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c003e-185">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-185">Gets the object used to synchronize access to the thread-safe collection.</span></span></summary>
        <value><span data-ttu-id="c003e-186">스레드로부터 안전한 컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-186">An object used to synchronize access to the thread-safe collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-187">이 `syncRoot` 개체의 값은 <xref:System.Collections.Generic.SynchronizedCollection%601.%23ctor%28System.Object%29> 생성자를 사용하여 스레드로부터 안전한 컬렉션을 만들 때 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-187">The value of this `syncRoot` object can be set when creating the thread-safe collection using the <xref:System.Collections.Generic.SynchronizedCollection%601.%23ctor%28System.Object%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c003e-188">동기화된 컬렉션에서 반복하는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-188">Returns an enumerator that iterates through the synchronized collection.</span></span></summary>
        <returns><span data-ttu-id="c003e-189">컬렉션에 저장된 형식의 개체에 대한 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-189">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c003e-190">컬렉션에 추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-190">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-191">컬렉션에 요소를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-191">Adds an element to the collection.</span></span></summary>
        <returns><span data-ttu-id="c003e-192">새 요소가 삽입된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-192">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-193">위치는 인덱스(0부터 시작)에 따라 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-193">The position is given by a zero-based index.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c003e-194">컬렉션에서 찾을 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-194">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-195">컬렉션에 특정 값을 가진 요소가 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-195">Determines whether the collection contains an element with a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="c003e-196"><see langword="true" /> 요소가 컬렉션에 있으면 <paramref name="value" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-196"><see langword="true" /> if the element <paramref name="value" /> is found in the collection; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c003e-197"><paramref name="value" />가 컬렉션에 포함된 형식의 개체가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-197"><paramref name="value" /> is not an object of the type contained in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c003e-198">컬렉션에서 인덱스가 확인되는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-198">The element in the collection whose index is being determined.</span></span></param>
        <summary><span data-ttu-id="c003e-199">컬렉션에서 요소의 인덱스(0부터 시작)를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-199">Determines the zero-based index of an element in the collection.</span></span></summary>
        <returns><span data-ttu-id="c003e-200">컬렉션에 있으면 <paramref name="value" />의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-200">The index of the <paramref name="value" /> if found in the collection; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c003e-201"><c>값</c>이 삽입될 0부터 시작하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-201">The zero-based index at which <c>value</c> is to be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="c003e-202">컬렉션에 삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-202">The object to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-203">컬렉션 내의 지정된 인덱스에 개체를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-203">Inserts an object into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-204">`index`가 컬렉션에 있는 요소의 수와 같으면 항목이 목록에 추가됩니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-204">If the `index` is equal to the number of elements in the collection, the item is appended to the list.</span></span> <span data-ttu-id="c003e-205">`index`가 컬렉션에 있는 요소의 수보다 작을 경우 새 요소를 수용할 수 있도록 항목의 삽입 지점 다음에 오는 요소가 아래로 이동합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-205">If the `index` is less than the number of elements in the collection, the elements that follow the point of insertion of the item move down to accommodate the new element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c003e-206">지정된 <paramref name="index" />가 0보다 작거나 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-206">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c003e-207"><paramref name="value" /> 집합이 <see langword="null" />인 경우 또는 컬렉션에 적합한 제네릭 형식 <paramref name="T" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-207">The <paramref name="value" /> set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c003e-208">컬렉션 크기가 고정되는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-208">Gets a value that indicates whether the collection is fixed in size.</span></span></summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-209">컬렉션을 추가할 수 있고 따라서 크기가 고정되지 않으므로 이 속성은 `false`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-209">This property returns `false` because the collection can be added to and so is not fixed in size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c003e-210">컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-210">Gets a value that indicates whether the collection is read only.</span></span></summary>
        <value>
          <see langword="false" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-211">컬렉션을 추가할 수 있고 따라서 읽기 전용이 아니므로 이 속성은 항상 `false`를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-211">This property always returns `false` because the collection can be added to and so is not read only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c003e-212">컬렉션에서 검색할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-212">The zero-based index of the element to be retrieved from the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-213">지정된 인덱스(0부터 시작)에 있는 항목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-213">Gets or sets the item at a specified zero-based index.</span></span></summary>
        <value><span data-ttu-id="c003e-214">지정된 <paramref name="index" />를 가진 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-214">The item with the specified <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c003e-215">값 집합이 <see langword="null" />인 경우 또는 컬렉션에 적합한 제네릭 형식 <paramref name="T" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-215">The value set is <see langword="null" /> or is not of the correct generic type <paramref name="T" /> for the collection.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c003e-216">지정된 <paramref name="index" />가 0보다 작거나 컬렉션의 항목 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="c003e-216">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c003e-217">컬렉션에서 제거할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-217">The object to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="c003e-218">컬렉션에서 요소로 지정된 개체 중 맨 처음 발견되는 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-218">Removes the first occurrence of a specified object as an element from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c003e-219">컬렉션에서 제거된 요소 다음에 오는 요소는 위로 이동하여 빈 지점을 채우며 인덱스도 따라서 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="c003e-219">The elements in the collection that follow the removed element move up to occupy the vacated spot and their indices are updated accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>