<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedDictionary`2+Enumerator.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5dd292b4b85a117521004663a73986e8b913741f7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd292b4b85a117521004663a73986e8b913741f7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>Enumerates the elements of a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>의 요소를 열거합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in C++, <ph id="ph3">`For Each`</ph> in Visual Basic) hides the complexity of enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 언어의 (<ph id="ph2">`for each`</ph> c + +에서는 <ph id="ph3">`For Each`</ph> Visual basic에서)은 열거자의 복잡성을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">그러므로 열거자를 직접 조작하는 대신 <ph id="ph1">`foreach`</ph>를 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">이 형식이 구현 하는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">직접 형식의 dispose를 호출 해당 <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 에서 메서드는 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 <ph id="ph1">`using`</ph> (C#에서) 또는 <ph id="ph2">`Using`</ph> (Visual Basic)에서는 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스 항목입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">이 형식이 구현 하는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">형식을 사용 하 여 마쳤으면는 삭제 해야의 직접 또는 간접적으로 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">직접 형식의 dispose를 호출 해당 <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> 에서 메서드는 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> 블록입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">작업을 삭제할 하지 직접,를 사용 하 여 언어 구문와 같은 <ph id="ph1">`using`</ph> (C#에서) 또는 <ph id="ph2">`Using`</ph> (Visual Basic)에서는 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">자세한 내용은의 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하십시오.는 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> 인터페이스 항목입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">이 위치에서의 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> 속성이 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">따라서 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소로 메서드 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> 속성 반환 될 때까지 동일한 개체 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>를 다음 요소로 설정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 반환할 수도 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">마지막으로 호출 하는 경우 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>를 컬렉션의 첫 번째 요소로 다시 설정할 수 없으므로 대신 새 열거자 인스턴스를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">열거 동안 스레드 보안을 보장하려면 전체 열거 동안 컬렉션을 잠그면 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">여러 스레드에서 컬렉션에 액세스하여 읽고 쓸 수 있도록 허용하려면 사용자 지정 동기화를 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
          <source>Default implementations of collections in the <ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> namespace are not synchronized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic?displayProperty=nameWithType&gt;</ph> 네임스페이스에서 컬렉션의 기본 구현은 동기화되지 않습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">열거자의 현재 위치에 있는 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>The element in the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph> at the current position of the enumerator.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>에서 열거자의 현재 위치에 있는 요소입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> property is undefined under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> 다음 조건에서 속성 정의 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>The enumerator is positioned before the first element in the dictionary, immediately after the enumerator is created.</source>
          <target state="translated">열거자는 열거자를 만든 직후 사전에 첫 번째 요소 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 메서드를 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소로 이동 해야 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>The last call to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">마지막으로 호출한 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph>, 컬렉션의 끝을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> 속성 반환 될 때까지 동일한 개체 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph>를 다음 요소로 설정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">사이 컬렉션이 수정 되는 경우 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 열거자가 유효 하지 않더라도로 설정 되어 있는 요소를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>For better performance, this property does not throw an exception if the enumerator is positioned before the first element or after the last element.</source>
          <target state="translated">성능 향상을 위해이 속성 열거자 첫 번째 요소 앞 또는 마지막 요소 뒤에 배치 되는 경우 예외를 throw 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
          <source>Instead, the value of the property is undefined.</source>
          <target state="translated">대신 속성의 값 정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
          <source>Advances the enumerator to the next element of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>.</source>
          <target state="translated">열거자를 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.SortedDictionary`2" /&gt;</ph>의 다음 요소로 이동합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">열거자가 다음 요소로 이동한 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이(가) 반환되고, 컬렉션의 끝을 지난 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>이(가) 반환됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
          <source>After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> method advances the enumerator to the first element of the collection.</source>
          <target state="translated">열거자 컬렉션 및 첫 번째 호출의 첫 번째 요소 앞에 배치 되는 열거자를 만든 후의 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 메서드 열거자를 컬렉션의 첫 번째 요소로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 반환할 수도 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</source>
          <target state="translated">요소, 삭제 또는 추가, 수정 하는 등 컬렉션 변경 되 면 열거자가 복구할 수 없게 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
          <source>Gets the element at the current position of the enumerator as a <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> structure.</source>
          <target state="translated">열거자의 현재 위치에 있는 요소를 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> 구조체로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
          <source>The element in the collection at the current position of the dictionary, as a <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> structure.</source>
          <target state="translated">컬렉션에서 사전의 현재 위치에 있는 요소인 <ph id="ph1">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> is undefined.</source>
          <target state="translated">열거자를 만든 후 또는 이후에 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 메서드를 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소로 이동 해야 <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>, 그렇지 않으면 <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 은 정의 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> property also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> 마지막으로 호출 하는 경우 또한 예외를 throw 속성 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>, 컬렉션의 끝을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>가 호출될 때까지 동일한 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Entry%2A&gt;</ph>를 다음 요소로 설정합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">열거자가 컬렉션의 첫 번째 요소 앞 또는 마지막 요소 뒤에 배치되어 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
          <source>Gets the key of the element at the current position of the enumerator.</source>
          <target state="translated">열거자의 현재 위치에 있는 요소의 키를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
          <source>The key of the element in the collection at the current position of the enumerator.</source>
          <target state="translated">컬렉션에서 열거자의 현재 위치에 있는 요소의 키입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> is undefined.</source>
          <target state="translated">열거자를 만든 후 또는 이후에 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 메서드를 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소로 이동 해야 <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>, 그렇지 않으면 <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> 은 정의 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> property also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> 마지막으로 호출 하는 경우 또한 예외를 throw 속성 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>, 컬렉션의 끝을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>가 호출될 때까지 동일한 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Key%2A&gt;</ph>를 다음 요소로 설정합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">열거자가 컬렉션의 첫 번째 요소 앞 또는 마지막 요소 뒤에 배치되어 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
          <source>Gets the value of the element at the current position of the enumerator.</source>
          <target state="translated">열거자의 현재 위치에 있는 요소의 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
          <source>The value of the element in the collection at the current position of the enumerator.</source>
          <target state="translated">컬렉션에서 열거자의 현재 위치에 있는 요소의 값입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> is undefined.</source>
          <target state="translated">열거자를 만든 후 또는 이후에 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 메서드를 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소로 이동 해야 <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>, 그렇지 않으면 <ph id="ph4">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> 은 정의 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> property also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> 마지막으로 호출 하는 경우 또한 예외를 throw 속성 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph3">`false`</ph>, 컬렉션의 끝을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
          <source><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>가 호출될 때까지 동일한 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A&gt;</ph>를 다음 요소로 설정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">열거자가 컬렉션의 첫 번째 요소 앞 또는 마지막 요소 뒤에 배치되어 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">열거자의 현재 위치에 있는 요소를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>The element in the collection at the current position of the enumerator.</source>
          <target state="translated">컬렉션에서 열거자의 현재 위치에 있는 요소입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined under any of the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 다음 조건에서 속성 정의 되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or immediately after the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method is called.</source>
          <target state="translated">열거자를 만든 직후 또는 직후 열거자는 컬렉션의 첫 번째 요소 앞에 배치 되는 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 메서드를 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소로 이동 해야 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>The last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated">마지막으로 호출한 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph>, 컬렉션의 끝을 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property returns the same object until <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 속성 반환 될 때까지 동일한 개체 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 라고 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>를 다음 요소로 설정합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even though the enumerator is invalidated.</source>
          <target state="translated">사이 컬렉션이 수정 되는 경우 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 열거자가 유효 하지 않더라도로 설정 되어 있는 요소를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">열거자가 컬렉션의 첫 번째 요소 앞 또는 마지막 요소 뒤에 배치되어 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
          <source>After calling the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method, you must call the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">호출한 후의 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 호출 해야 합니다는 <ph id="ph2">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A&gt;</ph> 하는 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소를 이동 하는 메서드는 <ph id="ph3">&lt;xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</source>
          <target state="translated">요소, 삭제 또는 추가, 수정 하는 등 컬렉션 변경 되 면 열거자가 복구할 수 없게 무효화 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">열거자가 만들어진 후에 컬렉션이 수정되었습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>